
PlaterDB = {
["captured_spells"] = {
[448002] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[453879] = {
["isChanneled"] = false,
["source"] = "Grand Overspinner Antourix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225263,
},
[448897] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[391793] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[372503] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Loyalist Threadblade",
["npcID"] = 221190,
},
[385023] = {
["source"] = "Thieving Salamanther",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225919,
},
[373526] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jeweled Flutterwing",
["npcID"] = 227202,
},
[444683] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Moss-Draped Ramolith",
["npcID"] = 214945,
},
[450177] = {
["source"] = "Raging Roots",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216250,
},
[460525] = {
["source"] = "Bytta",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222653,
},
[198837] = {
["isChanneled"] = false,
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99541,
},
[386176] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[449285] = {
["isChanneled"] = false,
["source"] = "Cha'tak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216042,
},
[442387] = {
["isChanneled"] = false,
["source"] = "Nerubian Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216247,
},
[450180] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kronolith, Might of the Mountain",
["npcID"] = 219270,
},
[444687] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[193473] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Void Tendril",
["npcID"] = 192337,
},
[256390] = {
["isChanneled"] = false,
["source"] = "Shadow-Blind Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206096,
},
[446477] = {
["isChanneled"] = false,
["source"] = "Deepwater Sludger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216515,
},
[431659] = {
["isChanneled"] = false,
["source"] = "Sunless Beckoner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219601,
},
[450183] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kronolith, Might of the Mountain",
["npcID"] = 219270,
},
[115804] = {
["source"] = "Rezan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[282449] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Akaari's Soul",
["npcID"] = 144961,
},
[263926] = {
["source"] = "Grizzlebutt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[435239] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[188046] = {
["isChanneled"] = false,
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198489,
},
[440222] = {
["isChanneled"] = false,
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206067,
},
[445205] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[446483] = {
["isChanneled"] = false,
["source"] = "Deepwater Sludger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216515,
},
[450188] = {
["isChanneled"] = false,
["source"] = "Invasive Hardhead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219163,
},
[463091] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[433198] = {
["isChanneled"] = false,
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216527,
},
[30213] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skreekrill",
["npcID"] = 17252,
},
[378394] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Kelpcoil",
["npcID"] = 225901,
},
[449298] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[449937] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cyclonecrier Alpha",
["npcID"] = 222959,
},
[443933] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twice-Stinger the Wretched",
["npcID"] = 219271,
},
[456453] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[452877] = {
["source"] = "Oop'lajax",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222319,
},
[422090] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[431544] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scavenger Stagshell",
["npcID"] = 226005,
},
[453773] = {
["source"] = "Nazgrim",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221634,
},
[462844] = {
["source"] = "Stone Bulwark Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[275563] = {
["source"] = "Shadowstarved Bullfrog",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214406,
},
[449942] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[386195] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dreadstalker",
["npcID"] = 98035,
},
[456841] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[441256] = {
["source"] = "Underdrip Crawler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223069,
},
[445217] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[432059] = {
["source"] = "Brightrock Sparktosser",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225783,
},
[445984] = {
["isChanneled"] = false,
["source"] = "Sandboring Jawcrawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227777,
},
[445218] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[431549] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nerubian Venomweb",
["npcID"] = 229791,
},
[377512] = {
["isChanneled"] = false,
["source"] = "Slagshell Slider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225391,
},
[390926] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Big-Boomer",
["npcID"] = 211546,
},
[55078] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[451608] = {
["isChanneled"] = false,
["source"] = "Kobyss Tide-Slicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213599,
},
[431552] = {
["isChanneled"] = false,
["source"] = "Kaheti Threadmancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214939,
},
[31707] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[452250] = {
["source"] = "Salien Carapiercer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223377,
},
[2649] = {
["isChanneled"] = false,
["source"] = "Pheelix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[456212] = {
["source"] = "Webbed Ore Deposit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226716,
},
[436922] = {
["source"] = "Ixlorb the Spinner",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218426,
},
[456468] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[378413] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[440372] = {
["source"] = "Encroaching Undercrawler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215771,
},
[456853] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[445995] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Siltbrood Jawcrawler",
["npcID"] = 227470,
},
[458771] = {
["source"] = "Ravageant",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207826,
},
[54680] = {
["isChanneled"] = false,
["source"] = "Rezan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[160018] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Missy",
["npcID"] = 165189,
},
[396302] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[6360] = {
["isChanneled"] = false,
["source"] = "Sywen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[17735] = {
["isChanneled"] = false,
["source"] = "Ormnuz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[438973] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pit Lord",
["npcID"] = 228574,
},
[449321] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[89751] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skreekrill",
["npcID"] = 17252,
},
[24450] = {
["isChanneled"] = false,
["source"] = "Cat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[465] = {
["source"] = "Captain Garrick",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209057,
},
[388897] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scavenging Sandsnapper",
["npcID"] = 222156,
},
[449451] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[456861] = {
["isChanneled"] = false,
["source"] = "Spore-infused Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221217,
},
[445236] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Agitated Eel",
["npcID"] = 227369,
},
[1604] = {
["source"] = "Krolusk Whelpling",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225388,
},
[3716] = {
["isChanneled"] = false,
["source"] = "Grimmoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[30151] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bleekkazul",
["npcID"] = 17252,
},
[462612] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ermie",
["npcID"] = 229589,
},
[449965] = {
["isChanneled"] = false,
["source"] = "Raging Roots",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216250,
},
[431697] = {
["source"] = "Sureki Eradicator",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225408,
},
[458908] = {
["isChanneled"] = false,
["source"] = "Gem-Jammed Slag Bubble",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226969,
},
[446261] = {
["isChanneled"] = false,
["source"] = "Voracious Fog Beast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219446,
},
[389541] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "White Tiger Statue",
["npcID"] = 196581,
},
[444985] = {
["isChanneled"] = false,
["source"] = "Sweetstinger Soldier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227282,
},
[89753] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skreekrill",
["npcID"] = 17252,
},
[452651] = {
["source"] = "Oath-Eater",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206844,
},
[90328] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcturis",
["npcID"] = 165189,
},
[452013] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[451758] = {
["source"] = "Kobyss Tide-Slicer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213599,
},
[458657] = {
["isChanneled"] = false,
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225898,
},
[404749] = {
["isChanneled"] = false,
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200832,
},
[449973] = {
["source"] = "Deepwalking Ambusher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229605,
},
[15507] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Golem Lord Argelmach",
["npcID"] = 8983,
},
[462621] = {
["source"] = "Deepwalking Ambusher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229605,
},
[377923] = {
["isChanneled"] = false,
["source"] = "Risen Magma",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225390,
},
[134477] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bleekkazul",
["npcID"] = 17252,
},
[422382] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[445251] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brushmane Wolf",
["npcID"] = 218203,
},
[1126] = {
["source"] = "Crenna Earth-Daughter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[452918] = {
["source"] = "Arathi Avenger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221980,
},
[91800] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Beetlemuncher",
["npcID"] = 26125,
},
[444998] = {
["isChanneled"] = false,
["source"] = "Sweetstinger Soldier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227282,
},
[457902] = {
["isChanneled"] = true,
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207802,
},
[458669] = {
["isChanneled"] = false,
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225898,
},
[440912] = {
["isChanneled"] = false,
["source"] = "Invasive Lashroom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206194,
},
[456626] = {
["source"] = "Awakened Flamecoil Serpent",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225895,
},
[444490] = {
["source"] = "Ancestor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221177,
},
[50276] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ilsa Direbrew",
["npcID"] = 26764,
},
[429545] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voidtouched Speaker",
["npcID"] = 223469,
},
[458289] = {
["isChanneled"] = false,
["source"] = "Deathtide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221753,
},
[81262] = {
["isChanneled"] = false,
["source"] = "Efflorescence",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47649,
},
[446409] = {
["isChanneled"] = false,
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215702,
},
[458290] = {
["isChanneled"] = true,
["source"] = "Deathtide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221753,
},
[398631] = {
["isChanneled"] = false,
["source"] = "Brightrock Shellherd",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225782,
},
[449733] = {
["isChanneled"] = true,
["source"] = "Cha'tak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216042,
},
[462892] = {
["isChanneled"] = true,
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[432871] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wormcaller Iz'tikrine",
["npcID"] = 214153,
},
[450885] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[452035] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[456762] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[15288] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[435301] = {
["source"] = "Fungal Infestor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216077,
},
[457913] = {
["source"] = "Deployed Wind-Wrangling Spire",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 227482,
},
[446416] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Honey-fused Droplet",
["npcID"] = 213697,
},
[13787] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Plugger Spazzring",
["npcID"] = 9499,
},
[16827] = {
["isChanneled"] = false,
["source"] = "Pheelix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[288774] = {
["isChanneled"] = true,
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[462898] = {
["source"] = "Malfunctioning Pylon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229739,
},
[439776] = {
["encounterName"] = "Rasha'nan",
["type"] = "DEBUFF",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214504,
},
[445909] = {
["source"] = "Bloodthirsty Swarmer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222235,
},
[443482] = {
["isChanneled"] = false,
["source"] = "Shadowtide Bulwark",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220886,
},
[389572] = {
["isChanneled"] = false,
["source"] = "Deepwater Eel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215680,
},
[444377] = {
["isChanneled"] = false,
["source"] = "Immature Kodiak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227552,
},
[446549] = {
["source"] = "Underlight Moth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222832,
},
[439523] = {
["source"] = "Beledar's Spawn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207802,
},
[440162] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glowcap Fungalfist",
["npcID"] = 225892,
},
[138130] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Spirit",
["npcID"] = 69792,
},
[167385] = {
["source"] = "Boulderfist",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 189617,
},
[5672] = {
["isChanneled"] = false,
["source"] = "Healing Stream Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3527,
},
[439780] = {
["encounterName"] = "Rasha'nan",
["type"] = "DEBUFF",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214504,
},
[400050] = {
["isChanneled"] = false,
["source"] = "Deepflayer Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221198,
},
[455877] = {
["isChanneled"] = false,
["source"] = "Bloodswell Creation",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220891,
},
[432116] = {
["isChanneled"] = false,
["source"] = "Brightrock Shellvalier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225785,
},
[440931] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Boskroot Lashbane",
["npcID"] = 217648,
},
[441315] = {
["encounterName"] = "Rasha'nan",
["type"] = "BUFF",
["source"] = "Frenzied Leaper",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222214,
},
[440549] = {
["isChanneled"] = false,
["source"] = "Kobyss Shellbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213598,
},
[461884] = {
["isChanneled"] = false,
["source"] = "Spring Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215810,
},
[440550] = {
["source"] = "Kobyss Shellbreaker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213598,
},
[159786] = {
["source"] = "Sinder",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[439784] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[457797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Battle Supplies",
["npcID"] = 227453,
},
[440551] = {
["isChanneled"] = false,
["source"] = "Kobyss Shellbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213598,
},
[439785] = {
["encounterName"] = "Rasha'nan",
["type"] = "DEBUFF",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214504,
},
[452177] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Reserve",
["npcID"] = 215727,
},
[424328] = {
["isChanneled"] = false,
["source"] = "Brightrock Shellvalier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225785,
},
[439786] = {
["encounterName"] = "Rasha'nan",
["type"] = "DEBUFF",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214504,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[439787] = {
["encounterName"] = "Rasha'nan",
["type"] = "DEBUFF",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214504,
},
[455373] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[267964] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bleekkazul",
["npcID"] = 17252,
},
[201754] = {
["isChanneled"] = false,
["source"] = "Sinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[439789] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[127801] = {
["source"] = "Turnip Punching Bag",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 65310,
},
[432125] = {
["source"] = "Spinneret Silkbearer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221939,
},
[405681] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bleekkazul",
["npcID"] = 17252,
},
[445412] = {
["isChanneled"] = false,
["source"] = "Shadowcrested Snapper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216963,
},
[456782] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[439792] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[462983] = {
["isChanneled"] = false,
["source"] = "Automatic Ironstrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229778,
},
[7814] = {
["isChanneled"] = false,
["source"] = "Sywen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[462826] = {
["isChanneled"] = false,
["source"] = "Explosive Bomberbot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229706,
},
[452912] = {
["source"] = "Zilthara",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220270,
},
[439538] = {
["source"] = "Mechanized Enforcer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214826,
},
[443363] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scouring Sandstone",
["npcID"] = 224619,
},
[357650] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165189,
},
[370042] = {
["isChanneled"] = false,
["source"] = "Gem-Jammed Slag Bubble",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226969,
},
[453463] = {
["source"] = "Suppressed Worker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225436,
},
[447921] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cascade Guardian",
["npcID"] = 214594,
},
[434925] = {
["isChanneled"] = false,
["source"] = "Noth Swarmer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217796,
},
[455380] = {
["isChanneled"] = false,
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218251,
},
[439795] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[456147] = {
["source"] = "Bandtail Kestrel",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220300,
},
[455153] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Abyssal Devourer",
["npcID"] = 216031,
},
[456136] = {
["isChanneled"] = false,
["source"] = "Murkshade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218452,
},
[456851] = {
["isChanneled"] = false,
["source"] = "Spore-infused Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221217,
},
[457934] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[381535] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Dirtdiver",
["npcID"] = 225905,
},
[457937] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[454907] = {
["isChanneled"] = false,
["source"] = "Coalesced Iniquity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226023,
},
[47310] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Coren Direbrew",
["npcID"] = 23872,
},
[7870] = {
["isChanneled"] = false,
["source"] = "Sywen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[457938] = {
["isChanneled"] = false,
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207802,
},
[440181] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glowcap Sporebinder",
["npcID"] = 225476,
},
[59638] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mirror Image",
["npcID"] = 31216,
},
[1459] = {
["source"] = "Meredy Huntswell",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209059,
},
[54049] = {
["isChanneled"] = false,
["source"] = "Zhaatom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[458067] = {
["encounterName"] = "Rasha'nan",
["type"] = "DEBUFF",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214504,
},
[427024] = {
["source"] = "Lampyrid Swarm",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219320,
},
[47442] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ursula Direbrew",
["npcID"] = 26822,
},
[9941] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Panzor the Invincible",
["npcID"] = 8923,
},
[432135] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waterworks Opportunist",
["npcID"] = 222867,
},
[89766] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Felguard",
["npcID"] = 17252,
},
[388349] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Abyssal Devourer",
["npcID"] = 216031,
},
[370049] = {
["isChanneled"] = false,
["source"] = "Gem-Jammed Slag Bubble",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226969,
},
[398394] = {
["isChanneled"] = false,
["source"] = "Waste Krolusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221358,
},
[53824] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Undertide Deepfisher",
["npcID"] = 226961,
},
[452009] = {
["isChanneled"] = false,
["source"] = "Earthenwork Ironstrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213951,
},
[463052] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[445806] = {
["source"] = "Sunless Slurkdripper",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219627,
},
[17253] = {
["isChanneled"] = false,
["source"] = "Sinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[455277] = {
["isChanneled"] = false,
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216527,
},
[371584] = {
["isChanneled"] = false,
["source"] = "Escaped Steam",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227383,
},
[454199] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mycotic Jawcrawler",
["npcID"] = 225488,
},
[396879] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[452195] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cyclonecrier Alpha",
["npcID"] = 222959,
},
[418155] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[50313] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Direbrew Minion",
["npcID"] = 26776,
},
[42648] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bluebell Peacock",
["npcID"] = 218771,
},
[442487] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[457434] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Dirtdiver",
["npcID"] = 225905,
},
[449960] = {
["isChanneled"] = false,
["source"] = "Sunless Carver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219604,
},
[440231] = {
["isChanneled"] = false,
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206067,
},
[450153] = {
["isChanneled"] = false,
["source"] = "Witherthorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214790,
},
[440185] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glowcap Sporebinder",
["npcID"] = 225476,
},
[456140] = {
["isChanneled"] = true,
["source"] = "Grimslice",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221551,
},
[455564] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Roth the Earthwound",
["npcID"] = 226300,
},
[104318] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wild Imp",
["npcID"] = 55659,
},
[431612] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twice-Stinger the Wretched",
["npcID"] = 219271,
},
[445811] = {
["source"] = "Waxen Bones",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229808,
},
[432142] = {
["isChanneled"] = false,
["source"] = "Nerubian Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216247,
},
[58729] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Taunka Spirit Guide",
["npcID"] = 31841,
},
[388963] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Colossal Salamanther",
["npcID"] = 224622,
},
[457565] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Kelpcoil",
["npcID"] = 225901,
},
[398553] = {
["isChanneled"] = false,
["source"] = "Waste Krolusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221358,
},
[113656] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Spirit",
["npcID"] = 69792,
},
[458181] = {
["isChanneled"] = false,
["source"] = "Deathtide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221753,
},
[116947] = {
["source"] = "Earthgrab Totem",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 60561,
},
[398643] = {
["source"] = "Slimy Fungivore",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217795,
},
[440193] = {
["encounterName"] = "Rasha'nan",
["type"] = "DEBUFF",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214504,
},
[384366] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ashwhite Kestrel",
["npcID"] = 215070,
},
[446325] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Island Proudfeather",
["npcID"] = 227198,
},
[444925] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gloomblight Sporebit",
["npcID"] = 225448,
},
[261616] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Katy Stampwhistle",
["npcID"] = 132969,
},
[451435] = {
["isChanneled"] = false,
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224466,
},
[456438] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Miner",
["npcID"] = 213565,
},
[439811] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214504,
},
[444909] = {
["source"] = "Sunken Sporeling",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229561,
},
[453611] = {
["isChanneled"] = true,
["source"] = "Automaxor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220265,
},
[440195] = {
["isChanneled"] = false,
["source"] = "Shadowtide Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220838,
},
[442618] = {
["isChanneled"] = false,
["source"] = "Hollows Sentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220986,
},
[451778] = {
["isChanneled"] = false,
["source"] = "Dogmatic Machine Speaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212878,
},
[142421] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[446328] = {
["isChanneled"] = true,
["source"] = "Voracious Fog Beast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219446,
},
[449522] = {
["isChanneled"] = false,
["source"] = "Leechwing Swarmite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226007,
},
[462936] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Medbot",
["npcID"] = 229769,
},
[431714] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kaheti Overseer",
["npcID"] = 214941,
},
[264057] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skreekrill",
["npcID"] = 17252,
},
[61684] = {
["isChanneled"] = false,
["source"] = "Huolon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[445882] = {
["source"] = "Night-Twisted Hog",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215206,
},
[447987] = {
["source"] = "Waste Flayer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221017,
},
[442041] = {
["source"] = "Sunless Shadowblade",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219631,
},
[431639] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Siegehold Fortifier",
["npcID"] = 215592,
},
[455273] = {
["isChanneled"] = false,
["source"] = "Bloodswell Creation",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220891,
},
[112042] = {
["isChanneled"] = false,
["source"] = "Graz'gore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[12544] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[433622] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brann Bronzebeard",
["npcID"] = 210759,
},
[157375] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Lesser Primal Storm Elemental",
["npcID"] = 229798,
},
[442627] = {
["source"] = "Slam Scavenger",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217997,
},
[462802] = {
["isChanneled"] = true,
["source"] = "Corrupted Machinist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229695,
},
[412223] = {
["source"] = "Crushing Darkness",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 205753,
},
[452178] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Reserve",
["npcID"] = 215727,
},
[442628] = {
["source"] = "Slam Scavenger",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217997,
},
[398497] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormtop Shalemaw",
["npcID"] = 212364,
},
[447994] = {
["source"] = "Waste Flayer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221017,
},
[224729] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Reserve",
["npcID"] = 214429,
},
[457959] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[446519] = {
["isChanneled"] = false,
["source"] = "Penumbral Shalehorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227933,
},
[377589] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tombcruncher",
["npcID"] = 26125,
},
[430238] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corrupted Spellshaper",
["npcID"] = 219302,
},
[224126] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[432027] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twice-Stinger the Wretched",
["npcID"] = 219271,
},
[455287] = {
["encounterName"] = "Rasha'nan",
["source"] = "Infested Spawn",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219739,
},
[452155] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cyclonecrier Alpha",
["npcID"] = 222959,
},
[453073] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sweetspark the Oozeful",
["npcID"] = 220883,
},
[452157] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cyclonecrier Alpha",
["npcID"] = 222959,
},
[431645] = {
["isChanneled"] = false,
["source"] = "Grand Overspinner Antourix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225263,
},
[452044] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[224127] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212489,
},
[440205] = {
["isChanneled"] = false,
["source"] = "Shadowtide Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220838,
},
[68054] = {
["source"] = "Jeeves",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 35642,
},
[462434] = {
["encounterName"] = "Rasha'nan",
["source"] = "Fatal Nightmare",
["encounterID"] = 2918,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222981,
},
[457423] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Sandtwister",
["npcID"] = 225900,
},
[446533] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[390256] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Proscenium Punk",
["npcID"] = 215791,
},
[452765] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shadowsilk Wallclimber",
["npcID"] = 224844,
},
[442266] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[440506] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stream Skipper",
["npcID"] = 213700,
},
[459753] = {
["isChanneled"] = false,
["source"] = "Fenryr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
[462856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nullbot",
["npcID"] = 229729,
},
[450697] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[290577] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Abomination",
["npcID"] = 149555,
},
[419204] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[383298] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Enraged Magma Fury",
["npcID"] = 214924,
},
},
["profileKeys"] = {
["Calestin - Sargeras"] = "Default",
["Strid - Kel'Thuzad"] = "Default",
["Sverdrup - Argent Dawn"] = "Default",
["Naturerivers - Korgath"] = "Default",
["Lotic - Argent Dawn"] = "Default",
["Mangrove - Argent Dawn"] = "Default",
["Inundito - Kel'Thuzad"] = "Default",
["Cataracts - Argent Dawn"] = "Default",
["Saellindris - Kel'Thuzad"] = "Default",
["Emptyrivers - Sargeras"] = "Default",
["Alluvium - Argent Dawn"] = "Default",
["Stream - Argent Dawn"] = "Default",
["Riparium - Argent Dawn"] = "Jundies - Season 3 M+ and Ra",
["Asperos - Kel'Thuzad"] = "Default",
["Headcut - Argent Dawn"] = "Default",
["Confluence - Argent Dawn"] = "Default",
["Zimuures - Argent Dawn"] = "Default",
["Gelae - Kel'Thuzad"] = "Default",
["Wildeadoriah - The Scryers"] = "Default",
["Benthos - Argent Dawn"] = "Default",
["Emptyrivers - Argent Dawn"] = "Default",
["Karst - Argent Dawn"] = "Default",
["Flumina - Argent Dawn"] = "Main",
["Esker - Kel'Thuzad"] = "Default",
["Estuary - Argent Dawn"] = "Default",
},
["profiles"] = {
["Main"] = {
["focus_as_target_alpha"] = true,
["extra_icon_use_blizzard_border_color"] = false,
["aura_sort"] = true,
["npcs_renamed"] = {
[173044] = "Stitcher",
[197698] = "Thundercunt",
[176394] = "Worker",
[192333] = "Alpha",
[178141] = "Fish Dicker",
[40765] = "Chief Crab",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[98965] = "Kur'talos",
[176523] = "Painsmith",
[190128] = "Zul'gondeez",
[101839] = "Cat",
[199368] = "Big Crystal",
[164967] = "Dickus",
[179842] = "Assclapper",
[98696] = "Illysanna",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[181224] = "Da Sausage",
[151649] = "Mk I",
[168969] = "Green Slime",
[189813] = "Dathea",
[98538] = "Velandras",
[184130] = "Earthen",
[184908] = "Haste Boi",
[196116] = "Furry",
[184972] = "Eggnog",
[131823] = "M'lady",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[180015] = "Dickhand",
[174843] = "Maitre D",
[190340] = "Defender",
[175806] = "Sa'lami",
[184911] = "CDR Boi",
[180990] = "Jailer",
[175663] = "Hill Brad",
[135048] = "Bacon",
[181546] = "Renewal",
[194897] = "Stormsurge Totem",
[195929] = "Twomen",
[190484] = "Cracka",
[185680] = "Haste Relic",
[179334] = "Not the boss",
[59555] = "Haunting",
[209090] = "T. Swift",
[189722] = "Gulp This",
[185683] = "Speed Relic",
[195930] = "Mandick",
[167731] = "Separator",
[59726] = "Pearl",
[194315] = "Shlongo",
[114632] = "Attendant",
[175646] = "S.U.C.C. Master",
[181548] = "Absolution",
[185610] = "Simp",
[114627] = "Terror",
[164705] = "Haste Slime",
[99192] = "Xavius",
[131825] = "Brian",
[102781] = "Bat!",
[181549] = "War",
[188026] = "Skull Emoji",
[193457] = "Ballerina",
[179733] = "Fish Dick",
[201155] = "Nascent Dragon",
[184582] = "Eric",
[151657] = "Bomb",
[168310] = "Plaguecock",
[182169] = "Lithium",
[197298] = "Nascent Dragon",
[164707] = "Purple Slime",
[185685] = "CDR Relic",
[197219] = "Big Lasher",
[162691] = "Blightboner",
[70245] = "uh oh",
[164501] = "Mute Me",
[180773] = "Trash Can",
[181551] = "Duty",
[165946] = "Mordretha",
[32666] = "Uh oh",
[198998] = "Tyr",
[168153] = "Plaguecock",
[174773] = "Spiteful",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[191736] = "Beak Bitch",
[164804] = "Simp Tree",
[144298] = "Mk III",
[178171] = "Don't Pull Me",
[194316] = "I'm Zarii",
[144294] = "Twinkerer",
[208445] = "Larodar",
[198047] = "Tempest",
[191222] = "Frost Dragon",
},
["blizzard_nameplate_large_font"] = "Expressway",
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["SoftTargetIconGameObject"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:221: in function `SetCVars'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:238: in function `OnEvent'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:270: in function <Interface/AddOns/BetterFishing/BetterFishing.lua:270>\n",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateResourceOnTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateLargerScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["SoftTargetInteract"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:218: in function `SetCVars'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:238: in function `OnEvent'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:270: in function <Interface/AddOns/BetterFishing/BetterFishing.lua:270>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"NAMEPLATES\"]:3: in function <[string \"NAMEPLATES\"]:1>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowSelf"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateGlobalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOverlapH"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8447: in function `RefreshAutoToggle'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2283: in function `func'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3891: in function `EventHandler'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3902: in function `RunFunctionForEvent'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3908: in function <Interface/AddOns/Plater/Plater.lua:3905>\n",
["nameplateMotion"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfBottomInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowOnlyNames"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:7082: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:7080>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Plater/libs/DF/slider.lua:762>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["all-consuming spite"] = {
343553,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["freezing ice stone"] = {
402940,
403391,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["insidious chill"] = {
391566,
391568,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["moonkin aura"] = {
209740,
209746,
},
["in the spotlight"] = {
227931,
312926,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
},
["url"] = "https://wago.io/ak3iS95aa/96",
["blizzard_nameplate_font_override_enabled"] = true,
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["indicator_raidmark_scale"] = 0.84999996423721,
["cast_statusbar_spark_alpha"] = 1,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["spellname_text_font"] = "Expressway",
["castbar_offset"] = -55,
["spellpercent_text_font"] = "Expressway",
["mana_incombat"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["cast"] = {
170,
},
["percent_text_size"] = 9,
["castbar_enabled"] = false,
["cast_incombat"] = {
170,
},
["percent_text_color"] = {
1,
1,
1,
},
["percent_text_font"] = "Expressway",
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["mana"] = {
168,
4,
},
["power_percent_text_size"] = 8,
["percent_text_anchor"] = {
["y"] = 1.2999992370605,
},
["healthbar_color"] = {
0,
0,
0,
},
["module_enabled"] = false,
},
["friendlyplayer"] = {
["actorname_text_font"] = "Expressway",
["spellpercent_text_font"] = "Expressway",
["actorname_friend_color"] = {
0.70980392156863,
},
["actorname_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["actorname_guild_color"] = {
0.49803921568627,
},
["cast_incombat"] = {
135,
7,
},
["percent_show_percent"] = false,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["percent_text_font"] = "Expressway",
["percent_text_show_decimals"] = false,
["level_text_font"] = "Expressway",
["only_thename"] = true,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["big_actortitle_text_size"] = 9,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["enabled"] = false,
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["module_enabled"] = false,
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["big_actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["level_text_alpha"] = 0.29999998211861,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2.5,
["side"] = 10,
},
["percent_text_size"] = 10,
["percent_text_enabled"] = true,
["spellname_text_size"] = 9,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["percent_text_ooc"] = true,
["spellname_text_font"] = "Expressway",
["percent_show_health"] = true,
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
},
["enemynpc"] = {
["actorname_text_font"] = "Expressway",
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["actorname_text_size"] = 9,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_font"] = "Expressway",
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["spellname_text_size"] = 9,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["big_actorname_text_font"] = "Expressway",
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["global_health_width"] = 132,
["enemyplayer"] = {
["actorname_text_font"] = "Expressway",
["big_actorname_text_size"] = 10,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["level_text_size"] = 8,
["spellname_text_font"] = "Expressway",
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["all_names"] = true,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["big_actortitle_text_size"] = 10,
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["actorname_text_size"] = 10,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["big_actorname_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["quest_enabled"] = true,
["spellname_text_outline"] = "OUTLINE",
["health_incombat"] = {
135,
15,
},
["quest_color_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["spellpercent_text_size"] = 9,
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["global_health_height"] = 16,
},
["health_selection_overlay"] = "PlaterFocus",
["aura_y_offset"] = 1.5,
["expansion_triggerwipe"] = {
[9] = true,
[8] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["bossmod_aura_width"] = 32.621017456055,
["indicator_spec"] = false,
["border_thickness"] = 1.2000000476837,
["resources_settings"] = {
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-5764-00018799"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-3678-0D44FD01"] = "ComboPoints",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4184-0021692E"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-3296-00945C33"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-970-006B99B8"] = "ComboPoints",
["Player-3674-0898468A"] = "SoulShards",
},
["global_settings"] = {
["anchor"] = {
["y"] = 9.7099990844727,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
},
["health_animation_time_dilatation"] = 1.6699999570847,
["npc_cache"] = {
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[161124] = {
"Urg'roth, Breaker of Heroes",
"The Underrot",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[132481] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[142587] = {
"Devouring Maggot",
"Waycrest Manor",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[202947] = {
"Cologne Neutralizer",
"Shadowfang Keep",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[202948] = {
"Perfume Neutralizer",
"Shadowfang Keep",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[135699] = {
"Ashvane Jailer",
"Tol Dagor",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[139284] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[139800] = {
"Galecaller Apprentice",
"Shrine of the Storm",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[136735] = {
"Ashvane Marine",
"Tol Dagor",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[233282] = {
"Refreshment Table",
"Brackenhide Hollow",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[138019] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[382594] = {
"'Good Students' Reward Chest",
"Algeth'ar Academy",
"enUS",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
},
[303148] = {
"Soulwell",
"Firelands",
"enUS",
},
[135846] = {
"Sand-Crusted Striker",
"Temple of Sethraliss",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
},
[189555] = {
"Arcane Attendant",
"The Azure Vault",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[53617] = {
"Molten Erupter",
"Firelands",
"enUS",
},
[134058] = {
"Galecaller Faye",
"Shrine of the Storm",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[36296] = {
"Apothecary Hummel",
"Shadowfang Keep",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[134390] = {
"Sand-crusted Striker",
"Temple of Sethraliss",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[127497] = {
"Ashvane Warden",
"Tol Dagor",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[52409] = {
"Ragnaros",
"Firelands",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[139946] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[132530] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[98285] = {
"Smashum Grabb",
"Tanaan Jungle",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[115402] = {
"Bishop",
"Return to Karazhan",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[127486] = {
"Ashvane Officer",
"Tol Dagor",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[177807] = {
"Customs Security",
"Tazavesh, the Veiled Market",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[338224] = {
"Cache of the Fire Lord",
"Firelands",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[172021] = {
"Coldheart Automaton",
"Torghast, Tower of the Damned",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[155432] = {
"Enchanted Emissary",
"Temple of Sethraliss",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
},
[155433] = {
"Void-Touched Emissary",
"Temple of Sethraliss",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[189707] = {
"Chaotic Mote",
"Castle Nathria",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
},
[187154] = {
"Arcane Curator",
"The Azure Vault",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[193534] = {
"Strunraan",
"10.0 Dragon Isles",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
},
[136391] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[134602] = {
"Shrouded Fang",
"Temple of Sethraliss",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[130026] = {
"Bilge Rat Seaspeaker",
"Tol Dagor",
},
[135246] = {
"\"Stabby\" Lottie",
"The Rotting Mire (Islands 9)",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[135759] = {
"Earthwall Totem",
"Kings' Rest",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[130027] = {
"Ashvane Marine",
"Tol Dagor",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[196117] = {
"Crystal Construct",
"The Azure Vault",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[36272] = {
"Apothecary Frye",
"Shadowfang Keep",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[134994] = {
"Spectral Headhunter",
"Kings' Rest",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[130025] = {
"Irontide Thug",
"Tol Dagor",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[135764] = {
"Explosive Totem",
"Kings' Rest",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[139799] = {
"Ironhull Apprentice",
"Shrine of the Storm",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[127482] = {
"Sewer Vicejaw",
"Tol Dagor",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[174773] = {
"Spiteful Shade",
"Spires of Ascension",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[136665] = {
"Ashvane Spotter",
"Tol Dagor",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[382538] = {
"Alchemist's Lab Bench",
"Ruby Life Pools",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[36565] = {
"Apothecary Baxter",
"Shadowfang Keep",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[385357] = {
"Ancestors' Treasure Trove",
"The Nokhud Offensive",
"enUS",
},
[185262] = {
"Howling Creekborne",
"Dragon Isles",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[53189] = {
"Molten Elemental",
"Firelands",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[153285] = {
"Training Dummy",
"Eastern Kingdoms",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[127480] = {
"Stinging Parasite",
"Tol Dagor",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[53575] = {
"Lava Wielder",
"Firelands",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[127484] = {
"Jes Howlis",
"Tol Dagor",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[191926] = {
"Fishface",
"Brackenhide Hollow",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[131825] = {
"Sister Briar",
"UNKNOWN",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[155434] = {
"Emissary of the Tides",
"Temple of Sethraliss",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[53545] = {
"Molten Spewer",
"Firelands",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[131445] = {
"Block Warden",
"Tol Dagor",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[161241] = {
"Voidweaver Mal'thir",
"The Underrot",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[161243] = {
"Samh'rek, Beckoner of Chaos",
"The Underrot",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[127488] = {
"Ashvane Flamecaster",
"Tol Dagor",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[161244] = {
"Blood of the Corruptor",
"The Underrot",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[137591] = {
"Healing Tide Totem",
"Kings' Rest",
},
[53140] = {
"Son of Flame",
"Firelands",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[53231] = {
"Lava Scion",
"Firelands",
"enUS",
},
},
["spell_animation_list"] = {
["30451"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 30451,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["31935"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 31935,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["31661"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 31661,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["285452"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 285452,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["222024"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["info"] = {
["spellid"] = 222024,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
["2098"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 2098,
["class"] = "ROGUE",
["time"] = 1539293610,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.079999998211861,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 1.5,
["fade_in"] = 0,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 2.710000038147,
},
},
["228600"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 228600,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["203782"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 203782,
["class"] = "DEMONHUNTER",
["time"] = 1539716639,
["desc"] = "",
},
},
["107270"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 107270,
["class"] = "MONK",
["time"] = 1539296490,
["desc"] = "",
},
},
["162243"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 162243,
["class"] = "DEMONHUNTER",
["time"] = 1539717356,
["desc"] = "",
},
},
["117418"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["info"] = {
["spellid"] = 117418,
["class"] = "MONK",
["time"] = 1539296387,
["desc"] = "",
},
},
["204157"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 204157,
["class"] = "DEMONHUNTER",
["time"] = 1539716637,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["184575"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 184575,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["324540"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["info"] = {
["spellid"] = 324540,
["class"] = "WARLOCK",
["time"] = 1539292087,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["264178"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["info"] = {
["spellid"] = 264178,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["185099"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.18999999761581,
["absolute_sineX"] = false,
["scaleY"] = 0.84999847412109,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 185099,
["class"] = "MONK",
["time"] = 1539712435,
["desc"] = "",
},
},
["55090"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 3.9020702838898,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.7999999523163,
},
["info"] = {
["spellid"] = 55090,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["198030"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.31999999284744,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 198030,
["class"] = "DEMONHUNTER",
["time"] = 1539717136,
["desc"] = "",
},
},
["148135"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["info"] = {
["spellid"] = 148135,
["class"] = "MONK",
["time"] = 1539295958,
["desc"] = "",
},
},
["189112"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["info"] = {
["spellid"] = 189112,
["class"] = "DEMONHUNTER",
["time"] = 1539715467,
["desc"] = "",
},
},
["85948"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 85948,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["35395"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 35395,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
},
["280720"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 280720,
["class"] = "ROGUE",
["time"] = 1539292087,
["desc"] = "",
},
},
["49998"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 49998,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["155166"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 155166,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
},
["228354"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 228354,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["8042"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 285452,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["27285"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 27285,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["53351"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 53351,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["228598"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 228598,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["108853"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 108853,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["205523"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 205523,
["class"] = "MONK",
["time"] = 1539295885,
["desc"] = "",
},
},
["245388"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.03,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 245388,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.01,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 2,
},
},
["6343"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.1,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 6343,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
},
["199547"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 199547,
["class"] = "DEMONHUNTER",
["time"] = 1539717795,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["17364"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 17364,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["206930"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 222026,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["86040"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["info"] = {
["spellid"] = 86040,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["187708"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 187708,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
},
["275779"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = -1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 275779,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
},
["116858"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["duration"] = 0.099999994039536,
["scale_downX"] = 0.94999998807907,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.0499999523163,
["cooldown"] = 0.75,
["scale_downY"] = 0.94999998807907,
},
["info"] = {
["spellid"] = 116858,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = 4.9699974060059,
["amplitude"] = 0.59999996423721,
["fade_in"] = 0.049999997019768,
["duration"] = 0.099999994039536,
["cooldown"] = 0.25,
["frequency"] = 2.8999998569489,
},
},
["197834"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 197834,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
},
["5374"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 5374,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
},
["53595"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 53595,
["class"] = "PALADIN",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["228478"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 228478,
["class"] = "DEMONHUNTER",
["time"] = 1539716636,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["265157"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.096889182925224,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["info"] = {
["spellid"] = 265157,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 0.50999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 39.995635986328,
},
},
["32645"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 32645,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
["44425"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 44425,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["196278"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 196278,
["class"] = "WARLOCK",
["time"] = 0,
["desc"] = "",
},
},
["52174"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 52174,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
["2643"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 2643,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
},
["187874"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["info"] = {
["spellid"] = 187874,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
},
["196819"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 196819,
["class"] = "ROGUE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
["100784"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 100784,
["class"] = "MONK",
["time"] = 1539296312,
["desc"] = "",
},
},
["257045"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 257045,
["class"] = "HUNTER",
["time"] = 0,
["desc"] = "",
},
},
["7268"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 7268,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
},
["199804"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["info"] = {
["spellid"] = 199804,
["class"] = "ROGUE",
["time"] = 1539293872,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["185763"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["info"] = {
["spellid"] = 185763,
["class"] = "ROGUE",
["time"] = 1539275610,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["20243"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 20243,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
},
["188443"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["spellid"] = 188443,
["class"] = "SHAMAN",
["time"] = 0,
["desc"] = "",
},
},
["100780"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 100780,
["class"] = "MONK",
["time"] = 1539295910,
["desc"] = "",
},
},
["46968"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["info"] = {
["spellid"] = 46968,
["class"] = "WARRIOR",
["time"] = 0,
["desc"] = "",
},
},
["222026"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 222026,
["class"] = "DEATHKNIGHT",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["199552"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["spellid"] = 199552,
["class"] = "DEMONHUNTER",
["time"] = 1539717392,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
["11366"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
["info"] = {
["spellid"] = 11366,
["class"] = "MAGE",
["time"] = 0,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["185438"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["spellid"] = 185438,
["class"] = "ROGUE",
["time"] = 1539204014,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["animation_type"] = "scale",
},
},
},
["indicator_scale"] = 0.99999994039536,
["extra_icon_timer_decimals"] = true,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.50242385268211,
},
["indicator_anchor"] = {
["side"] = 6,
["x"] = 2,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["aura_padding"] = 0,
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Find Weakness\"] = 93,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1697196348,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 516,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Aura Reorder [Plater]",
},
{
["Enabled"] = true,
["Revision"] = 161,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "Nameplate Created",
["Author"] = "�r��ne-Kel'thuzad",
["PlaterCore"] = 1,
["Desc"] = "Adds double arrow as a target indicators option",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1696897945,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Name"] = "Double Arrow Target",
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 236,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "Nameplate Added",
["Author"] = "Viashi-Antonidas",
["PlaterCore"] = 1,
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1696898519,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Name"] = "QuestProgress",
["Url"] = "https://wago.io/uwe9CEwMm/2",
["Icon"] = 132212,
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1698537794,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/VtPjNl8Mg/7",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1232,
["semver"] = "1.0.6",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Absorb Shields in Healthbar",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
},
["Time"] = 1696898532,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["arena"] = true,
["pvp"] = true,
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/Zz1aEIOJR/1",
["Icon"] = 132310,
["Enabled"] = true,
["Revision"] = 325,
["semver"] = "1.0.0",
["Author"] = "Irashi-Antonidas",
["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Sappable (Custom Icon)",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
},
["Time"] = 1696897899,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/lLK9gn7lc/5",
["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
["Enabled"] = true,
["Revision"] = 74,
["semver"] = "1.0.4",
["Author"] = "Ariani-Antonidas",
["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
["Prio"] = 99,
["version"] = 5,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Load Screen",
["Name"] = "Arena - Buff-Tracking Mode",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696899767,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/-ny0jWQDT/2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = true,
["Revision"] = 212,
["semver"] = "1.0.1",
["Author"] = "Driani-Antonidas",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Target Border Color",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1697196350,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/10",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "1.0.9",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 10,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Cast Icon Anchor + Border",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696898479,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 108,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Pet Threat Highlighter",
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["SPpixelborder"] = false,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowyoff"] = 0.5,
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1696898535,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/uEnDIKvvP/2",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 981,
["semver"] = "1.0.1",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "Common Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Type",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Frequency",
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Number of Particles",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "X-Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Y-Offset",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Length",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Thickness",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Glow Scale",
},
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696819089,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Force Threat Color NPC",
},
{
["OptionsValues"] = {
["EXEbdrcolor"] = {
1,
0.37647062540054,
0,
1,
},
["EXEhicolor"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
0,
},
["EXEhdcolor"] = {
0.99215692281723,
1,
0.94901967048645,
1,
},
["EXEalert"] = 0,
["EXEhbcon"] = false,
["onlyNPC"] = true,
["EXEbdron"] = false,
},
["HooksTemp"] = {
},
["UID"] = "0x6150129e178c7fc5",
["Hooks"] = {
["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
},
["Time"] = 1698537826,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/uCoprJFNs/3",
["Icon"] = 135358,
["Enabled"] = true,
["Revision"] = 3553,
["semver"] = "1.0.2",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Advanced Execute Range [Fix]",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Color Options",
["Name"] = "Execute Color Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhbcon",
["Value"] = true,
["Name"] = "Enable Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Healthbar Color",
},
{
["Type"] = 1,
["Key"] = "EXEhbcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Healthbar Color",
},
{
["Type"] = 4,
["Key"] = "EXEbdron",
["Value"] = false,
["Name"] = "Enable Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Border Color",
},
{
["Type"] = 1,
["Key"] = "EXEbdrcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Border Color",
},
{
["Type"] = 4,
["Key"] = "onlyNPC",
["Value"] = true,
["Name"] = "Only on NPC",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply these features only on NPC",
},
{
["Type"] = 4,
["Key"] = "TrackAggro",
["Value"] = false,
["Name"] = "Track Aggro Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Divisor Options",
["Name"] = "Execute Divisor Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhdoff",
["Value"] = false,
["Name"] = "Disable Execute Health Divisor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Disable Execute Health Divisor",
},
{
["Type"] = 1,
["Key"] = "EXEhdcolor",
["Value"] = {
1,
1,
1,
0.8500000089407,
},
["Name"] = "Execute Health Divisor Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Divisor Color",
},
{
["Type"] = 1,
["Key"] = "EXEhicolor",
["Value"] = {
0.27843137254902,
0,
1,
0.25,
},
["Name"] = "Execute Health Indicator Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Indicator Color",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
["Min"] = 0,
["Key"] = "EXEalert",
["Value"] = 13,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Preview Divisor %",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Force set health Divisor alpha value.",
["Min"] = 0,
["Key"] = "EXEhdalpha",
["Value"] = 50,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Divisor Alpha %",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
},
["Time"] = 1696811621,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/UMY67A2bw/1",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 110,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Health / Max Health (%)",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote \n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, --Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        \n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1700894784,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 238,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Performance Units",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["Time"] = 1700250838,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "ShadowDotsColors",
},
{
["OptionsValues"] = {
["replaceName"] = false,
["hideNameSolo"] = false,
["castNameSize"] = 50,
["colorInterruptSoon"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorInterruptAvailable"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorNoInterrupt"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["colorProtected"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\",\n                \"Curse of Stone\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\",\n                \"Decaying Mind\",\n                \"Void Spit\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\",\n                \"Scorching Detonation\",\n                \"Void Surge\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        },\n        -- Dawn of the Infinite\n        [19] = {\n            [\"spells\"] = {    \n                \"Noxious Ejection\",\n                \"Stonebolt\",\n                \"Infinite Bolt\",\n                \"Infinite Blast\",\n                \"Fireball\",\n                \"Immolate\",\n                \"Temporal Blast\",\n                \"Corroding Volley\",\n                \"Epoch Bolt\"\n            },\n            [\"zones\"] = {\n                2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198\n            }\n        },\n        -- Amirdrassil\n        [20] = {\n            [\"spells\"] = {\n                \"Coiling Flames\",\n                \"Twisting Singe\",\n                \"Fyr'alath's Flame\"\n            },\n            [\"zones\"] = {\n                2232, 2240, 2244, 2233, 2234, 2238\n            }\n        },\n        -- Atal'Dazar\n        [21] = {\n            [\"spells\"] = {\n                \"Wildfire\",\n                \"Venomfang Strike\",\n                \"Venom Blast\",\n                \"Soulburn\",\n                \"Wracking Pain\"\n            },\n            [\"zones\"] = {\n                934, 935\n            }\n        },\n        -- Black Rook Hold\n        [22] = {\n            [\"spells\"] = {\n                \"Soul Blast\",\n                \"Arcane Blitz\"\n            },\n            [\"zones\"] = {\n                751, 752, 753, 754, 755, 756\n            }\n        },\n        -- Darkheart Thicket\n        [23] = {\n            [\"spells\"] = {\n                \"Nightmare Bolt\",\n                \"Feed on the Weak\",\n                \"Bloodbolt\",\n                \"Firebolt\",\n                \"Nightmare Toxin\",\n                \"Despair\",\n                \"Unnerving Screech\",\n                \"Tormenting Eye\",\n                \"Shadow Bolt\",\n                \"Darksoul Bite\"\n            },\n            [\"zones\"] = {\n                733\n            }\n        },\n        -- Everbloom\n        [24] = {\n            [\"spells\"] = {\n                \"Nature's Wrath\",\n                \"Water Bolt\",\n                \"Dreadpetal Pollen\",\n                \"Arcane Blast\",\n                \"Fireball\",\n                \"Frostbolt\",\n                \"Choking Vines\",\n                \"Dancing Thorns\",\n                \"Pyroblast\",\n                \"Poisonous Claws\"\n            },\n            [\"zones\"] = {\n                620, 621\n            }\n        },\n        -- Throne of the Tides\n        [25] = {\n            [\"spells\"] = {\n                \"Focused Tempest\",\n                \"Frostbolt\",\n                \"Water Bolt\",\n                \"Flame Shock\",\n                \"Mind Rot\",\n                \"Foul Bolt\",\n                \"Ink Blast\",\n                \"Mind Flay\",\n                \"Aquablast\",\n                \"Hex\",\n                \"Crushing Depths\",\n                \"Lightning Bolt\",\n                \"Lightning Surge\"\n                \n            },\n            [\"zones\"] = {\n                323, 322\n            }\n        },\n        -- Waycrest Manor\n        [26] = {\n            [\"spells\"] = {\n                \"Bramble Bolt\",\n                \"Ruinous Bolt\",\n                \"Soul Bolt\",\n                \"Wasting Strike\",\n                \"Wracking Chord\",\n                \"Virulent Pathogen\",\n                \"Darkened Lighting\",\n                \"Shadow Cleave\",\n                \"Infest\",\n                \"Spit\",\n                \"Etch\",\n                \"Runic Mark\",\n                \"Decaying Touch\",\n                \"Dread Mark\",\n                \"Runic Bolt\",\n                \"Scar Soul\",\n                \"Tearing Strike\",\n                \"Drain Essence\"\n            },\n            [\"zones\"] = {\n                1016, 1015, 1017, 1018, 1029\n            }\n        }\n    }\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        \n                    end \n                    local isInterruptKnown\n                    if envTable.interruptID ~= \"Spell Lock\" and envTable.interruptID ~= nil then\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            isInterruptKnown = true\n                        else\n                            isInterruptKnown = false\n                        end\n                    end\n                    local isSpellLock = envTable.interruptID == \"Spell Lock\"\n                    if isSpellLock or isInterruptKnown then\n                        if interruptReadyTime == 0 then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                        elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                            -- Paladin Avenger's Shield\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                        elseif interruptReadyTime < (castEndTime - 0.25) then\n                            castBar.tick:Show()\n                            castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                            local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue\n                            if castBar.channeling then\n                                tickLocation = 1 - tickLocation\n                            end\n                            castBar.tick:SetPoint(\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                            \n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)\n                        elseif interruptReadyTime >= (castEndTime - 0.25) then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                        end\n                    else\n                        Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                    end\n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n            end\n            \n            \n            -- Spell Reflection coloring\n            if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                -- Check to see if the ability is targetting the player\n                if UnitExists(targetUnitId) then\n                    if UnitName(targetUnitId) == UnitName(\"player\") then\n                        -- Color the bar if the spell is reflectable\n                        if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                        end\n                    end\n                end\n            end\n            \n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil then\n            -- Check for Grimoire of Sacrifice\n            return \"Spell Lock\"\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["Time"] = 1701133020,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/3408lMaNb/2",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1611,
["semver"] = "1.0.1",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Enhanced Enemy Castbar [Plater]",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = true,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = true,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Key"] = "castNameSize",
["Value"] = 60,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
["colour_names"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1698537789,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 255,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "M+ Renamer",
},
{
["OptionsValues"] = {
["extraLowScale"] = 0.79999995231628,
["higherScale"] = 1.1999999284744,
["scale"] = true,
["lowScale"] = 0.79971849918365,
["midScale"] = 0.89680552482605,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local prioScaleMap = {\n        [1] = modTable.config.midScale, -- 0.9\n        [2] = modTable.config.lowScale, -- 0.8\n        [3] = modTable.config.extraLowScale, -- 0.7,\n        [4] = modTable.config.higherScale -- 1.1\n    }\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[153285] = 2, --Testing Dummy        \n        --[194644] = 4, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        \n        --Dawn of the Infinite\n        [204536] = 2, --Blight Chunk\n        [206063] = 1, -- Temporal Deviation\n        \n        --Waycrest manor\n        [131669] = 1, --Jagged Hound\n        \n        --Atal'Dazar\n        [128435] = 1, --Saurid's\n        \n        --Darkheart Thicket\n        [100529] = 2, --Hatespawn Slime\n        [101074] = 2, --Hatespawn Whelpling\n        \n        --Everbloom\n        [81864] = 1, --Dreadpetal\n        [84401] = 2, --Swift Sproutling\n        \n        --Blackrook Hold\n        [98677] = 2, --Rook Spiderling\n        [98900] = 1, --Wyrmtongue Trickster\n        [102781] = 2, --Fel Bat Pup\n        \n        --Throne of the tides\n        [40923] = 2, --Unstable Corruption\n        \n        --Halls of Infusion\n        [190923] = 2, --Zephyrling\n        \n        --Brackenhide Hollow\n        [189299] = 2, -- Decaying Slime\n        [189363] = 2, -- Infected Lasher\n        [194373] = 1, -- Witherling\n        \n        --Uldaman\n        [184134] = 2, -- Scavaging Leaper\n        \n        --Nelth's Lair\n        [96247] = 2, -- Vileshard Crawler\n        [102430] = 2, --Tarspitter Slug\n        \n        -- Freehold\n        [130024] = 2, --Soggy Shiprat\n        \n        -- Underrot\n        [131402] = 1, --Underrot Tick\n        \n        -- Temple of the Jade Serpent\n        [58319] = 2, --Lesser Sha\n        [62358] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [195579] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [105703] = 2, --Mana Wyrm\n        [104295] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [77006] = 2, --Corpse Skitterling\n        [75451] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [196642] = 2, --Hungry Lasher\n        [197398] = 2, --Hungry Lasher\n        [196694] = 1, --Arcane Forager\n        [192329] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [191313] = 2, -- Volatile Sapling\n        [187242] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [190205] = 1, --Scorchling\n        [197509] = 2, --Primal Thundercloud\n        [187894] = 1, --Infused Whelp\n        --[188011] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [178163] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [163089] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [166264] = 2, --Spare Parts\n        [171500] = 2, --Shuffling Corpse\n        [165138] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [171455] = 2, --Stonewall Gargon\n        [168457] = 2, --Stonewall Gargon\n        [166589] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [168969] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [168986] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [167892] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Amirdrassil\n        [210231] = 1, --Tainted Lasher\n        [211306] = 2, --Fiery vines\n        \n        --Vault\n        [194991] = 1, --Oathsworn Vanguard\n        [191714] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [183669] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [169925] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [144300] = 2, -- \n        [189707] = 2, --Chaotic Motes\n    }\n    \n    modTable.isSpiteful = function(id)\n        return tonumber(id) == 174773\n    end\n    \n    modTable.parseGUID = function(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    modTable.spitefulTargetsPlayer = function(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\n    \n    modTable.getScale = function(prio)\n        if not modTable.config.scale then\n            return nil\n        end\n        \n        return prioScaleMap[prio]\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
},
["Time"] = 1701045304,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 1526,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Priority based scaling",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Mid prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Low prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Very Low Prio",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Higher Priority",
},
},
["LastHookEdited"] = "",
},
},
["last_news_time"] = 1696043087,
["auras_per_row_auto"] = false,
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 8,
["auras_per_row_amount2"] = 2,
["range_check_power_bar_alpha"] = 0.89999997615814,
["range_check_health_bar_alpha"] = 0.84999996423721,
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["aura_show_crowdcontrol"] = true,
["blizzard_nameplate_large_font_size"] = 9,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["crowdcontrol"] = {
1,
1,
1,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_buff"] = {
0.65098041296005,
0.011764707043767,
0.090196080505848,
0,
},
},
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["show_healthbars_on_softinteract"] = false,
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["extra_icon_stack_outline"] = "OUTLINE",
["range_check_alpha"] = 0.89999997615814,
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
},
["castbar_target_font"] = "Expressway",
["semver"] = "4.6.0",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.1999969482422,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark3",
["auto_toggle_friendly"] = {
["arena"] = true,
},
["indicator_faction"] = false,
["extra_icon_height"] = 20,
["aura_x_offset"] = 1.1999969482422,
["range_check_alpha_friendlies"] = 1,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["aura_consolidate"] = true,
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.8199996948242,
["x"] = 0,
["side"] = 12,
},
["extra_icon_width"] = 21,
["aura_show_enrage"] = true,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Monk Statue"] = 2,
["Combo Points"] = 6,
["Extra Border"] = 2,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Execute Range"] = 1,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["update_throttle"] = 0.33000001311302,
["minor_width_scale"] = 0.99999994039536,
["castbar_target_text_size"] = 9,
["indicator_elite"] = false,
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.1999969482422,
["side"] = 7,
},
["npc_colors"] = {
[134139] = {
false,
false,
"blue",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[134012] = {
false,
false,
"blue",
},
[207796] = {
true,
false,
"mediumpurple",
},
[129601] = {
false,
false,
"blueviolet",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[165471] = {
true,
false,
"blue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[161124] = {
false,
false,
"blue",
},
[200126] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
false,
false,
"mediumpurple",
},
[197697] = {
true,
false,
"fuchsia",
},
[132481] = {
false,
false,
"blue",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
false,
false,
"blue",
},
[197698] = {
true,
false,
"fuchsia",
},
[175576] = {
true,
false,
"fuchsia",
},
[208440] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
false,
false,
"white",
},
[130435] = {
false,
false,
"white",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[208698] = {
true,
false,
"fuchsia",
},
[142587] = {
false,
false,
"white",
},
[40634] = {
true,
false,
"deepskyblue",
},
[130436] = {
false,
false,
"blue",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[130437] = {
false,
false,
"fuchsia",
},
[192333] = {
true,
false,
"mediumpurple",
},
[178139] = {
true,
false,
"mediumpurple",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[134024] = {
false,
false,
"white",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[200137] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
false,
false,
"blue",
},
[99366] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[150142] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[134158] = {
false,
false,
"blue",
},
[172265] = {
true,
false,
"deepskyblue",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[65317] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[138254] = {
false,
false,
"fuchsia",
},
[101991] = {
true,
false,
"blue",
},
[134418] = {
false,
false,
"springgreen",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[180070] = {
true,
false,
"fuchsia",
},
[138255] = {
false,
false,
"blueviolet",
},
[198868] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[150276] = {
false,
false,
"white",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[135699] = {
false,
false,
"darkgreen",
},
[97197] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"deepskyblue",
},
[190686] = {
true,
false,
"blue",
},
[195929] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[170483] = {
true,
false,
"fuchsia",
},
[98285] = {
false,
false,
"blue",
},
[168949] = {
false,
false,
"white",
},
[190688] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[136470] = {
false,
false,
"springgreen",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[139284] = {
false,
false,
"springgreen",
},
[155908] = {
true,
false,
"fuchsia",
},
[129232] = {
false,
false,
"white",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[172021] = {
false,
false,
"white",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[174197] = {
true,
false,
"deepskyblue",
},
[162049] = {
false,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[134174] = {
false,
false,
"springgreen",
},
[202971] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[197985] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[83392] = {
false,
false,
"blue",
},
[178165] = {
true,
false,
"fuchsia",
},
[104300] = {
true,
false,
"deepskyblue",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[81283] = {
false,
false,
"deepskyblue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[198501] = {
true,
false,
"deepskyblue",
},
[45917] = {
true,
false,
"mediumpurple",
},
[162057] = {
true,
false,
"mediumpurple",
},
[150165] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[135204] = {
false,
false,
"springgreen",
},
[122972] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
false,
false,
"white",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[139425] = {
false,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[196202] = {
true,
false,
"blue",
},
[138019] = {
false,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[186740] = {
false,
false,
"blue",
},
[150168] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[180348] = {
true,
false,
"blue",
},
[100532] = {
true,
false,
"fuchsia",
},
[182778] = {
true,
false,
"fuchsia",
},
[165515] = {
false,
false,
"fuchsia",
},
[134058] = {
false,
false,
"yellow",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[173190] = {
true,
false,
"deepskyblue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[179841] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[153755] = {
false,
false,
"white",
},
[189816] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[139946] = {
false,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[132530] = {
false,
false,
"blue",
},
[191225] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[132532] = {
false,
false,
"fuchsia",
},
[139949] = {
false,
false,
"springgreen",
},
[130012] = {
false,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[135474] = {
true,
false,
"blue",
},
[179847] = {
true,
false,
"fuchsia",
},
[144298] = {
true,
false,
"blue",
},
[137521] = {
false,
false,
"fuchsia",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[196856] = {
true,
false,
"mediumpurple",
},
[211306] = {
false,
false,
"fuchsia",
},
[96574] = {
true,
false,
"mediumpurple",
},
[198263] = {
true,
false,
"mediumpurple",
},
[191230] = {
true,
false,
"fuchsia",
},
[165911] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"blue",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[135989] = {
false,
false,
"blue",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[179852] = {
true,
false,
"blue",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[177807] = {
false,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"blue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[132491] = {
false,
false,
"fuchsia",
},
[190340] = {
true,
false,
"blue",
},
[150251] = {
true,
false,
"blue",
},
[204918] = {
true,
false,
"blue",
},
[195135] = {
true,
false,
"fuchsia",
},
[178171] = {
true,
false,
"fuchsia",
},
[115406] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[114319] = {
true,
false,
"blue",
},
[184331] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[136735] = {
false,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[155432] = {
false,
false,
"blueviolet",
},
[199549] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[84400] = {
true,
false,
"mediumpurple",
},
[185032] = {
true,
false,
"mediumpurple",
},
[155433] = {
false,
false,
"blueviolet",
},
[213806] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[127879] = {
false,
false,
"blue",
},
[195842] = {
true,
false,
"deepskyblue",
},
[174210] = {
true,
false,
"deepskyblue",
},
[104251] = {
true,
false,
"fuchsia",
},
[127106] = {
true,
false,
"fuchsia",
},
[155434] = {
false,
false,
"blueviolet",
},
[193373] = {
true,
false,
"fuchsia",
},
[101438] = {
true,
false,
"blue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[193760] = {
true,
false,
"mediumpurple",
},
[205384] = {
true,
false,
"deepskyblue",
},
[131587] = {
true,
false,
"mediumpurple",
},
[162691] = {
false,
false,
"blue",
},
[186125] = {
true,
false,
"deepskyblue",
},
[131849] = {
false,
false,
"fuchsia",
},
[184335] = {
true,
false,
"deepskyblue",
},
[180429] = {
true,
false,
"mediumpurple",
},
[206074] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"blue",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[127497] = {
false,
false,
"blue",
},
[189707] = {
false,
false,
"white",
},
[176974] = {
true,
false,
"fuchsia",
},
[179733] = {
true,
false,
"fuchsia",
},
[162039] = {
true,
false,
"deepskyblue",
},
[171805] = {
true,
false,
"blue",
},
[98368] = {
true,
false,
"mediumpurple",
},
[168992] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[188026] = {
true,
false,
"fuchsia",
},
[208193] = {
true,
false,
"blue",
},
[196102] = {
false,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[175992] = {
true,
false,
"fuchsia",
},
[150253] = {
true,
false,
"mediumpurple",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"mediumpurple",
},
[173044] = {
true,
false,
"deepskyblue",
},
[190207] = {
true,
false,
"deepskyblue",
},
[135235] = {
false,
false,
"white",
},
[82579] = {
true,
false,
"deepskyblue",
},
[167967] = {
true,
false,
"blue",
},
[196203] = {
true,
false,
"deepskyblue",
},
[165414] = {
true,
false,
"deepskyblue",
},
[156157] = {
true,
false,
"blue",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[134390] = {
false,
false,
"blueviolet",
},
[200836] = {
true,
false,
"mediumpurple",
},
[131585] = {
false,
false,
"darkgreen",
},
[175517] = {
true,
false,
"blue",
},
[100531] = {
true,
false,
"mediumpurple",
},
[98810] = {
true,
false,
"mediumpurple",
},
[194315] = {
true,
false,
"mediumpurple",
},
[134150] = {
false,
false,
"yellow",
},
[187969] = {
true,
false,
"blue",
},
[135365] = {
true,
false,
"fuchsia",
},
[199233] = {
true,
false,
"mediumpurple",
},
[168942] = {
true,
false,
"blue",
},
[167965] = {
true,
false,
"blue",
},
[45912] = {
true,
false,
"deepskyblue",
},
[187155] = {
true,
false,
"blue",
},
[178392] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"mediumpurple",
},
[191847] = {
true,
false,
"deepskyblue",
},
[195851] = {
true,
false,
"blue",
},
[198326] = {
true,
false,
"mediumpurple",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[135239] = {
false,
false,
"white",
},
[150712] = {
false,
false,
"white",
},
[104278] = {
true,
false,
"fuchsia",
},
[127111] = {
true,
false,
"blue",
},
[201223] = {
true,
false,
"blue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[114544] = {
true,
false,
"fuchsia",
},
[136391] = {
false,
false,
"blue",
},
[115765] = {
true,
false,
"fuchsia",
},
[200840] = {
true,
false,
"mediumpurple",
},
[187154] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"fuchsia",
},
[156212] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"blue",
},
[151353] = {
false,
false,
"white",
},
[198870] = {
true,
false,
"blue",
},
[135241] = {
false,
false,
"fuchsia",
},
[214140] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[134602] = {
false,
false,
"blue",
},
[156213] = {
false,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"blue",
},
[114804] = {
true,
false,
"blue",
},
[128967] = {
false,
false,
"fuchsia",
},
[199547] = {
true,
false,
"fuchsia",
},
[155830] = {
true,
false,
"deepskyblue",
},
[184023] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[165805] = {
true,
false,
"mediumpurple",
},
[182045] = {
true,
false,
"fuchsia",
},
[81432] = {
true,
false,
"deepskyblue",
},
[83892] = {
true,
false,
"deepskyblue",
},
[155831] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[115402] = {
false,
false,
"deepskyblue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
false,
false,
"white",
},
[101637] = {
true,
false,
"mediumpurple",
},
[100486] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"blue",
},
[59546] = {
true,
false,
"blue",
},
[127486] = {
false,
false,
"darkgreen",
},
[102788] = {
true,
false,
"blue",
},
[84520] = {
true,
false,
"mediumpurple",
},
[32666] = {
false,
false,
"blue",
},
[189464] = {
true,
false,
"blue",
},
[168109] = {
true,
false,
"deepskyblue",
},
[162099] = {
true,
false,
"fuchsia",
},
[168365] = {
false,
false,
"fuchsia",
},
[138187] = {
true,
false,
"fuchsia",
},
[197905] = {
true,
false,
"blue",
},
[134990] = {
false,
false,
"springgreen",
},
[130026] = {
false,
false,
"springgreen",
},
[135246] = {
false,
false,
"white",
},
[178630] = {
true,
false,
"deepskyblue",
},
[45704] = {
true,
false,
"dimgray",
},
[202969] = {
true,
false,
"fuchsia",
},
[96587] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"blue",
},
[197595] = {
true,
false,
"mediumpurple",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[180335] = {
true,
false,
"deepskyblue",
},
[176551] = {
true,
false,
"deepskyblue",
},
[135759] = {
false,
false,
"fuchsia",
},
[144071] = {
false,
false,
"springgreen",
},
[190362] = {
true,
false,
"blue",
},
[130027] = {
false,
false,
"fuchsia",
},
[129548] = {
false,
false,
"blueviolet",
},
[126919] = {
true,
false,
"deepskyblue",
},
[76446] = {
true,
false,
"blue",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[196576] = {
true,
false,
"blue",
},
[130025] = {
false,
false,
"blue",
},
[92610] = {
true,
false,
"fuchsia",
},
[165556] = {
true,
false,
"fuchsia",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"blue",
},
[115642] = {
true,
false,
"blue",
},
[81819] = {
true,
false,
"blue",
},
[134994] = {
false,
false,
"fuchsia",
},
[150160] = {
true,
false,
"mediumpurple",
},
[163894] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[114334] = {
true,
false,
"mediumpurple",
},
[100527] = {
true,
false,
"deepskyblue",
},
[131670] = {
false,
false,
"blue",
},
[152898] = {
true,
false,
"fuchsia",
},
[163128] = {
true,
false,
"deepskyblue",
},
[169905] = {
true,
false,
"blue",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[188703] = {
true,
false,
"yellow",
},
[114266] = {
true,
false,
"deepskyblue",
},
[206066] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[188673] = {
true,
false,
"mediumpurple",
},
[186658] = {
true,
false,
"deepskyblue",
},
[135764] = {
false,
false,
"blueviolet",
},
[206351] = {
true,
false,
"deepskyblue",
},
[162040] = {
true,
false,
"fuchsia",
},
[95771] = {
true,
false,
"blue",
},
[130661] = {
false,
false,
"springgreen",
},
[199124] = {
true,
false,
"deepskyblue",
},
[115640] = {
true,
false,
"fuchsia",
},
[115388] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"deepskyblue",
},
[197145] = {
true,
false,
"mediumpurple",
},
[199703] = {
true,
false,
"fuchsia",
},
[198424] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"deepskyblue",
},
[164921] = {
true,
false,
"deepskyblue",
},
[205622] = {
true,
false,
"mediumpurple",
},
[156226] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"mediumpurple",
},
[197146] = {
true,
false,
"mediumpurple",
},
[188067] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"blue",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
false,
false,
"blue",
},
[45930] = {
true,
false,
"fuchsia",
},
[136643] = {
false,
false,
"blue",
},
[133593] = {
false,
false,
"springgreen",
},
[75979] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"deepskyblue",
},
[114542] = {
true,
false,
"blue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[192800] = {
true,
false,
"blue",
},
[196115] = {
true,
false,
"blue",
},
[130400] = {
true,
false,
"mediumpurple",
},
[141285] = {
false,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[131677] = {
true,
false,
"fuchsia",
},
[152009] = {
false,
false,
"white",
},
[197149] = {
true,
false,
"deepskyblue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[113537] = {
true,
false,
"mediumpurple",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[80936] = {
true,
false,
"blue",
},
[152905] = {
true,
false,
"fuchsia",
},
[136665] = {
false,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
false,
false,
"blue",
},
[180015] = {
true,
false,
"blue",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[134364] = {
false,
false,
"springgreen",
},
[166589] = {
true,
false,
"fuchsia",
},
[206230] = {
true,
false,
"fuchsia",
},
[141284] = {
false,
false,
"springgreen",
},
[163520] = {
true,
false,
"mediumpurple",
},
[114624] = {
true,
false,
"mediumpurple",
},
[197535] = {
true,
false,
"fuchsia",
},
[164557] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[116549] = {
true,
false,
"deepskyblue",
},
[198047] = {
true,
false,
"blue",
},
[139800] = {
false,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[169927] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
false,
"blue",
},
[141283] = {
false,
false,
"blue",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[41139] = {
true,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[59553] = {
true,
false,
"mediumpurple",
},
[156244] = {
true,
false,
"mediumpurple",
},
[192934] = {
true,
false,
"blue",
},
[194990] = {
true,
false,
"deepskyblue",
},
[133482] = {
false,
false,
"blueviolet",
},
[135007] = {
false,
false,
"blue",
},
[185262] = {
false,
false,
"blue",
},
[135263] = {
false,
false,
"blueviolet",
},
[167113] = {
true,
false,
"blue",
},
[166301] = {
true,
false,
"fuchsia",
},
[84767] = {
true,
false,
"mediumpurple",
},
[190377] = {
true,
false,
"blue",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[176959] = {
true,
false,
"deepskyblue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[205212] = {
true,
false,
"fuchsia",
},
[195877] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[131812] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[76104] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[168007] = {
true,
false,
"blue",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"blue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[131666] = {
true,
false,
"blue",
},
[84957] = {
true,
false,
"fuchsia",
},
[129547] = {
false,
false,
"mediumpurple",
},
[190342] = {
true,
false,
"fuchsia",
},
[104270] = {
true,
false,
"mediumpurple",
},
[196263] = {
true,
false,
"deepskyblue",
},
[205727] = {
true,
false,
"blue",
},
[190381] = {
true,
false,
"fuchsia",
},
[197671] = {
true,
false,
"blue",
},
[138465] = {
false,
false,
"blue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[176573] = {
true,
false,
"fuchsia",
},
[127799] = {
false,
false,
"blue",
},
[80805] = {
true,
false,
"mediumpurple",
},
[170690] = {
true,
false,
"blue",
},
[167876] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[197799] = {
true,
false,
"deepskyblue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[59552] = {
true,
false,
"blue",
},
[167493] = {
false,
false,
"blue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[130485] = {
false,
false,
"white",
},
[127480] = {
false,
false,
"fuchsia",
},
[196671] = {
true,
false,
"mediumpurple",
},
[186220] = {
true,
false,
"deepskyblue",
},
[129370] = {
false,
false,
"springgreen",
},
[175550] = {
true,
false,
"fuchsia",
},
[134629] = {
false,
false,
"blue",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
false,
false,
"blue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[151127] = {
true,
false,
"fuchsia",
},
[131818] = {
false,
false,
"yellow",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[203812] = {
true,
false,
"fuchsia",
},
[82597] = {
true,
false,
"fuchsia",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[189235] = {
true,
false,
"mediumpurple",
},
[80935] = {
true,
false,
"deepskyblue",
},
[186226] = {
true,
false,
"fuchsia",
},
[169159] = {
true,
false,
"gold",
},
[131436] = {
true,
false,
"mediumpurple",
},
[87329] = {
false,
false,
"blue",
},
[155221] = {
true,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"blue",
},
[137830] = {
true,
false,
"blue",
},
[95769] = {
true,
false,
"deepskyblue",
},
[127482] = {
false,
false,
"blue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[155094] = {
false,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[131821] = {
true,
false,
"blue",
},
[169861] = {
true,
false,
"blue",
},
[199595] = {
true,
false,
"mediumpurple",
},
[167612] = {
true,
false,
"blue",
},
[185529] = {
true,
false,
"fuchsia",
},
[174773] = {
false,
false,
"blue",
},
[128434] = {
true,
false,
"blue",
},
[199325] = {
true,
false,
"deepskyblue",
},
[197406] = {
true,
false,
"fuchsia",
},
[130488] = {
false,
false,
"fuchsia",
},
[129529] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[153285] = {
false,
false,
"gold",
},
[189878] = {
true,
false,
"yellow",
},
[171376] = {
true,
false,
"blue",
},
[205623] = {
true,
false,
"mediumpurple",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[167963] = {
true,
false,
"blue",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[195696] = {
true,
false,
"fuchsia",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[127484] = {
false,
false,
"blueviolet",
},
[129367] = {
false,
false,
"springgreen",
},
[151773] = {
true,
false,
"blue",
},
[192796] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"mediumpurple",
},
[180864] = {
true,
false,
"fuchsia",
},
[190174] = {
true,
false,
"fuchsia",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[98081] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[165763] = {
true,
false,
"deepskyblue",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[100485] = {
true,
false,
"mediumpurple",
},
[198577] = {
true,
false,
"blue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[139799] = {
false,
false,
"blue",
},
[162133] = {
true,
false,
"fuchsia",
},
[83765] = {
false,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[164563] = {
true,
false,
"blue",
},
[114634] = {
false,
false,
"white",
},
[190690] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[176521] = {
true,
false,
"blue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[193534] = {
false,
false,
"white",
},
[192789] = {
false,
false,
"blue",
},
[194487] = {
true,
false,
"blue",
},
[151649] = {
false,
false,
"white",
},
[165076] = {
true,
false,
"blue",
},
[131445] = {
false,
false,
"blue",
},
[129788] = {
true,
false,
"deepskyblue",
},
[194316] = {
true,
false,
"mediumpurple",
},
[129552] = {
true,
false,
"mediumpurple",
},
[183671] = {
true,
false,
"fuchsia",
},
[195930] = {
true,
false,
"mediumpurple",
},
[135846] = {
false,
false,
"blueviolet",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[161241] = {
false,
false,
"springgreen",
},
[115019] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[178008] = {
true,
false,
"yellow",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[81279] = {
false,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"blue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"blue",
},
[56792] = {
true,
false,
"fuchsia",
},
[189706] = {
true,
false,
"yellow",
},
[198503] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"mediumpurple",
},
[161243] = {
false,
false,
"blueviolet",
},
[115020] = {
true,
false,
"mediumpurple",
},
[173016] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[127488] = {
false,
false,
"springgreen",
},
[168318] = {
true,
false,
"mediumpurple",
},
[114317] = {
true,
false,
"deepskyblue",
},
[155824] = {
true,
false,
"blue",
},
[161244] = {
false,
false,
"fuchsia",
},
[136186] = {
false,
false,
"fuchsia",
},
[180432] = {
true,
false,
"blue",
},
[168594] = {
true,
false,
"mediumpurple",
},
[99358] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[183495] = {
true,
false,
"mediumpurple",
},
[170480] = {
true,
false,
"mediumpurple",
},
[214441] = {
true,
false,
"fuchsia",
},
[163458] = {
true,
false,
"deepskyblue",
},
[45915] = {
true,
false,
"mediumpurple",
},
[205618] = {
true,
false,
"mediumpurple",
},
[212673] = {
true,
false,
"fuchsia",
},
[83894] = {
true,
false,
"mediumpurple",
},
[154744] = {
true,
false,
"fuchsia",
},
[91000] = {
true,
false,
"mediumpurple",
},
[189555] = {
true,
false,
"deepskyblue",
},
[205363] = {
true,
false,
"deepskyblue",
},
[150297] = {
true,
false,
"deepskyblue",
},
[205619] = {
true,
false,
"mediumpurple",
},
[134137] = {
false,
false,
"springgreen",
},
[44404] = {
true,
false,
"deepskyblue",
},
[183497] = {
true,
false,
"blue",
},
[131850] = {
false,
false,
"springgreen",
},
[201288] = {
true,
false,
"fuchsia",
},
[141938] = {
false,
false,
"fuchsia",
},
[150250] = {
true,
false,
"deepskyblue",
},
[205620] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[151657] = {
false,
false,
"white",
},
[168153] = {
true,
false,
"fuchsia",
},
[137591] = {
false,
false,
"yellow",
},
[184301] = {
true,
false,
"deepskyblue",
},
[141939] = {
false,
false,
"blueviolet",
},
[80816] = {
true,
false,
"deepskyblue",
},
[198999] = {
false,
false,
"white",
},
},
["tocversion"] = 100200,
["aura_width"] = 19,
["indicator_extra_raidmark"] = false,
["auto_toggle_stacking"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
["extra_icon_caster_font"] = "Expressway",
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["aura_show_debuffs_personal"] = false,
["aura_timer_text_font"] = "Expressway",
["cast_statusbar_use_fade_effects"] = false,
["extra_icon_timer_font"] = "Expressway",
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["not_affecting_combat_alpha"] = 1,
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["target_shady_combat_only"] = false,
["non_targeted_alpha_enabled"] = true,
["first_run3"] = true,
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.1999969482422,
["target_indicator"] = "Double Arrows",
["show_healthbars_on_not_attackable"] = true,
["indicator_rare"] = false,
["aura2_grow_direction"] = 3,
["target_highlight_alpha"] = 0.34999999403954,
["range_check_cast_bar_alpha"] = 0.89999997615814,
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["target_highlight"] = false,
["target_shady_alpha"] = 0,
["pet_width_scale"] = 0.99999994039536,
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["ghost_auras"] = {
["enabled"] = true,
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_grow_direction"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateOverlapH"] = "0.75",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "0",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["nameplatePersonalShowInCombat"] = "0",
["nameplateShowAll"] = "1",
["nameplateShowOnlyNames"] = "1",
["nameplateShowFriends"] = "1",
["nameplateMotion"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateMinScale"] = "1",
["nameplateSelfAlpha"] = "0.89999997615814",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.37",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.5",
["NamePlateHorizontalScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelfTopInset"] = "0.57",
["SoftTargetIconGameObject"] = "1",
},
["first_run2"] = true,
["show_health_prediction"] = false,
["login_counter"] = 49377,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
80,
1,
},
["aura_timer_text_size"] = 9,
["target_highlight_height"] = 15,
["hover_highlight_alpha"] = 0.5,
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["extra_icon_auras_mine"] = {
["Violent Detonation"] = false,
["209859"] = false,
["Plague Bomb"] = false,
["Serrated Bone Spike"] = true,
},
["bossmod_aura_height"] = 32.105155944824,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1700351221,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = -13828,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 378,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
},
["Prio"] = 99,
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1696897853,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 549,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189729",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"164558",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["outline"] = true,
["nameplateColor"] = {
0.86666666666667,
0.43529411764706,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700351235,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["Icon"] = -14046,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 917,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["Enabled"] = true,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Prio"] = 99,
["Name"] = "Spiteful/Fixate Name&Glow",
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["NpcNames"] = {
"174773",
"164702",
"166251",
"165913",
"167898",
"56792",
"194745",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700785512,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["Icon"] = 413591,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 324,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
},
["Prio"] = 99,
["Name"] = "Pandemic Glow (Pixel)",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1700791397,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 1019,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
268030,
257784,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
211464,
215433,
371983,
373405,
391599,
387627,
375653,
388392,
387862,
392457,
396812,
383823,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
387615,
152818,
225100,
210261,
212784,
392486,
397889,
395859,
385331,
388804,
156718,
398206,
106856,
106864,
397394,
367500,
377488,
377612,
385574,
215204,
212773,
397382,
257426,
265540,
265542,
278961,
403978,
403671,
257397,
278755,
413044,
265511,
183528,
193803,
193585,
410870,
87779,
374045,
374699,
377950,
385029,
373897,
378282,
384161,
369675,
369465,
369365,
411302,
274400,
400296,
405433,
408805,
418200,
411300,
412378,
412233,
407124,
415304,
412012,
421029,
421031,
420525,
425816,
265368,
264390,
264407,
253583,
252781,
255041,
256849,
200630,
204243,
168082,
427459,
164965,
164887,
169839,
200345,
76813,
429176,
76820,
200248,
225562,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["Prio"] = 99,
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Time"] = 1696897854,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["Icon"] = 135801,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 190,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Author"] = "Nephuhlim-Illidan",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
228287,
295311,
391191,
},
["Prio"] = 99,
["Name"] = "Change Color on Debuff",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1701062549,
["url"] = "https://wago.io/XPNrgiHqw/2",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["Icon"] = 644389,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 125,
["semver"] = "1.1.0",
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Hide Nameplate",
["PlaterCore"] = 1,
["version"] = 2,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["Options"] = {
},
["NpcNames"] = {
"167966",
"199220",
"199916",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {40}, -- Larodar\n        [204931] = {70, 25}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1700793647,
["url"] = "https://wago.io/miabQpRfX/10",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {40}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 574,
["semver"] = "1.0.9",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Health Markers [D]",
["PlaterCore"] = 1,
["version"] = 10,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
},
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1700351230,
["url"] = "https://wago.io/8_ULM1VxI/7",
["Temp_ConstructorCode"] = "function()\nend",
["Icon"] = 298642,
["Temp_OnHideCode"] = "function()\nend",
["Enabled"] = true,
["Revision"] = 179,
["semver"] = "1.0.6",
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Incorporeal",
["PlaterCore"] = 1,
["version"] = 7,
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Debuffed Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Casting Scale",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["NpcNames"] = {
"204560",
},
},
},
["aura_stack_font"] = "Expressway",
["patch_version"] = 35,
["blizzard_nameplate_font"] = "Expressway",
["range_check_in_range_or_target_alpha"] = 1,
["range_check_buffs_alpha"] = 0.89999997615814,
["version"] = 96,
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["number_region_first_run"] = true,
["target_shady_enabled"] = false,
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["aura_tracker"] = {
["debuff_banned"] = {
["294934"] = true,
["353354"] = true,
["324260"] = true,
["391568"] = true,
["352534"] = true,
["6343"] = true,
["403391"] = true,
["392388"] = true,
["389788"] = false,
["295367"] = true,
["331653"] = true,
["356372"] = false,
["331016"] = false,
["394453"] = false,
["394021"] = true,
["420144"] = true,
["358379"] = true,
["204242"] = true,
["294909"] = true,
["406770"] = true,
["273836"] = true,
["356329"] = true,
["354052"] = true,
["314113"] = true,
["169623"] = true,
["286581"] = true,
["281242"] = true,
["206760"] = true,
["394328"] = true,
["279416"] = true,
["373281"] = false,
["360277"] = true,
["256148"] = true,
["5760"] = true,
["345466"] = true,
["255909"] = true,
["321330"] = true,
},
["buff_banned"] = {
["343553"] = true,
["318486"] = true,
["323961"] = true,
["333553"] = true,
["216777"] = true,
["327416"] = false,
["317602"] = true,
["396106"] = true,
["302564"] = true,
["417039"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["333575"] = true,
["396109"] = true,
["396113"] = true,
["422067"] = false,
["284882"] = true,
["333579"] = true,
["209746"] = true,
["268710"] = true,
["236502"] = true,
["61573"] = true,
["206150"] = true,
["311571"] = true,
["284471"] = true,
["5760"] = true,
["286145"] = true,
["343613"] = false,
["266499"] = true,
["396098"] = true,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["buff_tracked"] = {
["227931"] = true,
["365338"] = true,
["389808"] = true,
["343502"] = false,
["297133"] = true,
["385528"] = true,
["209859"] = true,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["338510"] = false,
},
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
},
["aura_breakline_space"] = 1,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.100000023841858,
},
},
["health_cutoff_upper"] = false,
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607843137255,
0.2078431372549,
},
},
["pet_height_scale"] = 0.99999994039536,
["dps"] = {
["colors"] = {
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
},
},
["aura_width2"] = 19,
["health_cutoff"] = false,
["script_auto_imported"] = {
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Unit - Show Energy"] = 11,
["Blink by Time Left"] = 1,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Explosion Affix M+"] = 14,
["Unit - Health Markers"] = 12,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Add - Explode on Die [P]"] = 1,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Stop Casting"] = 4,
["Auto Set Skull"] = 11,
["Countdown"] = 11,
["Color Change"] = 1,
["Spiteful Affix"] = 3,
["Cast - Quick Flash"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Tank Interrupt"] = 12,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Unit - Important"] = 11,
["Aura - Buff Alert"] = 15,
["Cast - Very Important"] = 15,
["Fixate On You"] = 11,
},
["resources"] = {
["scale"] = 0.75,
["y_offset"] = 51.589996337891,
["y_offset_target"] = 0,
},
["indicator_pet"] = false,
["range_check_enabled"] = false,
["auras_per_row_amount"] = 4,
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 10,
["auto_toggle_enemy"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
},
["Default"] = {
["target_shady_combat_only"] = false,
["aura_breakline_space"] = 1,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1724735990,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 413591,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Revision"] = 361,
["semver"] = "",
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["version"] = -1,
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["Name"] = "Pandemic Glow - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
980,
172,
445468,
445465,
316099,
383346,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
["useCastbarColor"] = false,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1724883503,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Revision"] = 1170,
["semver"] = "",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Name"] = "Important Casts - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
268030,
257784,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
211464,
215433,
371983,
373405,
391599,
387627,
375653,
388392,
387862,
392457,
396812,
383823,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
387615,
152818,
225100,
210261,
212784,
392486,
397889,
395859,
385331,
388804,
156718,
398206,
106856,
106864,
397394,
367500,
377488,
377612,
385574,
215204,
212773,
397382,
257426,
265540,
265542,
278961,
403978,
403671,
257397,
278755,
413044,
265511,
183528,
193803,
193585,
410870,
87779,
374045,
374699,
385029,
373897,
378282,
384161,
369675,
369465,
369365,
411302,
274400,
400296,
405433,
408805,
411994,
413607,
412922,
417481,
418200,
411300,
412378,
412233,
407124,
415304,
412012,
421029,
421031,
420525,
425816,
265368,
264390,
264407,
263959,
253583,
252781,
255041,
256849,
200630,
204243,
201399,
168082,
427459,
164965,
164887,
169839,
200345,
76813,
429176,
76820,
200248,
225562,
436841,
334748,
324293,
434802,
322938,
256957,
275826,
446700,
257169,
272571,
449455,
429109,
443430,
451871,
76711,
338353,
432967,
433841,
452162,
431309,
450756,
431333,
451097,
462508,
429428,
407120,
386024,
444743,
427609,
432959,
424420,
440687,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
},
{
["ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 60 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n    }\n    \n    local darkflameCleft = {\n        [210797] = { 45 }, --The Darkness\n    }\n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 66, 33 }, -- So'azmi\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
["indicatorAlpha"] = 0.75,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1724883457,
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
"189729",
"164929",
"224249",
"219984",
"211087",
"129208",
"164517",
"40320",
"207940",
"213937",
"210797",
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 744,
["semver"] = "",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["version"] = -1,
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Health Markers - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (_, _, _, envTable, scriptTable)\n    \n    \n    --TWW Dungeons\n    \n    local cityOfThreads = {\n        [219984] = { 50 }, --Xeph'itik\n    }\n    \n    local dawnbreaker = {\n        [211087] = { 50 }, --Speaker Shadowcrown\n        [213937] = { 60 }, --Rasha'nan\n    }\n    \n    local prioryOfTheSacredFlame = {\n        [207940] = { 50 }, --Prioress Murrpray\n    }\n    \n    local darkflameCleft = {\n        [210797] = { 45 }, --The Darkness\n    }\n    \n    --DF Dungeons\n    \n    local dawnOfTheInfinite = {\n        [207638] = { 80 }, -- Blight of Galakrond\n        [207639] = { 80 }, -- Blight of Galakrond\n        [198997] = { 80 }, -- Blight of Galakrond\n        [201792] = { 50 }, -- Ahnzon\n        [199000] = { 20 }, -- Deios\n        [198933] = { 90, 85 }, -- Iridikron\n    }\n    \n    local rubyLifePools = {\n        [190485] = { 50 }, -- Stormvein\n        [190484] = { 50 }, -- Kyrakka\n        [193435] = { 50 }, -- Kyrakka\n        [188252] = { 75, 45 }, -- Melidrussa Chillworn\n        [197697] = { 50 }, -- Flamegullet\n    }\n    \n    local azureVault = {\n        [186738] = { 75, 50, 25 }, -- Umbrelskul\n    }\n    \n    local brackenhideHollow = {\n        [186125] = { 15 }, -- Tricktotem\n        [186122] = { 15 }, -- Rira Hackclaw\n        [186124] = { 15 }, -- Gashtooth\n        [185534] = { 15 }, -- Bonebolt Hunter\n        [186206] = { 15 }, -- Cruel Bonecrusher\n        [185508] = { 15 }, -- Claw Fighter\n        [185528] = { 15 }, -- Trickclaw Mystic\n        [186121] = { 4 }, -- Decatriarch Wratheye\n        [186227] = { 20 }, -- Monstrous Decay\n    }\n    \n    local neltharus = {\n        [194816] = { 10 }, -- Forgewrought Monstrosity\n    }\n    \n    local hallsOfInfusion = {\n        [189719] = { 15 }, -- Watcher Irideus\n        [190407] = { 20 }, -- Aqua Rager\n        [189729] = { 60 }, -- Primal Tsunami\n    }\n    \n    local nokhudOffensive = {\n        [186151] = { 60 }, --Balakar Khan\n    }\n    \n    local uldaman = {\n        [184020] = { 40 }, -- Hulking Berserker\n        [184580] = { 10 }, -- Olaf\n        [184581] = { 10 }, -- Baelog\n        [184582] = { 10 }, -- Eric \"The Swift\"\n        [184125] = { 1 }, -- Chrono-Lord Deios\n    }\n    \n    --SL Dungeons\n    \n    local theaterOfPain = {\n        [164451] = { 40 }, -- Dessia the Decapitator\n        [164463] = { 40 }, -- Paceran the Virulent\n        [164461] = { 40 }, -- Sathel the Accursed\n        [165946] = { 50 }, -- Mordretha\n    }\n    \n    local mistsOfTirnaScithe = {\n        [164501] = { 70, 40, 10 }, -- Mistcaller\n        [164926] = { 50 }, --Drust Boughbreaker\n        [164804] = { 20 }, -- Droman Oulfarran\n        [164517] = { 70, 40 }, --Tred'ova\n    }\n    \n    local plaguefall = {\n        [164267] = { 66, 33 }, -- Magrave Stradama\n        [164967] = { 66, 33 }, -- Doctor ickus\n        [169861] = { 66, 33 }, -- Ickor Bileflesh\n    }\n    \n    local hallsOfAtonement = {\n        [164218] = { 70, 40 }, --Lord Chamberlain\n    }\n    \n    local sanguineDepths = {\n        [162099] = { 50 }, -- General Kaal Boss fight\n    }\n    \n    local spiresOfAscension = {\n        [162061] = { 70, 30 }, --Devos\n    }\n    \n    local necroticWake = {\n        [163121] = { 70 }, -- Stitched Vanguard\n    }\n    \n    local deOtherSide = {\n        [164558] = { 80, 60, 40, 20 }, -- Hakkar the Soulflayer\n    }\n    \n    local tazaveshGambit = {\n        [177269] = { 40 }, -- So'leah\n    }\n    \n    local tazaveshStreets = {\n        [175806] = { 66, 33 }, -- So'azmi\n    }\n    \n    --BFA Dungeons\n    \n    local freehold = {\n        [126983] = { 60, 30 }, -- Harlan Sweete - Freehold\n        [126832] = { 75 }, -- Skycap'n Kragg - Freehold\n        [129699] = { 90, 70, 50, 30 }, -- Ludwig von Tortollan - Freehold\n    }\n    \n    local waycrest = {\n        [131527] = { 30 }, -- Lord Waycrest\n    }\n    \n    local siegeOfBoralus = {\n        [129208] = { 66, 33 }, -- Dread Captain Lockwood\n    }\n    \n    local motherlode = {\n        [133345] = { 20 }, -- Feckless Assistant\n    }\n    \n    local junkyard = {\n        [150276] = { 50 }, -- Heavy Scrapbot\n        [152009] = { 30 }, -- Malfunctioning Scrapbots\n        [144298] = { 30 }, -- Defense Bot Mk III (Workshop)\n    }\n    \n    local workshop = {\n        [144298] = { 30 }, -- Defense Bot Mk III (casts a shield)\n    }\n    \n    --Legion Dungeons\n    \n    local karazhanUpper = {\n        [114790] = { 66, 33 }, -- Viz'aduum\n    }\n    \n    local karazhanLower = {\n        [114261] = { 50 }, -- Toe Knee\n        [114260] = { 50 }, -- Mrrgria\n        [114265] = { 50 }, -- Gang Ruffian\n        [114783] = { 50 }, -- Reformed Maiden\n        [114312] = { 60 }, -- Moroes\n    }\n    \n    local hallsOfValor = {\n        [96574] = { 30 }, -- Stormforged Sentinel\n        [95674] = { 60.5 }, -- Fenryr P1\n        [94960] = { 10.5 }, -- Hymdall\n        [95676] = { 80, 5 }, -- Odyn\n    }\n    \n    local courtOfStars = {\n        [104215] = { 25 }, -- Patrol Captain Gerdo\n    }\n    \n    local neltharionsLair = {\n        [91005] = { 20 }, -- Naraxas\n    }\n    \n    local blackRookHold = {\n        [98542] = { 50 }, -- Amalgam of Souls\n        [98965] = { 20 }, -- Kur'talos Ravencrest\n    }\n    \n    local darkheartThicket = {\n        [99192] = { 50 }, -- Shade of Xavius\n    }\n    \n    --WoD Dungeons\n    \n    local grimrailDepot = {\n        [81236] = { 50 }, -- Grimrail Technician\n        [79545] = { 60 }, -- Nitrogg Thundertower\n        [77803] = { 20 }, -- Railmaster Rocketspark\n    }\n    \n    local ironDocks = {\n        [81297] = { 50 }, -- Dreadfang -> Fleshrender Nok'gar\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [76057] = { 20.5 }, -- Carrion Worm\n    }\n    \n    --MoP Dungeons\n    \n    local templeOfTheJadeSerpent = {\n        [59544] = { 50 }, --The Nodding Tiger\n        [56732] = { 70, 30 }, -- Liu Flameheart\n    }\n    \n    --Cata Dungeons\n    \n    local throneOfTheTides = {\n        [40586] = { 60, 30 }, -- Lady Naz'jar\n        [40825] = { 25 }, -- Erunak Stonespeaker\n    }\n    \n    local grimBatol = {\n        [224249] = { 50 }, --Twilight Lavabender\n        [40320] = { 50 }, --Valiona\n    }\n    \n    \n    --Raids \n    \n    local amirdrassil = {\n        [208445] = { 35 }, -- Larodar\n        [204931] = { 70 }, -- Fyrakk\n    }\n    \n    local aberrus = {\n        [201261] = { 80, 60, 40 }, -- Kazzara\n        [201773] = { 50 }, -- Moltannia (Eternal Blaze)\n        [201774] = { 50 }, -- Krozgoth (Essence of Shadow)\n        [201668] = { 60, 35 }, -- Neltharion\n        [200912] = { 50 }, -- Neldris, Experiment\n        [200913] = { 50 }, -- Thadrion, Experiment\n        [199659] = { 25 }, -- Warlord Kagni, Assault of the Zaqali\n        [201754] = { 65, 40 }, -- Sarkareth\n        [203230] = { 50 }, -- Dragonfire Golem, Zskarn\n    }\n    \n    local vault = {\n        [181378] = { 66, 33 }, -- Kurog Grimtotem\n        [194990] = { 50 }, -- Stormseeker Acolyte\n        [189492] = { 65 }, -- Raszageth\n    }\n    \n    local sepulcher = {\n        [181548] = { 40 }, -- Absolution: Prototype Pantheon\n        [181551] = { 40 }, -- Duty: Prototype Pantheon\n        [181546] = { 40 }, -- Renewal: Prototype Pantheon\n        [181549] = { 40 }, -- War: Prototype Pantheon\n        [183501] = { 75, 50 }, --Xymox\n        [180906] = { 78, 45 }, --Halondrus\n        [183671] = { 40 }, -- Monstrous Soul - Anduin\n        [185421] = { 15 }, -- The Jailer\n    }\n    \n    local sanctumOfDomination = {\n        [175730] = { 70, 40 }, -- Fatescribe Roh-Kalo\n        [176523] = { 70, 40 }, -- Painsmith\n        [175725] = { 66, 33 }, -- Eye of the Jailer\n        [176929] = { 60, 20 }, -- Remnant of Kel'Thuzad\n        [175732] = { 83, 50 }, -- Sylvanas Windrunner\n    }\n    \n    local nathria = {\n        [166969] = { 50 }, -- Council of Blood - Frieda\n        [166970] = { 50 }, -- Council of Blood - Stavros\n        [166971] = { 50 }, -- Council of Blood - Niklaus\n        [167406] = { 70.5, 37.5 }, -- Sire Denathrius\n        [173162] = { 66, 33 }, -- Lord Evershade\n    }\n    \n    local openWorld = {\n        [180013] = { 20 }, -- Escaped Wilderling, Shadowlands - Korthia\n        [179931] = { 80, 60 }, -- Relic Breaker krelva, Shadowlands - Korthia\n        [193532] = { 40 }, -- Bazual, The Dreaded Flame, Dragonflight\n    }\n    \n    local mageTower = {\n        [116410] = { 33 }, -- Karam Magespear\n    }\n    \n    envTable.lifePercent = {}\n    \n    local zones = {\n        darkflameCleft,\n        prioryOfTheSacredFlame,\n        cityOfThreads,\n        dawnbreaker,\n        rubyLifePools,\n        azureVault,\n        brackenhideHollow,\n        neltharus,\n        hallsOfInfusion,\n        nokhudOffensive,\n        uldaman,\n        theaterOfPain,\n        mistsOfTirnaScithe,\n        plaguefall,\n        hallsOfAtonement,\n        sanguineDepths,\n        spiresOfAscension,\n        necroticWake,\n        deOtherSide,\n        tazaveshGambit,\n        tazaveshStreets,\n        freehold,\n        waycrest,\n        siegeOfBoralus,\n        motherlode,\n        junkyard,\n        workshop,\n        karazhanUpper,\n        karazhanLower,\n        hallsOfValor,\n        courtOfStars,\n        neltharionsLair,\n        blackRookHold,\n        darkheartThicket,\n        grimrailDepot,\n        ironDocks,\n        shadowmoonBurialGrounds,\n        templeOfTheJadeSerpent,\n        throneOfTheTides,\n        grimBatol,\n        amirdrassil,\n        aberrus,\n        vault,\n        sepulcher,\n        sanctumOfDomination,\n        nathria,\n        openWorld,\n        mageTower,\n        dawnOfTheInfinite,\n    }\n    \n    for i = 1, #zones do\n        local zone = zones[i]\n        \n        for id, thresholds in pairs(zone) do\n            envTable.lifePercent[id] = thresholds\n        end\n    end\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        \n        if not markersTable then\n            return\n        end\n        \n        local unitLifePercent = envTable._HealthPercent / 100\n        \n        for _, percent in ipairs(markersTable) do\n            percent = percent / 100\n            if unitLifePercent > percent then\n                if not unitFrame.healthMarker then\n                    envTable.CreateMarker(unitFrame)\n                end\n                \n                unitFrame.healthMarker:Show()\n                local width = unitFrame.healthBar:GetWidth()\n                unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width * percent, 0)\n                \n                local overlaySize = width * (unitLifePercent - percent)\n                unitFrame.healthOverlay:SetWidth(overlaySize)\n                unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                \n                unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                \n                unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                \n                return\n            end\n        end\n        \n        if unitFrame.healthMarker and unitFrame.healthMarker:IsShown() then\n            unitFrame.healthMarker:Hide()\n            unitFrame.healthOverlay:Hide()\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["dotsColor"] = {
0,
1,
0.0078431377187371,
1,
},
["outline"] = true,
["nameplateColor"] = {
0.8666667342186,
0.43529415130615,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["UID"] = "0x669cfe742d32773",
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1724735355,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"top\", unitFrame.HealthBar, -22, 15);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--MISC\n--174773 - Spiteful Shade\n\n--The War Within\n\n--220626 - Parasite\n\n--Ara Kara\n--218961 - Starved Crawler\n\n\n--Dragonflight\n\n--Brackenhide\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 - Curious Swoglet\n\n\n--Shadowlands\n\n--Halls of Atonement\n--165913 - Ghastly Parishioner\n--167898 - Manifestation of Envy\n\n--Necrotic Wake\n--164702 - Carrion Worm\n--167731 - Surgeons before 3rd boss\n\n\n--BFA\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Siege of Boredom\n--128649 - 1st boss\n\n\n--LEGION\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n\n--OLD SHIT\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Temple of the Jade Serpent\n--56792 - Figment of Doubt\n\n\n\n--87329 - test dummy \n\n\n",
["Icon"] = "4630415",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 1081,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.8666667342186,
0.43529415130615,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["NpcNames"] = {
"174773",
"164702",
"165913",
"167898",
"56792",
"194745",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
"Shattershell Scarab",
"220626",
"218961",
"165251",
"162689",
"167731",
"128649",
"144160",
"40357",
},
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate - Jundies",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.1999999284744,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1724883512,
["NpcNames"] = {
"214287",
},
["url"] = "",
["Icon"] = 132397,
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.2,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function()\nend",
["Revision"] = 311,
["semver"] = "",
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["version"] = -1,
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)        \nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Must Die - Jundies",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)        \nend",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function()\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1703478753,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 382,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
},
["Prio"] = 99,
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["Options"] = {
},
["Icon"] = -13828,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["outline"] = true,
["nameplateColor"] = {
0.86666666666667,
0.43529411764706,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700351235,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["Icon"] = -14046,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 917,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Outline",
["Value"] = true,
["Key"] = "outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["Enabled"] = true,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Prio"] = 99,
["Name"] = "Spiteful/Fixate Name&Glow",
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["NpcNames"] = {
"174773",
"164702",
"166251",
"165913",
"167898",
"56792",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700785512,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 324,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
},
["Prio"] = 99,
["Name"] = "Pandemic Glow (Pixel)",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["Options"] = {
},
["Icon"] = 413591,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["Time"] = 1726634534,
["NpcNames"] = {
"167966",
"176026",
"137458",
"96247",
"189363",
"187238",
"187231",
"191243",
"208994",
"194330",
"199916",
"102430",
"45704",
"204337",
"202789",
},
["url"] = "https://wago.io/XPNrgiHqw/3",
["Icon"] = 644389,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Revision"] = 181,
["semver"] = "1.2.0",
["Name"] = "Hide Nameplate",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["version"] = 3,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["Enabled"] = true,
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1723750905,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "https://wago.io/miabQpRfX/11",
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"186121",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"191736",
"201261",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"164451",
"164463",
"164461",
"165946",
"133007",
"198933",
"201792",
"207638",
"199000",
"209892",
"207639",
"198997",
"131527",
"131824",
"131825",
"131823",
"40586",
"99192",
"98810",
"98965",
"40825",
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 496,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["version"] = 11,
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = " [D] Add - Health Markers",
["semver"] = "1.0.10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of color names, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Name"] = "Health Bar Height Mod",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Color List by SpellId",
["Value"] = {
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Name"] = "Arrow Height",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 18",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Nameplate Color",
["Value"] = "Nameplate Color",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Rename Spell",
["Value"] = true,
["Key"] = "bRenameSpell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Name"] = "Spell Name",
["Value"] = "Heroic Leap",
["Key"] = "spellName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color",
["Value"] = false,
["Key"] = "bUseCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "In the box at right, add the spell id and the color.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of colors, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Key"] = "sparkWithScale",
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Height Scale",
},
{
["Type"] = 7,
["Name"] = "Spark Color",
["Value"] = {
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Name"] = "Trail Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Name"] = "Dots X Offset",
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Fraction"] = true,
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Max Alpha",
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Name"] = "Animation Speed",
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Name"] = "Option 8",
["Value"] = 0,
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Spell Name",
["Value"] = true,
["Key"] = "bChangeSpellName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Name"] = "New Spell Name",
["Value"] = "Frontal",
["Key"] = "spellNameText",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["npcs_renamed"] = {
[59555] = "Haunting",
[185685] = "CDR Relic",
[181551] = "Duty",
[190340] = "Defender",
[164967] = "Dickus",
[176394] = "Worker",
[175646] = "S.U.C.C. Master",
[180773] = "Trash Can",
[190381] = "Rotburst",
[168969] = "Green Slime",
[185680] = "Haste Relic",
[181546] = "Renewal",
[165946] = "Mordretha",
[185610] = "Simp",
[163891] = "Bad Slime",
[179334] = "Zo'dahh",
[184319] = "Custodian",
[176523] = "Painsmith",
[184910] = "Speed Boi",
[175663] = "Hill Brad",
[214350] = "Turned",
[181548] = "Absolution",
[114627] = "Terror",
[216340] = "Sentry",
[184911] = "CDR Boi",
[198047] = "Tempest",
[207796] = "Burning",
[114632] = "Attendant",
[194897] = "Stormsurge Totem",
[173044] = "Stitcher",
[180990] = "Jailer",
[184908] = "Haste Boi",
[175806] = "Sa'lami",
[182169] = "Lithium",
[164705] = "Haste Slime",
[70245] = "uh oh",
[197985] = "Flame",
[181549] = "War",
[185683] = "Speed Relic",
[144298] = "Mk III",
[181224] = "Da Sausage",
[192333] = "Alpha",
},
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:1581",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateTargetBehindMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:1581",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:8624",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8681",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:1581",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:8636",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["SoftTargetNameplateInteract"] = "Interface/AddOns/Plater/options/Plater_O_Advanced.lua:217",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:1581",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1581",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["in the spotlight"] = {
227931,
312926,
},
["moonkin aura"] = {
209740,
209746,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["insidious chill"] = {
391566,
391568,
},
["freezing ice stone"] = {
402940,
403391,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["all-consuming spite"] = {
343553,
},
},
["url"] = "https://wago.io/ak3iS95aa/107",
["blizzard_nameplate_font_override_enabled"] = true,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "PlaterFocus",
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["npc_cache"] = {
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[227507] = {
"Sureki Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[213434] = {
"Sporbit",
"Fungal Folly",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[226484] = {
"Larva",
"The Dread Pit",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[478443] = {
"Mislaid Curiosity",
"Fungal Folly",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[451835] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[422154] = {
"Brann's Cozy Campfire",
"Mycomancer Cavern",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[218306] = {
"Scarab Captain Vul'akan",
"Nerub-ar Palace",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
"enUS",
},
[228030] = {
"Sir Finley Mrrgglton",
"Mycomancer Cavern",
"enUS",
},
[222145] = {
"Voracious Stagshell",
"Nerub-ar Palace",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[23795] = {
"Dark Iron Antagonist",
"Blackrock Depths",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[215756] = {
"Ascended Webwarden",
"Khaz Algar",
},
[8911] = {
"Fireguard Destroyer",
"Blackrock Depths",
"enUS",
},
[218315] = {
"Kaheti Sentry",
"Nerub-ar Palace",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[433945] = {
"Ancient Artifact",
"The Underkeep",
"enUS",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[218317] = {
"Woven Threadmancer",
"Nerub-ar Palace",
"enUS",
},
[224970] = {
"Caustic Bomber",
"Nerub-ar Palace",
"enUS",
},
[412967] = {
"Helm of Memories",
"Kriegval's Rest",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[421157] = {
"Arathi Torch Cache",
"Earthcrawl Mines",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[223181] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[218320] = {
"Web Acolyte",
"Nerub-ar Palace",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[223182] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[219856] = {
"Researcher Ven'kex",
"The Underkeep",
"enUS",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
"enUS",
},
[220368] = {
"Failed Batch",
"Cinderbrew Meadery",
"enUS",
},
[220624] = {
"Suspicious Niffen",
"Tak-Rethan Abyss",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Fungal Folly",
"enUS",
},
[39388] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[207320] = {
"Hero's Call Board",
"SMV Alliance Garrison Level 3",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[433961] = {
"Crate of Mussels",
"Mycomancer Cavern",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
"enUS",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Nerub-ar Palace",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[433967] = {
"Princess Pumpkin",
"Mycomancer Cavern",
"enUS",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[224731] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[222173] = {
"Invasive Undercrawler",
"The Dread Pit",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[217570] = {
"Speaker Halven",
"Nightfall Sanctum",
"enUS",
},
[222176] = {
"Glumtooth Bug-beater",
"The Dread Pit",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[223200] = {
"Blood Collector",
"Nerub-ar Palace",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[214502] = {
"The Bloodbound Horror",
"Nerub-ar Palace",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[221155] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[214503] = {
"Sikran",
"Nerub-ar Palace",
"enUS",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[435020] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[221669] = {
"Blight Swarmer",
"Nerub-ar Palace",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[128650] = {
"Chopper Redhook",
"Siege of Boralus",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[221158] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[214506] = {
"Broodtwister Ovi'nax",
"Nerub-ar Palace",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[227300] = {
"Bile-Soaked Spawn",
"Nerub-ar Palace",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[214251] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[223207] = {
"Black Blood",
"Nerub-ar Palace",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[138002] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[220138] = {
"Regurgitating Monstrosity",
"Nerub-ar Palace",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[220139] = {
"Slithering Spew",
"Nerub-ar Palace",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[222700] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[222193] = {
"Hollow Frostweaver",
"Nerub-ar Palace",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[464729] = {
"|cff0070ddBountiful Heavy Trunk",
"The Dread Pit",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[220148] = {
"Gem Hoarder",
"The Dread Pit",
"enUS",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[222964] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[413049] = {
"Ironclaw",
"The Dread Pit",
"enUS",
},
[218103] = {
"Nerubian Lord",
"The Dread Pit",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
"enUS",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[222455] = {
"Black Blood Harvester",
"Nerub-ar Palace",
"enUS",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[353693] = {
"Creepy Doll",
"Mists of Tirna Scithe",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[222459] = {
"Congealing Mass",
"Nerub-ar Palace",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[26776] = {
"Direbrew Minion",
"Blackrock Depths",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[216320] = {
"The Coaglamation",
"City of Threads",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[9554] = {
"Hammered Patron",
"Blackrock Depths",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[464761] = {
"|cff0070ddBountiful Heavy Trunk",
"Fungal Folly",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
"enUS",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
"enUS",
},
[220164] = {
"Darkened Husk",
"The Dread Pit",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"The Dread Pit",
"enUS",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[216584] = {
"Nerubian Captain",
"The Dread Pit",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[456581] = {
"Egg Clutch",
"Mycomancer Cavern",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[222214] = {
"Frenzied Leaper",
"Nerub-ar Palace",
"enUS",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[246779] = {
"Font of Power",
"The Stonevault",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[434071] = {
"Ancient Artifact",
"Mycomancer Cavern",
"enUS",
},
[487805] = {
"",
"Earthcrawl Mines",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
"enUS",
},
[433563] = {
"Key Scroll",
"The Underkeep",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"The Sinkhole",
"enUS",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[220946] = {
"Venture Co. Honey Harvester",
"Cinderbrew Meadery",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"The Sinkhole",
"enUS",
},
[226065] = {
"Hollow Gigantobella",
"Mycomancer Cavern",
"enUS",
},
[164911] = {
"Thunderbrew Lager Keg",
"Blackrock Depths",
"enUS",
},
[455073] = {
"Feast of the Midnight Masquerade",
"Nerub-ar Palace",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[217371] = {
"Siege Webwing",
"The Spiral Weave",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[414657] = {
"Prototype Stomping Shoes Chest",
"The Waterworks",
"enUS",
},
[454062] = {
"Lush Mycobloom",
"Fungal Folly",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[454063] = {
"Mycobloom",
"Fungal Folly",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[229399] = {
"Blood Drainer",
"Nerub-ar Palace",
"enUS",
},
[225817] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[222235] = {
"Bloodthirsty Swarmer",
"Nerub-ar Palace",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[454070] = {
"Lush Mycobloom",
"Skittering Breach",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[454071] = {
"Mycobloom",
"Mycomancer Cavern",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[487855] = {
"",
"The Underkeep",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[215592] = {
"Siegehold Fortifier",
"The Spiral Weave",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[220710] = {
"Leviathan Manipulator",
"The Sinkhole",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[220199] = {
"Battle Scarab",
"City of Threads",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[210478] = {
"Infected Beast",
"Fungal Folly",
"enUS",
},
[454092] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[215596] = {
"Siegehold Armorsmith",
"The Spiral Weave",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
"enUS",
},
[220974] = {
"Bazaar Guard",
"Khaz Algar",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[194108] = {
"Summoning Portal",
"Nerub-ar Palace",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[423912] = {
"Bloodied Chest",
"Nightfall Sanctum",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[227373] = {
"Vicious Spiderling",
"The Dread Pit",
"enUS",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[23872] = {
"Coren Direbrew",
"Blackrock Depths",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[227632] = {
"Venombite",
"The Dread Pit",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[303147] = {
"Summoning Portal",
"Nerub-ar Palace",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[227635] = {
"Kas'dru",
"The Dread Pit",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
"enUS",
},
[226100] = {
"Kaheti Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216634] = {
"Swooping Spreader",
"Earthcrawl Mines",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[133990] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[226617] = {
"Snake",
"Fungal Folly",
"enUS",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"The Waterworks",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[219198] = {
"Ravenous Scarab",
"City of Threads",
"enUS",
},
[219454] = {
"Crazed Abomination",
"The Underkeep",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"Nerub-ar Palace",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[226620] = {
"Rat",
"The Dread Pit",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[219714] = {
"Ice Block",
"The Underkeep",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[222273] = {
"Sureki Silkbow",
"Nerub-ar Palace",
"enUS",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[222274] = {
"Sureki Darkblade",
"Nerub-ar Palace",
"enUS",
},
[222786] = {
"Parasitic Worm",
"Nerub-ar Palace",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[224066] = {
"Sureki Vanguard",
"Nerub-ar Palace",
"enUS",
},
[222275] = {
"Training Dummy",
"Nerub-ar Palace",
"enUS",
},
[226625] = {
"Cave Skipper",
"Fungal Folly",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[215111] = {
"Fungarian Sporeling",
"Fungal Folly",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"The Waterworks",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[218439] = {
"Sureki War Banner",
"Nerub-ar Palace",
"enUS",
},
[455685] = {
"DELVER'S CALL: Dread Pit",
"The Dread Pit",
"enUS",
},
[218440] = {
"Kaheti War Banner",
"Nerub-ar Palace",
"enUS",
},
[216649] = {
"Vx",
"City of Threads",
"enUS",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[219723] = {
"Royal Whisperer",
"Nerub-ar Palace",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[219725] = {
"Chitin Knight",
"Nerub-ar Palace",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[223822] = {
"Queen's Guard Re'zah",
"Nerub-ar Palace",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[218962] = {
"Bloated Pest",
"The Underkeep",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[208728] = {
"Treasure Wraith",
"The Underkeep",
"enUS",
},
[433705] = {
"Pheromone Bottle",
"The Underkeep",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[207450] = {
"Fungal Stabber",
"Fungal Folly",
"enUS",
},
[455713] = {
"",
"Kriegval's Rest",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[478744] = {
"Mislaid Curiosity",
"Skittering Breach",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[22885] = {
"Dragon Turtle",
"Black Temple",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Fungal Folly",
"enUS",
},
[222038] = {
"Shrillwing Hunter En'kilah",
"Nerub-ar Palace",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[204127] = {
"Kobold Taskfinder",
"The Waterworks",
"enUS",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[442414] = {
"Shimmering Crystal",
"The Underkeep",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"The Dread Pit",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[454188] = {
"",
"Nerub-ar Palace",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Fungal Folly",
"enUS",
},
[28067] = {
"Dark Iron Brewer",
"Blackrock Depths",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[219739] = {
"Infested Spawn",
"Nerub-ar Palace",
"enUS",
},
[222042] = {
"Shrillwing",
"Nerub-ar Palace",
"enUS",
},
[220507] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228951] = {
"Nerubian Stalker",
"Skittering Breach",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[219996] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[220508] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Dread Pit",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[203877] = {
"Kobold Thwacker",
"The Waterworks",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[228953] = {
"Skittering Intruder",
"The Dread Pit",
"enUS",
},
[129989] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[203878] = {
"Kobold Mystic",
"The Waterworks",
"enUS",
},
[220510] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[220256] = {
"Glumtooth Trapper",
"The Dread Pit",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[222981] = {
"Fatal Nightmare",
"Nerub-ar Palace",
"enUS",
},
[223839] = {
"Queen's Guard Ge'zah",
"Nerub-ar Palace",
"enUS",
},
[220001] = {
"Black Blood Ooze",
"The Underkeep",
"enUS",
},
[227532] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[219676] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[228954] = {
"Nerubian Marauder",
"Skittering Breach",
"enUS",
},
[221537] = {
"Unstable Experiment",
"Nerub-ar Palace",
"enUS",
},
[219746] = {
"Silken Tomb",
"Nerub-ar Palace",
"enUS",
},
[227874] = {
"Web Spreader",
"Skittering Breach",
"enUS",
},
[222305] = {
"Palace Guardian",
"Nerub-ar Palace",
"enUS",
},
[487815] = {
"DELVER'S CALL: The Waterworks",
"The Waterworks",
"enUS",
},
[485669] = {
"DELVER'S CALL: Fungal Folly",
"Fungal Folly",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[430521] = {
"Priceless Pumpkin",
"Mycomancer Cavern",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[220742] = {
"Guardian Tentacle",
"The Sinkhole",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[217268] = {
"Weeping Shade",
"Nightfall Sanctum",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[298935] = {
"Bench",
"Siege of Boralus",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[211816] = {
"Bazaar Sentry",
"Khaz Algar",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[214801] = {
"Skipper",
"Nerub-ar Palace",
"enUS",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[214338] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
"enUS",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[222564] = {
"Rupturing Ooze",
"Nerub-ar Palace",
"enUS",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Fungal Folly",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[215657] = {
"Ulgrax the Devourer",
"Nerub-ar Palace",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[215601] = {
"Siege Dominator",
"The Spiral Weave",
"enUS",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[165597] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[208239] = {
"Skittering Menace",
"The Dread Pit",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[218316] = {
"Kaheti Vanguard",
"Nerub-ar Palace",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
"enUS",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[219984] = {
"Xeph'itik",
"City of Threads",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
"enUS",
},
[219365] = {
"Strange Shore Crawler",
"Nightfall Sanctum",
"enUS",
},
[208241] = {
"Ankle Biter",
"The Dread Pit",
"enUS",
},
[455759] = {
"Hulking Raptorial Claw",
"The Underkeep",
"enUS",
},
[221035] = {
"Royal Scribe",
"Nerub-ar Palace",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[174466] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[129996] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"The Dread Pit",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[26822] = {
"Ursula Direbrew",
"Blackrock Depths",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[222572] = {
"Infesting Latcher",
"Nerub-ar Palace",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[174468] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[233282] = {
"Refreshment Table",
"Blackrock Depths",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[208244] = {
"Nerubian Threadmancer",
"The Dread Pit",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[174469] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[9545] = {
"Grim Patron",
"Blackrock Depths",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[414315] = {
"Mycobloom",
"Mycomancer Cavern",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[138247] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[229995] = {
"Sureki Arbalest",
"Nerub-ar Palace",
"enUS",
},
[487847] = {
"DELVER'S CALL: Nightfall Sanctum",
"Nightfall Sanctum",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[414317] = {
"Orbinid",
"The Sinkhole",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Kriegval's Rest",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[211061] = {
"Patreux",
"Fungal Folly",
"enUS",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[229918] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[211062] = {
"Bill",
"Fungal Folly",
"enUS",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[224368] = {
"Chamber Expeller",
"Nerub-ar Palace",
"enUS",
},
[414321] = {
"Lush Luredrop",
"The Dread Pit",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[211063] = {
"Fungal Podling",
"Fungal Folly",
"enUS",
},
[414322] = {
"Lush Orbinid",
"Fungal Folly",
"enUS",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[215040] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[440935] = {
"Explorers' League Rope",
"The Sinkhole",
"enUS",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[423190] = {
"Darkfire Brazier",
"Nightfall Sanctum",
"enUS",
},
[414325] = {
"Crystallized Mycobloom",
"Nightfall Sanctum",
"enUS",
},
[441927] = {
"",
"The Stonevault",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[442763] = {
"Soggy Chest",
"Nightfall Sanctum",
"enUS",
},
[220193] = {
"Sureki Venomblade",
"City of Threads",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[22876] = {
"Coilskar Soothsayer",
"Black Temple",
"enUS",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211119] = {
"Kasthrik",
"Fungal Folly",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[207740] = {
"Gnarled Lasher",
"Fungal Folly",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
"enUS",
},
[222581] = {
"Ruptured Ooze",
"Nerub-ar Palace",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[174477] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[217208] = {
"Zekvir",
"The Underkeep",
"enUS",
},
[414330] = {
"Altered Mycobloom",
"The Underkeep",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[414316] = {
"Luredrop",
"The Dread Pit",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[414331] = {
"Altered Luredrop",
"The Underkeep",
"enUS",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[423915] = {
"Stolen Relic",
"Nightfall Sanctum",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[216619] = {
"Orator Krix'vizk",
"City of Threads",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[441968] = {
"Portal to Dornogal",
"The Stonevault",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[414335] = {
"Irradiated Mycobloom",
"Fungal Folly",
"enUS",
},
[220976] = {
"Hollows Guard",
"Khaz Algar",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[22898] = {
"Supremus",
"Black Temple",
"enUS",
},
[85341] = {
"Lunarfall Raccoon",
"SMV Alliance Garrison Level 3",
"enUS",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[422916] = {
"Explorers' League Rope",
"Fungal Folly",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[434298] = {
"Light's Mantle",
"Skittering Breach",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[203951] = {
"Kobold Skullface",
"The Waterworks",
"enUS",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[214697] = {
"Chef Chewie",
"Cinderbrew Meadery",
"enUS",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[219006] = {
"Venommaster Nezarox",
"Nerub-ar Palace",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[223357] = {
"Sureki Conscript",
"City of Threads",
"enUS",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[455906] = {
"Box of Candy",
"Nerub-ar Palace",
"enUS",
},
[441966] = {
"Moldy Chest",
"Fungal Folly",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[185584] = {
"Naj'entus Spine",
"Black Temple",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[207482] = {
"Invasive Sporecap",
"Fungal Folly",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[409747] = {
"Construct Canker",
"Mycomancer Cavern",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[409748] = {
"Dormouse Ecila",
"Fungal Folly",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[220986] = {
"Hollows Sentry",
"Khaz Algar",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[443526] = {
"Supply Bag",
"Mycomancer Cavern",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[435013] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[433805] = {
"Repair Kit",
"The Dread Pit",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[220066] = {
"Scroll Bearer",
"The Underkeep",
"enUS",
},
[219810] = {
"Nerubian Ritualist",
"Skittering Breach",
"enUS",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[451396] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[220065] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[220551] = {
"Sureki Ironweaver",
"Nerub-ar Palace",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[443537] = {
"Lost Supplies",
"The Waterworks",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[174496] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[221986] = {
"Blood Horror",
"Nerub-ar Palace",
"enUS",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[174497] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[216205] = {
"Ravenous Spawn",
"Nerub-ar Palace",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[455824] = {
"Webbed Hookshot",
"Earthcrawl Mines",
"enUS",
},
[303148] = {
"Soulwell",
"Nerub-ar Palace",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[454010] = {
"Luredrop",
"Mycomancer Cavern",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[210269] = {
"Hired Muscle",
"Cinderbrew Meadery",
"enUS",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[174499] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[219022] = {
"Ascended Webfriar",
"The Underkeep",
"enUS",
},
[223372] = {
"Prime Slime",
"Nerub-ar Palace",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[449688] = {
"Molten Engine",
"Mycomancer Cavern",
"enUS",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[9499] = {
"Plugger Spazzring",
"Blackrock Depths",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Mycomancer Cavern",
"enUS",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[9547] = {
"Guzzling Patron",
"Blackrock Depths",
"enUS",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[446645] = {
"Stuffed Barrel",
"Kriegval's Rest",
"enUS",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[223318] = {
"Devoted Worshipper",
"Nerub-ar Palace",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[451834] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[220305] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[218447] = {
"Web Cocoon",
"Nerub-ar Palace",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[413874] = {
"Rich Bismuth",
"The Underkeep",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[217748] = {
"Nexus-Princess Ky'veza",
"Nerub-ar Palace",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[413877] = {
"Rich Ironclaw",
"Earthcrawl Mines",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[215755] = {
"Ascended Overseer",
"Khaz Algar",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[413880] = {
"Bismuth Seam",
"Tak-Rethan Abyss",
"enUS",
},
[227474] = {
"Ascension Researcher",
"The Underkeep",
"enUS",
},
[207459] = {
"Fungal Rotcaster",
"Fungal Folly",
"enUS",
},
[221845] = {
"Xur'khun the Defiled",
"Nerub-ar Palace",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[220310] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[220311] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[413883] = {
"Crystallized Bismuth",
"Mycomancer Cavern",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[413884] = {
"Weeping Bismuth",
"The Underkeep",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[413889] = {
"Camouflaged Bismuth",
"Mycomancer Cavern",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[449709] = {
"Bouncy Shroom",
"Fungal Folly",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
"enUS",
},
[219034] = {
"Web Marauder",
"The Underkeep",
"enUS",
},
[219724] = {
"Court Attendant",
"Nerub-ar Palace",
"enUS",
},
[465575] = {
"Bench",
"The Dawnbreaker",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
"enUS",
},
[220314] = {
"Bogpiper",
"Mycomancer Cavern",
"enUS",
},
[461482] = {
"|cffA335EEHidden Trove",
"Mycomancer Cavern",
"enUS",
},
[465560] = {
"Bench",
"The Dawnbreaker",
"enUS",
},
[219035] = {
"Deepwalker Guardian",
"The Underkeep",
"enUS",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[214504] = {
"Rasha'nan",
"Nerub-ar Palace",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"The Dread Pit",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[228044] = {
"Reno Jackson",
"Mycomancer Cavern",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[220572] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
"enUS",
},
[217485] = {
"Nightfall Lookout",
"Nightfall Sanctum",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[214673] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[26764] = {
"Ilsa Direbrew",
"Blackrock Depths",
"enUS",
},
[174500] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[220573] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[226459] = {
"Glowmite",
"Fungal Folly",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[174773] = {
"Spiteful Shade",
"Algeth'ar Academy",
"enUS",
},
[219682] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[220575] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[413590] = {
"|cffA335EEBountiful Coffer",
"Fungal Folly",
"enUS",
},
[215435] = {
"Foreseer Xix'amon",
"Nerub-ar Palace",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208245] = {
"Skittering Swarmer",
"The Dread Pit",
"enUS",
},
[220576] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[221344] = {
"Gloom Hatchling",
"Nerub-ar Palace",
"enUS",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[222368] = {
"Exalted Priest",
"Nerub-ar Palace",
"enUS",
},
[220577] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[445633] = {
"Challenger's Cache",
"The Dawnbreaker",
"enUS",
},
[444098] = {
"Webbed Chest",
"The Underkeep",
"enUS",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[222881] = {
"Royal Weaver",
"Nerub-ar Palace",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[445635] = {
"Challenger's Cache",
"Ara-Kara, City of Echoes",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
"enUS",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[445637] = {
"Challenger's Cache",
"City of Threads",
"enUS",
},
[214625] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[219045] = {
"Colossal Spider",
"Nerub-ar Palace",
"enUS",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[445639] = {
"Challenger's Cache",
"Mists of Tirna Scithe",
"enUS",
},
[218022] = {
"Speaker Davenruth",
"Nightfall Sanctum",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[229537] = {
"Void Emissary",
"Mists of Tirna Scithe",
"enUS",
},
[350967] = {
"Chair",
"The Necrotic Wake",
"enUS",
},
[445641] = {
"Challenger's Cache",
"The Necrotic Wake",
"enUS",
},
[435019] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[445642] = {
"Challenger's Cache",
"Siege of Boralus",
"enUS",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[445643] = {
"Challenger's Cache",
"Grim Batol",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[219683] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[216441] = {
"Pale Illusion",
"The Spiral Weave",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[413046] = {
"Bismuth",
"The Underkeep",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[229296] = {
"Orb of Ascendance",
"The Stonevault",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
"enUS",
},
[454093] = {
"|cff1EFF00Sturdy Chest",
"Fungal Folly",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[232380] = {
"Monument Base",
"SMV Alliance Garrison Level 3",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[22874] = {
"Coilskar Harpooner",
"Black Temple",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[217516] = {
"Nightfall Executor",
"Nightfall Sanctum",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[220504] = {
"Shadow Totem",
"Skittering Breach",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[435014] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[217517] = {
"Nightfall Hopestealer",
"Nightfall Sanctum",
"enUS",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"Kriegval's Rest",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[217518] = {
"Nightfall Inquisitor",
"Nightfall Sanctum",
"enUS",
},
[455694] = {
"DELVER'S CALL: Skittering Breach",
"Skittering Breach",
"enUS",
},
[216329] = {
"Congealed Droplet",
"City of Threads",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[222974] = {
"Hungry Scarab",
"City of Threads",
"enUS",
},
[225601] = {
"Mereldar Citizen",
"The Dawnbreaker",
"enUS",
},
[174465] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[170450] = {
"Chair",
"Blackrock Depths",
"enUS",
},
[217519] = {
"Nightfall Shadeguard",
"Nightfall Sanctum",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[353696] = {
"Pan Flute",
"Mists of Tirna Scithe",
"enUS",
},
[353694] = {
"Bed Time Stories",
"Mists of Tirna Scithe",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[225708] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[223541] = {
"Stolen Loader",
"Mycomancer Cavern",
"enUS",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[228361] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[216648] = {
"Nx",
"City of Threads",
"enUS",
},
[135258] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[215608] = {
"Siegehold Drone",
"The Spiral Weave",
"enUS",
},
[455897] = {
"Anub'arash Plushy",
"Nerub-ar Palace",
"enUS",
},
[129928] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[428434] = {
"Treasure Chest",
"The Spiral Weave",
"enUS",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[220509] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[355596] = {
"Anima Crystal Shard",
"The Necrotic Wake",
"enUS",
},
[220738] = {
"Leviathan Caller",
"The Sinkhole",
"enUS",
},
[214343] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
"enUS",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[455690] = {
"DELVER'S CALL: Mycomancer Cavern",
"Mycomancer Cavern",
"enUS",
},
[220741] = {
"Slamming Tentacle",
"The Sinkhole",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[433964] = {
"Sack of Spices",
"Mycomancer Cavern",
"enUS",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
"enUS",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[455720] = {
"DELVER'S CALL: Tak-Rethan Abyss",
"Tak-Rethan Abyss",
"enUS",
},
[456183] = {
"Explorers' League Rope",
"Tak-Rethan Abyss",
"enUS",
},
[223491] = {
"Flatcram Mite",
"Tak-Rethan Abyss",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
},
["extra_icon_timer_decimals"] = true,
["indicator_anchor"] = {
["x"] = 2,
["side"] = 6,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 0,
["indicator_worldboss"] = false,
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 8,
["range_check_health_bar_alpha"] = 0.84999996423721,
["aura_show_crowdcontrol"] = true,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["crowdcontrol"] = {
1,
1,
1,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["is_buff"] = {
nil,
0,
0,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.89999997615814,
["semver"] = "5.0.7",
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.1999969482422,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["auto_toggle_friendly"] = {
["arena"] = true,
},
["show_softinteract_icons"] = false,
["extra_icon_height"] = 20,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 21,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Extra Border"] = 2,
["Monk Statue"] = 2,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["minor_width_scale"] = 0.99999994039536,
["indicator_pet"] = false,
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.1999969482422,
["side"] = 7,
},
["aura_timer_text_font"] = "Expressway",
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["non_targeted_alpha_enabled"] = true,
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.1999969482422,
["target_indicator"] = "Double Arrows",
["range_check_cast_bar_alpha"] = 0.89999997615814,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "0",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "0",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["nameplateOverlapH"] = "0.75",
["nameplateSelfTopInset"] = "0.57",
["nameplateShowAll"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateShowFriends"] = "1",
["nameplateMotion"] = "1",
["nameplateOccludedAlphaMult"] = "0.5",
["nameplateMinScale"] = "1",
["nameplateShowEnemyTotems"] = "1",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.37",
["SoftTargetNameplateInteract"] = "0",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "0.89999997615814",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["SoftTargetIconGameObject"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["ShowClassColorInNameplate"] = "1",
},
["login_counter"] = 52349,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
80,
1,
},
["bossmod_aura_height"] = 32.105155944824,
["aura_stack_font"] = "Expressway",
["blizzard_nameplate_font"] = "Expressway",
["range_check_buffs_alpha"] = 0.89999997615814,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.1000000238419,
},
},
["auras_per_row_amount"] = 4,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
["blizzard_nameplate_large_font"] = "Expressway",
["hover_highlight_alpha"] = 0.5,
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
170,
},
["castbar_enabled"] = false,
["module_enabled"] = false,
["mana_incombat"] = {
168,
4,
},
["healthbar_color"] = {
0,
0,
0,
},
["cast_incombat"] = {
170,
},
["percent_text_anchor"] = {
["y"] = 1.2999992370605,
},
["power_percent_text_size"] = 8,
["spellname_text_font"] = "Expressway",
["mana"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["castbar_offset"] = -55,
["percent_text_size"] = 9,
["percent_text_font"] = "Expressway",
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["percent_text_color"] = {
1,
1,
1,
},
},
["friendlyplayer"] = {
["spellpercent_text_font"] = "Expressway",
["actorname_friend_color"] = {
0.70980392156863,
},
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["only_thename"] = true,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["percent_text_font"] = "Expressway",
["actorname_guild_color"] = {
0.49803921568627,
},
["percent_show_percent"] = false,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["actorname_text_size"] = 9,
},
["friendlynpc"] = {
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["cast"] = {
135,
7,
},
["spellpercent_text_anchor"] = {
["x"] = 1,
["side"] = 5,
},
["enabled"] = false,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2.5,
["side"] = 10,
},
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["big_actorname_text_font"] = "Expressway",
["percent_text_ooc"] = true,
["big_actortitle_text_size"] = 9,
["level_text_alpha"] = 0.29999998211861,
["percent_text_size"] = 10,
["percent_text_font"] = "Expressway",
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["percent_text_enabled"] = true,
["spellpercent_text_enabled"] = true,
["percent_show_health"] = true,
["health_incombat"] = {
135,
15,
},
},
["global_health_height"] = 16,
["global_health_width"] = 132,
["enemyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["cast"] = {
135,
7,
},
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Expressway",
["big_actortitle_text_size"] = 10,
["level_text_alpha"] = 0.29999998211861,
["percent_text_font"] = "Expressway",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["health_incombat"] = {
135,
15,
},
["level_text_enabled"] = false,
},
["enemynpc"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["big_actortitle_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["big_actorname_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["level_text_alpha"] = 0.29999998211861,
["percent_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["actorname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["spellname_text_size"] = 9,
["level_text_enabled"] = false,
},
},
["aura_y_offset"] = 1.5,
["indicator_elite"] = false,
["bossmod_aura_width"] = 32.621017456055,
["indicator_spec"] = false,
["border_thickness"] = 1.2000000476837,
["resources_settings"] = {
["global_settings"] = {
["anchor"] = {
["y"] = 9.7099990844727,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3674-0898468A"] = "SoulShards",
["Player-11-0E82EBCD"] = "ArcaneCharges",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-970-00B46921"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-5764-00018799"] = "ComboPoints",
["Player-4184-00C60F8C"] = "ArcaneCharges",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-4184-0021692E"] = "ComboPoints",
["Player-75-0EEA1257"] = "HolyPower",
["Player-3296-00945C33"] = "ComboPoints",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-970-006B99B8"] = "ComboPoints",
["Player-75-0F48ED55"] = "Runes",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-4184-00CB2DE1"] = "ComboPoints",
["Player-3678-0D44FD01"] = "ComboPoints",
["Player-75-0F3C7B2E"] = "ComboPoints",
["Player-970-00B2046C"] = "ComboPoints",
["Player-4184-008FBEFA"] = "ComboPoints",
["Player-75-0F40E777"] = "ArcaneCharges",
["Player-75-0EE8A760"] = "ComboPoints",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-75-0EE5568B"] = "Essence",
["Player-75-0EEA107B"] = "Chi",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-11-0E89E36C"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-970-00B49A85"] = "ComboPoints",
["Player-4184-00C7C500"] = "HolyPower",
["Player-4184-00C8CB6C"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["3"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
},
["indicator_scale"] = 0.99999994039536,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.49306830763817,
},
["castbar_icon_size"] = "same as castbar plus healthbar",
["npc_colors"] = {
[99358] = {
true,
false,
"fuchsia",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[205622] = {
true,
false,
"mediumpurple",
},
[207796] = {
true,
false,
"fuchsia",
},
[196671] = {
true,
false,
"mediumpurple",
},
[211121] = {
true,
false,
"mediumpurple",
},
[115407] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[229537] = {
true,
false,
"yellow",
},
[200126] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[212786] = {
true,
false,
"fuchsia",
},
[197697] = {
true,
false,
"fuchsia",
},
[212403] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"mediumpurple",
},
[197698] = {
true,
false,
"fuchsia",
},
[175576] = {
true,
false,
"fuchsia",
},
[208440] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
true,
false,
"blue",
},
[218671] = {
true,
false,
"deepskyblue",
},
[84400] = {
true,
false,
"mediumpurple",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[126919] = {
true,
false,
"deepskyblue",
},
[221102] = {
true,
false,
"deepskyblue",
},
[178392] = {
true,
false,
"fuchsia",
},
[40634] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[221103] = {
true,
false,
"mediumpurple",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[220976] = {
true,
false,
"fuchsia",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[212793] = {
true,
false,
"blue",
},
[178139] = {
true,
false,
"mediumpurple",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[210109] = {
true,
false,
"mediumpurple",
},
[212411] = {
true,
false,
"mediumpurple",
},
[184023] = {
true,
false,
"blue",
},
[178141] = {
true,
false,
"blue",
},
[211261] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[200137] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[208450] = {
true,
false,
"mediumpurple",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
true,
false,
"fuchsia",
},
[99366] = {
true,
false,
"blue",
},
[220599] = {
true,
false,
"deepskyblue",
},
[217658] = {
true,
false,
"mediumpurple",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[217531] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[205384] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[172265] = {
true,
false,
"deepskyblue",
},
[217533] = {
true,
false,
"fuchsia",
},
[220730] = {
true,
false,
"mediumpurple",
},
[177892] = {
true,
false,
"blue",
},
[220986] = {
true,
false,
"fuchsia",
},
[165872] = {
true,
false,
"fuchsia",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[213954] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[208456] = {
true,
false,
"blue",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[186208] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[171376] = {
true,
false,
"blue",
},
[97197] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"deepskyblue",
},
[198870] = {
true,
false,
"blue",
},
[195929] = {
true,
false,
"mediumpurple",
},
[221760] = {
true,
false,
"blue",
},
[223423] = {
true,
false,
"mediumpurple",
},
[195930] = {
true,
false,
"mediumpurple",
},
[170483] = {
true,
false,
"fuchsia",
},
[39392] = {
true,
false,
"mediumpurple",
},
[193373] = {
true,
false,
"fuchsia",
},
[190688] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[129552] = {
true,
false,
"mediumpurple",
},
[154758] = {
true,
false,
"fuchsia",
},
[193760] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[215755] = {
true,
false,
"fuchsia",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[180335] = {
true,
false,
"deepskyblue",
},
[202969] = {
true,
false,
"fuchsia",
},
[214350] = {
true,
false,
"deepskyblue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[202971] = {
true,
false,
"deepskyblue",
},
[225605] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[197985] = {
true,
false,
"deepskyblue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[217039] = {
true,
false,
"mediumpurple",
},
[225479] = {
true,
false,
"blue",
},
[104300] = {
true,
false,
"deepskyblue",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[198501] = {
true,
false,
"deepskyblue",
},
[45917] = {
true,
false,
"mediumpurple",
},
[220368] = {
true,
false,
"fuchsia",
},
[211289] = {
true,
false,
"fuchsia",
},
[150165] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[122972] = {
true,
false,
"deepskyblue",
},
[211290] = {
true,
false,
"mediumpurple",
},
[92538] = {
true,
false,
"fuchsia",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[218324] = {
true,
false,
"fuchsia",
},
[207199] = {
true,
false,
"blue",
},
[196202] = {
true,
false,
"blue",
},
[212826] = {
true,
false,
"mediumpurple",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[129367] = {
true,
false,
"blue",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[174210] = {
true,
false,
"deepskyblue",
},
[100532] = {
true,
false,
"fuchsia",
},
[207202] = {
true,
false,
"deepskyblue",
},
[182778] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[129369] = {
true,
false,
"mediumpurple",
},
[97720] = {
true,
false,
"fuchsia",
},
[212831] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[213343] = {
true,
false,
"mediumpurple",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[151325] = {
true,
false,
"fuchsia",
},
[189816] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[206697] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[191225] = {
true,
false,
"mediumpurple",
},
[206698] = {
true,
false,
"blue",
},
[183425] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[212453] = {
true,
false,
"deepskyblue",
},
[129372] = {
true,
false,
"blue",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[176521] = {
true,
false,
"blue",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[179847] = {
true,
false,
"fuchsia",
},
[211816] = {
true,
false,
"fuchsia",
},
[176523] = {
true,
false,
"mediumpurple",
},
[224732] = {
true,
false,
"deepskyblue",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[224221] = {
true,
false,
"mediumpurple",
},
[114796] = {
true,
false,
"blue",
},
[184580] = {
true,
false,
"deepskyblue",
},
[96574] = {
true,
false,
"mediumpurple",
},
[198263] = {
true,
false,
"mediumpurple",
},
[191230] = {
true,
false,
"fuchsia",
},
[188673] = {
true,
false,
"mediumpurple",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[206066] = {
true,
false,
"deepskyblue",
},
[221667] = {
true,
false,
"deepskyblue",
},
[179852] = {
true,
false,
"blue",
},
[214762] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[224609] = {
true,
false,
"fuchsia",
},
[166299] = {
true,
false,
"blue",
},
[56792] = {
true,
false,
"fuchsia",
},
[199547] = {
true,
false,
"fuchsia",
},
[204918] = {
true,
false,
"blue",
},
[223844] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"fuchsia",
},
[218961] = {
true,
false,
"fuchsia",
},
[184331] = {
true,
false,
"mediumpurple",
},
[80816] = {
true,
false,
"deepskyblue",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[40936] = {
true,
false,
"mediumpurple",
},
[195928] = {
true,
false,
"mediumpurple",
},
[199549] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[144298] = {
true,
false,
"blue",
},
[180429] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[213932] = {
true,
false,
"mediumpurple",
},
[165919] = {
true,
false,
"mediumpurple",
},
[81984] = {
true,
false,
"mediumpurple",
},
[195842] = {
true,
false,
"blue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[104251] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[163618] = {
true,
false,
"blue",
},
[178171] = {
true,
false,
"fuchsia",
},
[227300] = {
true,
false,
"mediumpurple",
},
[186226] = {
true,
false,
"fuchsia",
},
[183497] = {
true,
false,
"blue",
},
[176598] = {
true,
false,
"blue",
},
[83892] = {
true,
false,
"deepskyblue",
},
[164707] = {
true,
false,
"mediumpurple",
},
[186125] = {
true,
false,
"deepskyblue",
},
[205623] = {
true,
false,
"mediumpurple",
},
[184335] = {
true,
false,
"deepskyblue",
},
[223777] = {
true,
false,
"blue",
},
[206074] = {
true,
false,
"deepskyblue",
},
[133685] = {
true,
false,
"fuchsia",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"mediumpurple",
},
[205691] = {
true,
false,
"blue",
},
[220141] = {
true,
false,
"deepskyblue",
},
[168156] = {
true,
false,
"fuchsia",
},
[163458] = {
true,
false,
"deepskyblue",
},
[150143] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[150297] = {
true,
false,
"deepskyblue",
},
[171805] = {
true,
false,
"blue",
},
[205618] = {
true,
false,
"mediumpurple",
},
[168992] = {
true,
false,
"deepskyblue",
},
[190174] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"blue",
},
[45915] = {
true,
false,
"mediumpurple",
},
[196102] = {
true,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[186220] = {
true,
false,
"deepskyblue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"mediumpurple",
},
[135474] = {
true,
false,
"blue",
},
[213806] = {
true,
false,
"deepskyblue",
},
[150142] = {
true,
false,
"deepskyblue",
},
[82579] = {
true,
false,
"deepskyblue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[208193] = {
true,
false,
"blue",
},
[165414] = {
true,
false,
"deepskyblue",
},
[201288] = {
true,
false,
"fuchsia",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[215756] = {
true,
false,
"fuchsia",
},
[114804] = {
true,
false,
"blue",
},
[220401] = {
true,
false,
"fuchsia",
},
[175517] = {
true,
false,
"blue",
},
[154744] = {
true,
false,
"fuchsia",
},
[95779] = {
true,
false,
"mediumpurple",
},
[194315] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[167965] = {
true,
false,
"blue",
},
[135365] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[115020] = {
true,
false,
"mediumpurple",
},
[98081] = {
true,
false,
"fuchsia",
},
[208438] = {
true,
false,
"mediumpurple",
},
[194316] = {
true,
false,
"mediumpurple",
},
[210812] = {
true,
false,
"deepskyblue",
},
[163882] = {
true,
false,
"mediumpurple",
},
[210269] = {
true,
false,
"mediumpurple",
},
[216293] = {
true,
false,
"blue",
},
[214066] = {
true,
false,
"blue",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[104278] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[223773] = {
true,
false,
"blue",
},
[114544] = {
true,
false,
"fuchsia",
},
[201223] = {
true,
false,
"blue",
},
[220974] = {
true,
false,
"fuchsia",
},
[163621] = {
true,
false,
"mediumpurple",
},
[164510] = {
true,
false,
"fuchsia",
},
[115765] = {
true,
false,
"fuchsia",
},
[200840] = {
true,
false,
"mediumpurple",
},
[199233] = {
true,
false,
"mediumpurple",
},
[212775] = {
true,
false,
"deepskyblue",
},
[156212] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[115019] = {
true,
false,
"deepskyblue",
},
[214012] = {
true,
false,
"mediumpurple",
},
[135241] = {
true,
false,
"deepskyblue",
},
[214140] = {
true,
false,
"mediumpurple",
},
[98275] = {
true,
false,
"blue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[180070] = {
true,
false,
"fuchsia",
},
[133835] = {
true,
false,
"blue",
},
[222964] = {
true,
false,
"blue",
},
[208698] = {
true,
false,
"fuchsia",
},
[155830] = {
true,
false,
"deepskyblue",
},
[100485] = {
true,
false,
"mediumpurple",
},
[164506] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[180473] = {
true,
false,
"blue",
},
[129788] = {
true,
false,
"deepskyblue",
},
[182045] = {
true,
false,
"fuchsia",
},
[81432] = {
true,
false,
"deepskyblue",
},
[40166] = {
true,
false,
"mediumpurple",
},
[155831] = {
true,
false,
"fuchsia",
},
[168934] = {
true,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[40167] = {
true,
false,
"blue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[194487] = {
true,
false,
"blue",
},
[100486] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[101637] = {
true,
false,
"mediumpurple",
},
[83025] = {
true,
false,
"blue",
},
[102788] = {
true,
false,
"blue",
},
[189464] = {
true,
false,
"blue",
},
[76446] = {
true,
false,
"blue",
},
[135245] = {
true,
false,
"mediumpurple",
},
[168109] = {
true,
false,
"deepskyblue",
},
[162099] = {
true,
false,
"fuchsia",
},
[212389] = {
true,
false,
"blue",
},
[168594] = {
true,
false,
"mediumpurple",
},
[115640] = {
true,
false,
"fuchsia",
},
[221945] = {
true,
false,
"fuchsia",
},
[138187] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[45704] = {
true,
false,
"dimgray",
},
[87252] = {
true,
false,
"mediumpurple",
},
[92610] = {
true,
false,
"fuchsia",
},
[196115] = {
true,
false,
"fuchsia",
},
[178008] = {
true,
false,
"yellow",
},
[212739] = {
true,
false,
"mediumpurple",
},
[179841] = {
true,
false,
"deepskyblue",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[192791] = {
true,
false,
"fuchsia",
},
[176551] = {
true,
false,
"deepskyblue",
},
[131666] = {
true,
false,
"blue",
},
[144071] = {
true,
false,
"deepskyblue",
},
[196576] = {
true,
false,
"blue",
},
[190362] = {
true,
false,
"blue",
},
[224249] = {
true,
false,
"fuchsia",
},
[211263] = {
true,
false,
"fuchsia",
},
[190690] = {
true,
false,
"mediumpurple",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"blue",
},
[223994] = {
true,
false,
"deepskyblue",
},
[213892] = {
true,
false,
"deepskyblue",
},
[132126] = {
true,
false,
"blue",
},
[165556] = {
true,
false,
"fuchsia",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"blue",
},
[213893] = {
true,
false,
"deepskyblue",
},
[81819] = {
true,
false,
"blue",
},
[115642] = {
true,
false,
"blue",
},
[209801] = {
true,
false,
"mediumpurple",
},
[163894] = {
true,
false,
"blue",
},
[187160] = {
true,
false,
"blue",
},
[157017] = {
true,
false,
"blue",
},
[174197] = {
true,
false,
"deepskyblue",
},
[190207] = {
true,
false,
"deepskyblue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[169905] = {
true,
false,
"blue",
},
[168882] = {
true,
false,
"fuchsia",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[188703] = {
true,
false,
"yellow",
},
[188026] = {
true,
false,
"fuchsia",
},
[197905] = {
true,
false,
"blue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[170480] = {
true,
false,
"mediumpurple",
},
[186658] = {
true,
false,
"deepskyblue",
},
[192796] = {
true,
false,
"blue",
},
[129370] = {
true,
false,
"deepskyblue",
},
[206351] = {
true,
false,
"deepskyblue",
},
[156157] = {
true,
false,
"blue",
},
[200836] = {
true,
false,
"mediumpurple",
},
[196856] = {
true,
false,
"mediumpurple",
},
[198868] = {
true,
false,
"deepskyblue",
},
[216326] = {
true,
false,
"deepskyblue",
},
[115388] = {
true,
false,
"fuchsia",
},
[144296] = {
true,
false,
"mediumpurple",
},
[197145] = {
true,
false,
"mediumpurple",
},
[198424] = {
true,
false,
"blue",
},
[218884] = {
true,
false,
"fuchsia",
},
[190368] = {
true,
false,
"fuchsia",
},
[199703] = {
true,
false,
"fuchsia",
},
[40357] = {
true,
false,
"fuchsia",
},
[167607] = {
true,
false,
"mediumpurple",
},
[153285] = {
false,
false,
"yellow",
},
[197146] = {
true,
false,
"mediumpurple",
},
[188067] = {
true,
false,
"deepskyblue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[164921] = {
true,
false,
"deepskyblue",
},
[45930] = {
true,
false,
"fuchsia",
},
[216328] = {
true,
false,
"fuchsia",
},
[211341] = {
true,
false,
"mediumpurple",
},
[166301] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"deepskyblue",
},
[190370] = {
true,
false,
"mediumpurple",
},
[166969] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"blue",
},
[192800] = {
true,
false,
"deepskyblue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[223253] = {
true,
false,
"deepskyblue",
},
[131587] = {
true,
false,
"mediumpurple",
},
[189555] = {
true,
false,
"deepskyblue",
},
[152898] = {
true,
false,
"fuchsia",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[75979] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[197149] = {
true,
false,
"deepskyblue",
},
[180015] = {
true,
false,
"blue",
},
[128434] = {
true,
false,
"blue",
},
[172981] = {
true,
false,
"mediumpurple",
},
[166971] = {
true,
false,
"fuchsia",
},
[184107] = {
true,
false,
"mediumpurple",
},
[152905] = {
true,
false,
"fuchsia",
},
[199595] = {
true,
false,
"mediumpurple",
},
[164414] = {
true,
false,
"deepskyblue",
},
[113537] = {
true,
false,
"mediumpurple",
},
[197406] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[59873] = {
true,
false,
"mediumpurple",
},
[156245] = {
true,
false,
"mediumpurple",
},
[206230] = {
true,
false,
"fuchsia",
},
[167612] = {
true,
false,
"blue",
},
[166589] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"fuchsia",
},
[196203] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[214287] = {
true,
false,
"yellow",
},
[198047] = {
true,
false,
"blue",
},
[205337] = {
true,
false,
"fuchsia",
},
[169927] = {
true,
false,
"fuchsia",
},
[194990] = {
true,
false,
"deepskyblue",
},
[164929] = {
true,
false,
"blue",
},
[137830] = {
true,
false,
"blue",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[76104] = {
true,
false,
"blue",
},
[169159] = {
true,
false,
"gold",
},
[192934] = {
true,
false,
"blue",
},
[207198] = {
true,
false,
"deepskyblue",
},
[214673] = {
true,
false,
"blue",
},
[157634] = {
true,
false,
"blue",
},
[190377] = {
true,
false,
"blue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[224962] = {
true,
false,
"deepskyblue",
},
[195876] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[163524] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[214419] = {
true,
false,
"mediumpurple",
},
[210966] = {
true,
false,
"blue",
},
[131812] = {
true,
false,
"fuchsia",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[82597] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[203812] = {
true,
false,
"fuchsia",
},
[165763] = {
true,
false,
"deepskyblue",
},
[102095] = {
true,
false,
"blue",
},
[101008] = {
true,
false,
"fuchsia",
},
[216338] = {
true,
false,
"mediumpurple",
},
[198308] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[214761] = {
true,
false,
"mediumpurple",
},
[163459] = {
true,
false,
"blue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[216339] = {
true,
false,
"blue",
},
[214421] = {
true,
false,
"blue",
},
[216340] = {
true,
false,
"fuchsia",
},
[220815] = {
true,
false,
"blue",
},
[186420] = {
true,
false,
"deepskyblue",
},
[190381] = {
true,
false,
"fuchsia",
},
[169924] = {
true,
false,
"mediumpurple",
},
[114629] = {
true,
false,
"blue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"blue",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[199717] = {
true,
false,
"mediumpurple",
},
[167876] = {
true,
false,
"fuchsia",
},
[197671] = {
true,
false,
"blue",
},
[197799] = {
true,
false,
"deepskyblue",
},
[175550] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"blue",
},
[131677] = {
true,
false,
"fuchsia",
},
[198311] = {
true,
false,
"mediumpurple",
},
[211291] = {
true,
false,
"mediumpurple",
},
[178630] = {
true,
false,
"deepskyblue",
},
[198503] = {
true,
false,
"deepskyblue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[170690] = {
true,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[155090] = {
true,
false,
"deepskyblue",
},
[168318] = {
true,
false,
"mediumpurple",
},
[220946] = {
true,
false,
"mediumpurple",
},
[213913] = {
true,
false,
"deepskyblue",
},
[224271] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[211228] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[114624] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[168007] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[114626] = {
true,
false,
"fuchsia",
},
[131819] = {
true,
false,
"deepskyblue",
},
[189235] = {
true,
false,
"mediumpurple",
},
[80935] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"blue",
},
[167113] = {
true,
false,
"blue",
},
[131436] = {
true,
false,
"mediumpurple",
},
[41139] = {
true,
false,
"blue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[96664] = {
true,
false,
"blue",
},
[212765] = {
true,
false,
"mediumpurple",
},
[95769] = {
true,
false,
"deepskyblue",
},
[155221] = {
true,
false,
"deepskyblue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[163520] = {
true,
false,
"mediumpurple",
},
[116549] = {
true,
false,
"deepskyblue",
},
[164557] = {
true,
false,
"mediumpurple",
},
[199325] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[131821] = {
true,
false,
"blue",
},
[185529] = {
true,
false,
"fuchsia",
},
[165197] = {
true,
false,
"fuchsia",
},
[118489] = {
true,
false,
"fuchsia",
},
[213338] = {
true,
false,
"deepskyblue",
},
[191847] = {
true,
false,
"deepskyblue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[129529] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[98368] = {
true,
false,
"mediumpurple",
},
[189878] = {
true,
false,
"yellow",
},
[195696] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"mediumpurple",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[224219] = {
true,
false,
"deepskyblue",
},
[130400] = {
true,
false,
"mediumpurple",
},
[96587] = {
true,
false,
"deepskyblue",
},
[190342] = {
true,
false,
"fuchsia",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[228540] = {
true,
false,
"deepskyblue",
},
[98521] = {
true,
false,
"fuchsia",
},
[163121] = {
true,
false,
"blue",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[180323] = {
true,
false,
"fuchsia",
},
[198577] = {
true,
false,
"blue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[155824] = {
true,
false,
"blue",
},
[162133] = {
true,
false,
"fuchsia",
},
[168153] = {
true,
false,
"fuchsia",
},
[187969] = {
true,
false,
"blue",
},
[164563] = {
true,
false,
"blue",
},
[221979] = {
true,
false,
"fuchsia",
},
[114542] = {
true,
false,
"blue",
},
[179269] = {
true,
false,
"fuchsia",
},
[196045] = {
true,
false,
"deepskyblue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[223770] = {
true,
false,
"blue",
},
[180348] = {
true,
false,
"blue",
},
[65317] = {
true,
false,
"mediumpurple",
},
[84520] = {
true,
false,
"mediumpurple",
},
[59546] = {
true,
false,
"blue",
},
[165076] = {
true,
false,
"blue",
},
[187154] = {
true,
false,
"fuchsia",
},
[204206] = {
true,
false,
"blue",
},
[165805] = {
true,
false,
"mediumpurple",
},
[228539] = {
true,
false,
"deepskyblue",
},
[162057] = {
true,
false,
"mediumpurple",
},
[173044] = {
true,
false,
"deepskyblue",
},
[212673] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[98370] = {
true,
false,
"deepskyblue",
},
[223772] = {
true,
false,
"blue",
},
[191164] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"fuchsia",
},
[190340] = {
true,
false,
"blue",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[114266] = {
true,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"blue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"blue",
},
[40925] = {
true,
false,
"mediumpurple",
},
[100531] = {
true,
false,
"mediumpurple",
},
[199124] = {
true,
false,
"deepskyblue",
},
[168942] = {
true,
false,
"blue",
},
[75459] = {
true,
false,
"deepskyblue",
},
[223774] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[127111] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"blue",
},
[169861] = {
true,
false,
"blue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[190686] = {
true,
false,
"blue",
},
[178165] = {
true,
false,
"fuchsia",
},
[223775] = {
true,
false,
"blue",
},
[167963] = {
true,
false,
"blue",
},
[212412] = {
true,
false,
"fuchsia",
},
[211262] = {
true,
false,
"fuchsia",
},
[220195] = {
true,
false,
"deepskyblue",
},
[183495] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[214441] = {
true,
false,
"fuchsia",
},
[223776] = {
true,
false,
"blue",
},
[214697] = {
true,
false,
"fuchsia",
},
[176974] = {
true,
false,
"fuchsia",
},
[210539] = {
true,
false,
"mediumpurple",
},
[220196] = {
true,
false,
"fuchsia",
},
[44404] = {
true,
false,
"deepskyblue",
},
[189706] = {
true,
false,
"yellow",
},
[101438] = {
true,
false,
"blue",
},
[205363] = {
true,
false,
"deepskyblue",
},
[150168] = {
true,
false,
"fuchsia",
},
[205619] = {
true,
false,
"mediumpurple",
},
[219046] = {
true,
false,
"deepskyblue",
},
[220197] = {
true,
false,
"mediumpurple",
},
[127106] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[185032] = {
true,
false,
"mediumpurple",
},
[205620] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[114319] = {
true,
false,
"blue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[216364] = {
true,
false,
"fuchsia",
},
},
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["auto_inside_raid_dungeon"] = {
["hide_enemy_player_pets"] = true,
["hide_enemy_player_totems"] = true,
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Deathstalker's Mark\"] = 102,\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Caustic Spatter\"] = 92,\n        [\"Find Weakness\"] = 93,\n        [\"Crimson Tempest\"] = 85,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1724737925,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 577,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder - Jundies",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Time"] = 1724736123,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Enabled"] = true,
["Revision"] = 202,
["Options"] = {
},
["Author"] = "�r��ne-Kel'thuzad",
["Desc"] = "Adds double arrow as a target indicators option",
["Prio"] = 99,
["Name"] = "Double Arrow Target",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["doNotPurge"] = {
},
["SPglowyoff"] = 0.5,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff\n    }\n    \n    modTable.options =\n    (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or\n    (modTable.config.SPglownum == 3 and options3)\n    \n    local doNotPurgeList = {\n        [385063] = true, -- Burning Ambition, Ruby Life Pools\n        [392454] = true, -- Burning Veins, Ruby Life Pools\n        [396020] = true, -- Golden Barrier, Temple of the Jade Serpent\n        [383161] = true -- Decay Infusion, Brackenhide Hollow\n    }\n    \n    for _, id in pairs(modTable.config.doNotPurge) do\n        doNotPurgeList[tonumber(id)] = true\n    end\n    \n    modTable.doNotPurge = function(id)\n        return doNotPurgeList[id] ~= nil\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitFrame.healthBar:IsShown() then\n        return\n    end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers[2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers[containerID]\n        \n        for _, auraIcon in ipairs(auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs(unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon.canStealOrPurge and not modTable.doNotPurge(auraIcon.SpellId)) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end\n            end\n        end\n    end\nend",
},
["Time"] = 1723715351,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 1057,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Name"] = "Glow Type",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Name"] = "Glow Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Name"] = "Number of Particles",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Name"] = "X-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Name"] = "Y-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Name"] = "Pixel Line Length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Name"] = "Pixel Line Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Name"] = "Ants Glow Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "doNotPurge",
["Value"] = {
},
["Name"] = "Do Not Purge",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "List of spells you may not want to purge for whichever reason",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1724736162,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 110,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Force Threat Color NPC",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    if not Plater.AddPerformanceUnits then\n        return\n    end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, -- Chaotic Essence\n        [189707] = true, -- Chaotic mote\n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, -- Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [87329] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if flag and modTable.config.performance then\n            Plater.AddPerformanceUnits(unit)\n        else\n            Plater.RemovePerformanceUnits(unit)\n        end\n        if flag and modTable.config.forceBlizz then\n            Plater.AddForceBlizzardNameplateUnits(unit)\n        else\n            Plater.RemoveForceBlizzardNameplateUnits(unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1724736168,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 364,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Name"] = "Performance Units - Jundies",
},
{
["OptionsValues"] = {
["colour_names"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1723715159,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 277,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Name"] = "Short Names",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1724735993,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/12",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 494,
["semver"] = "1.0.11",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 12,
["PlaterCore"] = 1,
["Name"] = "Cast Icon Anchor + Border",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["lowScale"] = 0.79999995231628,
["midScale"] = 0.89999997615814,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (_, unitId, unitFrame, _, modTable)\n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Init and Nameplate Updated\n    \n    -- if not modTable.config.scale then\n    --     return\n    -- end\n    \n    -- local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    -- if not npcID or not modTable.isSpiteful(npcID) then\n    --     return\n    -- end\n    \n    -- Plater.SetNameplateScale(\n    --     unitFrame,\n    --     modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    -- )\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Init and Leave Combat\n    \n    -- if not modTable.config.scale then\n    --     return\n    -- end\n    \n    -- local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    -- if not npcID or not modTable.isSpiteful(npcID) then\n    --     return\n    -- end\n    \n    -- Plater.SetNameplateScale(\n    --     unitFrame,\n    --     modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    -- )\nend",
["Initialization"] = "function (modTable)\n    local medium = modTable.config.midScale -- 0.90\n    local small = modTable.config.lowScale -- 0.80\n    local extrasmall = modTable.config.extraLowScale -- 0.70,\n    local larger = modTable.config.higherScale -- 1.1\n    \n    --[[\n    GUIDELINES\n    - use LARGER for enemies with great situational importance that need extra attention\n        ex: totems at the end of Stonevault, Spiteful targeting you\n    - use MEDIUM for enemies that do little to nothing but melee the tank and have average health\n        OR casters without mandatory kick\n        ex: Patchwerk Soldier, Necrotic Wake | Tainted Lashers, Gnarlroot\n        ex: Primalist Galesinger, Halls of Infusion\n    - use SMALL for enemies that do nothing but melee the tank and have less than average health\n        -- ex: Jagged Hound, Waycrest Manor\n    - use EXTRA SMALL for enemies that do nothing at all AND/OR there's so many on the screen, you have no choice\n        ex: Fiery Vines, Tindral | Hungry Lashers, Academy\n    ]]\n    --\n    \n    modTable.npcIDs = {}\n    \n    local test = {\n        --[87329] = extrasmall, -- test dummy    \n    }\n    -- raids\n    local nerubarPalace = {\n        [219739] = small, -- Infested Spawn\n        [220626] = medium, -- Parasite\n    }\n    local amirdrassil = {\n        [210231] = medium, -- Tainted Lasher, Gnarlroot\n        [211306] = extrasmall, -- Fiery Vines, Tindral\n    }\n    local vault = {\n        [194991] = medium, -- Oathsworn Vanguard\n        [191714] = small, -- Seeking Stormling\n    }\n    local sepulcher = {\n        [183669] = small, -- Fiendish Soul\n    }\n    local nathria = {\n        [169925] = small, -- Begrudging Waiter\n    }\n    \n    -- War Within dungeons\n    \n    local prioryOfTheSacredFlame = {\n        [212838] = small, --Arathi Neophyte\n    }\n    \n    local darkflameCleft = {\n        [210148] = small, -- Menial Laborer\n        [210810] = small, -- Menial Laborer\n        [208457] = small, -- Skittering Darkness\n    }\n    \n    local cinderbrewMeadery = {\n        [217126] = extrasmall, --Over-indulged Patron\n        [214668] = small, -- Patron\n        [218865] = small, --Bee-let\n        [210270] = small, --Brew Drop\n        [223562] = small, --Brew Drop #2\n    }\n    \n    local stoneVault = {\n        [214287] = larger, --Earth Burst Totem\n    }\n    \n    local araKara = {\n        [216336] = medium, --Ravenous Crawler\n        [216341] = medium, --Jabbing Flyer\n        [218325] = small, --Swarming Flyer\n        [216337] = small, --Bloodworker\n    }\n    \n    local cityOfThreads = {\n        [220199] = small, --Battle Scarab\n        [216363] = medium, --Reenforced drone\n        [216365] = medium, --Carrier\n        [223357] = medium, --Conscript\n        [216329] = small, --Droplet\n        [220065] = small, --Umbral Weave\n        [222700] = small, --Umbral Weave\n        [219198] = medium, --Ravenous Scarab\n    }\n    \n    local theDawnbreaker = {\n        --[225601] = extrasmall, --Webbed Victim\n    }\n    \n    \n    -- DF Dungeons\n    local murozondsRise = {\n        [205151] = small, -- Tyr's Vanguard\n    }\n    \n    local galakrondsFall = {\n        [204536] = extrasmall, -- Blight Chunk\n        [206065] = extrasmall, -- Interval\n    }\n    \n    local hallsOfInfusion = {\n        [190923] = small, -- Zephyrling\n    }\n    \n    local neltharus = {\n        [192781] = small, -- Ore Elemental\n        [194389] = small, -- Lava Spawn\n    }\n    \n    local uldaman = {\n        [184134] = small, -- Scavenging Leaper\n        [186696] = larger, -- Quaking Totem\n    }\n    \n    local brackenhideHollow = {\n        [189299] = small, -- Decaying Slime\n        [192481] = small, -- Decaying Slime (boss adds)\n        [194330] = small, -- Decaying Slime (from big slime split)\n        [199916] = small, -- Decaying Slime\n        [194273] = small, -- Witherling\n        [187238] = small, -- Witherling\n        [189363] = extrasmall, -- Infected Lasher\n        [208994] = extrasmall, -- Infected Lasher\n        [194373] = small, -- Witherling\n        [190381] = larger, -- Rotburst Totem\n    }\n    \n    local algetharAcademy = {\n        [196642] = extrasmall, -- Hungry Lasher\n        [197398] = extrasmall, -- Hungry Lasher\n        [192329] = small, -- Territorial Eagle\n        [196694] = medium, -- Arcane Forager\n    }\n    \n    local azureVault = {\n        [191313] = extrasmall, -- Bubbling Sapling\n        [196559] = extrasmall, -- Volatile Sapling\n        [187246] = medium, -- Nullmagic Hornswog\n        [187242] = medium, -- Tarasek Looter\n        [187159] = small, -- Whelp\n    }\n    \n    local rubyLifePools = {\n        [189893] = extrasmall, -- Infused Whelp\n        [187894] = extrasmall, -- Infused Whelp\n        [194622] = extrasmall, -- Scorchling\n        [190205] = extrasmall, -- Scorchling\n        [197509] = extrasmall, -- Primal Thundercloud\n    }\n    \n    local nokhudOffensive = {\n        [195855] = small, -- Risen Warrior\n        [195875] = small, -- Desecrated Bakar\n        [196645] = small, -- Desecrated Bakar\n    }\n    -- Shadowlands Dungeons\n    local tazavesh = {\n        [178163] = small, -- Murkbrine Shorerunner\n    }\n    \n    local theaterOfPain = {\n        [163089] = small, -- Disgusting Refuse\n    }\n    \n    local necroticWake = {\n        [166264] = small, -- Spare Parts\n        [166266] = small, -- Spare Parts #2\n        [171500] = small, -- Shuffling Corpse\n        [165138] = small, -- Blight bag\n        [162729] = medium, -- Patchwerk Soldier\n    }\n    \n    local mistsOfTirnaScithe = {\n        [165111] = medium, -- Drust Spiteclaw\n        [167117] = small, -- Larva\n    }\n    \n    local hallsOfAtonement = {\n        [167892] = medium, -- Tormented Soul\n    }\n    \n    local deOtherSide = {\n        [168986] = small, -- Skeletal Raptor\n    }\n    \n    local plaguefall = {\n        [168969] = small, -- Gushing Slime\n    }\n    \n    local sanguineDepths = {\n        [171455] = small, -- Stonewall Gargon\n        [168457] = small, -- Stonewall Gargon\n        [166589] = small, -- Animate Weapon\n    }\n    --BFA Dungeons\n    local mechagon = {\n        [144300] = small, -- Mechagon Citizen\n    }\n    \n    local siegeOfBoralus = {\n        [133990] = medium, -- Scrimshaw Gutter\n        [138002] = medium, -- Scrimshaw Gutter\n        [135258] = medium, -- Curseblade\n    }\n    \n    local atalDazar = {\n        [128435] = extrasmall, -- saurid\n    }\n    \n    local waycrestManor = {\n        [131669] = small, -- Jagged Hound\n    }\n    \n    local underrot = {\n        [131402] = extrasmall, -- Underrot Tick\n    }\n    \n    local freehold = {\n        [130024] = small, -- Soggy Shiprat\n    }\n    -- Legion Dungeons\n    local hallsOfValor = {\n        [97087] = medium, -- Valajar Champion\n        [96640] = medium, -- Valajar Marksman\n        [99922] = small, -- Ebonclaw Packmate\n        [96608] = medium, -- Ebonclaw Worg\n        [96609] = medium, -- Gildedfur Stag\n    }\n    \n    local darkheartThicket = {\n        [100529] = small, -- Hatespawn Slime\n        [101074] = small, -- Hatespawn Whelpling\n        [100991] = small, -- Strangling Roots\n        [107288] = small, -- Vilethorn Sapling\n    }\n    \n    local blackRookHold = {\n        [98677] = small, -- Rook Spiderling\n        [98900] = medium, -- Wyrmtongue Trickster\n        [102781] = extrasmall, -- Fel Bat Pup\n    }\n    \n    local courtOfStars = {\n        [105703] = small, -- Mana Wyrm,\n        [104295] = small, -- Blazing Imp\n    }\n    \n    local neltharionsLair = {\n        [96247] = extrasmall, -- Vileshard Crawler\n        [102430] = small, -- Tarspitter Slug\n    }\n    -- WoD Dungeons\n    local everbloom = {\n        [81864] = small, -- Dreadpetal\n        [84401] = small, -- Swift Sproutling\n    }\n    \n    local shadowmoonBurialGrounds = {\n        [75451] = small, -- Defiled Spirit (non-casting)\n        [77006] = small, -- Corpse Skitterling\n        [76444] = small, -- Subjugated Soul\n    }\n    -- MoP Dungeons\n    local templeOfTheJadeSerpent = {\n        [62358] = small, -- Corrupt Droplet\n        [58319] = small, -- Lesser Sha\n        [59598] = small, -- Lesser Sha\n    }\n    -- Cata Dungeons\n    local throneOfTheTides = {\n        [40923] = extrasmall, -- Unstable Corruption\n    }\n    \n    local vortexPinnacle = {\n        [205326] = medium, -- Gust Soldier\n        [45477] = medium, -- Gust Soldier\n        [45704] = small, -- Lurking Tempest\n        [204337] = small, -- Lurking Tempest\n        [45924] = medium, -- Turbulent Squall\n        [45922] = medium, -- Empyrean Assassin\n        [45926] = medium, -- Servant of Asaad\n        [45932] = small, -- Skyfall Star\n    }\n    \n    local grimBatol = {\n        [224853] = small, -- Hatchling\n        [39388] = medium, -- Boss Hatchling\n    }\n    \n    local misc = {\n        -- Fodder to the Flame demons\n        [169428] = small,\n        [169430] = small,\n        [169429] = small,\n        [169426] = small,\n        [169421] = small,\n        [169425] = small,\n        [168932] = small,\n        [189707] = small, -- Chaotic Motes, SL Fated affix\n        [229537] = larger, -- Void Emissary\n    }\n    \n    local maps = {\n        test,\n        prioryOfTheSacredFlame,\n        darkflameCleft,\n        cinderbrewMeadery,\n        theDawnbreaker,\n        stoneVault,\n        amirdrassil,\n        atalDazar,\n        waycrestManor,\n        darkheartThicket,\n        everbloom,\n        blackRookHold,\n        galakrondsFall,\n        throneOfTheTides,\n        templeOfTheJadeSerpent,\n        nokhudOffensive,\n        courtOfStars,\n        shadowmoonBurialGrounds,\n        algetharAcademy,\n        azureVault,\n        hallsOfValor,\n        rubyLifePools,\n        underrot,\n        freehold,\n        neltharionsLair,\n        vortexPinnacle,\n        hallsOfInfusion,\n        neltharus,\n        uldaman,\n        brackenhideHollow,\n        murozondsRise,\n        misc,\n        vault,\n        sepulcher,\n        nathria,\n        nerubarPalace,\n        araKara,\n        cityOfThreads,\n        tazavesh,\n        theaterOfPain,\n        necroticWake,\n        mistsOfTirnaScithe,\n        hallsOfAtonement,\n        deOtherSide,\n        plaguefall,\n        sanguineDepths,\n        grimBatol,\n        siegeOfBoralus,\n        mechagon,\n    }\n    \n    for i = 1, #maps do\n        local map = maps[i]\n        \n        for id, priority in pairs(map) do\n            modTable.npcIDs[id] = priority\n        end\n    end\n    \n    ---@param unit string\n    ---@return number|nil\n    function modTable.parseGUID(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    -- do nothing while spiteful is disabled\n    -- when updating this, also update Nameplate Updated and Leave Combat\n    \n    -- ---@param id number\n    -- ---@return boolean\n    -- function modTable.isSpiteful(id)\n    --     return tonumber(id) == 174773\n    -- end\n    \n    -- ---@param unitId string\n    -- ---@return boolean\n    -- function modTable.spitefulTargetsPlayer(unitId)\n    --     local targetName = UnitName(unitId .. \"target\")\n    \n    --     if not targetName then\n    --         return false\n    --     end\n    \n    --     return UnitIsUnit(targetName, \"player\")\n    -- end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local scale = modTable.npcIDs[npcID]\n    \n    if scale then\n        Plater.SetNameplateScale(unitFrame, scale)\n    end\nend",
},
["Time"] = 1724872859,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 2119,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Name"] = "Very Low Prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Name"] = "Higher Priority",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Name"] = "Priority based scaling - Jundies",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    function Plater.UpdateLifePercentText(healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        --get the cached health amount for performance\n        local currentHealth, maxHealth = healthBar.CurrentHealth, healthBar.CurrentHealthMax\n        \n        if showHealthAmount and showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. \" 100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth) .. format(\" %d%%\", percent))\n            end\n        elseif showHealthAmount then\n            healthBar.lifePercent:SetText(Plater.FormatNumber(currentHealth))\n        elseif showPercentAmount then\n            local percent = maxHealth == 0 and 100 or (currentHealth / maxHealth * 100)\n            \n            if showDecimals then\n                if percent < 10 then\n                    healthBar.lifePercent:SetText(format(\"%.2f%%\", percent))\n                elseif percent < 99.9 then\n                    healthBar.lifePercent:SetText(format(\"%.1f%%\", percent))\n                else\n                    healthBar.lifePercent:SetText(\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText(format(\"%d%%\", percent))\n            end\n        else\n            healthBar.lifePercent:SetText(\"\")\n        end\n    end\nend\n\n\n\n\n",
},
["Time"] = 1724736165,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 166,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Health Formatting",
["LastHookEdited"] = "Initialization",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    \n    --init\n    local hb = unitFrame.healthBar\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture(hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture(hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if hb.isCustomShieldHook then\n            return\n        end\n        --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n        hb.UpdateHealPrediction = function(self)\n            local currentHealth = self.currentHealth\n            local currentHealthMax = self.currentHealthMax\n            local healthPercent = currentHealth / currentHealthMax\n            \n            if not currentHealthMax or currentHealthMax <= 0 then\n                return\n            end\n            \n            --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n            local width = self:GetWidth()\n            \n            hb.shieldAbsorbIndicator:Hide()\n            hb.shieldAbsorbGlow:Hide()\n            \n            if not self.displayedUnit then\n                return\n            end\n            \n            if self.Settings.ShowHealingPrediction then\n                --incoming heal on the unit from all sources\n                local unitHealIncoming = UnitGetIncomingHeals(self.displayedUnit) or 0\n                --heal absorbs\n                local unitHealAbsorb = UnitGetTotalHealAbsorbs(self.displayedUnit) or 0\n                \n                if unitHealIncoming > 0 then\n                    --calculate what is the percent of health incoming based on the max health the player has\n                    local incomingPercent = unitHealIncoming / currentHealthMax\n                    self.incomingHealIndicator:Show()\n                    self.incomingHealIndicator:SetWidth(\n                        max(1, min(width * incomingPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.incomingHealIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.incomingHealIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.incomingHealIndicator:Hide()\n                end\n                \n                if unitHealAbsorb > 0 then\n                    local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                    self.healAbsorbIndicator:Show()\n                    self.healAbsorbIndicator:SetWidth(\n                        max(1, min(width * healAbsorbPercent, abs(healthPercent - 1) * width))\n                    )\n                    self.healAbsorbIndicator:SetPoint(\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                    self.healAbsorbIndicator:SetPoint(\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                else\n                    self.healAbsorbIndicator:Hide()\n                end\n            end\n            \n            if self.Settings.ShowShields then\n                --damage absorbs\n                local unitDamageAbsorb = UnitGetTotalAbsorbs(self.displayedUnit) or 0\n                self.currentAbsorb = unitDamageAbsorb\n                \n                if unitDamageAbsorb > 0 then\n                    local curHealthTotal = unitDamageAbsorb + currentHealth\n                    local damageAbsorbPercent\n                    local healthPercentAbsorb\n                    local isHalfBar = false\n                    if curHealthTotal > currentHealthMax then\n                        if useHalfBar then\n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            if damageAbsorbPercent > 1 then\n                                damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                            end\n                            healthPercentAbsorb = 1 - damageAbsorbPercent\n                            self:SetMinMaxValues(0, currentHealthMax)\n                            \n                            isHalfBar = true\n                        else\n                            damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                            healthPercentAbsorb = currentHealth / curHealthTotal\n                            self:SetMinMaxValues(0, curHealthTotal)\n                        end\n                    else\n                        damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                        healthPercentAbsorb = currentHealth / currentHealthMax\n                        self:SetMinMaxValues(0, currentHealthMax)\n                    end\n                    --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                    \n                    self.shieldAbsorbIndicator:SetWidth(width * damageAbsorbPercent)\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"topleft\",\n                        self,\n                        \"topleft\",\n                        width * healthPercentAbsorb,\n                        (isHalfBar and (-self:GetHeight() / 2)) or 0\n                    )\n                    self.shieldAbsorbIndicator:SetPoint(\n                        \"bottomleft\",\n                        self,\n                        \"bottomleft\",\n                        width * healthPercentAbsorb,\n                        0\n                    )\n                    \n                    self.shieldAbsorbIndicator:Show()\n                else\n                    self.shieldAbsorbIndicator:Hide()\n                end\n            end\n            \n            hb.isCustomShieldHook = true\n        end\n        \n        if hb.displayedUnit then\n            hb.shieldAbsorbIndicator:Hide()\n            hb.shieldAbsorbGlow:Hide()\n            hb:UNIT_MAXHEALTH()\n        else\n            hb.customShieldHookNeedsUpdate = true\n        end\n    end\nend",
},
["Time"] = 1724736123,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1259,
["semver"] = "",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Absorb Shields in Healthbar",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x669565071fdad90",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    local targetBorderColor = modTable.config.targetColor\n    local focusBorderColor = modTable.config.focusColor\n    -- local nonTargetBorderColor = \"white\"\n    \n    ---@class Cache\n    ---@field current Frame|nil\n    ---@field id number|nil\n    \n    ---@param token string\n    local function GetUnitFrameForToken(token)\n        local frame = C_NamePlate.GetNamePlateForUnit(token)\n        \n        --and frame.unitFrame.PlaterOnScreen\n        if frame and frame.unitFrame then\n            return frame.unitFrame\n        end\n        \n        return nil\n    end\n    \n    ---@type Cache\n    modTable.target = {\n        current = GetUnitFrameForToken(\"target\"),\n    }\n    \n    ---@type Cache\n    modTable.focus = {\n        current = GetUnitFrameForToken(\"focus\"),\n    }\n    \n    modTable.globalKey = \"PlaterJundiesTargetBorderColor\"\n    \n    if _G[modTable.globalKey] == nil then\n        local frame = CreateFrame(\"Frame\", modTable.globalKey)\n        \n        frame.unregistered = nil\n        frame:RegisterEvent(\"PLAYER_TARGET_CHANGED\")\n        frame:RegisterEvent(\"PLAYER_FOCUS_CHANGED\")\n        \n        local function OnPlayerFocusChange()\n            -- player has focus\n            if UnitExists(\"focus\") then\n                local frame = GetUnitFrameForToken(\"focus\")\n                \n                local previousFrame = modTable.focus.current\n                modTable.focus.current = frame\n                \n                -- cleanup previous frame\n                if previousFrame and previousFrame ~= modTable.target.current then\n                    Plater.SetBorderColor(previousFrame)\n                end\n                \n                -- dont override target border color\n                if frame ~= modTable.target.current then\n                    Plater.SetBorderColor(frame, focusBorderColor)\n                end\n            else\n                if modTable.focus.current and modTable.focus.current ~= modTable.target.current then\n                    Plater.SetBorderColor(modTable.focus.current)\n                end\n                \n                modTable.focus.current = nil\n            end\n        end\n        \n        local function OnPlayerTargetChange()\n            -- player has target\n            if UnitExists(\"target\") then\n                local frame = GetUnitFrameForToken(\"target\")\n                \n                local previousFrame = modTable.target.current\n                modTable.target.current = frame\n                \n                -- cleanup previous frame\n                if previousFrame then\n                    Plater.SetBorderColor(\n                        previousFrame,\n                        previousFrame == modTable.focus.current and focusBorderColor or nil\n                    )\n                end\n                \n                if frame then\n                    Plater.SetBorderColor(frame, targetBorderColor)\n                else\n                    -- targeting something outside of nameplate range has plater not initialized yet, but it will be on the next frame\n                    C_Timer.After(0, OnPlayerTargetChange)\n                end\n            else\n                if modTable.target.current then\n                    Plater.SetBorderColor(\n                        modTable.target.current,\n                        modTable.target.current == modTable.focus.current and focusBorderColor or nil\n                    )\n                end\n                \n                modTable.target.current = nil\n            end\n        end\n        \n        frame:SetScript(\"OnEvent\", function(self, event, ...)\n                if event == \"PLAYER_TARGET_CHANGED\" then\n                    OnPlayerTargetChange()\n                elseif event == \"PLAYER_FOCUS_CHANGED\" then\n                    OnPlayerFocusChange()\n                end\n        end)\n    end\n    \n    ---@param frame Frame\n    function modTable.EnsureCorrectBorder(token, frame)\n        if UnitExists(\"target\") and UnitIsUnit(token, \"target\") then\n            Plater.SetBorderColor(frame, targetBorderColor)\n            modTable.target.current = frame\n        elseif UnitExists(\"focus\") and UnitIsUnit(token, \"focus\") then\n            Plater.SetBorderColor(frame, focusBorderColor)\n            modTable.focus.current = frame\n        else\n            Plater.SetBorderColor(frame)\n        end\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.EnsureCorrectBorder(unitId, unitFrame)\nend",
},
["Time"] = 1724739532,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "132212",
["Enabled"] = true,
["Revision"] = 308,
["semver"] = "",
["Author"] = "Xephunt-These Go To Eleven",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Target Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes target border color",
},
{
["Type"] = 1,
["Key"] = "focusColor",
["Value"] = {
0,
1,
0.94117653369904,
1,
},
["Name"] = "Focus Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes Focus border color",
},
},
["Name"] = "Target Border Color",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1724736611,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Pet Threat Highlighter",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.healthBar.questProgressTextFrame then\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateText(unitFrame)\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable)\n    local textColor = \"orange\"\n    local textSize = 12\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    }\n    \n    function envTable.updateText(unitFrame)\n        if not unitFrame or not unitFrame.namePlateIsQuestObjective or not unitFrame.QuestAmountCurrent then\n            if unitFrame.healthBar.questProgressTextFrame and unitFrame.healthBar.questProgressTextFrame:IsShown() then\n                unitFrame.healthBar.questProgressTextFrame:Hide()\n            end\n            \n            return\n        end\n        \n        local text = unitFrame.QuestAmountTotal and unitFrame.QuestAmountTotal - unitFrame.QuestAmountCurrent\n        or unitFrame.QuestAmountCurrent .. \"%\"\n        \n        local currentText = unitFrame.healthBar.questProgressTextFrame\n        and unitFrame.healthBar.questProgressTextFrame:GetText()\n        or nil\n        \n        if currentText == text then\n            return\n        end\n        \n        --create the text frame that will show the quest progress\n        if not unitFrame.healthBar.questProgressTextFrame then\n            envTable.questProgressTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n            Plater.SetAnchor(envTable.questProgressTextFrame, anchor)\n            unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        end\n        \n        if not unitFrame.healthBar.questProgressTextFrame:IsVisible() then\n            unitFrame.healthBar.questProgressTextFrame:Show()\n        end\n        \n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Time"] = 1724737875,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "236671",
["Enabled"] = true,
["Revision"] = 362,
["semver"] = "",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "QuestProgress",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["replaceName"] = false,
["hideNameSolo"] = false,
},
["HooksTemp"] = {
},
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture(nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer(\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode(\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)\n    \n    ---@param spellId number\n    ---@return number, number, number, number\n    function envTable.GetSpellCooldown(spellId)\n        if C_Spell.GetSpellCooldown then\n            local info = C_Spell.GetSpellCooldown(spellId)\n            return info.startTime, info.duration, info.isEnabled, info.modRate\n        end\n        \n        return GetSpellCooldown(spellId)\n    end\n    \n    ---@param unitId string\n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted or castBar.interrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if not UnitExists(targetUnitId) then\n            return\n        end\n        \n        local targetName = UnitName(targetUnitId)\n        local isTargettingMe = targetName == UnitName(\"player\")\n        castBar.Text:SetText(castBar.SpellName)\n        \n        -- Cast is targetting a specific unit\n        if targetName then\n            -- Nameplate flash options\n            if isTargettingMe and envTable.optionsNameplateFlash then\n                -- Default value of true since it is turned on in the options\n                local showNameplateFlash = true\n                \n                if envTable.optionsHideFlashSolo and not UnitInParty(\"player\") and not UnitInRaid(\"player\") then\n                    showNameplateFlash = false\n                end\n                \n                if envTable.optionsHideFlashAsTank and GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                    showNameplateFlash = false\n                end\n                \n                -- Show nameplate flash if conditions met\n                if showNameplateFlash then\n                    Plater.FlashNameplateBody(unitFrame)\n                end\n            end\n            \n            -- Target name in cast bar options\n            if envTable.optionsShowTargetName then\n                if envTable.optionsReplaceMyName and isTargettingMe then\n                    targetName = \"Me\"\n                end\n                \n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText(castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                \n                local currentText = castBar.Text:GetText()\n                if currentText ~= nil and currentText ~= \"\" then\n                    local castText = currentText .. \" \" .. Plater.SetTextColorByClass(targetUnitId, targetName)\n                    \n                    if\n                    envTable.optionsHideNameSolo\n                    and not UnitInParty(\"player\")\n                    and not UnitInRaid(\"player\")\n                    and isTargettingMe\n                    then\n                        castText = currentText\n                    end\n                    \n                    castBar.Text:SetText(castText)\n                    DetailsFramework:TruncateText(castBar.Text, castBarWidth)\n                end\n            end\n        end\n        \n        if not envTable.optionsShowInterruptColor then\n            return\n        end\n        \n        -- Interrupt bar color options\n        local canInterrupt = castBar.canInterrupt\n        local castEndTime = castBar.spellEndTime\n        local interruptReadyTime = 0\n        local start\n        local duration\n        \n        if envTable.interruptID ~= nil then\n            start, duration = envTable.GetSpellCooldown(envTable.interruptID) --local\n            interruptReadyTime = start + duration\n        end\n        \n        local nextColor = envTable.optionsColorProtected\n        \n        if canInterrupt and envTable.interruptID ~= nil then\n            local playerIsWarlock = envTable.class == 9\n            \n            -- Check to see if the spell is known/talented\n            if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                if interruptReadyTime == 0 then\n                    nextColor = envTable.optionsColorInterruptAvailable\n                elseif\n                envTable.optionsShowSecondaryInterrupts\n                and envTable.class == 2 -- paladin\n                and IsSpellKnown(31935) -- avenger's shield\n                and not envTable.isSpellOnCooldown_IgnoreGCD(31935)\n                then\n                    nextColor = envTable.optionsColorSecondaryAvailable\n                elseif interruptReadyTime < (castEndTime - 0.25) then\n                    castBar.tick:Show()\n                    castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                    local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue -- castBar.spellStartTime + 0.25\n                    if castBar.channeling then\n                        tickLocation = 1 - tickLocation\n                    end\n                    castBar.tick:SetPoint(\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                    \n                    nextColor = envTable.optionsColorInterruptSoon\n                elseif interruptReadyTime >= (castEndTime - 0.25) then\n                    nextColor = envTable.optionsColorNoInterrupt\n                end\n            else\n                nextColor = envTable.optionsColorNoInterrupt\n            end\n        end\n        \n        -- Spell Reflection coloring\n        if\n        envTable.optionsShowSecondaryInterrupts\n        and isTargettingMe\n        and envTable.class == 1\n        and IsSpellKnown(23920) -- spell reflect\n        and not envTable.isSpellOnCooldown_IgnoreGCD(23920)\n        and modTable.reflectableSpells[castBar.SpellID] == true\n        then\n            -- Color the bar if the spell is reflectable\n            nextColor = envTable.optionsColorSecondaryAvailable\n        end\n        \n        local currentR, currentG, currentB, currentA = castBar:GetColor()\n        local nextR, nextG, nextB, nextA = unpack(nextColor)\n        \n        if currentR ~= nextR or currentG ~= nextG or currentB ~= nextB or currentA ~= nextA then\n            Plater.SetCastBarColor(unitFrame, nextColor)\n        end\n    end\n    \n    envTable.class = select(3, UnitClass(\"player\"))\n    \n    local function determineInterruptId()\n        if envTable.class == 1 then -- Warrior\n            return function()\n                return 6552 -- Pummel\n            end\n        end\n        \n        if envTable.class == 2 then -- Paladin\n            return function()\n                return 96231 -- Rebuke\n            end\n        end\n        \n        if envTable.class == 3 then -- Hunter\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 3 then -- survival\n                    return 187707 -- muzzle\n                end\n                \n                return 147362 -- counter shot\n            end\n        end\n        \n        if envTable.class == 4 then -- rogue\n            return function()\n                return 1766 -- kick\n            end\n        end\n        \n        if envTable.class == 5 then -- priest\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 3 then -- shadow\n                    return 15487 -- silence\n                end\n                \n                return nil\n            end\n        end\n        \n        if envTable.class == 6 then -- death knight\n            return function()\n                return 47528 -- mind freeze\n            end\n        end\n        \n        if envTable.class == 7 then -- shaman\n            return function()\n                return 57994\n            end\n        end\n        \n        if envTable.class == 8 then -- mage\n            return function()\n                return 2139 -- counterspell\n            end\n        end\n        \n        if envTable.class == 9 then -- warlock\n            return function()\n                if IsSpellKnown(89766, true) then -- felguard: axe toss\n                    return 89766\n                end\n                \n                if IsSpellKnown(19647, true) then -- felhunter: spell lock\n                    return 19647\n                end\n                \n                if C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then -- spell lock via grimoire of sacrifice\n                    return 132409\n                end\n                \n                return nil\n            end\n        end\n        \n        if envTable.class == 10 then -- monk\n            return function()\n                return 116705 -- spear hand strike\n            end\n        end\n        \n        if envTable.class == 11 then -- druid\n            return function()\n                local spec = GetSpecialization()\n                \n                if spec == 1 then -- balance\n                    return 78675 -- soalr beam\n                end\n                \n                return 106839 -- skull bash\n            end\n        end\n        \n        if envTable.class == 12 then -- demon hunter\n            return function()\n                return 183752 -- disrupt\n            end\n        end\n        \n        if envTable.class == 13 then -- evoker\n            return function()\n                return 351338 -- quell\n            end\n        end\n    end\n    \n    envTable.GetInterruptId = determineInterruptId()\n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    ---@param spellID number\n    ---@return boolean\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = envTable.GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration = envTable.GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration\n        return spellReadyTime > GCD_expirationTime\n    end\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config.colorNoInterrupt\n    envTable.optionsColorInterruptAvailable = modTable.config.colorInterruptAvailable\n    envTable.optionsColorInterruptSoon = modTable.config.colorInterruptSoon\n    envTable.optionsColorSecondaryAvailable = modTable.config.colorSecondaryInterrupt\n    envTable.optionsColorProtected = modTable.config.colorProtected\n    envTable.optionsColorTick = modTable.config.colorTick\n    \n    envTable.interruptID = envTable.GetInterruptId()\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend",
["Initialization"] = "function(modTable)\n    modTable.reflectableSpells = {}\n    \n    if select(3, UnitClass(\"player\")) == 1 then\n        \n        \n        --TWW Dungeons \n        local araKara = {\n            438200, -- Poison bolt\n            436322, -- Poison bolt - atik\n            434786, -- Web bolt\n        }\n        \n        local cityOfThreads = {\n            442536, -- Grimweave Blast\n            443427, -- Web Bolt\n            439341, -- Splice - Izo\n        }\n        \n        local theDawnbreaker = {\n            428086, -- Shadow bolt\n            451114, -- Congealed Shadow\n            431333, -- Tormenting Beam\n            431495, -- Black Edge\n            451113, -- Web Bolt\n        }\n        \n        local theStonevault = {\n            429422, -- Stone Bolt\n            426283, -- Arcing Void\n            429110, --Alloy Bolt\n            429545, -- Censoring Gear\n            459210, -- Shadow Claw\n            --448640, --Shield Stampede **Verify when not question marked on spreadsheet**\n        }\n        \n        local cinderbrewMeadery = {\n            \n        }\n        \n        local darkflameCleft = { \n            \n        }\n        \n        local prioryOfTheSacredFlame = {\n            \n        }\n        \n        local theRookery = {\n            \n        }\n        \n        \n        \n        --DF Dungeons\n        \n        local murozondsRise = {\n            400165, -- Epoch Bolt\n            413607, -- Corroding Volley\n            418202, -- Temporal Blast\n            417030, -- Fireball\n            411763, -- Infinite Blast\n            407121, -- Immolate\n        }\n        \n        local galakrondsFall = {\n            415435, -- Infinite Bolt\n            413590, -- Noxious Ejection\n            411958, -- Stonebolt\n        }\n        \n        local rubyLifePools = {\n            373803, -- Cold Claws boss adds\n            372683, -- Cold Claws trash\n            372808, -- Frigid Shard\n            373693, -- Living Bomb\n            371984, -- Icebolt\n            384197, -- Cinderbolt\n            384194, -- Cinderbolt\n            392576, -- Thunderbolt\n            385310, -- Lightning Bolt\n            385536, -- Flame Dance\n        }\n        \n        local azureVault = {\n            374789, -- Infused Strike\n            373932, -- Illusionary Bolt\n            384978, -- Dragon Strike\n            377503, -- Condensed Frost\n            389804, -- Heavy Tome\n            371306, -- Arcane Bolt\n        }\n        \n        local brackenhideHollow = {\n            382249, -- Earth Bolt\n            381694, -- Decayed Senses\n            378155, -- Earth Bolt (boss)\n            382474, -- Decay Surge\n        }\n        \n        local hallsOfInfusion = {\n            374020, -- Containment Beam\n            389443, -- Purifying Blast\n            374706, -- Pyretic Burst\n            375950, -- Ice Shard\n            385963, -- Frost Shock\n            395690, -- Lightning Blast\n            387504, -- Squall Buffet\n            387571, -- Focused Deluge\n        }\n        \n        local uldaman = {\n            369674, -- Stone Spike\n            369675, -- Chain Lightning\n            372718, -- Earthen Shards\n            369399, -- Stone Bolt\n            369365, -- Curse of Stone\n            377395, -- Time Sink\n        }\n        \n        local neltharus = {\n            378818, -- Magma Conflagration\n            372538, -- Melt\n            383231, -- Lava Bolt\n        }\n        \n        local nokhudOffensive = {\n            387125, -- Thunderstrike\n            387127, -- Chain Lightning\n            386012, -- Stormbolt\n            387613, -- Death Bolt\n            382670, -- Gale Arrow\n            376827, -- Conductive Strike\n            384761, -- Wind Burst\n            396206, -- Storm Shock\n            381530, -- Storm Shock\n        }\n        \n        local algetharAcademy = {\n            388862, -- Surge\n            377991, -- Storm Slash\n            387975, -- Arcane Missiles\n        }\n        \n        --Shadowlands Dungeons\n        \n        local mistsOfTirnaScithe = {\n            332767, --Spirit Bolt\n            323057, --Spirit Bolt - Boss\n            332557, --Soul Split\n            463217, --Anima Slash\n            325223, --Anima Injection\n            332486, --Overgrowth\n        }\n        \n        local theNecroticWake = {\n            328667, --Frostbolt Volley\n            326574, --Noxious Fog\n            320788, --Frozen Binds\n            322274, --Enfeeble\n            334748, --Drain Fluids\n            320462, --Necrotic Bolt\n            333479, --Spew Disease\n            323347, --Clinging Darkness\n            333602, --Frostbolt\n        }\n        \n        \n        \n        --BFA Dungeons\n        \n        local siegeOfBoralus = {\n            272581, -- Water bolt\n            257063, -- Brackish bolt\n        }\n        \n        local waycrestManor = {\n            265372, -- Shadow Cleave\n            263943, -- Etch\n            264105, -- Runic Mark\n            260701, -- Bramble Bolt\n            260699, -- Soul Bolt\n            260700, -- Ruinous Bolt\n            266036, -- Drain Essence\n            264024, -- Soul Bolt\n            426541, -- Runic Bolt\n            264556, -- Tearing Strike\n            264153, -- Spit\n            278444, -- Infest\n            265881, -- Decaying Touch\n            265880, -- Dread Mark\n            268278, -- Wracking Chord\n            261438, -- Wasting Strike\n            261440, -- Virulent Pathogen\n        }\n        \n        local atalDazar = {\n            253562, -- Wildfire\n            254959, -- Soul Burn\n            252923, -- Venom Blast\n            252687, -- Venomfang Strike\n            250096, -- Wracking Pain\n        }\n        \n        local underrot = {\n            265084, -- Blood Bolt\n            260879, -- Blood Bolt (boss)\n            278961, -- Decaying Mind\n            266265, -- Wicked Embrace\n            272180, -- Void Spit\n        }\n        \n        local freehold = {\n            259092, -- Lightning Bolt\n            257908, -- Oiled Blade\n            281420, -- Water Bolt\n        }\n        \n        \n        --Legion Dungeons\n        \n        local darkheartThicket = {\n            204243, -- Tormenting Eye\n            200238, -- Feed on the Weak\n            200185, -- Nightmare Bolt\n            200684, -- Nightmare Toxin\n            200642, -- Despair\n            201411, -- Firebolt\n            201837, -- Shadow Bolt\n        }\n        \n        local blackRookHold = {\n            199663, -- Soul Blast\n            200248, -- Arcane Blitz\n        }\n        \n        local neltharionsLair = {\n            186269, -- Stone Bolt\n            198496, -- Sunder\n            210150, -- Toxic Retch\n            200732, -- Molten Crash\n        }\n        \n        local hallsOfValor = {\n            198595, -- Thunderous Bolt\n            198962, -- Shattered Rune\n            198959, -- Etch\n            191976, -- Arcing Bolt\n            192288, -- Searing Light\n        }\n        \n        local courtOfStars = {\n            209036, -- Throw Torch\n            209413, -- Suppress\n            211406, -- Firebolt\n            211473, -- Shadow Slash\n            373364, -- Vampiric Claws\n        }\n        \n        \n        --WoD Dungeons\n        \n        local everbloom = {\n            169657, -- Poisonous Claws\n            168040, -- Nature's Wrath\n            168092, -- Water Bolt\n            169840, -- Frostbolt\n            169841, -- Arcane Blast\n            169839, -- Pyroblast\n            427858, -- Fireball\n            164965, -- Choking Vines\n        }\n        \n        local shadowmoonBurialGrounds = {\n            152814, -- Shadow Bolt\n            152819, -- Shadow Word: Frailty\n            156776, -- Rending Voidlash\n            398206, -- Death Blast\n            153067, -- Void Devastation\n            153524, -- Plague Spit\n        }\n        \n        --MoP Dungeons\n        \n        local templeOfTheJadeSerpent = {\n            397888, -- Hydrolance\n            114803, -- Throw Torch\n            114571, -- Agony\n            397914, -- Defiling Mist\n            397931, -- Dark Claw\n            106823, -- Serpent Strike\n        }\n        \n        \n        --Cata Dungeons\n        \n        local throneOfTheTides = {\n            426731, -- Water Bolt\n            428542, -- Crushing Depths\n            426768, -- Lightning Bolt\n            75992, -- Lightning Surge\n            428374, -- Focused Tempest\n            426783, -- Mind Flay\n            429048, -- Flame Shock\n            429173, -- Mind Rot\n            429176, -- Aquablast\n            428526, -- Ink Blast\n            428889, -- Foul Bolt\n        }\n        \n        local vortexPinnacle = {\n            410873, -- Rushing Wind\n            86331, -- Lightning Bolt\n            411019, -- Starlight\n            87762, -- Lightning Lash\n            87622, -- Chain Lightning\n        }\n        \n        local grimBatol = { \n            447966, --Shadowflame bolt (Boss)\n            76369, --Shadowflame bolt (adds)\n            450087, --Depth's Grasp\n            451971, --Lava Fist\n            451241, --Shadowflame Slash\n        }\n        \n        \n        \n        -- Raids\n        local amidrassil = {\n            431302, -- Fyr'alath's Flame, Fyrakk\n            421284, -- Coiling Flames, Volcoross\n        }\n        \n        local aberrus = {\n            403203, -- Flame Slash, Amalgamation Chamber\n            403699, -- Shadow Spike\n            397386, -- Lava Bolt, trash\n            410351, -- Flaming Cudgel, Assault\n        }\n        \n        local vault = {\n            396040, -- Pyroblast, Eranog\n            372394, -- Lightning Bolt, Council\n            372315, -- Frost Spike\n            372275, -- Chain Lightning\n            385812, -- Aerial Slash, Dathea\n            375716, -- Ice Barrage, Diurna\n            385553, -- Storm Bolt\n            375653, -- Static Jolt\n        }\n        \n        local zones = {\n            araKara,\n            cityOfThreads,\n            grimBatol,\n            mistsOfTirnaScithe,\n            siegeOfBoralus,\n            theDawnbreaker,\n            theNecroticWake,\n            theStonevault,\n            cinderbrewMeadery,\n            darkflameCleft,\n            prioryOfTheSacredFlame,\n            theRookery,\n            rubyLifePools,\n            azureVault,\n            brackenhideHollow,\n            uldaman,\n            neltharus,\n            algetharAcademy,\n            nokhudOffensive,\n            hallsOfInfusion,\n            darkheartThicket,\n            everbloom,\n            throneOfTheTides,\n            waycrestManor,\n            atalDazar,\n            blackRookHold,\n            vortexPinnacle,\n            underrot,\n            freehold,\n            neltharionsLair,\n            templeOfTheJadeSerpent,\n            courtOfStars,\n            shadowmoonBurialGrounds,\n            hallsOfValor,\n            murozondsRise,\n            galakrondsFall,\n            amidrassil,\n            aberrus,\n            vault,\n        }\n        \n        for i = 1, #zones do\n            local zone = zones[i]\n            \n            for k = 1, #zone do\n                local id = zone[k]\n                modTable.reflectableSpells[id] = true\n            end\n        end\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\nend",
},
["Time"] = 1724884272,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1690,
["semver"] = "",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Cast Update",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = false,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = false,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Key"] = "castNameSize",
["Value"] = 60,
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["Name"] = "Enhanced Castbar - Jundies",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
},
["Time"] = 1696898532,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["arena"] = true,
["pvp"] = true,
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/Zz1aEIOJR/1",
["Icon"] = 132310,
["Enabled"] = true,
["Revision"] = 325,
["semver"] = "1.0.0",
["Author"] = "Irashi-Antonidas",
["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Sappable (Custom Icon)",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
},
["Time"] = 1696897899,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/lLK9gn7lc/5",
["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
["Enabled"] = true,
["Revision"] = 74,
["semver"] = "1.0.4",
["Author"] = "Ariani-Antonidas",
["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
["Prio"] = 99,
["version"] = 5,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Load Screen",
["Name"] = "Arena - Buff-Tracking Mode",
},
{
["OptionsValues"] = {
["EXEbdrcolor"] = {
1,
0.37647062540054,
0,
1,
},
["EXEhicolor"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
0,
},
["EXEhdcolor"] = {
0.99215692281723,
1,
0.94901967048645,
1,
},
["EXEalert"] = 0,
["EXEhbcon"] = false,
["onlyNPC"] = true,
["EXEbdron"] = false,
},
["HooksTemp"] = {
},
["UID"] = "0x6150129e178c7fc5",
["Hooks"] = {
["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
},
["Time"] = 1702817455,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/uCoprJFNs/3",
["Icon"] = 135358,
["Enabled"] = true,
["Revision"] = 3555,
["semver"] = "1.0.2",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Advanced Execute Range [Fix]",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Execute Color Options",
["Value"] = "Execute Color Options",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Execute Healthbar Color",
["Value"] = true,
["Key"] = "EXEhbcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Healthbar Color",
},
{
["Type"] = 1,
["Name"] = "Execute Healthbar Color",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Key"] = "EXEhbcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Healthbar Color",
},
{
["Type"] = 4,
["Name"] = "Enable Execute Border Color",
["Value"] = false,
["Key"] = "EXEbdron",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Border Color",
},
{
["Type"] = 1,
["Name"] = "Execute Border Color",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Key"] = "EXEbdrcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Border Color",
},
{
["Type"] = 4,
["Name"] = "Only on NPC",
["Value"] = true,
["Key"] = "onlyNPC",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply these features only on NPC",
},
{
["Type"] = 4,
["Name"] = "Track Aggro Color",
["Value"] = false,
["Key"] = "TrackAggro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 6,
["Name"] = "Blank",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Execute Divisor Options",
["Value"] = "Execute Divisor Options",
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Disable Execute Health Divisor",
["Value"] = false,
["Key"] = "EXEhdoff",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Disable Execute Health Divisor",
},
{
["Type"] = 1,
["Name"] = "Execute Health Divisor Color",
["Value"] = {
1,
1,
1,
0.8500000089407,
},
["Key"] = "EXEhdcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Divisor Color",
},
{
["Type"] = 1,
["Name"] = "Execute Health Indicator Color",
["Value"] = {
0.27843137254902,
0,
1,
0.25,
},
["Key"] = "EXEhicolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Indicator Color",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
["Min"] = 0,
["Name"] = "Preview Divisor %",
["Value"] = 13,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "EXEalert",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Force set health Divisor alpha value.",
["Min"] = 0,
["Name"] = "Divisor Alpha %",
["Value"] = 50,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "EXEhdalpha",
},
{
["Type"] = 6,
["Name"] = "Blank",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
["colour_names"] = true,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1702817524,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 257,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Shorten Names",
["Value"] = true,
["Key"] = "short_names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Name"] = "Colour by Raidmark",
["Value"] = true,
["Key"] = "colour_names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
["LastHookEdited"] = "",
["Name"] = "M+ Renamer",
},
},
["auras_per_row_auto"] = false,
["auras_per_row_amount2"] = 2,
["disable_omnicc_on_auras"] = true,
["aura_width"] = 19,
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["blizzard_nameplate_large_font_size"] = 9,
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["pet_width_scale"] = 0.99999994039536,
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["indicator_raidmark_scale"] = 0.84999996423721,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1726634268,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["__TrashAt"] = 1726634525,
["Time"] = 1710901066,
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["url"] = "https://wago.io/XPNrgiHqw/2",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["NpcNames"] = {
"167966",
"199220",
"199916",
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 128,
["semver"] = "1.1.0",
["version"] = 2,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Hide Nameplate",
["PlaterCore"] = 1,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["Options"] = {
},
["Icon"] = 644389,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["Time"] = 1726634528,
["NpcNames"] = {
"167966",
"176026",
"137458",
"96247",
"189363",
"187238",
"187231",
"191243",
"208994",
"194330",
"199916",
"102430",
"45704",
"204337",
"202789",
},
["semver"] = "1.2.0",
["url"] = "https://wago.io/XPNrgiHqw/3",
["Icon"] = 644389,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["Enabled"] = true,
["Revision"] = 181,
["Options"] = {
},
["Name"] = "Hide Nameplate",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:GetParent():Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)",
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["version"] = 3,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)",
["__TrashAt"] = 1726634528,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["__TrashAt"] = 1726634532,
["Time"] = 1724883455,
["NpcNames"] = {
"167966",
"199220",
"199916",
"225601",
},
["Options"] = {
},
["url"] = "https://wago.io/XPNrgiHqw/2",
["Icon"] = 644389,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Revision"] = 162,
["semver"] = "1.1.0",
["version"] = 2,
["Prio"] = 99,
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Name"] = "Hide Nameplate - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
["__TrashAt"] = 1726797576,
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1726797583,
["Time"] = 1700351230,
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["url"] = "https://wago.io/8_ULM1VxI/7",
["Temp_ConstructorCode"] = "function()\nend",
["NpcNames"] = {
"204560",
},
["Temp_OnHideCode"] = "function()\nend",
["Enabled"] = true,
["Revision"] = 179,
["semver"] = "1.0.6",
["version"] = 7,
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Incorporeal",
["PlaterCore"] = 1,
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Name"] = "Debuffed Scale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "debuffed",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Name"] = "Casting Scale",
["Value"] = 1.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "casting",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Hide Nameplate when ccd",
["Value"] = false,
["Key"] = "hide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Icon"] = 298642,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n        \n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 218884 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(438706))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 5 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["ScriptType"] = 1,
["__TrashAt"] = 1726797591,
["Time"] = 1724883506,
["NpcNames"] = {
},
["Options"] = {
},
["url"] = "",
["Icon"] = "524354",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable) end",
["Revision"] = 542,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable) end",
["Name"] = "Invalidate Unit - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
336499,
335141,
256957,
440177,
438706,
451026,
325697,
442611,
},
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (self, unitId, unitFrame, envTable) end",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    local color = \"gray\"\n    \n    function envTable.updateNameplateColor(unitFrame)\n        if not InCombatLockdown() then\n            return\n        end\n        \n        -- Hardened Carapace stacks on Shattereshell Scarab\n        if unitFrame.namePlateNpcId == 218884 then\n            local auraInfo = C_UnitAuras.GetAuraDataBySpellName(unitId, C_Spell.GetSpellName(438706))\n            \n            if auraInfo and auraInfo.applications and auraInfo.applications <= 5 then\n                Plater.SetNameplateColor(unitFrame) -- omitting a color should reset it\n                return\n            end\n        end\n        \n        Plater.SetNameplateColor(unitFrame, color)\n    end\nend",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateNameplateColor(unitFrame)\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["__TrashAt"] = 1726797596,
["Time"] = 1696897854,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 190,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Author"] = "Nephuhlim-Illidan",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
228287,
295311,
391191,
},
["Prio"] = 99,
["Name"] = "Change Color on Debuff",
["PlaterCore"] = 1,
["Desc"] = "",
["Options"] = {
},
["Icon"] = 135801,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["debuffed"] = 0.79999995231628,
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1726797598,
["Time"] = 1724151260,
["NpcNames"] = {
"204560",
},
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Name"] = "Debuffed Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["url"] = "https://wago.io/8_ULM1VxI/7",
["Icon"] = 298642,
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["Temp_OnHideCode"] = "function()\nend",
["Revision"] = 252,
["semver"] = "1.0.6",
["version"] = 7,
["Prio"] = 99,
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Incorporeal - Jundies",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function()\nend",
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["__TrashAt"] = 1726797599,
["Time"] = 1713704437,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 1036,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
268030,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
371983,
373405,
391599,
387627,
375653,
387862,
392457,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
392486,
385331,
388804,
106856,
397394,
377612,
385574,
215204,
212773,
397382,
265540,
265542,
403978,
403671,
278755,
265511,
183528,
193803,
193585,
410870,
87779,
373897,
411302,
274400,
400296,
405433,
408805,
411300,
412378,
412233,
415304,
421029,
421031,
420525,
425816,
264390,
264407,
253583,
256849,
204243,
427459,
169839,
76820,
225562,
436841,
},
["Prio"] = 99,
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1726797623,
["Time"] = 1696897853,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189729",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 549,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "script desc",
["Value"] = "Show the power of the unit above the nameplate.",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show at 80% of Energy",
["Value"] = true,
["Key"] = "showLater",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Name"] = "Font Color",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Key"] = "fontColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Name"] = "Enable Text Outline",
["Value"] = true,
["Key"] = "outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Icon"] = 136048,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n--The War Within\n\n--\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1726797625,
["Time"] = 1724736003,
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"164558",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["url"] = "",
["Icon"] = 136048,
["Desc"] = "Show the energy amount above the nameplate.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 581,
["semver"] = "",
["version"] = -1,
["Prio"] = 99,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Show Energy - Jundies",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n--The War Within\n\n--\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
},
},
["extra_icon_stack_outline"] = "OUTLINE",
["resources"] = {
["y_offset"] = 51.589996337891,
["y_offset_target"] = 0,
["scale"] = 0.75,
},
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
323059,
438706,
372824,
388523,
114404,
22703,
164275,
77505,
255941,
200672,
377014,
451026,
},
["castbar_target_font"] = "Expressway",
["range_check_power_bar_alpha"] = 0.89999997615814,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["aura_width2"] = 19,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark2",
["health_animation_time_dilatation"] = 1.6699999570847,
["first_run2"] = true,
["castbar_target_text_size"] = 9,
["cast_statusbar_spark_alpha"] = 1,
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 1.1999969482422,
["range_check_alpha_friendlies"] = 1,
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["extra_icon_use_blizzard_border_color"] = false,
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.8199996948242,
["x"] = 0,
["side"] = 12,
},
["aura_show_enrage"] = true,
["aura_tracker"] = {
["buff_banned"] = {
["318486"] = true,
["323961"] = true,
["333553"] = true,
["317602"] = true,
["396106"] = true,
["236502"] = true,
["5760"] = true,
["396098"] = true,
["343553"] = true,
["396109"] = true,
["343613"] = false,
["216777"] = true,
["327416"] = false,
["302564"] = true,
["417039"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["286145"] = true,
["284471"] = true,
["396113"] = true,
["268710"] = true,
["422067"] = false,
["61573"] = true,
["206150"] = true,
["311571"] = true,
["284882"] = true,
["333575"] = true,
["209746"] = true,
["266499"] = true,
["333579"] = true,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["debuff_banned"] = {
["294934"] = true,
["388550"] = true,
["353354"] = true,
["324260"] = true,
["391568"] = true,
["444736"] = true,
["457133"] = false,
["461498"] = false,
["394328"] = true,
["356372"] = false,
["461981"] = false,
["356995"] = false,
["392388"] = true,
["389788"] = false,
["294909"] = true,
["279416"] = true,
["381628"] = true,
["352534"] = true,
["360277"] = true,
["403391"] = true,
["406770"] = true,
["345466"] = true,
["5760"] = true,
["397478"] = true,
["382426"] = true,
["378983"] = true,
["354052"] = true,
["331653"] = true,
["295367"] = true,
["452229"] = false,
["269576"] = true,
["424965"] = true,
["358379"] = true,
["453599"] = false,
["205027"] = false,
["370898"] = false,
["455366"] = true,
["426339"] = true,
["429750"] = true,
["394021"] = true,
["420144"] = true,
["394255"] = true,
["204242"] = true,
["457928"] = false,
["394453"] = false,
["273836"] = true,
["356329"] = true,
["256148"] = true,
["314113"] = true,
["169623"] = true,
["286581"] = true,
["281242"] = true,
["206760"] = true,
["244813"] = false,
["397712"] = true,
["373281"] = false,
["454214"] = false,
["6343"] = true,
["331016"] = false,
["443541"] = true,
["255909"] = true,
["321330"] = true,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["buff_tracked"] = {
["227931"] = true,
["365338"] = true,
["368364"] = true,
["389808"] = true,
["343502"] = false,
["297133"] = true,
["385528"] = true,
["209859"] = true,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["338510"] = false,
},
},
["extra_icon_caster_font"] = "Expressway",
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["update_throttle"] = 0.33000001311302,
["tocversion"] = 110002,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["aura_show_debuffs_personal"] = false,
["extra_icon_timer_font"] = "Expressway",
["not_affecting_combat_alpha"] = 1,
["target_highlight_alpha"] = 1,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["target_highlight"] = false,
["aura_sort"] = true,
["target_shady_alpha"] = 0,
["target_shady_enabled"] = false,
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["target_highlight_height"] = 10,
["indicator_rare"] = false,
["aura_grow_direction"] = 1,
["show_health_prediction"] = false,
["last_news_time"] = 1724188184,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["focus_as_target_alpha"] = true,
["extra_icon_auras_mine"] = {
["Violent Detonation"] = false,
["209859"] = false,
["Plague Bomb"] = false,
["Serrated Bone Spike"] = true,
},
["range_check_enabled"] = false,
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607850313187,
0.20784315466881,
},
},
["number_region_first_run"] = true,
["hook_data_trash"] = {
{
["OptionsValues"] = {
["nameColor"] = {
0,
1,
0.011764707043767,
1,
},
["useNameplateColor"] = false,
["useNameColor"] = true,
["borderColor"] = {
0,
1,
0.011764707043767,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x669ff67a1d2afb0",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    -- Populated with root immune npcIds from MDT.\n    local immuneMap = {\n        -- not stun immune in MDT\n        [205408] = true, -- Infinite Timeslicer\n    }\n    \n    local hasMDT = false\n    \n    if MDT and MDT.dungeonEnemies then\n        hasMDT = true\n        \n        for _, dungeon in pairs(MDT.dungeonEnemies) do\n            for _, npc in pairs(dungeon) do\n                if npc.characteristics and npc.characteristics and not npc.characteristics[\"Stun\"] then\n                    immuneMap[npc.id] = true\n                end\n            end\n        end\n    end\n    \n    function modTable.maybeUpdateColor(unitFrame)\n        if not hasMDT then\n            return\n        end\n        \n        if immuneMap[unitFrame.namePlateNpcId] == nil then\n            return\n        end\n        \n        if modTable.config.useNameplateColor then\n            Plater.SetNameplateColor(unitFrame, modTable.config.healthBarColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useBorderColor then\n            Plater.SetBorderColor(unitFrame, modTable.config.borderColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n        \n        if modTable.config.useNameColor then\n            Plater:SetFontColor(unitFrame.unitName, modTable.config.nameColor)\n            Plater.DenyColorChange(unitFrame, true)\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.maybeUpdateColor(unitFrame)\nend",
},
["__TrashAt"] = 1726797643,
["Time"] = 1724700828,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["Enabled"] = true,
["64"] = true,
},
},
["url"] = "",
["Icon"] = 135848,
["Enabled"] = false,
["Revision"] = 617,
["semver"] = "",
["Author"] = "Aparratchic-Ragnaros",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Activate Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
0,
0.34117648005486,
1,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBorderColor",
["Value"] = false,
["Name"] = "Activate Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "borderColor",
["Value"] = {
0,
1,
0.011764707043767,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameColor",
["Value"] = false,
["Name"] = "Activate Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "nameColor",
["Value"] = {
0,
1,
0.26666668057442,
1,
},
["Name"] = "Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Name"] = "Freeze Immune NPC's [MDT]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["__TrashAt"] = 1726797644,
["Time"] = 1700250838,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "ShadowDotsColors",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["__TrashAt"] = 1726797647,
["Time"] = 1722668853,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 97,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "ShadowDotsColors [Old]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.ttdTextFrame:SetText(\"\")\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId, unitFrame.namePlateNpcId)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.updateUnit(unitId)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- Credit to Aethys for the algorithm: https://github.com/herotc/hero-lib\n    \n    --general settings:\n    envTable.onlyShowOnBoss = false\n    envTable.includeShields = true\n    \n    --custom health% for specific units:\n    envTable.customPercent = {\n        --Dawnbreaker \n        [213937] = 60, --Rasha'nan\n        --Darkflame Cleft\n        [210797] = 45, --The Darkness\n        -- City of Threads\n        [219984] = 50, -- Xeph'itik\n        ----- Shadowlands\n        -- Sanguine Depths\n        [162099] = 50, -- General Kaal\n        --- De Other Side\n        [166608] = 10, --Mueh'Zala\n        --- Mists of Tirna Scithe\n        [164929] = 20, -- Tirnenn Villager\n        [164804] = 20, -- Droman Oulfarran\n        ----- Draenor\n        --- Shadowmoon Burial Ground\n        [76057] = 20.5, -- Carrion Worm\n        ----- Legion\n        -- Halls of Valor\n        [95674] = 60, -- Fenryr P1\n        [95676] = 80, -- Odyn\n        [94960] = 10, -- Hymdall\n        -- Court of Stars\n        [104215] = 20, -- Patrol Captain Gerdo\n        ----- Mists of Pandaria\n        -- Temple of the Jade Serpent\n        [56732] = 30, -- Liu Flameheart,\n        ----- Dragonflight\n        -- Brackenhide Hollow\n        [186121] = 4, -- Decatriarch Wratheye\n        -- Uldaman\n        [184580] = 10, -- Olaf\n        [184581] = 10, -- Baelog\n        [184582] = 10, -- Eric \"The Swift\"\n        [184125] = 1, -- Chrono-Lord Deios,\n        -- Doti lower\n        [198933] = 90, -- Iridikron, technically 85 but you care only until 90\n        [207638] = 80, -- Blight of Galakrond\n        [201792] = 60, -- Ahnzon\n    }\n    \n    -- text settings:\n    local textColor = \"white\"\n    local textSize = 12\n    local textFont = \"2002\"\n    local textOutline = \"NONE\" --\"OUTLINE\"\n    --local textShadowColor = \"green\"\n    \n    -- positioning\n    local anchor = {\n        side = 3, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 2, --x offset\n        y = -3, --y offset\n    }\n    \n    -- TTD calculation config\n    envTable.config = {\n        historyCount = 100,\n        historyTime = 10,\n        duration = 600,\n        pctHP = 0,\n    }\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the TTD\n    if not unitFrame.healthBar.ttdTextFrame then\n        envTable.ttdTextFrame = Plater:CreateLabel(unitFrame.healthBar, \"\", textSize, textColor)\n        unitFrame.healthBar.ttdTextFrame = envTable.ttdTextFrame\n        envTable.ttdTextFrame:SetText(\"\")\n    end\n    \n    Plater.SetAnchor(unitFrame.healthBar.ttdTextFrame, anchor)\n    \n    if textFont then\n        DetailsFramework:SetFontFace(unitFrame.healthBar.ttdTextFrame, textFont)\n    end\n    if textSize then\n        DetailsFramework:SetFontSize(unitFrame.healthBar.ttdTextFrame, textSize)\n    end\n    if textOutline then\n        DetailsFramework:SetFontOutline(unitFrame.healthBar.ttdTextFrame, textOutline)\n    end\n    if textColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textColor)\n        unitFrame.healthBar.ttdTextFrame:SetTextColor(r, g, b, a)\n    end\n    if textShadowColor then\n        local r, g, b, a = DetailsFramework:ParseColors(textShadowColor)\n        DetailsFramework:SetFontShadow(unitFrame.healthBar.ttdTextFrame, r, g, b, a, 1, -1)\n    end\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    --functions\n    \n    envTable.cache = {}\n    envTable.units = {}\n    \n    function envTable.TTDRefresh(unit)\n        local currentTime = GetTime()\n        local historyCount = envTable.config.historyCount\n        local historyTime = envTable.config.historyTime\n        \n        if not UnitExists(unit) then\n            return\n        end\n        \n        local GUID = UnitGUID(unit)\n        \n        if not GUID then\n            return\n        end\n        \n        local health = UnitHealth(unit)\n        local maxHealth = UnitHealthMax(unit)\n        local absorbsPercent = 0\n        \n        if UnitGetTotalAbsorbs and envTable.includeShields then\n            local absorbs = UnitGetTotalAbsorbs(unit)\n            health = health + absorbs\n            absorbsPercent = absorbs ~= -1 and maxHealth ~= -1 and absorbs / maxHealth * 100 or 0\n        end\n        \n        local healthPercentage = health ~= -1 and maxHealth ~= -1 and health / maxHealth * 100\n        -- Check if it's a valid unit\n        if UnitCanAttack(\"player\", unit) and healthPercentage < (100 + absorbsPercent) then\n            local unitTable = envTable.units[GUID]\n            -- Check if we have seen one time this unit, if we don't then initialize it.\n            if not unitTable or healthPercentage > unitTable[1][1][2] then\n                unitTable = { {}, currentTime }\n                envTable.units[GUID] = unitTable\n            end\n            \n            local values = unitTable[1]\n            local time = currentTime - unitTable[2]\n            -- Check if the % HP changed since the last check (or if there were none)\n            if #values == 0 or healthPercentage ~= values[1][2] then\n                local value\n                local lastIndex = #envTable.cache\n                -- Check if we can re-use a table from the cache -- Buds: i have doubt on the value of reusing table, with the high cost of tinsert on 1st index\n                if lastIndex == 0 then\n                    value = { time, healthPercentage }\n                else\n                    value = envTable.cache[lastIndex]\n                    envTable.cache[lastIndex] = nil\n                    value[1] = time\n                    value[2] = healthPercentage\n                end\n                table.insert(values, 1, value)\n                local n = #values\n                -- Delete values that are no longer valid\n                while (n > historyCount) or (time - values[n][1] > historyTime) do\n                    envTable.cache[#envTable.cache + 1] = values[n]\n                    values[n] = nil\n                    n = n - 1\n                end\n            end\n        end\n    end\n    \n    function envTable.TimeToX(guid, percentage, minSamples)\n        local seconds = 8888\n        local unitTable = envTable.units[guid]\n        -- Simple linear regression\n        -- ( E(x^2)  E(x) )  ( a )  ( E(xy) )\n        -- ( E(x)     n  )  ( b ) = ( E(y)  )\n        -- Format of the above: ( 2x2 Matrix ) * ( 2x1 Vector ) = ( 2x1 Vector )\n        -- Solve to find a and b, satisfying y = a + bx\n        -- Matrix arithmetic has been expanded and solved to make the following operation as fast as possible\n        if unitTable then\n            local values = unitTable[1]\n            local n = #values\n            if n > minSamples then\n                local a, b = 0, 0\n                local Ex2, Ex, Exy, Ey = 0, 0, 0, 0\n                \n                local value, x, y\n                for i = 1, n do\n                    value = values[i]\n                    x, y = value[1], value[2]\n                    \n                    Ex2 = Ex2 + x * x\n                    Ex = Ex + x\n                    Exy = Exy + x * y\n                    Ey = Ey + y\n                end\n                -- invariant to find matrix inverse\n                local invariant = 1 / (Ex2 * n - Ex * Ex)\n                -- Solve for a and b\n                a = (-Ex * Exy * invariant) + (Ex2 * Ey * invariant)\n                b = (n * Exy * invariant) - (Ex * Ey * invariant)\n                if b ~= 0 then\n                    -- Use best fit line to calculate estimated time to reach target health\n                    seconds = (percentage - a) / b\n                    -- Subtract current time to obtain \"time remaining\"\n                    seconds = math.min(7777, seconds - (GetTime() - unitTable[2]))\n                    if seconds < 0 then\n                        seconds = 9999\n                    end\n                end\n            end\n        end\n        \n        return seconds\n    end\n    \n    function envTable.updateUnit(unitId, npcId)\n        if UnitExists(unitId) and (not envTable.onlyShowOnBoss or UnitLevel(unitId) == -1) then\n            envTable.TTDRefresh(unitId)\n            local GUID = UnitGUID(unitId)\n            local customPercent = envTable.customPercent[npcId] or nil\n            envTable.TTD = envTable.TimeToX(GUID, customPercent or envTable.config.pctHP, 3)\n            if envTable.TTD < 7777 and envTable.TTD < envTable.config.duration then\n                envTable.show = true\n                envTable.updateText()\n            end\n        end\n    end\n    \n    function envTable.updateText()\n        ---@type string|number\n        local ret = \"\"\n        \n        local number = envTable.TTD\n        \n        if not number or number == 0 or not envTable.show then\n            unitFrame.healthBar.ttdTextFrame:SetText(\"\")\n            return\n        end\n        \n        local H = floor(number / 3600)\n        local M = floor((number - (floor(number / 3600) * 3600)) / 60)\n        local S = number - math.floor(number / 60) * 60\n        if H > 0 then\n            ret = (\"%02d:%02d:%02d\"):format(H, M, S)\n        elseif M > 0 then\n            ret = (\"%02d:%02d\"):format(M, S)\n        else\n            ret = floor(S)\n        end\n        \n        unitFrame.healthBar.ttdTextFrame:SetText(ret)\n    end\nend",
},
["__TrashAt"] = 1726797648,
["Time"] = 1724884177,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 2125377,
["Enabled"] = false,
["Revision"] = 199,
["semver"] = "",
["Author"] = "Viash-Thrall",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Time to Die (TTD)",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
["extraLowScale"] = 0.79999995231628,
["higherScale"] = 1.1999999284744,
["scale"] = true,
["lowScale"] = 0.79971849918365,
["midScale"] = 0.89680552482605,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local prioScaleMap = {\n        [1] = modTable.config.midScale, -- 0.9\n        [2] = modTable.config.lowScale, -- 0.8\n        [3] = modTable.config.extraLowScale, -- 0.7,\n        [4] = modTable.config.higherScale -- 1.1\n    }\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[153285] = 2, --Testing Dummy        \n        --[194644] = 4, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        \n        --Nokhud Offensive\n        [195875] = 2, --Desecrated Bakar\n        [195855] = 1, -- Risen Warrior\n        \n        \n        --Dawn of the Infinite\n        [204536] = 2, --Blight Chunk\n        [206063] = 1, -- Temporal Deviation\n        \n        --Waycrest manor\n        [131669] = 1, --Jagged Hound\n        \n        --Atal'Dazar\n        [128435] = 1, --Saurid's\n        \n        --Darkheart Thicket\n        [100529] = 2, --Hatespawn Slime\n        [101074] = 2, --Hatespawn Whelpling\n        \n        --Everbloom\n        [81864] = 1, --Dreadpetal\n        [84401] = 2, --Swift Sproutling\n        \n        --Blackrook Hold\n        [98677] = 2, --Rook Spiderling\n        [98900] = 1, --Wyrmtongue Trickster\n        [102781] = 2, --Fel Bat Pup\n        \n        --Throne of the tides\n        [40923] = 2, --Unstable Corruption\n        \n        --Halls of Infusion\n        [190923] = 2, --Zephyrling\n        \n        --Brackenhide Hollow\n        [189299] = 2, -- Decaying Slime\n        [189363] = 2, -- Infected Lasher\n        [194373] = 1, -- Witherling\n        \n        --Uldaman\n        [184134] = 2, -- Scavaging Leaper\n        \n        --Nelth's Lair\n        [96247] = 2, -- Vileshard Crawler\n        [102430] = 2, --Tarspitter Slug\n        \n        -- Freehold\n        [130024] = 2, --Soggy Shiprat\n        \n        -- Underrot\n        [131402] = 1, --Underrot Tick\n        \n        -- Temple of the Jade Serpent\n        [58319] = 2, --Lesser Sha\n        [62358] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [195579] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [105703] = 2, --Mana Wyrm\n        [104295] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [77006] = 2, --Corpse Skitterling\n        [75451] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [196642] = 2, --Hungry Lasher\n        [197398] = 2, --Hungry Lasher\n        [196694] = 1, --Arcane Forager\n        [192329] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [191313] = 2, -- Volatile Sapling\n        [187242] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [190205] = 1, --Scorchling\n        [197509] = 2, --Primal Thundercloud\n        [187894] = 1, --Infused Whelp\n        \n        --Karazhan\n        \n        --Tazavesh\n        [178163] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [163089] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [166264] = 2, --Spare Parts\n        [171500] = 2, --Shuffling Corpse\n        [165138] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [171455] = 2, --Stonewall Gargon\n        [168457] = 2, --Stonewall Gargon\n        [166589] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [168969] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [168986] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [167892] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Amirdrassil\n        [210231] = 1, --Tainted Lasher\n        [211306] = 2, --Fiery vines\n        \n        --Vault\n        [194991] = 1, --Oathsworn Vanguard\n        [191714] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [183669] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [169925] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [144300] = 2, -- \n        [189707] = 2, --Chaotic Motes\n    }\n    \n    modTable.isSpiteful = function(id)\n        return tonumber(id) == 174773\n    end\n    \n    modTable.parseGUID = function(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    modTable.spitefulTargetsPlayer = function(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\n    \n    modTable.getScale = function(prio)\n        if not modTable.config.scale then\n            return nil\n        end\n        \n        return prioScaleMap[prio]\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
},
["__TrashAt"] = 1726797653,
["Time"] = 1713704142,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 1543,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Priority based scaling",
["Options"] = {
{
["Type"] = 4,
["Name"] = "Enable Scaling",
["Value"] = true,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Name"] = "Mid prio",
["Value"] = 0.75,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "midScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Name"] = "Low prio",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "lowScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Name"] = "Very Low Prio",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "extraLowScale",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Name"] = "Higher Priority",
["Value"] = 1.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "higherScale",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, -- Chaotic Essence\n        [189707] = true, -- Chaotic mote \n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, -- Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        \n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["__TrashAt"] = 1726797654,
["Time"] = 1704504618,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 245,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Performance Units",
["Options"] = {
{
["Type"] = 4,
["Name"] = "Performance",
["Value"] = true,
["Key"] = "performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Force Blizzard",
["Value"] = false,
["Key"] = "forceBlizz",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
},
["__TrashAt"] = 1726797660,
["Time"] = 1702817476,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/UMY67A2bw/1",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 112,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Health / Max Health (%)",
},
{
["OptionsValues"] = {
["castNameSize"] = 50,
["colorInterruptSoon"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorInterruptAvailable"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorNoInterrupt"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["colorProtected"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
},
["LastHookEdited"] = "Constructor",
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcd = C_Spell.GetSpellCooldown(61304) -- GCD\n        local gcdSTART, gcdDUR = gcd.startTime, gcd.duration\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellCD = C_Spell.GetSpellCooldown(spellID)\n        local spellStart, spellDuration  = spellCD.startTime, spellCD.duration\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
},
["__TrashAt"] = 1726797664,
["Time"] = 1724385819,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/3408lMaNb/3",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1332,
["semver"] = "1.0.2",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["Name"] = "Enhanced Enemy Castbar [Plater]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = true,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = true,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
["Value"] = 60,
["Key"] = "castNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcd = C_Spell.GetSpellCooldown(61304) -- GCD\n        local gcdSTART, gcdDUR = gcd.startTime, gcd.duration\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellCD = C_Spell.GetSpellCooldown(spellID)\n        local spellStart, spellDuration  = spellCD.startTime, spellCD.duration\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["version"] = 3,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Find Weakness\"] = 93,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["__TrashAt"] = 1726797666,
["Time"] = 1697196348,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 516,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Aura Reorder [Plater]",
},
},
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Unit - Show Energy"] = 11,
["Cast - Ultra Important"] = 14,
["Cast - Castbar is Timer [P]"] = 2,
["Blink by Time Left"] = 1,
["Cast - Shining Green [P]"] = 3,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Voidzone [P]"] = 2,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Fixate"] = 11,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Countdown"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - AoE With Range [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Cast - On Going Cast [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Shield Interrupt"] = 2,
["Unit - Important"] = 11,
["Auto Set Skull"] = 11,
["Cast - Very Important"] = 15,
["Color Change"] = 1,
["Cast - Quick Flash"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Watch Step [P]"] = 1,
["Add - Warning [P]"] = 5,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Important by Color [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Aura - Buff Alert"] = 15,
["Spiteful Affix"] = 3,
["Cast - Alert + Timer [P]"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Important Target [P]"] = 2,
["Aura Border Color"] = 1,
["Cast - Stop Casting"] = 4,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Cast - Glowing [P]"] = 10,
["Cast - Heroic Leap [P]"] = 3,
["Explosion Affix M+"] = 14,
["Fixate On You"] = 11,
},
["show_healthbars_on_softinteract"] = false,
["aura2_grow_direction"] = 3,
["indicator_faction"] = false,
["first_run3"] = true,
["dps"] = {
["colors"] = {
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
},
},
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["cast_statusbar_use_fade_effects"] = false,
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["version"] = 107,
["patch_version"] = 37,
["auto_toggle_stacking"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 8,
["auto_toggle_enemy"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
},
["Jundies - Season 3 M+ and Ra"] = {
["target_highlight"] = false,
["extra_icon_use_blizzard_border_color"] = false,
["aura_sort"] = true,
["npcs_renamed"] = {
[173044] = "Stitcher",
[197698] = "Thundercunt",
[176394] = "Worker",
[192333] = "Alpha",
[178141] = "Fish Dicker",
[40765] = "Chief Crab",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[180015] = "Dickhand",
[176523] = "Painsmith",
[185683] = "Speed Relic",
[98521] = "Etheldrin",
[101839] = "Cat",
[199368] = "Big Crystal",
[164967] = "Dickus",
[179842] = "Assclapper",
[144298] = "Mk III",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[181224] = "Da Sausage",
[114627] = "Terror",
[168969] = "Green Slime",
[189813] = "Dathea",
[174843] = "Maitre D",
[184130] = "Earthen",
[184908] = "Haste Boi",
[179733] = "Fish Dick",
[184972] = "Eggnog",
[131823] = "M'lady",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[151649] = "Mk I",
[98538] = "Velandras",
[190340] = "Defender",
[208445] = "Larodar",
[131825] = "Brian",
[180990] = "Jailer",
[175663] = "Hill Brad",
[135048] = "Bacon",
[185610] = "Simp",
[59555] = "Haunting",
[195929] = "Twomen",
[189722] = "Gulp This",
[185680] = "Haste Relic",
[190128] = "Zul'gondeez",
[98696] = "Illysanna",
[209090] = "T. Swift",
[98965] = "Kur'talos",
[191736] = "Beak Bitch",
[175646] = "S.U.C.C. Master",
[181548] = "Absolution",
[59726] = "Pearl",
[214012] = "Dark ",
[174773] = "Spiteful",
[168153] = "Plaguecock",
[32666] = "Uh oh",
[181546] = "Renewal",
[196116] = "Furry",
[164705] = "Haste Slime",
[99192] = "Xavius",
[194897] = "Stormsurge Totem",
[102781] = "Bat!",
[188026] = "Skull Emoji",
[181549] = "War",
[164501] = "Mute Me",
[167731] = "Separator",
[201155] = "Nascent Dragon",
[184582] = "Eric",
[151657] = "Bomb",
[168310] = "Plaguecock",
[182169] = "Lithium",
[197298] = "Nascent Dragon",
[164707] = "Purple Slime",
[190484] = "Cracka",
[197219] = "Big Lasher",
[162691] = "Blightboner",
[70245] = "uh oh",
[193457] = "Ballerina",
[180773] = "Trash Can",
[181551] = "Duty",
[165946] = "Mordretha",
[185685] = "CDR Relic",
[198998] = "Tyr",
[194315] = "Shlongo",
[114632] = "Attendant",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[184911] = "CDR Boi",
[164804] = "Simp Tree",
[179334] = "Not the boss",
[178171] = "Don't Pull Me",
[194316] = "I'm Zarii",
[144294] = "Twinkerer",
[175806] = "Sa'lami",
[198047] = "Tempest",
[191222] = "Frost Dragon",
},
["blizzard_nameplate_large_font"] = "Expressway",
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:20: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateResourceOnTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateLargerScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateSelfScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:19: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowSelf"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:5943: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:5941>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateGlobalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:9003: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:8998>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOverlapH"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8681",
["nameplateMotion"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateSelfAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["SoftTargetNameplateInteract"] = "Interface/AddOns/Plater/options/Plater_O_Advanced.lua:215",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"=(tail call)\"]: ?\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:7: in function <...ace/AddOns/AdvancedInterfaceOptions/basicOptions.lua:5>\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:172: in function `SetCVar'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:199: in function `SetValue'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:1005: in function <...ace/AddOns/AdvancedInterfaceOptions/basicOptions.lua:1002>\n",
["nameplateSelfBottomInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:18: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowOnlyNames"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateSelfTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["all-consuming spite"] = {
343553,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["freezing ice stone"] = {
402940,
403391,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["insidious chill"] = {
391566,
391568,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["moonkin aura"] = {
209740,
209746,
},
["in the spotlight"] = {
227931,
312926,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
},
["url"] = "https://wago.io/ak3iS95aa/98",
["blizzard_nameplate_font_override_enabled"] = true,
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["health_cutoff_upper"] = false,
["cast_statusbar_spark_alpha"] = 1,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["spellname_text_font"] = "Expressway",
["castbar_offset"] = -55,
["spellpercent_text_font"] = "Expressway",
["mana_incombat"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["cast"] = {
170,
},
["percent_text_size"] = 9,
["castbar_enabled"] = false,
["cast_incombat"] = {
170,
},
["percent_text_color"] = {
1,
1,
1,
},
["percent_text_font"] = "Expressway",
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["mana"] = {
168,
4,
},
["power_percent_text_size"] = 8,
["percent_text_anchor"] = {
["y"] = 1.2999992370605,
},
["healthbar_color"] = {
0,
0,
0,
},
["module_enabled"] = false,
},
["friendlyplayer"] = {
["actorname_text_font"] = "Expressway",
["actorname_use_friends_color"] = false,
["spellpercent_text_font"] = "Expressway",
["show_guild_name"] = true,
["actorname_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["percent_text_show_decimals"] = false,
["actorname_guild_color"] = {
0.49803921568627,
},
["cast_incombat"] = {
135,
7,
},
["percent_text_font"] = "Expressway",
["spellname_text_font"] = "Expressway",
["percent_show_percent"] = false,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["actorname_friend_color"] = {
0.70980392156863,
},
["only_thename"] = true,
["level_text_font"] = "Expressway",
["actorname_use_guild_color"] = false,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["show_guild_name"] = false,
["actorname_use_class_color"] = true,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["big_actortitle_text_size"] = 8,
["fixed_class_color"] = {
0,
1,
0,
1,
},
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["enabled"] = false,
["percent_text_show_decimals"] = false,
["cast_incombat"] = {
135,
7,
},
["click_through"] = true,
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
nil,
3,
},
["big_actorname_text_font"] = "Expressway",
["actorname_use_guild_color"] = true,
["actorname_text_size"] = 9,
["actorname_use_friends_color"] = true,
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["percent_text_font"] = "Expressway",
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["buff_frame_y_offset"] = 10,
["actorname_guild_color"] = {
0.49803921568627,
1,
0.2,
1,
},
["percent_show_percent"] = false,
["quest_enabled"] = false,
["actorname_friend_color"] = {
0.70980392156863,
1,
1,
1,
},
["follow_blizzard_npc_option"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["level_text_alpha"] = 0.29999998211861,
["mana"] = {
nil,
3,
},
["spellname_text_font"] = "Expressway",
["only_thename"] = true,
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
},
["enemynpc"] = {
["actorname_text_font"] = "Expressway",
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["actorname_text_size"] = 9,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_font"] = "Expressway",
["spellname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["big_actorname_text_font"] = "Expressway",
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["global_health_width"] = 132,
["enemyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["show_guild_name"] = true,
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["big_actortitle_text_size"] = 10,
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Expressway",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["spellname_text_size"] = 9,
["level_text_alpha"] = 0.29999998211861,
["spellname_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["global_health_height"] = 16,
},
["health_selection_overlay"] = "PlaterFocus",
["aura_y_offset"] = 1.5,
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["first_run2"] = true,
["indicator_spec"] = false,
["border_thickness"] = 1.2000000476837,
["resources_settings"] = {
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-75-0EEA1695"] = "SoulShards",
["Player-5764-00018799"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-3678-0D44FD01"] = "ComboPoints",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4184-0021692E"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-3296-00945C33"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-970-006B99B8"] = "ComboPoints",
["Player-3674-0898468A"] = "SoulShards",
},
["global_settings"] = {
["anchor"] = {
["y"] = 9.7099990844727,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
},
["health_animation_time_dilatation"] = 1.6699999570847,
["npc_cache"] = {
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[33432] = {
"Leviathan Mk II",
"Ulduar",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[213434] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[185800] = {
"Xerimok",
"Grim Batol",
"enUS",
},
[190406] = {
"Aqualing",
"Halls of Infusion",
"enUS",
},
[379149] = {
"Hoard of Draconic Delicacies",
"Vault of the Incarnates",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[219066] = {
"Inflicted Civilian",
"The Rookery",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34137] = {
"Winter Jormungar",
"Ulduar",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[161241] = {
"Voidweaver Mal'thir",
"The Underrot",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[22898] = {
"Supremus",
"Black Temple",
"enUS",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[161243] = {
"Samh'rek, Beckoner of Chaos",
"The Underrot",
},
[33754] = {
"Dark Rune Thunderer",
"Ulduar",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[478443] = {
"Mislaid Curiosity",
"Tak-Rethan Abyss",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[161244] = {
"Blood of the Corruptor",
"The Underrot",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[127482] = {
"Sewer Vicejaw",
"Tol Dagor",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131825] = {
"Sister Briar",
"UNKNOWN",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[127484] = {
"Jes Howlis",
"Tol Dagor",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[194264] = {
"Lever",
"Ulduar",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134390] = {
"Sand-crusted Striker",
"Temple of Sethraliss",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[32926] = {
"Flash Freeze",
"Ulduar",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[33822] = {
"Twilight Guardian",
"Ulduar",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34014] = {
"Sanctum Sentry",
"Ulduar",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[228044] = {
"Reno Jackson",
"The Waterworks",
"enUS",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[220624] = {
"Suspicious Niffen",
"Tak-Rethan Abyss",
"enUS",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[127488] = {
"Ashvane Flamecaster",
"Tol Dagor",
},
[216275] = {
"Brann's Epic Egg",
"Tak-Rethan Abyss",
"enUS",
},
[39388] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[433961] = {
"Crate of Mussels",
"Mycomancer Cavern",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Uldaman: Legacy of Tyr",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[433967] = {
"Princess Pumpkin",
"Mycomancer Cavern",
"enUS",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[33824] = {
"Twilight Shadowblade",
"Ulduar",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[32865] = {
"Thorim",
"Ulduar",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[210910] = {
"Doomfiend",
"Ulduar",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[216541] = {
"Threadmaestro Fothis",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[172021] = {
"Coldheart Automaton",
"Torghast, Tower of the Damned",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[216544] = {
"Sureki String Leader",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[297860] = {
"General's Cache",
"Ulduar",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[143622] = {
"Wild Imp",
"Ulduar",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[33699] = {
"Storm Tempered Keeper",
"Ulduar",
"enUS",
},
[466232] = {
"Kriegval's Rest",
"Kriegval's Rest",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[435016] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[127497] = {
"Ashvane Warden",
"Tol Dagor",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[220643] = {
"Deepwater Makura",
"Tak-Rethan Abyss",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[221155] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[297869] = {
"Titan's Cache",
"Ulduar",
"enUS",
},
[441671] = {
"Priory Door",
"Priory of the Sacred Flame",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[451396] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[216554] = {
"Sureki String Conductor",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[135699] = {
"Ashvane Jailer",
"Tol Dagor",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[139284] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[216560] = {
"Al'haggro",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[216561] = {
"Gahn'dante",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[139799] = {
"Ironhull Apprentice",
"Shrine of the Storm",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[376193] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[193534] = {
"Strunraan",
"10.0 Dragon Isles",
},
[376194] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[376196] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[464729] = {
"|cff0070ddBountiful Heavy Trunk",
"The Waterworks",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205306] = {
"Fractured Causality",
"10.1.5 Time Rifts - Demon (Azewrath)",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[376198] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205307] = {
"Fractured Causality",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[413049] = {
"Ironclaw",
"The Waterworks",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[136735] = {
"Ashvane Marine",
"Tol Dagor",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[455532] = {
"|cff1EFF00Sturdy Chest",
"The Waterworks",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[138019] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[189707] = {
"Chaotic Mote",
"Castle Nathria",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[32874] = {
"Iron Ring Guard",
"Ulduar",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[22874] = {
"Coilskar Harpooner",
"Black Temple",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[23418] = {
"Essence of Suffering",
"Black Temple",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[401814] = {
"Void-Touched Chest",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[216582] = {
"Kx",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[189973] = {
"Goldclover",
"Ulduar",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[456583] = {
"Lost Shoe",
"Mycomancer Cavern",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[246779] = {
"Font of Power",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[155433] = {
"Void-Touched Emissary",
"Temple of Sethraliss",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[384944] = {
"Reverberating Boulder",
"Vault of the Incarnates",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[190496] = {
"Terros",
"Vault of the Incarnates",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[226065] = {
"Hollow Gigantobella",
"Mycomancer Cavern",
"enUS",
},
[214551] = {
"Wandering Gutter",
"Tak-Rethan Abyss",
"enUS",
},
[376264] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[376269] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[208670] = {
"Glorious Vanguard",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[376785] = {
"Cushion",
"Brackenhide Hollow",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[414657] = {
"Prototype Stomping Shoes Chest",
"The Waterworks",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[191019] = {
"Adder's Tongue",
"Ulduar",
"enUS",
},
[225204] = {
"Zekvir",
"Zekvir's Lair",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[445685] = {
"Barred Door",
"Zekvir's Lair",
"enUS",
},
[33202] = {
"Ancient Water Spirit",
"Ulduar",
"enUS",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"The Sinkhole",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[455525] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[454055] = {
"Luredrop",
"The Underkeep",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[34034] = {
"Swarming Guardian",
"Ulduar",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[423367] = {
"Sporefused Mycobloom",
"Mycomancer Cavern",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[435015] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[464761] = {
"|cff0070ddBountiful Heavy Trunk",
"The Waterworks",
"enUS",
},
[455493] = {
"|cff1EFF00Sturdy Chest",
"Tak-Rethan Abyss",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[32883] = {
"Captured Mercenary Soldier",
"Ulduar",
"enUS",
},
[219681] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[32882] = {
"Jormungar Behemoth",
"Ulduar",
"enUS",
},
[454076] = {
"Mycobloom",
"Tak-Rethan Abyss",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[33431] = {
"Forest Swarmer",
"Ulduar",
"enUS",
},
[33651] = {
"VX-001",
"Ulduar",
"enUS",
},
[33715] = {
"Charged Sphere",
"Ulduar",
"enUS",
},
[455533] = {
"|cff1EFF00Sturdy Chest",
"Tak-Rethan Abyss",
"enUS",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[135246] = {
"\"Stabby\" Lottie",
"The Rotting Mire (Islands 9)",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[433964] = {
"Sack of Spices",
"Mycomancer Cavern",
"enUS",
},
[456130] = {
"Refreshment Table",
"Nerub-ar Palace",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23226] = {
"Illidari Elite",
"Black Temple",
"enUS",
},
[433563] = {
"Key Scroll",
"The Underkeep",
"enUS",
},
[376197] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[228030] = {
"Sir Finley Mrrgglton",
"The Waterworks",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[135759] = {
"Earthwall Totem",
"Kings' Rest",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[221158] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[33823] = {
"Twilight Slayer",
"Ulduar",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[403786] = {
"Antlered Skull",
"10.1.5 Time Rifts - Demon (Azewrath)",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[412125] = {
"Dream Rock",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[33515] = {
"Auriaya",
"Ulduar",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[134994] = {
"Spectral Headhunter",
"Kings' Rest",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[225708] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[455492] = {
"|cff1EFF00Sturdy Chest",
"Tak-Rethan Abyss",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[210478] = {
"Infected Beast",
"Mycomancer Cavern",
"enUS",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[216325] = {
"Crazed Predator",
"Tak-Rethan Abyss",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[210479] = {
"Carnivorous Lasher",
"Mycomancer Cavern",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[135764] = {
"Explosive Totem",
"Kings' Rest",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33430] = {
"Guardian Lasher",
"Ulduar",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[441670] = {
"Priory Door",
"Priory of the Sacred Flame",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[216578] = {
"Swarm-Maven Donmiss",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[33110] = {
"Dark Rune Acolyte",
"Ulduar",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[32886] = {
"Dark Rune Acolyte",
"Ulduar",
"enUS",
},
[222222] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[34134] = {
"Winter Revenant",
"Ulduar",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[445401] = {
"Kuldas' Toolbox",
"Awakening The Machine",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[212489] = {
"Spirit Wolf",
"Ulduar",
"enUS",
},
[32878] = {
"Dark Rune Evoker",
"Ulduar",
"enUS",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[194108] = {
"Summoning Portal",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[32877] = {
"Dark Rune Warbringer",
"Ulduar",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[227373] = {
"Vicious Spiderling",
"Mycomancer Cavern",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[402922] = {
"Suspicious Lever",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[33527] = {
"Nature's Blade",
"Ulduar",
"enUS",
},
[376191] = {
"Vault Door",
"Uldaman: Legacy of Tyr",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[423349] = {
"Sacred Flame",
"Priory of the Sacred Flame",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[381955] = {
"Challenger's Cache",
"Ruby Life Pools",
"enUS",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[281377] = {
"Freya's Heroic Gift",
"Ulduar",
"enUS",
},
[303147] = {
"Summoning Portal",
"Uldaman: Legacy of Tyr",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Tak-Rethan Abyss",
"enUS",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[165189] = {
"Hank",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17252] = {
"Krenvazin",
"Ulduar",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[380928] = {
"Crumbling Rock Vein",
"Uldaman: Legacy of Tyr",
"enUS",
},
[281373] = {
"Rare Cache of Winter",
"Ulduar",
"enUS",
},
[381967] = {
"Challenger's Cache",
"Algeth'ar Academy",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[127480] = {
"Stinging Parasite",
"Tol Dagor",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[33836] = {
"Bomb Bot",
"Ulduar",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
"enUS",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[445643] = {
"Challenger's Cache",
"Grim Batol",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[208380] = {
"Val'kyr Shadowguard",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[377165] = {
"Cushion",
"Brackenhide Hollow",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"The Waterworks",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[404492] = {
"Gilded Vase",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[403980] = {
"Discarded Wastelands Rocket Pack",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[219454] = {
"Crazed Abomination",
"The Underkeep",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[33722] = {
"Storm Tempered Keeper",
"Ulduar",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"Vault of the Incarnates",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[202824] = {
"Erratic Remnant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[33819] = {
"Twilight Frost Mage",
"Ulduar",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[33820] = {
"Twilight Pyromancer",
"Ulduar",
"enUS",
},
[33818] = {
"Twilight Adherent",
"Ulduar",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[130025] = {
"Irontide Thug",
"Tol Dagor",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[33772] = {
"Faceless Horror",
"Ulduar",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[219715] = {
"Kobyss Ambusher",
"The Sinkhole",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[225601] = {
"Webbed Victim",
"The Dawnbreaker",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[33271] = {
"General Vezax",
"Ulduar",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[226625] = {
"Cave Skipper",
"Tak-Rethan Abyss",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[403483] = {
"Time-Portal to Everywhere Inn",
"Naxxramas",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"The Waterworks",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[213577] = {
"Spitfire Charger",
"The Waterworks",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[139800] = {
"Galecaller Apprentice",
"Shrine of the Storm",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[220066] = {
"Scroll Bearer",
"The Underkeep",
"enUS",
},
[445633] = {
"Challenger's Cache",
"The Dawnbreaker",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[208461] = {
"Scorching Roots",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[189669] = {
"Binding Spear",
"Neltharus",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[131445] = {
"Block Warden",
"Tol Dagor",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[455690] = {
"DELVER'S CALL: Mycomancer Cavern",
"Mycomancer Cavern",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[219723] = {
"Royal Whisperer",
"Nerub-ar Palace",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[219724] = {
"Court Attendant",
"Nerub-ar Palace",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[219725] = {
"Chitin Knight",
"Nerub-ar Palace",
"enUS",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[198489] = {
"Denizen of the Dream",
"Ulduar",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[137591] = {
"Healing Tide Totem",
"Kings' Rest",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Uldaman: Legacy of Tyr",
"enUS",
},
[224077] = {
"Egg Cocoon",
"Zekvir's Lair",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[455704] = {
"DELVER'S CALL: The Sinkhole",
"The Sinkhole",
"enUS",
},
[223822] = {
"Queen's Guard Re'zah",
"Nerub-ar Palace",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[33528] = {
"Guardian of Life",
"Ulduar",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[403508] = {
"Cat Toy",
"Naxxramas",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[218962] = {
"Bloated Pest",
"The Underkeep",
"enUS",
},
[208728] = {
"Treasure Wraith",
"Tak-Rethan Abyss",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[219732] = {
"Drowned Arathi",
"The Sinkhole",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[33855] = {
"Junk Bot",
"Ulduar",
"enUS",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[433705] = {
"Pheromone Bottle",
"The Underkeep",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[455713] = {
"DELVER'S CALL: Kriegval's Rest",
"Kriegval's Rest",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"The Waterworks",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[22885] = {
"Dragon Turtle",
"Black Temple",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[54983] = {
"Treant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Mycomancer Cavern",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[442414] = {
"Shimmering Crystal",
"Tak-Rethan Abyss",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Mycomancer Cavern",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[115402] = {
"Bishop",
"Return to Karazhan",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[454188] = {
"Spoils of K'aresh",
"Nerub-ar Palace",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Mycomancer Cavern",
"enUS",
},
[415296] = {
"Repair Kit",
"Tak-Rethan Abyss",
"enUS",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[208224] = {
"Great Glorious Alliance Footman",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[376405] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[219035] = {
"Deepwalker Guardian",
"The Underkeep",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[98035] = {
"Dreadstalker",
"Ulduar",
"enUS",
},
[220314] = {
"Bogpiper",
"Mycomancer Cavern",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"The Waterworks",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[403977] = {
"Discarded Wastelands Rocket Pack",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[214684] = {
"Invading Scrapper",
"Tak-Rethan Abyss",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[203878] = {
"Kobold Mystic",
"The Waterworks",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"Tak-Rethan Abyss",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[100820] = {
"Spirit Wolf",
"Ulduar",
"enUS",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[454200] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[220001] = {
"Black Blood Ooze",
"The Underkeep",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[223839] = {
"Queen's Guard Ge'zah",
"Nerub-ar Palace",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[390749] = {
"Challenger's Cache",
"Halls of Infusion",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[62005] = {
"Beast",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[219746] = {
"Silken Tomb",
"Nerub-ar Palace",
"enUS",
},
[390748] = {
"Challenger's Cache",
"Neltharus",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[23469] = {
"Enslaved Soul",
"Black Temple",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[454207] = {
"|cff1EFF00Sturdy Chest",
"The Waterworks",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[390750] = {
"Challenger's Cache",
"Uldaman: Legacy of Tyr",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[390752] = {
"Potion Cauldron of Ultimate Power |A:Professions-Icon-Quality-Tier3-Small:20:20|a",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[281374] = {
"Cache of Winter",
"Ulduar",
"enUS",
},
[380921] = {
"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Mycomancer Cavern",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[220310] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[376406] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[455759] = {
"",
"The Underkeep",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[208243] = {
"Nerubian Slasher",
"The Underkeep",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[33350] = {
"Mimiron",
"Ulduar",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[33670] = {
"Aerial Command Unit",
"Ulduar",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[414315] = {
"Mycobloom",
"Mycomancer Cavern",
"enUS",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[208244] = {
"Nerubian Threadmancer",
"The Underkeep",
"enUS",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[465560] = {
"Bench",
"The Dawnbreaker",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[381946] = {
"Challenger's Cache",
"The Azure Vault",
"enUS",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[303148] = {
"Soulwell",
"Uldaman: Legacy of Tyr",
"enUS",
},
[224368] = {
"Chamber Expeller",
"Nerub-ar Palace",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[211063] = {
"Fungal Podling",
"Mycomancer Cavern",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[384641] = {
"Portal to Valdrakken",
"Algeth'ar Academy",
"enUS",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[34183] = {
"Arachnopod Destroyer",
"Ulduar",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[207482] = {
"Invasive Sporecap",
"Mycomancer Cavern",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[32904] = {
"Dark Rune Commoner",
"Ulduar",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[35591] = {
"Fishing Bobber",
"The Waterworks",
"enUS",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[219766] = {
"Drowned Arathi",
"The Sinkhole",
"enUS",
},
[207740] = {
"Gnarled Lasher",
"Mycomancer Cavern",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[252775] = {
"Costume Chest: Disposable Holiday Outfits",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34184] = {
"Clockwork Mechanic",
"Ulduar",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[217208] = {
"Zekvir",
"The Underkeep",
"enUS",
},
[414330] = {
"Altered Mycobloom",
"Tak-Rethan Abyss",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[441966] = {
"Moldy Chest",
"Fungal Folly",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[136391] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[194437] = {
"Activate Tram",
"Ulduar",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[441968] = {
"Portal to Dornogal",
"Grim Batol",
"enUS",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[33806] = {
"Void Beast",
"Ulduar",
"enUS",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[177807] = {
"Customs Security",
"Tazavesh, the Veiled Market",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[34057] = {
"Assault Bot",
"Ulduar",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[23419] = {
"Essence of Desire",
"Black Temple",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[135846] = {
"Sand-Crusted Striker",
"Temple of Sethraliss",
},
[32906] = {
"Freya",
"Ulduar",
"enUS",
},
[420995] = {
"Web Blockade",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[134058] = {
"Galecaller Faye",
"Shrine of the Storm",
},
[428166] = {
"Duck Disguiser",
"Vault of the Incarnates",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[32907] = {
"Captured Mercenary Captain",
"Ulduar",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[409747] = {
"Construct Canker",
"Mycomancer Cavern",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[139946] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[443526] = {
"Supply Bag",
"The Waterworks",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[33228] = {
"Eonar's Gift",
"Ulduar",
"enUS",
},
[153285] = {
"Training Dummy",
"Eastern Kingdoms",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[132530] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[23371] = {
"Shadowmoon Fallen",
"Black Temple",
"enUS",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[32845] = {
"Hodir",
"Ulduar",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[413837] = {
"Dream Bench",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[408227] = {
"Leave Delve",
"Tak-Rethan Abyss",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[127486] = {
"Ashvane Officer",
"Tol Dagor",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[219022] = {
"Ascended Webfriar",
"The Underkeep",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[449688] = {
"Molten Engine",
"Tak-Rethan Abyss",
"enUS",
},
[98285] = {
"Smashum Grabb",
"Tanaan Jungle",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[378046] = {
"Stormforged Treasure Trove",
"Vault of the Incarnates",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[440935] = {
"Explorers' League Rope",
"The Sinkhole",
"enUS",
},
[220305] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[219763] = {
"Mirror Master Murkna",
"The Sinkhole",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[217748] = {
"Nexus-Princess Ky'veza",
"Nerub-ar Palace",
"enUS",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[34191] = {
"Trash",
"Ulduar",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[413877] = {
"Rich Ironclaw",
"The Waterworks",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[398015] = {
"Doodad_Icecrown_ThroneFrostyWind01",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[413880] = {
"Bismuth Seam",
"Mycomancer Cavern",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[33488] = {
"Saronite Vapors",
"Ulduar",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[155432] = {
"Enchanted Emissary",
"Temple of Sethraliss",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[413883] = {
"Crystallized Bismuth",
"The Sinkhole",
"enUS",
},
[34192] = {
"Boomer XP-500",
"Ulduar",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[413884] = {
"Weeping Bismuth",
"Tak-Rethan Abyss",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[390747] = {
"Challenger's Cache",
"Brackenhide Hollow",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[449709] = {
"Bouncy Shroom",
"Tak-Rethan Abyss",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[224663] = {
"Mesmerized Flyer",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[219034] = {
"Web Marauder",
"The Underkeep",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[465575] = {
"Bench",
"The Dawnbreaker",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
},
[207459] = {
"Fungal Rotcaster",
"Mycomancer Cavern",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34193] = {
"Clockwork Sapper",
"Ulduar",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[223318] = {
"Devoted Worshipper",
"Nerub-ar Palace",
"enUS",
},
[446645] = {
"Stuffed Barrel",
"The Waterworks",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[132481] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[23109] = {
"Vengeful Spirit",
"Black Temple",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[185262] = {
"Howling Creekborne",
"Dragon Isles",
},
[207450] = {
"Fungal Stabber",
"Mycomancer Cavern",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[376195] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[281370] = {
"Cache of Innovation",
"Ulduar",
"enUS",
},
[33838] = {
"Enslaved Fire Elemental",
"Ulduar",
"enUS",
},
[161124] = {
"Urg'roth, Breaker of Heroes",
"The Underrot",
},
[23374] = {
"Ashtongue Stalker",
"Black Temple",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[134602] = {
"Shrouded Fang",
"Temple of Sethraliss",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[221344] = {
"Gloom Hatchling",
"Nerub-ar Palace",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[222368] = {
"Exalted Priest",
"Nerub-ar Palace",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[233282] = {
"Refreshment Table",
"Vault of the Incarnates",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33755] = {
"Dark Rune Ravager",
"Ulduar",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[222881] = {
"Royal Weaver",
"Nerub-ar Palace",
"enUS",
},
[32938] = {
"Flash Freeze",
"Ulduar",
"enUS",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[376270] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[190170] = {
"Talandra's Rose",
"Ulduar",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[219045] = {
"Colossal Spider",
"Nerub-ar Palace",
"enUS",
},
[205308] = {
"Varian Wrynn",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[194569] = {
"Ulduar Teleporter",
"Ulduar",
"enUS",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[281368] = {
"Cache of Heroic Storms",
"Ulduar",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[281369] = {
"Cache of Storms",
"Ulduar",
"enUS",
},
[155434] = {
"Emissary of the Tides",
"Temple of Sethraliss",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[203951] = {
"Kobold Skullface",
"The Waterworks",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[380927] = {
"Crumbling Rock Vein",
"Uldaman: Legacy of Tyr",
"enUS",
},
[130026] = {
"Bilge Rat Seaspeaker",
"Tol Dagor",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[33966] = {
"Crusher Tentacle",
"Ulduar",
"enUS",
},
[281376] = {
"Freya's Gift",
"Ulduar",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[130027] = {
"Ashvane Marine",
"Tol Dagor",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[208441] = {
"Water Elemental",
"Grim Batol",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[32876] = {
"Dark Rune Champion",
"Ulduar",
"enUS",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[34133] = {
"Champion of Hodir",
"Ulduar",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[33526] = {
"Ironroot Lasher",
"Ulduar",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[33525] = {
"Mangrove Ent",
"Ulduar",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[216555] = {
"Heelripper",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[413046] = {
"Bismuth",
"Kriegval's Rest",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[455514] = {
"|cff1EFF00Sturdy Chest",
"Tak-Rethan Abyss",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[422154] = {
"Brann's Cozy Campfire",
"Tak-Rethan Abyss",
"enUS",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[219683] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[219856] = {
"Researcher Ven'kex",
"The Underkeep",
"enUS",
},
[485669] = {
"DELVER'S CALL: Fungal Folly",
"Fungal Folly",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[136665] = {
"Ashvane Spotter",
"Tol Dagor",
},
[219912] = {
"Crawler",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[456581] = {
"Egg Clutch",
"Mycomancer Cavern",
"enUS",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[430521] = {
"Priceless Pumpkin",
"Mycomancer Cavern",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[442763] = {
"Soggy Chest",
"Tak-Rethan Abyss",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[487815] = {
"DELVER'S CALL: The Waterworks",
"The Waterworks",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[413590] = {
"|cffA335EEBountiful Coffer",
"The Waterworks",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[454071] = {
"Mycobloom",
"Mycomancer Cavern",
"enUS",
},
[34135] = {
"Winter Rumbler",
"Ulduar",
"enUS",
},
[435018] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[435017] = {
"Web Spool",
"Nerub-ar Palace",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[214506] = {
"Broodtwister Ovi'nax",
"Nerub-ar Palace",
"enUS",
},
[451835] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[451834] = {
"Collision",
"Nerub-ar Palace",
"enUS",
},
[221669] = {
"Blight Swarmer",
"Nerub-ar Palace",
"enUS",
},
},
["spell_animation_list"] = {
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[20243] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.039999961853,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.10000000745058,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.02,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.7999999523163,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[280720] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 3,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.060000000745058,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["scale_upY"] = 1.05,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.75,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.0299999713898,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.2999999523163,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["scale_upY"] = 1.1,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3.6583230495453,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 6.460000038147,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["enabled"] = true,
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.1999999284744,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
},
["indicator_scale"] = 0.99999994039536,
["extra_icon_timer_decimals"] = true,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.50242385268211,
},
["indicator_anchor"] = {
["side"] = 6,
["x"] = 2,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["aura_padding"] = 0,
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Find Weakness\"] = 93,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1697196348,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 516,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Aura Reorder [Plater]",
},
{
["Enabled"] = true,
["Revision"] = 163,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "�r��ne-Kel'thuzad",
["PlaterCore"] = 1,
["Desc"] = "Adds double arrow as a target indicators option",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1702817419,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Name"] = "Double Arrow Target",
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 237,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Viashi-Antonidas",
["PlaterCore"] = 1,
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1702817442,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Name"] = "QuestProgress",
["Url"] = "https://wago.io/uwe9CEwMm/2",
["Icon"] = 132212,
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1702817467,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/VtPjNl8Mg/7",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1235,
["semver"] = "1.0.6",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Absorb Shields in Healthbar",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
},
["Time"] = 1696898532,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["arena"] = true,
["pvp"] = true,
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/Zz1aEIOJR/1",
["Icon"] = 132310,
["Enabled"] = true,
["Revision"] = 325,
["semver"] = "1.0.0",
["Author"] = "Irashi-Antonidas",
["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Sappable (Custom Icon)",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
},
["Time"] = 1696897899,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/lLK9gn7lc/5",
["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
["Enabled"] = true,
["Revision"] = 74,
["semver"] = "1.0.4",
["Author"] = "Ariani-Antonidas",
["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
["Prio"] = 99,
["version"] = 5,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Load Screen",
["Name"] = "Arena - Buff-Tracking Mode",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1702817454,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/-ny0jWQDT/2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = true,
["Revision"] = 213,
["semver"] = "1.0.1",
["Author"] = "Driani-Antonidas",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Target Border Color",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1723752569,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/12",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 455,
["semver"] = "1.0.11",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["Name"] = "Cast Icon Anchor + Border",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["version"] = 12,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696898479,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 108,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Pet Threat Highlighter",
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["SPpixelborder"] = false,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowyoff"] = 0.5,
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1696898535,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/uEnDIKvvP/2",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 981,
["semver"] = "1.0.1",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "Common Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Type",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Frequency",
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Number of Particles",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "X-Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Y-Offset",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Length",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Thickness",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Glow Scale",
},
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1702817430,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 89,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Force Threat Color NPC",
},
{
["OptionsValues"] = {
["EXEbdrcolor"] = {
1,
0.37647062540054,
0,
1,
},
["EXEhicolor"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
0,
},
["EXEhdcolor"] = {
0.99215692281723,
1,
0.94901967048645,
1,
},
["EXEalert"] = 0,
["EXEhbcon"] = false,
["onlyNPC"] = true,
["EXEbdron"] = false,
},
["HooksTemp"] = {
},
["UID"] = "0x6150129e178c7fc5",
["Hooks"] = {
["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
},
["Time"] = 1702817455,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/uCoprJFNs/3",
["Icon"] = 135358,
["Enabled"] = true,
["Revision"] = 3555,
["semver"] = "1.0.2",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Advanced Execute Range [Fix]",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Color Options",
["Name"] = "Execute Color Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhbcon",
["Value"] = true,
["Name"] = "Enable Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Healthbar Color",
},
{
["Type"] = 1,
["Key"] = "EXEhbcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Healthbar Color",
},
{
["Type"] = 4,
["Key"] = "EXEbdron",
["Value"] = false,
["Name"] = "Enable Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Border Color",
},
{
["Type"] = 1,
["Key"] = "EXEbdrcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Border Color",
},
{
["Type"] = 4,
["Key"] = "onlyNPC",
["Value"] = true,
["Name"] = "Only on NPC",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply these features only on NPC",
},
{
["Type"] = 4,
["Key"] = "TrackAggro",
["Value"] = false,
["Name"] = "Track Aggro Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Divisor Options",
["Name"] = "Execute Divisor Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhdoff",
["Value"] = false,
["Name"] = "Disable Execute Health Divisor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Disable Execute Health Divisor",
},
{
["Type"] = 1,
["Key"] = "EXEhdcolor",
["Value"] = {
1,
1,
1,
0.8500000089407,
},
["Name"] = "Execute Health Divisor Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Divisor Color",
},
{
["Type"] = 1,
["Key"] = "EXEhicolor",
["Value"] = {
0.27843137254902,
0,
1,
0.25,
},
["Name"] = "Execute Health Indicator Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Indicator Color",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
["Min"] = 0,
["Key"] = "EXEalert",
["Value"] = 13,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Preview Divisor %",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Force set health Divisor alpha value.",
["Min"] = 0,
["Key"] = "EXEhdalpha",
["Value"] = 50,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Divisor Alpha %",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
},
["Time"] = 1702817476,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/UMY67A2bw/1",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 112,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Health / Max Health (%)",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, -- Chaotic Essence\n        [189707] = true, -- Chaotic mote \n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, -- Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        \n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1704504618,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 245,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Performance Units",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["Time"] = 1700250838,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "ShadowDotsColors",
},
{
["OptionsValues"] = {
["castNameSize"] = 60,
["colorInterruptSoon"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorInterruptAvailable"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorNoInterrupt"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["colorProtected"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
},
["LastHookEdited"] = "Constructor",
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1723854009,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/3408lMaNb/3",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1329,
["semver"] = "1.0.2",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["Name"] = "Enhanced Enemy Castbar [Plater]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "CUSTOM CAST BAR COLORS",
["Value"] = "Feature - Custom cast bar coloring:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable custom colored enemy cast bars.",
["Value"] = true,
["Key"] = "showInterruptColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Value"] = true,
["Key"] = "showSecondaryInterrupts",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is available.",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Key"] = "colorInterruptAvailable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Key"] = "colorInterruptSoon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is unavailable.",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Key"] = "colorNoInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Key"] = "colorSecondaryInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Name"] = "Color for casts that are protected/un-interruptable.",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Key"] = "colorProtected",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Key"] = "colorTick",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Name"] = "Settings Target Name",
["Value"] = "Feature - Show name of target in the cast bar:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show the name of cast targets in the cast bar.",
["Value"] = true,
["Key"] = "showTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Hide my name when not in a party.",
["Value"] = true,
["Key"] = "hideNameSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Show \"Me\" instead of my character name.",
["Value"] = true,
["Key"] = "replaceName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 60,
["Key"] = "castNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
},
{
["Type"] = 5,
["Name"] = "Settings Border Flash",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Value"] = false,
["Key"] = "nameplateFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when not in a party.",
["Value"] = true,
["Key"] = "hideNameplateFlashSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Value"] = true,
["Key"] = "hideFlashAsTank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["version"] = 3,
},
{
["OptionsValues"] = {
["colour_names"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1702817524,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 257,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
["LastHookEdited"] = "",
["Name"] = "M+ Renamer",
},
{
["OptionsValues"] = {
["extraLowScale"] = 0.79999995231628,
["higherScale"] = 1.1999999284744,
["scale"] = true,
["lowScale"] = 0.79971849918365,
["midScale"] = 0.89680552482605,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local prioScaleMap = {\n        [1] = modTable.config.midScale, -- 0.9\n        [2] = modTable.config.lowScale, -- 0.8\n        [3] = modTable.config.extraLowScale, -- 0.7,\n        [4] = modTable.config.higherScale -- 1.1\n    }\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[153285] = 2, --Testing Dummy        \n        --[194644] = 4, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        \n        --Nokhud Offensive\n        [195875] = 2, --Desecrated Bakar\n        [195855] = 1, -- Risen Warrior\n        \n        \n        --Dawn of the Infinite\n        [204536] = 2, --Blight Chunk\n        [206063] = 1, -- Temporal Deviation\n        \n        --Waycrest manor\n        [131669] = 1, --Jagged Hound\n        \n        --Atal'Dazar\n        [128435] = 1, --Saurid's\n        \n        --Darkheart Thicket\n        [100529] = 2, --Hatespawn Slime\n        [101074] = 2, --Hatespawn Whelpling\n        \n        --Everbloom\n        [81864] = 1, --Dreadpetal\n        [84401] = 2, --Swift Sproutling\n        \n        --Blackrook Hold\n        [98677] = 2, --Rook Spiderling\n        [98900] = 1, --Wyrmtongue Trickster\n        [102781] = 2, --Fel Bat Pup\n        \n        --Throne of the tides\n        [40923] = 2, --Unstable Corruption\n        \n        --Halls of Infusion\n        [190923] = 2, --Zephyrling\n        \n        --Brackenhide Hollow\n        [189299] = 2, -- Decaying Slime\n        [189363] = 2, -- Infected Lasher\n        [194373] = 1, -- Witherling\n        \n        --Uldaman\n        [184134] = 2, -- Scavaging Leaper\n        \n        --Nelth's Lair\n        [96247] = 2, -- Vileshard Crawler\n        [102430] = 2, --Tarspitter Slug\n        \n        -- Freehold\n        [130024] = 2, --Soggy Shiprat\n        \n        -- Underrot\n        [131402] = 1, --Underrot Tick\n        \n        -- Temple of the Jade Serpent\n        [58319] = 2, --Lesser Sha\n        [62358] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [195579] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [105703] = 2, --Mana Wyrm\n        [104295] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [77006] = 2, --Corpse Skitterling\n        [75451] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [196642] = 2, --Hungry Lasher\n        [197398] = 2, --Hungry Lasher\n        [196694] = 1, --Arcane Forager\n        [192329] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [191313] = 2, -- Volatile Sapling\n        [187242] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [190205] = 1, --Scorchling\n        [197509] = 2, --Primal Thundercloud\n        [187894] = 1, --Infused Whelp\n        \n        --Karazhan\n        \n        --Tazavesh\n        [178163] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [163089] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [166264] = 2, --Spare Parts\n        [171500] = 2, --Shuffling Corpse\n        [165138] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [171455] = 2, --Stonewall Gargon\n        [168457] = 2, --Stonewall Gargon\n        [166589] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [168969] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [168986] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [167892] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Amirdrassil\n        [210231] = 1, --Tainted Lasher\n        [211306] = 2, --Fiery vines\n        \n        --Vault\n        [194991] = 1, --Oathsworn Vanguard\n        [191714] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [183669] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [169925] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [144300] = 2, -- \n        [189707] = 2, --Chaotic Motes\n    }\n    \n    modTable.isSpiteful = function(id)\n        return tonumber(id) == 174773\n    end\n    \n    modTable.parseGUID = function(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    modTable.spitefulTargetsPlayer = function(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\n    \n    modTable.getScale = function(prio)\n        if not modTable.config.scale then\n            return nil\n        end\n        \n        return prioScaleMap[prio]\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
},
["Time"] = 1713704142,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 1543,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Priority based scaling",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Mid prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Low prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Very Low Prio",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Higher Priority",
},
},
["LastHookEdited"] = "Initialization",
},
},
["last_news_time"] = 1696043087,
["auras_per_row_auto"] = false,
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 8,
["auras_per_row_amount2"] = 2,
["range_check_power_bar_alpha"] = 0.89999997615814,
["range_check_health_bar_alpha"] = 0.84999996423721,
["ghost_auras"] = {
["enabled"] = true,
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_show_crowdcontrol"] = true,
["blizzard_nameplate_large_font_size"] = 9,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
},
["health_cutoff"] = false,
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["crowdcontrol"] = {
1,
1,
1,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_buff"] = {
0.65098041296005,
0.011764707043767,
0.090196080505848,
0,
},
},
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["extra_icon_stack_outline"] = "OUTLINE",
["range_check_alpha"] = 0.89999997615814,
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
},
["aura2_grow_direction"] = 3,
["semver"] = "4.7.0",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.1999969482422,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark3",
["auto_toggle_friendly"] = {
["arena"] = true,
},
["indicator_faction"] = false,
["show_healthbars_on_not_attackable"] = true,
["aura_x_offset"] = 1.1999969482422,
["first_run3"] = true,
["transparency_behavior"] = 3,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["aura_consolidate"] = true,
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.8199996948242,
["x"] = 0,
["side"] = 12,
},
["extra_icon_width"] = 21,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Monk Statue"] = 2,
["Combo Points"] = 6,
["Extra Border"] = 2,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Execute Range"] = 1,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["update_throttle"] = 0.33000001311302,
["minor_width_scale"] = 0.99999994039536,
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["cast_statusbar_use_fade_effects"] = false,
["indicator_pet"] = false,
["npc_colors"] = {
[99358] = {
true,
false,
"fuchsia",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[134012] = {
false,
false,
"blue",
},
[207796] = {
true,
false,
"fuchsia",
},
[129601] = {
false,
false,
"blueviolet",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[161124] = {
false,
false,
"blue",
},
[200126] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
false,
false,
"mediumpurple",
},
[197697] = {
true,
false,
"fuchsia",
},
[132481] = {
false,
false,
"blue",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
false,
false,
"blue",
},
[197698] = {
true,
false,
"fuchsia",
},
[175576] = {
true,
false,
"fuchsia",
},
[199233] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
true,
false,
"blue",
},
[130435] = {
false,
false,
"white",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[178008] = {
true,
false,
"yellow",
},
[127111] = {
true,
false,
"blue",
},
[40634] = {
true,
false,
"deepskyblue",
},
[130436] = {
false,
false,
"blue",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[130437] = {
false,
false,
"fuchsia",
},
[192333] = {
true,
false,
"mediumpurple",
},
[134150] = {
false,
false,
"yellow",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
false,
false,
"blue",
},
[99366] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[205384] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[134158] = {
false,
false,
"blue",
},
[172265] = {
true,
false,
"deepskyblue",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[65317] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[129548] = {
false,
false,
"blueviolet",
},
[101991] = {
true,
false,
"blue",
},
[134418] = {
false,
false,
"springgreen",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[180070] = {
true,
false,
"fuchsia",
},
[138255] = {
false,
false,
"blueviolet",
},
[198868] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[150276] = {
false,
false,
"white",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[135699] = {
false,
false,
"darkgreen",
},
[97197] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"deepskyblue",
},
[198870] = {
true,
false,
"blue",
},
[195929] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[170483] = {
true,
false,
"fuchsia",
},
[98285] = {
false,
false,
"blue",
},
[168949] = {
false,
false,
"white",
},
[190688] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[139284] = {
false,
false,
"springgreen",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[129232] = {
false,
false,
"white",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[172021] = {
false,
false,
"white",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[180335] = {
true,
false,
"deepskyblue",
},
[202969] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[134174] = {
false,
false,
"springgreen",
},
[202971] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[186220] = {
true,
false,
"deepskyblue",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[168318] = {
true,
false,
"mediumpurple",
},
[163459] = {
true,
false,
"blue",
},
[83392] = {
false,
false,
"blue",
},
[178165] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[81283] = {
false,
false,
"deepskyblue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[198501] = {
true,
false,
"deepskyblue",
},
[45917] = {
true,
false,
"mediumpurple",
},
[162057] = {
true,
false,
"mediumpurple",
},
[150165] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[135204] = {
false,
false,
"springgreen",
},
[122972] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
false,
false,
"white",
},
[198503] = {
true,
false,
"deepskyblue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[139425] = {
false,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[196202] = {
true,
false,
"blue",
},
[138019] = {
false,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[186740] = {
false,
false,
"blue",
},
[129367] = {
false,
false,
"springgreen",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[174210] = {
true,
false,
"deepskyblue",
},
[100532] = {
true,
false,
"fuchsia",
},
[182778] = {
true,
false,
"fuchsia",
},
[165515] = {
false,
false,
"fuchsia",
},
[134058] = {
false,
false,
"yellow",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[195696] = {
true,
false,
"fuchsia",
},
[187768] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[129370] = {
false,
false,
"springgreen",
},
[151325] = {
true,
false,
"fuchsia",
},
[153755] = {
false,
false,
"white",
},
[189816] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[139946] = {
false,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[132530] = {
false,
false,
"blue",
},
[191225] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[105715] = {
true,
false,
"blue",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[132532] = {
false,
false,
"fuchsia",
},
[139949] = {
false,
false,
"springgreen",
},
[130012] = {
false,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[168594] = {
true,
false,
"mediumpurple",
},
[144298] = {
true,
false,
"blue",
},
[137521] = {
false,
false,
"fuchsia",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[196856] = {
true,
false,
"mediumpurple",
},
[96574] = {
true,
false,
"mediumpurple",
},
[198263] = {
true,
false,
"mediumpurple",
},
[190207] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"blue",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[135989] = {
false,
false,
"blue",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[179852] = {
true,
false,
"blue",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[177807] = {
false,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"blue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[129547] = {
false,
false,
"mediumpurple",
},
[190340] = {
true,
false,
"blue",
},
[150251] = {
true,
false,
"blue",
},
[204918] = {
true,
false,
"blue",
},
[195135] = {
true,
false,
"fuchsia",
},
[81279] = {
false,
false,
"deepskyblue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[114319] = {
true,
false,
"blue",
},
[184331] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[189555] = {
true,
false,
"deepskyblue",
},
[114544] = {
true,
false,
"fuchsia",
},
[155432] = {
false,
false,
"blueviolet",
},
[199549] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[135474] = {
true,
false,
"blue",
},
[185032] = {
true,
false,
"mediumpurple",
},
[155433] = {
false,
false,
"blueviolet",
},
[213806] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[131587] = {
true,
false,
"mediumpurple",
},
[195842] = {
true,
false,
"blue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[104251] = {
true,
false,
"fuchsia",
},
[127106] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[170480] = {
true,
false,
"mediumpurple",
},
[101438] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"mediumpurple",
},
[136470] = {
false,
false,
"springgreen",
},
[170882] = {
true,
false,
"blue",
},
[135846] = {
false,
false,
"blueviolet",
},
[186125] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[184335] = {
true,
false,
"deepskyblue",
},
[128967] = {
false,
false,
"fuchsia",
},
[206074] = {
true,
false,
"deepskyblue",
},
[190686] = {
true,
false,
"blue",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[184023] = {
true,
false,
"blue",
},
[189707] = {
false,
false,
"white",
},
[176974] = {
true,
false,
"fuchsia",
},
[179733] = {
true,
false,
"fuchsia",
},
[196203] = {
true,
false,
"deepskyblue",
},
[171805] = {
true,
false,
"blue",
},
[208193] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[201288] = {
true,
false,
"fuchsia",
},
[180429] = {
true,
false,
"mediumpurple",
},
[136735] = {
false,
false,
"fuchsia",
},
[196102] = {
false,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[197985] = {
true,
false,
"deepskyblue",
},
[81236] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"blue",
},
[83765] = {
false,
false,
"deepskyblue",
},
[45915] = {
true,
false,
"mediumpurple",
},
[135235] = {
false,
false,
"white",
},
[82579] = {
true,
false,
"deepskyblue",
},
[136186] = {
false,
false,
"fuchsia",
},
[189706] = {
true,
false,
"yellow",
},
[165414] = {
true,
false,
"deepskyblue",
},
[150168] = {
true,
false,
"fuchsia",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[114317] = {
true,
false,
"deepskyblue",
},
[114804] = {
true,
false,
"blue",
},
[163458] = {
true,
false,
"deepskyblue",
},
[175517] = {
true,
false,
"blue",
},
[100531] = {
true,
false,
"mediumpurple",
},
[114542] = {
true,
false,
"blue",
},
[194315] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[187969] = {
true,
false,
"blue",
},
[135365] = {
true,
false,
"fuchsia",
},
[167963] = {
true,
false,
"blue",
},
[168942] = {
true,
false,
"blue",
},
[40936] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[187155] = {
true,
false,
"blue",
},
[155434] = {
false,
false,
"blueviolet",
},
[163882] = {
true,
false,
"mediumpurple",
},
[208440] = {
true,
false,
"mediumpurple",
},
[195851] = {
false,
false,
"blue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[135239] = {
false,
false,
"white",
},
[150712] = {
false,
false,
"white",
},
[102232] = {
true,
false,
"blue",
},
[167965] = {
true,
false,
"blue",
},
[201223] = {
true,
false,
"blue",
},
[169861] = {
true,
false,
"blue",
},
[162691] = {
false,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[136391] = {
false,
false,
"blue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[184131] = {
true,
false,
"fuchsia",
},
[156212] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"blue",
},
[151353] = {
false,
false,
"white",
},
[199124] = {
true,
false,
"deepskyblue",
},
[135241] = {
false,
false,
"fuchsia",
},
[214140] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[134602] = {
false,
false,
"blue",
},
[156213] = {
false,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"blue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[193534] = {
false,
false,
"white",
},
[155830] = {
true,
false,
"deepskyblue",
},
[100485] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[183707] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[191230] = {
true,
false,
"fuchsia",
},
[182045] = {
true,
false,
"fuchsia",
},
[32666] = {
false,
false,
"blue",
},
[195930] = {
true,
false,
"mediumpurple",
},
[155831] = {
true,
false,
"fuchsia",
},
[204206] = {
true,
false,
"blue",
},
[206214] = {
true,
false,
"mediumpurple",
},
[115402] = {
false,
false,
"deepskyblue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[130025] = {
false,
false,
"blue",
},
[101637] = {
true,
false,
"mediumpurple",
},
[100486] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"blue",
},
[59546] = {
true,
false,
"blue",
},
[130404] = {
true,
false,
"mediumpurple",
},
[102788] = {
true,
false,
"blue",
},
[127486] = {
false,
false,
"darkgreen",
},
[127497] = {
false,
false,
"blue",
},
[189464] = {
true,
false,
"blue",
},
[168109] = {
true,
false,
"deepskyblue",
},
[192789] = {
false,
false,
"blue",
},
[168365] = {
false,
false,
"fuchsia",
},
[206066] = {
true,
false,
"deepskyblue",
},
[134990] = {
false,
false,
"springgreen",
},
[115640] = {
true,
false,
"fuchsia",
},
[130026] = {
false,
false,
"springgreen",
},
[135246] = {
false,
false,
"white",
},
[178630] = {
true,
false,
"deepskyblue",
},
[87252] = {
true,
false,
"mediumpurple",
},
[96587] = {
true,
false,
"deepskyblue",
},
[131666] = {
true,
false,
"blue",
},
[83892] = {
true,
false,
"deepskyblue",
},
[183671] = {
true,
false,
"fuchsia",
},
[190342] = {
true,
false,
"fuchsia",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[129552] = {
true,
false,
"mediumpurple",
},
[176551] = {
true,
false,
"deepskyblue",
},
[135759] = {
false,
false,
"fuchsia",
},
[144071] = {
false,
false,
"springgreen",
},
[190362] = {
true,
false,
"blue",
},
[130027] = {
false,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[92610] = {
true,
false,
"fuchsia",
},
[190690] = {
true,
false,
"mediumpurple",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[188673] = {
true,
false,
"mediumpurple",
},
[174197] = {
true,
false,
"deepskyblue",
},
[196576] = {
true,
false,
"blue",
},
[156157] = {
true,
false,
"blue",
},
[44404] = {
true,
false,
"deepskyblue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"blue",
},
[134994] = {
false,
false,
"fuchsia",
},
[81819] = {
true,
false,
"blue",
},
[115642] = {
true,
false,
"blue",
},
[98275] = {
true,
false,
"blue",
},
[163894] = {
true,
false,
"blue",
},
[98521] = {
true,
false,
"fuchsia",
},
[154744] = {
true,
false,
"fuchsia",
},
[179847] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[188703] = {
true,
false,
"yellow",
},
[169905] = {
true,
false,
"blue",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[152898] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"blue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[139799] = {
false,
false,
"blue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[186658] = {
true,
false,
"deepskyblue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[206351] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[191847] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[179842] = {
true,
false,
"fuchsia",
},
[197905] = {
true,
false,
"blue",
},
[115388] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[197145] = {
true,
false,
"mediumpurple",
},
[200840] = {
true,
false,
"mediumpurple",
},
[198424] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"deepskyblue",
},
[199703] = {
true,
false,
"fuchsia",
},
[188067] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[153285] = {
false,
false,
"gold",
},
[197146] = {
true,
false,
"mediumpurple",
},
[167607] = {
true,
false,
"mediumpurple",
},
[187154] = {
true,
false,
"fuchsia",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
false,
false,
"blue",
},
[45930] = {
true,
false,
"fuchsia",
},
[173044] = {
true,
false,
"deepskyblue",
},
[133593] = {
false,
false,
"springgreen",
},
[130400] = {
true,
false,
"mediumpurple",
},
[40943] = {
true,
false,
"deepskyblue",
},
[196115] = {
true,
false,
"blue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[199547] = {
true,
false,
"fuchsia",
},
[192800] = {
true,
false,
"blue",
},
[138254] = {
false,
false,
"fuchsia",
},
[129529] = {
true,
false,
"fuchsia",
},
[130661] = {
false,
false,
"springgreen",
},
[83894] = {
true,
false,
"mediumpurple",
},
[132491] = {
false,
false,
"fuchsia",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[131677] = {
true,
false,
"fuchsia",
},
[152009] = {
false,
false,
"white",
},
[197149] = {
true,
false,
"deepskyblue",
},
[197406] = {
true,
false,
"fuchsia",
},
[80936] = {
true,
false,
"blue",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[166589] = {
true,
false,
"fuchsia",
},
[152905] = {
true,
false,
"fuchsia",
},
[136665] = {
false,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
false,
false,
"blue",
},
[128434] = {
true,
false,
"blue",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[134364] = {
false,
false,
"springgreen",
},
[141284] = {
false,
false,
"springgreen",
},
[206230] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[113537] = {
true,
false,
"mediumpurple",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"fuchsia",
},
[164557] = {
true,
false,
"mediumpurple",
},
[116549] = {
true,
false,
"deepskyblue",
},
[186226] = {
true,
false,
"fuchsia",
},
[198047] = {
true,
false,
"blue",
},
[180015] = {
true,
false,
"blue",
},
[141283] = {
false,
false,
"blue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[127482] = {
false,
false,
"blue",
},
[87329] = {
false,
false,
"blue",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[185262] = {
false,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[137830] = {
true,
false,
"blue",
},
[194990] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[133482] = {
false,
false,
"blueviolet",
},
[169159] = {
true,
false,
"gold",
},
[135007] = {
false,
false,
"blue",
},
[190377] = {
true,
false,
"blue",
},
[135263] = {
false,
false,
"blueviolet",
},
[104300] = {
true,
false,
"deepskyblue",
},
[195876] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"mediumpurple",
},
[95769] = {
true,
false,
"deepskyblue",
},
[168384] = {
true,
false,
"blue",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[131812] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[208698] = {
true,
false,
"fuchsia",
},
[179388] = {
true,
false,
"deepskyblue",
},
[203812] = {
true,
false,
"fuchsia",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"blue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[167612] = {
true,
false,
"blue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[132126] = {
true,
false,
"blue",
},
[104270] = {
true,
false,
"mediumpurple",
},
[196263] = {
true,
false,
"deepskyblue",
},
[167876] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[197671] = {
true,
false,
"blue",
},
[197799] = {
true,
false,
"deepskyblue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[155090] = {
true,
false,
"deepskyblue",
},
[127799] = {
false,
false,
"blue",
},
[80805] = {
true,
false,
"mediumpurple",
},
[198311] = {
true,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"blue",
},
[199717] = {
true,
false,
"mediumpurple",
},
[138465] = {
false,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"blue",
},
[167493] = {
false,
false,
"blue",
},
[170690] = {
true,
false,
"blue",
},
[130485] = {
false,
false,
"white",
},
[127480] = {
false,
false,
"fuchsia",
},
[165763] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[175550] = {
true,
false,
"fuchsia",
},
[134629] = {
false,
false,
"blue",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
false,
false,
"blue",
},
[192796] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[41139] = {
true,
false,
"blue",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[168007] = {
true,
false,
"blue",
},
[82597] = {
true,
false,
"fuchsia",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[166301] = {
true,
false,
"fuchsia",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[135764] = {
false,
false,
"blueviolet",
},
[167113] = {
true,
false,
"blue",
},
[131436] = {
true,
false,
"mediumpurple",
},
[59553] = {
true,
false,
"mediumpurple",
},
[155221] = {
true,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"blue",
},
[164929] = {
true,
false,
"blue",
},
[169927] = {
true,
false,
"fuchsia",
},
[177716] = {
true,
false,
"deepskyblue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[155094] = {
false,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[131821] = {
true,
false,
"blue",
},
[114624] = {
true,
false,
"mediumpurple",
},
[199595] = {
true,
false,
"mediumpurple",
},
[163520] = {
true,
false,
"mediumpurple",
},
[185529] = {
true,
false,
"fuchsia",
},
[174773] = {
false,
false,
"blue",
},
[164506] = {
true,
false,
"blue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[165556] = {
true,
false,
"fuchsia",
},
[130488] = {
false,
false,
"fuchsia",
},
[141285] = {
false,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[189878] = {
true,
false,
"yellow",
},
[136643] = {
false,
false,
"blue",
},
[205622] = {
true,
false,
"mediumpurple",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[164921] = {
true,
false,
"deepskyblue",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"mediumpurple",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[127484] = {
false,
false,
"blueviolet",
},
[138187] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[45704] = {
true,
false,
"dimgray",
},
[100527] = {
true,
false,
"deepskyblue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[163128] = {
true,
false,
"deepskyblue",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[200836] = {
true,
false,
"mediumpurple",
},
[157017] = {
true,
false,
"blue",
},
[214012] = {
true,
false,
"mediumpurple",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[175861] = {
true,
false,
"fuchsia",
},
[198577] = {
true,
false,
"blue",
},
[98368] = {
true,
false,
"mediumpurple",
},
[155824] = {
true,
false,
"blue",
},
[162133] = {
true,
false,
"fuchsia",
},
[200137] = {
true,
false,
"deepskyblue",
},
[176521] = {
true,
false,
"blue",
},
[164563] = {
true,
false,
"blue",
},
[114634] = {
false,
false,
"white",
},
[165805] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[194487] = {
true,
false,
"blue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[126919] = {
true,
false,
"deepskyblue",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[84520] = {
true,
false,
"mediumpurple",
},
[151649] = {
false,
false,
"white",
},
[165076] = {
true,
false,
"blue",
},
[131445] = {
false,
false,
"blue",
},
[129788] = {
true,
false,
"deepskyblue",
},
[136139] = {
false,
false,
"white",
},
[81432] = {
true,
false,
"deepskyblue",
},
[198999] = {
false,
false,
"white",
},
[179841] = {
true,
false,
"deepskyblue",
},
[171376] = {
true,
false,
"blue",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[161241] = {
false,
false,
"springgreen",
},
[115019] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[186208] = {
true,
false,
"mediumpurple",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[167967] = {
true,
false,
"blue",
},
[104278] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[184132] = {
true,
false,
"blue",
},
[98081] = {
true,
false,
"fuchsia",
},
[194316] = {
true,
false,
"mediumpurple",
},
[56792] = {
true,
false,
"fuchsia",
},
[139800] = {
false,
false,
"fuchsia",
},
[161243] = {
false,
false,
"blueviolet",
},
[115020] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[127488] = {
false,
false,
"springgreen",
},
[162040] = {
true,
false,
"fuchsia",
},
[134390] = {
false,
false,
"blueviolet",
},
[196671] = {
true,
false,
"mediumpurple",
},
[161244] = {
false,
false,
"fuchsia",
},
[180348] = {
true,
false,
"blue",
},
[162049] = {
false,
false,
"fuchsia",
},
[150142] = {
true,
false,
"deepskyblue",
},
[127879] = {
false,
false,
"blue",
},
[212673] = {
true,
false,
"fuchsia",
},
[183495] = {
true,
false,
"mediumpurple",
},
[134139] = {
false,
false,
"blue",
},
[214441] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[205618] = {
true,
false,
"mediumpurple",
},
[95779] = {
true,
false,
"mediumpurple",
},
[91000] = {
true,
false,
"mediumpurple",
},
[178392] = {
true,
false,
"fuchsia",
},
[164707] = {
true,
false,
"mediumpurple",
},
[205623] = {
true,
false,
"mediumpurple",
},
[205363] = {
true,
false,
"deepskyblue",
},
[84400] = {
true,
false,
"mediumpurple",
},
[205619] = {
true,
false,
"mediumpurple",
},
[134137] = {
false,
false,
"springgreen",
},
[178171] = {
true,
false,
"fuchsia",
},
[183497] = {
true,
false,
"blue",
},
[190174] = {
true,
false,
"fuchsia",
},
[193373] = {
true,
false,
"fuchsia",
},
[141938] = {
false,
false,
"fuchsia",
},
[150250] = {
true,
false,
"deepskyblue",
},
[205620] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[151657] = {
false,
false,
"white",
},
[168153] = {
true,
false,
"fuchsia",
},
[137591] = {
false,
false,
"yellow",
},
[193760] = {
true,
false,
"mediumpurple",
},
[141939] = {
false,
false,
"blueviolet",
},
[80816] = {
true,
false,
"deepskyblue",
},
[178139] = {
true,
false,
"mediumpurple",
},
},
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.1999969482422,
["side"] = 7,
},
["auto_toggle_stacking"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
["tocversion"] = 100206,
["patch_version"] = 37,
["indicator_extra_raidmark"] = false,
["focus_as_target_alpha"] = true,
["transparency_behavior_use_division"] = true,
["indicator_rare"] = false,
["aura_show_debuffs_personal"] = false,
["aura_timer_text_font"] = "Expressway",
["aura_show_enrage"] = true,
["extra_icon_timer_font"] = "Expressway",
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["not_affecting_combat_alpha"] = 1,
["range_check_alpha_friendlies"] = 1,
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["extra_icon_height"] = 20,
["castbar_target_text_size"] = 9,
["non_targeted_alpha_enabled"] = true,
["castbar_target_font"] = "Expressway",
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.1999969482422,
["target_indicator"] = "Double Arrows",
["extra_icon_caster_font"] = "Expressway",
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Unit - Show Energy"] = 11,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Blink by Time Left"] = 1,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Explosion Affix M+"] = 14,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Unit Power"] = 1,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Explode on Die [P]"] = 1,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Voidzone [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Countdown"] = 11,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Tank Interrupt"] = 12,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Color Change"] = 1,
["Auto Set Skull"] = 11,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Unit - Important"] = 11,
["Cast - Heal Cut [P]"] = 3,
["Cast - Debuff [P]"] = 2,
["Spiteful Affix"] = 3,
["Cast - Quick Flash"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Aura - Buff Alert"] = 15,
["Aura Border Color"] = 1,
["Cast - Stop Casting"] = 4,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Glowing [P]"] = 10,
["Cast - On Going Cast [P]"] = 2,
["Cast - Shining Green [P]"] = 3,
["Fixate On You"] = 11,
},
["aura_tracker"] = {
["debuff_banned"] = {
["294934"] = true,
["353354"] = true,
["324260"] = true,
["391568"] = true,
["352534"] = true,
["6343"] = true,
["403391"] = true,
["392388"] = true,
["389788"] = false,
["295367"] = true,
["331653"] = true,
["356372"] = false,
["331016"] = false,
["394453"] = false,
["394021"] = true,
["420144"] = true,
["358379"] = true,
["204242"] = true,
["294909"] = true,
["406770"] = true,
["273836"] = true,
["356329"] = true,
["354052"] = true,
["314113"] = true,
["169623"] = true,
["286581"] = true,
["281242"] = true,
["206760"] = true,
["394328"] = true,
["279416"] = true,
["373281"] = false,
["360277"] = true,
["256148"] = true,
["5760"] = true,
["345466"] = true,
["255909"] = true,
["321330"] = true,
},
["buff_banned"] = {
["343553"] = true,
["318486"] = true,
["323961"] = true,
["333553"] = true,
["216777"] = true,
["327416"] = false,
["317602"] = true,
["396106"] = true,
["302564"] = true,
["417039"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["268710"] = true,
["396109"] = true,
["209746"] = true,
["333575"] = true,
["284882"] = true,
["396113"] = true,
["422067"] = false,
["333579"] = true,
["236502"] = true,
["61573"] = true,
["206150"] = true,
["311571"] = true,
["284471"] = true,
["5760"] = true,
["286145"] = true,
["343613"] = false,
["266499"] = true,
["396098"] = true,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["buff_tracked"] = {
["227931"] = true,
["365338"] = true,
["389808"] = true,
["343502"] = false,
["297133"] = true,
["385528"] = true,
["209859"] = true,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["338510"] = false,
},
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
},
["hook_data_trash"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["__TrashAt"] = 1723752567,
["Time"] = 1702817435,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/10",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 509,
["semver"] = "1.0.9",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 10,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Cast Icon Anchor + Border",
},
},
["range_check_cast_bar_alpha"] = 0.89999997615814,
["aura_timer_text_size"] = 9,
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["target_shady_alpha"] = 0,
["target_highlight_alpha"] = 0.34999999403954,
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["extra_icon_timer_outline"] = "OUTLINE",
["extra_icon_auras_mine"] = {
["Violent Detonation"] = false,
["209859"] = false,
["Plague Bomb"] = false,
["Serrated Bone Spike"] = true,
},
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateOverlapH"] = "0.75",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["nameplatePersonalShowInCombat"] = "0",
["nameplateShowAll"] = "1",
["nameplateShowOnlyNames"] = "0",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowFriends"] = "1",
["nameplateMotion"] = "1",
["nameplateSelfAlpha"] = "0.89999997615814",
["nameplateMinScale"] = "1",
["SoftTargetNameplateInteract"] = "1",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.37",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.5",
["NamePlateHorizontalScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelfTopInset"] = "0.57",
["SoftTargetIconGameObject"] = "1",
},
["indicator_elite"] = false,
["version"] = 98,
["login_counter"] = 50424,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
80,
1,
},
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["target_highlight_height"] = 15,
["target_shady_enabled"] = false,
["aura_breakline_space"] = 1,
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["bossmod_aura_height"] = 32.105155944824,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["aura_stack_font"] = "Expressway",
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["blizzard_nameplate_font"] = "Expressway",
["range_check_in_range_or_target_alpha"] = 1,
["range_check_buffs_alpha"] = 0.89999997615814,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1703478753,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = -13828,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 382,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
},
["Prio"] = 99,
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1696897853,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 549,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189729",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["outline"] = true,
["nameplateColor"] = {
0.86666666666667,
0.43529411764706,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700351235,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["Icon"] = -14046,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 917,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["Enabled"] = true,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Prio"] = 99,
["Name"] = "Spiteful/Fixate Name&Glow",
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["NpcNames"] = {
"174773",
"164702",
"166251",
"165913",
"167898",
"56792",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700785512,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["Icon"] = 413591,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 324,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
},
["Prio"] = 99,
["Name"] = "Pandemic Glow (Pixel)",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1713704437,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 1036,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
268030,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
371983,
373405,
391599,
387627,
375653,
387862,
392457,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
392486,
385331,
388804,
106856,
397394,
377612,
385574,
215204,
212773,
397382,
265540,
265542,
403978,
403671,
278755,
265511,
183528,
193803,
193585,
410870,
87779,
373897,
411302,
274400,
400296,
405433,
408805,
411300,
412378,
412233,
415304,
421029,
421031,
420525,
425816,
264390,
264407,
253583,
256849,
204243,
427459,
169839,
76820,
225562,
436841,
},
["Prio"] = 99,
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Time"] = 1696897854,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["Icon"] = 135801,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 190,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Author"] = "Nephuhlim-Illidan",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
228287,
295311,
391191,
},
["Prio"] = 99,
["Name"] = "Change Color on Debuff",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1710901066,
["url"] = "https://wago.io/XPNrgiHqw/2",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["Icon"] = 644389,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 128,
["semver"] = "1.1.0",
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Hide Nameplate",
["PlaterCore"] = 1,
["version"] = 2,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["Options"] = {
},
["NpcNames"] = {
"167966",
"199220",
"199916",
},
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1700351230,
["url"] = "https://wago.io/8_ULM1VxI/7",
["Temp_ConstructorCode"] = "function()\nend",
["Icon"] = 298642,
["Temp_OnHideCode"] = "function()\nend",
["Enabled"] = true,
["Revision"] = 179,
["semver"] = "1.0.6",
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Incorporeal",
["PlaterCore"] = 1,
["version"] = 7,
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Debuffed Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Casting Scale",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["NpcNames"] = {
"204560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1714082580,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["url"] = "https://wago.io/miabQpRfX/11",
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"186121",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"191736",
"201261",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"164451",
"164463",
"164461",
"165946",
"133007",
"198933",
"201792",
"207638",
"199000",
"209892",
"207639",
"198997",
"131527",
"131824",
"131825",
"131823",
"40586",
"99192",
"98810",
"98965",
"40825",
},
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 496,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = " [D] Add - Health Markers",
["PlaterCore"] = 1,
["Prio"] = 99,
["version"] = 11,
["semver"] = "1.0.10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["NpcNames"] = {
},
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Is Cast Bar [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
},
},
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["number_region_first_run"] = true,
["target_shady_combat_only"] = false,
["indicator_raidmark_scale"] = 0.84999996423721,
["pet_height_scale"] = 0.99999994039536,
["hover_highlight_alpha"] = 0.5,
["indicator_quest"] = false,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.1000000238419,
},
},
["bossmod_aura_width"] = 32.621017456055,
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607843137255,
0.2078431372549,
},
},
["aura_grow_direction"] = 1,
["dps"] = {
["colors"] = {
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
},
},
["aura_width2"] = 19,
["resources"] = {
["scale"] = 0.75,
["y_offset"] = 51.589996337891,
["y_offset_target"] = 0,
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {35}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1714082824,
["Time"] = 1704218760,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["url"] = "https://wago.io/miabQpRfX/10",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {35}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Enabled"] = false,
["Revision"] = 595,
["semver"] = "1.0.9",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Health Markers [D]",
["PlaterCore"] = 1,
["version"] = 10,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["UID"] = "0x662ad370fb87139",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1714082821,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["__TrashAt"] = 1714082826,
["Enabled"] = false,
["Revision"] = 3,
["Options"] = {
},
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "",
["Author"] = "Riparium-Argent Dawn",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "New Script",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["Icon"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["Name"] = "Aura is Shield [P]",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["__TrashAt"] = 1724953623,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1724881991,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 82,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["Name"] = "Aura is Shield [P]",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["__TrashAt"] = 1725201544,
},
},
["show_health_prediction"] = false,
["pet_width_scale"] = 0.99999994039536,
["aura_width"] = 19,
["auras_per_row_amount"] = 4,
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 10,
["auto_toggle_enemy"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
},
},
["performance_units"] = {
[211306] = true,
[214441] = true,
[189707] = true,
[84401] = true,
[96247] = true,
[189363] = true,
[100529] = true,
[208994] = true,
[87329] = false,
[198594] = false,
[210231] = true,
[196679] = true,
[194999] = true,
[196642] = true,
[191714] = true,
[189706] = true,
[197398] = true,
[176920] = true,
[167999] = true,
},
["InterruptableSpells"] = {
[199726] = true,
[420320] = true,
[1766] = true,
[377008] = true,
[93985] = true,
[384365] = true,
[2139] = true,
[123060] = true,
[143343] = true,
[116705] = true,
[347008] = true,
[41197] = true,
[40823] = true,
[161220] = true,
[457982] = true,
[328406] = true,
[134091] = true,
[420090] = true,
[220543] = true,
[30849] = true,
[125888] = true,
[386071] = true,
[139869] = true,
[47528] = true,
[96231] = true,
[381516] = true,
[183752] = true,
[32747] = true,
[420330] = true,
[147362] = true,
[138763] = true,
[19647] = true,
[266106] = true,
[41180] = true,
[429812] = true,
[404754] = true,
[162617] = true,
[139425] = true,
[97547] = true,
[132409] = true,
[11972] = true,
[196543] = true,
[427609] = true,
[6552] = true,
[257732] = true,
[139867] = true,
[187707] = true,
[426240] = true,
[31935] = true,
[436679] = true,
[351338] = true,
[57994] = true,
[91807] = true,
[98237] = true,
[40864] = true,
},
["captured_casts"] = {
[158459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adherent Squallbringer",
["npcID"] = 75290,
},
[124800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Warcaller",
["npcID"] = 61502,
},
[419274] = {
["source"] = "Ashbound Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 207952,
},
[417227] = {
["source"] = "Blood Horde Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207585,
},
[86405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockshell Snapclaw",
["npcID"] = 63369,
},
[327127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[396751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Luumak the Insatiable",
["npcID"] = 195971,
},
[195320] = {
["source"] = "Mightstone Rockcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 100433,
},
[49350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plague Eruptor",
["npcID"] = 27611,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[316890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Brute",
["npcID"] = 153239,
},
[257777] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[427469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[413135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[456138] = {
["source"] = "Grimlurk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223091,
},
[188154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azariah",
["npcID"] = 91737,
},
[394706] = {
["source"] = "Unstable Frost",
["event"] = "SPELL_CAST_START",
["npcID"] = 198702,
},
[133889] = {
["source"] = "A.C.E. Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 69007,
},
[392659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Alpha",
["npcID"] = 194224,
},
[129921] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maw of Despair",
["npcID"] = 59315,
},
[456140] = {
["source"] = "Grimslice",
["event"] = "SPELL_CAST_START",
["npcID"] = 221551,
},
[122754] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["encounterID"] = 1463,
["event"] = "SPELL_CAST_START",
["npcID"] = 62164,
},
[190203] = {
["source"] = "7th Legion Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 94737,
},
[390613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[62661] = {
["encounterName"] = "General Vezax",
["source"] = "General Vezax",
["encounterID"] = 1134,
["event"] = "SPELL_CAST_START",
["npcID"] = 33271,
},
[384471] = {
["source"] = "Magma Skitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196758,
},
[120195] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61445,
},
[392663] = {
["isChanneled"] = true,
["source"] = "Crazed Alpha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194224,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[392665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Thunderhide",
["npcID"] = 187258,
},
[125315] = {
["isChanneled"] = true,
["source"] = "Bataari War Yeti",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64185,
},
[146179] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["encounterID"] = 1624,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72276,
},
[419287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["npcID"] = 61398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1441,
},
[456147] = {
["source"] = "Regal Plainshawk",
["event"] = "SPELL_CAST_START",
["npcID"] = 222329,
},
[384476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[122244] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[400859] = {
["source"] = "Reconstituted Magmental",
["event"] = "SPELL_CAST_START",
["npcID"] = 205565,
},
[437719] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[386526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullmagic Hornswog",
["npcID"] = 187246,
},
[251640] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Iron Shaman",
["npcID"] = 147595,
},
[54983] = {
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[417243] = {
["source"] = "Great Glorious Alliance Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207581,
},
[437721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[392671] = {
["source"] = "Icebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199279,
},
[421340] = {
["source"] = "The Anvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 206478,
},
[390624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[384481] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tapionnuq",
["npcID"] = 194731,
},
[427484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[425437] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[382435] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[148232] = {
["encounterName"] = "Galakras",
["source"] = "Lor'themar Theron",
["npcID"] = 72560,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[133898] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vol'jin",
["npcID"] = 67414,
},
[13748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarshield Spellbinder",
["npcID"] = 9098,
},
[118663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snagtooth Hooligan",
["npcID"] = 56462,
},
[396774] = {
["source"] = "Primal Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190996,
},
[372202] = {
["isChanneled"] = true,
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189464,
},
[423396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethka",
["npcID"] = 208740,
},
[255741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scaled Krolusk Rider",
["npcID"] = 134629,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 82721,
},
[186118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Attack Mastiff",
["npcID"] = 92956,
},
[392682] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[411112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calibrating Scent Matrix",
["npcID"] = 203606,
},
[198405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helarjar Champion",
["npcID"] = 97097,
},
[384492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[394731] = {
["source"] = "Unstable Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 198709,
},
[384493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Yrgena",
["npcID"] = 201538,
},
[396780] = {
["source"] = "Rimebound Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195837,
},
[392685] = {
["isChanneled"] = true,
["source"] = "Awakened Juggernaut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198081,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtouched Speaker",
["npcID"] = 223469,
},
[187144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladesquall",
["npcID"] = 91874,
},
[392686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[421355] = {
["source"] = "The Anvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 206478,
},
[275966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acidic Worm",
["npcID"] = 140985,
},
[122761] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[282110] = {
["source"] = "Kaldorei Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210645,
},
[275967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktunnel Ambusher",
["npcID"] = 140993,
},
[257793] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[136976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiant Devilsaur",
["npcID"] = 67477,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[396786] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 191654,
},
[199433] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[425455] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 59051,
},
[382454] = {
["source"] = "Azure Dragonspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 188802,
},
[76688] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Obsidian Borer",
["npcID"] = 40019,
},
[316927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barrow Spider",
["npcID"] = 160394,
},
[118667] = {
["source"] = "Twitchheel Hoarder",
["event"] = "SPELL_CAST_START",
["npcID"] = 56538,
},
[443888] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[119691] = {
["source"] = "Master Boom Boom",
["event"] = "SPELL_CAST_START",
["npcID"] = 61013,
},
[158480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adherent Squallbringer",
["npcID"] = 75290,
},
[439795] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[392698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Quilboar",
["npcID"] = 221743,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1757,
},
[119692] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[417272] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[450037] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[213772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chargore",
["npcID"] = 107096,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[107918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cornan",
["npcID"] = 57213,
},
[392701] = {
["source"] = "Stormshroud Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 192536,
},
[394749] = {
["source"] = "Unstable Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 198716,
},
[265741] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[343556] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[427514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth's Last Breath",
["npcID"] = 209912,
},
[372225] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[166675] = {
["source"] = "Grom'kar Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 80937,
},
[372226] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["npcID"] = 59184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1427,
},
[188177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azariah",
["npcID"] = 91737,
},
[183058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vethir",
["npcID"] = 92302,
},
[450043] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[427518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth's Last Breath",
["npcID"] = 209912,
},
[86930] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1042,
},
[447996] = {
["source"] = "Rustcloud Runt",
["event"] = "SPELL_CAST_START",
["npcID"] = 222796,
},
[136985] = {
["source"] = "Fleshcrafter Hoku",
["event"] = "SPELL_CAST_START",
["npcID"] = 69435,
},
[122254] = {
["source"] = "Unga Spearscamp",
["event"] = "SPELL_CAST_START",
["npcID"] = 62474,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["npcID"] = 133007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[115087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tigerfly",
["npcID"] = 56283,
},
[124302] = {
["source"] = "Go-Kan",
["event"] = "SPELL_CAST_START",
["npcID"] = 50331,
},
[46029] = {
["source"] = "Sunblade Blood Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 24684,
},
[452094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[396805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[126350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Mogu Spirit",
["npcID"] = 58671,
},
[190228] = {
["source"] = "Knight-Captain Brimley",
["event"] = "SPELL_CAST_START",
["npcID"] = 94809,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[396807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorger",
["npcID"] = 192759,
},
[392712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshroud Defender",
["npcID"] = 192536,
},
[157465] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[382474] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[194325] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["npcID"] = 96754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1823,
},
[452099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Animated Shadow",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 224616,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[419336] = {
["source"] = "Fel-Watcher Mara",
["event"] = "SPELL_CAST_START",
["npcID"] = 206925,
},
[60876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Ghoul",
["npcID"] = 221434,
},
[195350] = {
["source"] = "Mightstone Savage",
["event"] = "SPELL_CAST_START",
["npcID"] = 108283,
},
[419337] = {
["source"] = "Fel-Watcher Mara",
["event"] = "SPELL_CAST_START",
["npcID"] = 206925,
},
[396812] = {
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[83861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonescale Drake",
["npcID"] = 43971,
},
[394765] = {
["source"] = "Igneous Stonemauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 210043,
},
[186136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Houndmaster Ely",
["npcID"] = 92951,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[278044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[47310] = {
["source"] = "Coren Direbrew",
["event"] = "SPELL_CAST_START",
["npcID"] = 23872,
},
[396814] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[135967] = {
["source"] = "A.C.E. Beamgunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 69008,
},
[259856] = {
["encounterName"] = "Rixxa Fluxfume",
["source"] = "Rixxa Fluxflame",
["encounterID"] = 2107,
["event"] = "SPELL_CAST_START",
["npcID"] = 129231,
},
[275998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelshred",
["npcID"] = 140988,
},
[265760] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[407055] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[345623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'zudah",
["npcID"] = 165824,
},
[126353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gochao the Ironfist",
["npcID"] = 62880,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[419344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[396819] = {
["source"] = "Vorgan the Mangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190467,
},
[448013] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[392724] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[372247] = {
["source"] = "Duskpaw Hidestitcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187941,
},
[415250] = {
["source"] = "Invasive Sporecap",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[126354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Houndmaster Ely",
["npcID"] = 92951,
},
[198427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Ancestor",
["npcID"] = 93094,
},
[133923] = {
["source"] = "Commander Tel'vrak",
["event"] = "SPELL_CAST_START",
["npcID"] = 67879,
},
[443921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Ethereal",
["npcID"] = 221305,
},
[396823] = {
["source"] = "Vorgan the Mangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190467,
},
[122259] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[98710] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[384538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tapionnuq",
["npcID"] = 194731,
},
[396825] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[431637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowalker",
["npcID"] = 213895,
},
[417303] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[419351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Saboteur",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194999,
},
[456211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smaragthr",
["npcID"] = 220362,
},
[257814] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[378397] = {
["source"] = "Earthenforged Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 190737,
},
[421400] = {
["source"] = "Djaradin Spear",
["event"] = "SPELL_CAST_START",
["npcID"] = 209973,
},
[81305] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Stone Trogg Rockmagus",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43652,
},
[82841] = {
["source"] = "Disturbed Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 37553,
},
[392733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dewdrop Tortoise",
["npcID"] = 211145,
},
[421402] = {
["source"] = "Primalist Pyremancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209963,
},
[392734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Vanguard",
["npcID"] = 196927,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[192288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
},
[443929] = {
["source"] = "Kaheti Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 218315,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[81306] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Stone Trogg Rockmagus",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43652,
},
[253721] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[41169] = {
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23339,
},
[267824] = {
["source"] = "Soul Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 135240,
},
[417310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Val'kyr Shadowguard",
["npcID"] = 208380,
},
[370212] = {
["source"] = "Qalashi Wallcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187813,
},
[431645] = {
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[392738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargpaw the Fetid",
["npcID"] = 186660,
},
[190242] = {
["isChanneled"] = true,
["source"] = "Abigail the Huntress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 94822,
},
[183075] = {
["isChanneled"] = true,
["source"] = "Luddy Quicksnap",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193292,
},
[121238] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gong Da",
["npcID"] = 62165,
},
[372262] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[439838] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[450077] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[448030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agile Pursuer",
["npcID"] = 223181,
},
[62415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jormungar Behemoth",
["npcID"] = 32882,
},
[452127] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[445984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Jawgrub",
["npcID"] = 217379,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Refreshment Table",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209800,
},
[458271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sakret'na",
["npcID"] = 215841,
},
[427556] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shaded Glowdrop",
["npcID"] = 209912,
},
[41426] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[427557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth's Last Breath",
["npcID"] = 209912,
},
[161577] = {
["source"] = "Lernaea Vilescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 85693,
},
[69022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doc Zapnozzle",
["npcID"] = 36608,
},
[197413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishkaneth",
["npcID"] = 90389,
},
[158506] = {
["source"] = "Cliffdiver Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 107928,
},
[269882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnean Ambusher",
["npcID"] = 147275,
},
[378413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Deluge",
["npcID"] = 197220,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[197414] = {
["source"] = "Brood Queen Tyranna",
["event"] = "SPELL_CAST_START",
["npcID"] = 93802,
},
[165674] = {
["source"] = "Taskmaster Gurran",
["event"] = "SPELL_CAST_START",
["npcID"] = 79585,
},
[456229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqu'yinra",
["npcID"] = 222605,
},
[458278] = {
["source"] = "Lurker of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 220285,
},
[370225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 187159,
},
[134959] = {
["source"] = "Commander Scargash",
["event"] = "SPELL_CAST_START",
["npcID"] = 68474,
},
[146222] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Blade of the Hundred Steps",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 72787,
},
[384561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tapionnuq",
["npcID"] = 194731,
},
[394800] = {
["source"] = "Council Earthcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198500,
},
[372276] = {
["isChanneled"] = true,
["source"] = "Stormfang Hexspiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187930,
},
[146223] = {
["source"] = "Hellscream Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 72847,
},
[394802] = {
["source"] = "Council Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198502,
},
[445996] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[269890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Ruffian",
["npcID"] = 126720,
},
[394803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Proto-Dragon",
["npcID"] = 193658,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1685,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[405043] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
["358320"] = {
["npcID"] = 180162,
},
[452142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[9591] = {
["source"] = "Burrowing Leyworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 106630,
},
[77216] = {
["source"] = "Kharanos Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 41182,
},
[450095] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[396854] = {
["source"] = "Sundered Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 188173,
},
[133939] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[129946] = {
["isChanneled"] = true,
["source"] = "Weeping Widow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65622,
},
[154417] = {
["encounterName"] = "Orebender Gor'ashan",
["source"] = "Orebender Gor'ashan",
["npcID"] = 76413,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1761,
},
[396856] = {
["source"] = "Firava the Rekindler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195915,
},
[107933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tricky Maizer",
["npcID"] = 57223,
},
[327233] = {
["source"] = "Experimental Misstep",
["event"] = "SPELL_CAST_START",
["npcID"] = 199859,
},
[323138] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[138036] = {
["source"] = "Zandalari Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69841,
},
[458290] = {
["source"] = "Deathtide",
["event"] = "SPELL_CAST_START",
["npcID"] = 221753,
},
[407097] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[400954] = {
["source"] = "Volgoth The Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[121244] = {
["source"] = "Malevolent Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 61333,
},
[396859] = {
["source"] = "Earthshatter Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 194524,
},
[388669] = {
["source"] = "Garlic-Breathed Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 224751,
},
[215852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomherald Taraar",
["npcID"] = 105094,
},
[417338] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 205305,
},
[396861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[456246] = {
["source"] = "Earthfury Cragshar",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
[269901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swampgas",
["npcID"] = 135839,
},
[131895] = {
["isChanneled"] = true,
["source"] = "Wild Townlong Yak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61635,
},
[78754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashenvale Scout",
["npcID"] = 34177,
},
[174898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Gembiter",
["npcID"] = 81729,
},
[427579] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[470582] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[81314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlok Basilisk Rider",
["npcID"] = 42711,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[394816] = {
["source"] = "Shardwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 201562,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[427581] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[138040] = {
["source"] = "Zandalari Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69841,
},
[188210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azariah",
["npcID"] = 91737,
},
[165685] = {
["source"] = "Taskmaster Gurran",
["event"] = "SPELL_CAST_START",
["npcID"] = 79585,
},
[120222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Sha",
["npcID"] = 61610,
},
[129437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Hissing Wasp",
["npcID"] = 65802,
},
[274002] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 128650,
},
[425536] = {
["source"] = "Lowly Moleherd",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[470587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salien Carapiercer",
["npcID"] = 223377,
},
[407107] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[392773] = {
["source"] = "Rymek",
["event"] = "SPELL_CAST_START",
["npcID"] = 188846,
},
[427585] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[196403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doom Commander Beliash",
["npcID"] = 93221,
},
[111008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[439873] = {
["source"] = "Royal Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[159544] = {
["source"] = "Void-Torn Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 82220,
},
[129438] = {
["source"] = "Elder Viseclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 61091,
},
[138043] = {
["source"] = "Zandalari Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69841,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[470591] = {
["source"] = "Nightfall Hopestealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217517,
},
[199476] = {
["source"] = "Sledge",
["event"] = "SPELL_CAST_START",
["npcID"] = 92990,
},
[296533] = {
["event"] = "SPELL_CAST_START",
["source"] = "A.T.O.M.I.K. Mk. II Turbo",
["npcID"] = 152714,
},
[93091] = {
["source"] = "Brother Paxton",
["event"] = "SPELL_CAST_START",
["npcID"] = 951,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77816,
},
[470593] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[415304] = {
["source"] = "Great Glorious Alliance Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207579,
},
[269914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gust Soldier",
["npcID"] = 135818,
},
[452164] = {
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[187191] = {
["source"] = "Felskorn Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 112481,
},
[400971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfuric Rager",
["npcID"] = 202622,
},
[99235] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[382542] = {
["source"] = "Vicious Ice Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186391,
},
[376399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 192188,
},
[394829] = {
["source"] = "Osseous Broodmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 203348,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["npcID"] = 56439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1439,
},
[15799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Mylra",
["npcID"] = 44956,
},
[111010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[456263] = {
["source"] = "Candleflyer Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 220276,
},
[400974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tormentor",
["npcID"] = 202481,
},
[386640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Looter",
["npcID"] = 187242,
},
[396879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[415309] = {
["source"] = "Great Glorious Alliance Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 207579,
},
[370259] = {
["source"] = "Earthenforged Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 190737,
},
[99236] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[423501] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[294493] = {
["source"] = "Timeless Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186464,
},
[394833] = {
["source"] = "Magmammoth Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194912,
},
[413263] = {
["encounterName"] = "Asaad",
["source"] = "Skyfall Nova",
["npcID"] = 52019,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1042,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[400977] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[452171] = {
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["npcID"] = 203857,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[193338] = {
["source"] = "Vethir",
["event"] = "SPELL_CAST_START",
["npcID"] = 98174,
},
[372310] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[407122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Warlock",
["npcID"] = 203857,
},
[384597] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[378454] = {
["source"] = "Lumbering Boulder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203594,
},
[372311] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[456269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqu'yinra",
["npcID"] = 222605,
},
[427601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[407124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Raider",
["npcID"] = 207969,
},
[450127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegehold Defender",
["npcID"] = 216016,
},
[394838] = {
["source"] = "Henlare",
["event"] = "SPELL_CAST_START",
["npcID"] = 193229,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[388696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Gahz'rilla",
["npcID"] = 221578,
},
[195388] = {
["source"] = "Slash Gutspill",
["event"] = "SPELL_CAST_START",
["npcID"] = 90747,
},
[409174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnation of Entropy",
["npcID"] = 203811,
},
[452177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Reserve",
["npcID"] = 215727,
},
[429652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[191293] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Iron Shaman",
["npcID"] = 147354,
},
[124835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldbite Matriarch",
["npcID"] = 62008,
},
[258869] = {
["source"] = "Ashvane Flamecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 127488,
},
[382555] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[409177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[403034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fyrakk",
["npcID"] = 200832,
},
[44504] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[106918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orchard Wasp",
["npcID"] = 56201,
},
[300648] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vexiona",
["npcID"] = 151798,
},
[425561] = {
["source"] = "Pack Mole",
["event"] = "SPELL_CAST_START",
["npcID"] = 211977,
},
[427609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[470612] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["npcID"] = 220008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3001,
},
[140102] = {
["isChanneled"] = true,
["source"] = "Zeb'tula Raptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69658,
},
[325223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Stinger",
["npcID"] = 166304,
},
[382561] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[82858] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
},
[386658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[388706] = {
["source"] = "Stormbound Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 187819,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[197441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyndrissen",
["npcID"] = 90390,
},
[142152] = {
["source"] = "Mouth of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 70691,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[429663] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 214390,
},
[114087] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[106920] = {
["source"] = "Regenerating Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 56763,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206172,
},
[183108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Larivi",
["npcID"] = 192747,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[136010] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[62935] = {
["encounterName"] = "Freya",
["source"] = "Ancient Water Spirit",
["encounterID"] = 1133,
["event"] = "SPELL_CAST_START",
["npcID"] = 33202,
},
[38618] = {
["source"] = "Auchenai Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 21852,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[423523] = {
["source"] = "Anguished Dream Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 210304,
},
[145226] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["encounterID"] = 1624,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72276,
},
[390760] = {
["source"] = "Chief Grrlgllmesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 186678,
},
[376426] = {
["source"] = "Summoned Ripple",
["event"] = "SPELL_CAST_START",
["npcID"] = 187542,
},
[306803] = {
["isChanneled"] = true,
["source"] = "Lumbering Nightmare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 155051,
},
[448098] = {
["isChanneled"] = true,
["source"] = "Black Blood Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222455,
},
[425573] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[132941] = {
["isChanneled"] = true,
["source"] = "Alliance Swashbuckler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69196,
},
[448100] = {
["source"] = "Black Blood Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 222455,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[22127] = {
["source"] = "Nordrassil Druid",
["event"] = "SPELL_CAST_START",
["npcID"] = 38952,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["npcID"] = 56762,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[382573] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[36827] = {
["source"] = "Scout Captain Elsia",
["event"] = "SPELL_CAST_START",
["npcID"] = 69485,
},
[132942] = {
["isChanneled"] = true,
["source"] = "Alliance Swashbuckler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69196,
},
[417386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valhalas Vargul",
["npcID"] = 207804,
},
[394861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[179017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Raider",
["npcID"] = 88084,
},
[384623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[419435] = {
["isChanneled"] = true,
["source"] = "Magma Soldier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209191,
},
[429674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[382576] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[145230] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["encounterID"] = 1594,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71393,
},
[448105] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[450153] = {
["source"] = "Raging Roots",
["event"] = "SPELL_CAST_START",
["npcID"] = 216250,
},
[16496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captured Mercenary Soldier",
["npcID"] = 32885,
},
[382578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[427629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[76719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incendiary Spark",
["npcID"] = 40021,
},
[386675] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[128937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hawkmaster Nurong",
["npcID"] = 64474,
},
[144208] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Automated Shredder",
["npcID"] = 71591,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[9081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist Zakahn",
["npcID"] = 49148,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[419441] = {
["isChanneled"] = true,
["source"] = "Magma Soldier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209191,
},
[46043] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[394870] = {
["isChanneled"] = true,
["source"] = "Council Earthcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198501,
},
[446064] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Slamming Tentacle",
["npcID"] = 220741,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[87471] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Drywallow Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 4343,
},
[306818] = {
["source"] = "Dark Ranger Thyala",
["event"] = "SPELL_CAST_START",
["npcID"] = 150498,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[140115] = {
["source"] = "Zandalari Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[126379] = {
["isChanneled"] = true,
["source"] = "Prophet Khar'zul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61541,
},
[427638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[255814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[431734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Vanguard Brute",
["npcID"] = 214901,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[72114] = {
["source"] = "Lady Sylvanas Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 152437,
},
[186191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agnol",
["npcID"] = 105440,
},
[394876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phenran",
["npcID"] = 193688,
},
[46044] = {
["source"] = "Sunblade Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 24815,
},
[444023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Experiment",
["npcID"] = 221537,
},
[396925] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197149,
},
[433785] = {
["source"] = "Reinforced Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 216363,
},
[394878] = {
["isChanneled"] = true,
["source"] = "Flamescale Tarasek",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198500,
},
[198479] = {
["source"] = "Servant of Skovald",
["event"] = "SPELL_CAST_START",
["npcID"] = 112480,
},
[215885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomherald Saera",
["npcID"] = 105095,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[144214] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[382593] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[171859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmane Earthbinder",
["npcID"] = 80448,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[133976] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Jade Warlord",
["npcID"] = 68005,
},
[417406] = {
["source"] = "Ankura Bloodhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207589,
},
[272016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshrot Cabalist",
["npcID"] = 146894,
},
[409216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[165717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alya",
["npcID"] = 82002,
},
[398978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Fiend",
["npcID"] = 200030,
},
[409217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Manaweaver",
["npcID"] = 198872,
},
[382597] = {
["source"] = "Frost Shackler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190993,
},
[6685] = {
["source"] = "Kharanos Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 41182,
},
[265876] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[456317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harvester Qixt",
["npcID"] = 216050,
},
[458365] = {
["source"] = "Pride of Beledar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221786,
},
[386694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormsurge Totem",
["npcID"] = 194897,
},
[446079] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Leviathan Caller",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220738,
},
[398981] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[163671] = {
["source"] = "Nar'thalas Nightwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 88782,
},
[111024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Redemption",
["npcID"] = 58592,
},
[388743] = {
["source"] = "Risen Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 188510,
},
[456319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[360075] = {
["source"] = "Magically Regulated Automa Core",
["event"] = "SPELL_CAST_START",
["npcID"] = 182210,
},
[80308] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonecore Rift Conjurer",
["npcID"] = 42691,
},
[456320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaniga the Tracker",
["npcID"] = 222639,
},
[147290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Python",
["npcID"] = 73163,
},
[388745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icy Blue Crab",
["npcID"] = 197862,
},
[456321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[458369] = {
["source"] = "Kas'dru",
["event"] = "SPELL_CAST_START",
["npcID"] = 227635,
},
[265881] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[398985] = {
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_START",
["npcID"] = 198214,
},
[116] = {
["npcID"] = 188027,
},
[189270] = {
["isChanneled"] = true,
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95451,
},
[388747] = {
["source"] = "Starving Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193422,
},
[256846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[87988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Colossus",
["npcID"] = 46646,
},
[394891] = {
["source"] = "Braekkas",
["event"] = "SPELL_CAST_START",
["npcID"] = 196855,
},
[130479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Lieutenant",
["npcID"] = 66287,
},
[122800] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 62825,
},
[446086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Unnaturaler",
["npcID"] = 216339,
},
[46046] = {
["source"] = "Sunblade Physician",
["event"] = "SPELL_CAST_START",
["npcID"] = 24687,
},
[427657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[15801] = {
["source"] = "Dark Rune Theurgist",
["event"] = "SPELL_CAST_START",
["npcID"] = 27963,
},
[450183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kronolith, Might of the Mountain",
["npcID"] = 219270,
},
[452231] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[372369] = {
["source"] = "Brackenhide Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 188542,
},
[39647] = {
["source"] = "Illidari Nightlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[394895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phenran",
["npcID"] = 193688,
},
[89013] = {
["isChanneled"] = true,
["source"] = "Pyramid Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47810,
},
[415373] = {
["source"] = "Great Glorious Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 207578,
},
[172891] = {
["source"] = "Commander Gar",
["event"] = "SPELL_CAST_START",
["npcID"] = 85571,
},
[256849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[409231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[163677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Guard",
["npcID"] = 82028,
},
[452235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Stonestalker",
["npcID"] = 217624,
},
[157534] = {
["source"] = "Hatecoil Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 88087,
},
[456331] = {
["source"] = "Flickerflame Candlecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 219619,
},
[87990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Colossus",
["npcID"] = 46646,
},
[227158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Headhunter",
["npcID"] = 113034,
},
[199514] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seacursed Mistmender",
["npcID"] = 97365,
},
[384663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[190300] = {
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_START",
["npcID"] = 95451,
},
[394903] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[106421] = {
["source"] = "Shado-Pan Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 59741,
},
[41184] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[274087] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Honorbound Spiritcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 145181,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1838,
},
[125363] = {
["source"] = "Scritch",
["event"] = "SPELL_CAST_START",
["npcID"] = 50831,
},
[448147] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Guardian",
["npcID"] = 223204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[382620] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[450196] = {
["source"] = "Candlelit Blind-Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 218213,
},
[321188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Geomancer",
["npcID"] = 150238,
},
[374430] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190588,
},
[171873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmane Earthbinder",
["npcID"] = 80448,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[444055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Threadling",
["npcID"] = 222730,
},
[202590] = {
["source"] = "Taldath the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 94731,
},
[333477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goregrind",
["npcID"] = 163621,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[198495] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["npcID"] = 96759,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1824,
},
[11962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbrain Magus",
["npcID"] = 49423,
},
[48096] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2011,
},
[201567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacursed Slaver",
["npcID"] = 97043,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[82362] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Evolved Twilight Zealot",
["npcID"] = 50284,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[386722] = {
["source"] = "Primalist Galewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 203744,
},
[125877] = {
["source"] = "Set'thik Windblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 64453,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[257882] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[452252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[187235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbreaker Reykir",
["npcID"] = 91517,
},
[213856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brawlgoth",
["npcID"] = 107127,
},
[396964] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Flow Control Unit",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 198527,
},
[124854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sele'na",
["npcID"] = 50766,
},
[126390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gaohun the Soul-Severer",
["npcID"] = 62881,
},
[27634] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Garaxxas",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24555,
},
[411300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[407205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[120759] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[258908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrouded Fang",
["npcID"] = 134602,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[211810] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glimar Ironfist",
["npcID"] = 91529,
},
[212834] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[41186] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[265912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Nimbus",
["npcID"] = 136076,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[162665] = {
["source"] = "Grom'kar Bodyguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 73954,
},
[126903] = {
["source"] = "Shao-Tien Fist",
["event"] = "SPELL_CAST_START",
["npcID"] = 65134,
},
[394922] = {
["isChanneled"] = true,
["source"] = "Braekkas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196855,
},
[372397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Warrior",
["npcID"] = 183956,
},
[120760] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[129975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnation of Despair",
["npcID"] = 65872,
},
[162666] = {
["isChanneled"] = true,
["source"] = "Grom'kar Bodyguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73954,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[415403] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2677,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[452263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harvest Warden Izk'tilak",
["npcID"] = 220644,
},
[256864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[396975] = {
["source"] = "Firava the Rekindler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195915,
},
[162668] = {
["source"] = "Grom'kar Bodyguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 73954,
},
[147310] = {
["source"] = "Brilliant Windfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 72762,
},
[41187] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[165740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tore",
["npcID"] = 82007,
},
[374451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Chain Caster",
["npcID"] = 195919,
},
[458409] = {
["source"] = "Pride of Beledar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221786,
},
[17140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barbery the Crazy Cat Lady",
["npcID"] = 82009,
},
[399025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[165741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Challe Tebrilinde",
["npcID"] = 82005,
},
[142192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[128953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hawkmaster Nurong",
["npcID"] = 64474,
},
[106428] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[190315] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 94420,
},
[116155] = {
["source"] = "Yeasty Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 66413,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[439984] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen-Ward Sentinel",
["npcID"] = 216221,
},
[433841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[63713] = {
["source"] = "Faceless Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 33772,
},
[134003] = {
["source"] = "7th Legion Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 67892,
},
[270022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silverback Thumpknuckle",
["npcID"] = 130543,
},
[452272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[274118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tally Zapnabber",
["npcID"] = 133627,
},
[155505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Engineer",
["npcID"] = 76101,
},
[41188] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[134004] = {
["source"] = "7th Legion Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 67892,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[258917] = {
["source"] = "Ashvane Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 130028,
},
[169840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[399033] = {
["source"] = "Arcane Manipulator",
["event"] = "SPELL_CAST_START",
["npcID"] = 188172,
},
[188270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Rook Falcon",
["npcID"] = 93064,
},
[135029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[169841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[188271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeard",
["npcID"] = 91657,
},
[106942] = {
["isChanneled"] = true,
["source"] = "Destroying Sha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56765,
},
[274123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razak Ironsides",
["npcID"] = 133556,
},
[116157] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[124860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sele'na",
["npcID"] = 50766,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[126908] = {
["source"] = "Shao-Tien Fist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58927,
},
[11899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Witch Doctor",
["npcID"] = 5650,
},
[270030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swampgas",
["npcID"] = 135839,
},
[419516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[396991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[228204] = {
["source"] = "Vile Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 90241,
},
[122813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snow Blossom",
["npcID"] = 63907,
},
[388801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Warrior",
["npcID"] = 195855,
},
[125373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torik-Ethis",
["npcID"] = 50388,
},
[171892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfang Hunter",
["npcID"] = 89747,
},
[411328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[195442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rythas the Oracle",
["npcID"] = 92918,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[61923] = {
["encounterName"] = "Hodir",
["source"] = "Field Medic Penny",
["encounterID"] = 1135,
["event"] = "SPELL_CAST_START",
["npcID"] = 32897,
},
[142201] = {
["source"] = "Echo of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 71123,
},
[143225] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["npcID"] = 71479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[444095] = {
["source"] = "Chieftain Gillcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 219633,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[407236] = {
["source"] = "Shrinekeeper Qanosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[458430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Droghung",
["npcID"] = 221316,
},
[341709] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[419524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loose Time",
["npcID"] = 209170,
},
[186229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orbyth",
["npcID"] = 91155,
},
[252781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[145275] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Embodied Doubt",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 72236,
},
[126911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 65134,
},
[145276] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Embodied Despair",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 72238,
},
[130495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Sharp-Shooter",
["npcID"] = 66288,
},
[106434] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["npcID"] = 56541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1304,
},
[61924] = {
["encounterName"] = "Hodir",
["source"] = "Elementalist Mahfuun",
["encounterID"] = 1135,
["event"] = "SPELL_CAST_START",
["npcID"] = 33328,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[413387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[415435] = {
["source"] = "Coalesced Moment",
["event"] = "SPELL_CAST_START",
["npcID"] = 206064,
},
[215925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorgonnash",
["npcID"] = 99046,
},
[394959] = {
["source"] = "Acequian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187617,
},
[331479] = {
["source"] = "Animated Goo",
["event"] = "SPELL_CAST_START",
["npcID"] = 218519,
},
[415437] = {
["source"] = "Timestream Leech",
["event"] = "SPELL_CAST_START",
["npcID"] = 206066,
},
[131968] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[115650] = {
["source"] = "Sudsy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59522,
},
[116162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzy Brew Alemental",
["npcID"] = 59520,
},
[17142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yalia Sagewhisper",
["npcID"] = 63909,
},
[126913] = {
["source"] = "Shao-Tien Fist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58927,
},
[397010] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[256882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monzumi",
["npcID"] = 129552,
},
[120770] = {
["isChanneled"] = true,
["source"] = "Summit Sprite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68026,
},
[272098] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Blacktooth Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 131307,
},
[397011] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[205689] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 94420,
},
[190331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Shaman",
["npcID"] = 147355,
},
[9532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimtotem Elder",
["npcID"] = 23714,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[401109] = {
["source"] = "Crimson Oldblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 201054,
},
[321247] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[372441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Umbraclaw",
["npcID"] = 211401,
},
[399062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[128962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Runekeeper",
["npcID"] = 65598,
},
[419540] = {
["source"] = "Molten General",
["event"] = "SPELL_CAST_START",
["npcID"] = 207941,
},
[454352] = {
["source"] = "Toaka the Explorer",
["event"] = "SPELL_CAST_START",
["npcID"] = 222659,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[263912] = {
["encounterName"] = "Merektha",
["source"] = "Merektha",
["npcID"] = 133384,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2125,
},
[115652] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[327393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[399065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[263914] = {
["encounterName"] = "Merektha",
["source"] = "Merektha",
["npcID"] = 133384,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2125,
},
[128963] = {
["source"] = "Darkhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 58435,
},
[411353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Protector Lynaera",
["npcID"] = 204419,
},
[114117] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chief Gukgut",
["npcID"] = 54868,
},
[392924] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[394972] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197148,
},
[409307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[258935] = {
["source"] = "Ashvane Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 130028,
},
[372448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[417499] = {
["source"] = "Malfunctioning Robotic Cauldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 207111,
},
[372449] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[128964] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krasari Tormentor",
["npcID"] = 65598,
},
[121285] = {
["isChanneled"] = true,
["source"] = "Knucklethump Smasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59410,
},
[145286] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71405,
},
[106439] = {
["source"] = "Fragrant Lotus",
["event"] = "SPELL_CAST_START",
["npcID"] = 56472,
},
[394976] = {
["isChanneled"] = true,
["source"] = "Void Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198757,
},
[265968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charged Dust Devil",
["npcID"] = 134990,
},
[394977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigidpelt Den Mother",
["npcID"] = 193698,
},
[117702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Widow Greenpaw",
["npcID"] = 55368,
},
[448219] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Titan Orb",
["npcID"] = 221730,
},
[51432] = {
["source"] = "Ymirjar Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28368,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[145288] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71395,
},
[288497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[382696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[137099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[40938] = {
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 22954,
},
[124359] = {
["source"] = "Den Mother Moof",
["event"] = "SPELL_CAST_START",
["npcID"] = 63518,
},
[200580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[372460] = {
["source"] = "Duskpaw Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187523,
},
[198533] = {
["isChanneled"] = true,
["source"] = "Jade Serpent Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60849,
},
[135053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aenea",
["npcID"] = 68391,
},
[15228] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[456420] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[448230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Titan Orb",
["npcID"] = 221730,
},
[125384] = {
["source"] = "Adolescent Mushan",
["event"] = "SPELL_CAST_START",
["npcID"] = 56239,
},
[454375] = {
["source"] = "Toaka the Explorer",
["event"] = "SPELL_CAST_START",
["npcID"] = 222659,
},
[382704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[386800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boolk",
["npcID"] = 191450,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Chasm Worm",
["npcID"] = 217962,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[417517] = {
["source"] = "Ankura Bloodhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207589,
},
[386801] = {
["source"] = "Cragsworn Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191661,
},
[141199] = {
["source"] = "Blind Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72131,
},
[390897] = {
["source"] = "Scalepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186632,
},
[427758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[78799] = {
["source"] = "Fizzy Yellow Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 58017,
},
[382708] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[128969] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[397043] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[147344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zesqua",
["npcID"] = 72245,
},
[172941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sor the Eradicator",
["npcID"] = 80691,
},
[460525] = {
["source"] = "Bytta",
["event"] = "SPELL_CAST_START",
["npcID"] = 222653,
},
[413427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pendule",
["npcID"] = 206074,
},
[147345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skunky Brew Alemental",
["npcID"] = 71908,
},
[407285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Skullcrusher",
["npcID"] = 202258,
},
[128970] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[263943] = {
["source"] = "Heartsbane Runeweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 131677,
},
[372474] = {
["source"] = "Nokhud Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186299,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[148370] = {
["source"] = "Windreaver Tar'rath",
["event"] = "SPELL_CAST_START",
["npcID"] = 73667,
},
[397048] = {
["source"] = "Frostbreath Arachnid",
["event"] = "SPELL_CAST_START",
["npcID"] = 199333,
},
[194445] = {
["source"] = "Priestess of Eyir",
["event"] = "SPELL_CAST_START",
["npcID"] = 94856,
},
[147347] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zhu-Gon the Sour",
["npcID"] = 71919,
},
[78801] = {
["encounterName"] = "Hydromancer Velratha",
["source"] = "Hydromancer Velratha",
["npcID"] = 7795,
["event"] = "SPELL_CAST_START",
["encounterID"] = 593,
},
[79825] = {
["source"] = "Kaldorei Starcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183994,
},
[397051] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[223115] = {
["source"] = "Felwarden Elreth",
["event"] = "SPELL_CAST_START",
["npcID"] = 109801,
},
[392957] = {
["source"] = "Azure Herdmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 194283,
},
[388862] = {
["source"] = "Corrupted Manafiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[407292] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[63722] = {
["source"] = "Faceless Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 33772,
},
[388863] = {
["source"] = "Corrupted Manafiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 196045,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["npcID"] = 101028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[390912] = {
["source"] = "Vile Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197219,
},
[106447] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[178067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sea Skrog",
["npcID"] = 88094,
},
[179091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'thalas Magister",
["npcID"] = 88783,
},
[147351] = {
["source"] = "Fallen Pool Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 73342,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[411393] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[372486] = {
["source"] = "Waste Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187497,
},
[390916] = {
["source"] = "Salkii",
["event"] = "SPELL_CAST_START",
["npcID"] = 193885,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[115663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greenstone Gorger",
["npcID"] = 56404,
},
[150424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Berserker",
["npcID"] = 215675,
},
[62443] = {
["encounterName"] = "Thorim",
["source"] = "Dark Rune Acolyte",
["encounterID"] = 1141,
["event"] = "SPELL_CAST_START",
["npcID"] = 33110,
},
[125902] = {
["isChanneled"] = true,
["source"] = "Kor'thik Warsinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64458,
},
[118223] = {
["isChanneled"] = true,
["source"] = "Torjar's Bane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58439,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[263959] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[448257] = {
["source"] = "Foreseer Xix'amon",
["event"] = "SPELL_CAST_START",
["npcID"] = 215435,
},
[147354] = {
["source"] = "Ironfur Herdling",
["event"] = "SPELL_CAST_START",
["npcID"] = 72842,
},
[458497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasidious",
["npcID"] = 206977,
},
[263961] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[409352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[323347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Gatekeeper",
["npcID"] = 165137,
},
[115153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverstride Jinyu",
["npcID"] = 56289,
},
[372495] = {
["source"] = "Seething Seakelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 194375,
},
[456453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[125392] = {
["source"] = "Warbringer Qobi",
["event"] = "SPELL_CAST_START",
["npcID"] = 63528,
},
[390926] = {
["source"] = "Barker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194515,
},
[411404] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[198551] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["npcID"] = 96754,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1823,
},
[395023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Innumerable Ruination",
["npcID"] = 193126,
},
[131024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Sharp-Shooter",
["npcID"] = 66288,
},
[41455] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[116178] = {
["source"] = "Sudsy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59522,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2682,
},
[411407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[411408] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[198553] = {
["source"] = "Felskorn Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97825,
},
[79831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Watershaper",
["npcID"] = 56725,
},
[44271] = {
["source"] = "Garaxxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 24555,
},
[154527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[256915] = {
["source"] = "Heartsbane Sister",
["event"] = "SPELL_CAST_START",
["npcID"] = 131538,
},
[62445] = {
["encounterName"] = "Thorim",
["source"] = "Dark Rune Evoker",
["encounterID"] = 1141,
["event"] = "SPELL_CAST_START",
["npcID"] = 32878,
},
[395029] = {
["isChanneled"] = true,
["source"] = "Melidrussa Chillworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195119,
},
[388886] = {
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_START",
["npcID"] = 196576,
},
[390934] = {
["source"] = "Salkii",
["event"] = "SPELL_CAST_START",
["npcID"] = 193885,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[112084] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["npcID"] = 58826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[120787] = {
["source"] = "Imperial Antiquator",
["event"] = "SPELL_CAST_START",
["npcID"] = 61641,
},
[80344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp",
["npcID"] = 43014,
},
[401175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebyssian",
["npcID"] = 201707,
},
[272167] = {
["source"] = "Bilescourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 136404,
},
[286502] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Night Elf Sentinel",
["npcID"] = 147600,
},
[390938] = {
["source"] = "Aggravated Skitterfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 197406,
},
[444180] = {
["isChanneled"] = true,
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[198557] = {
["source"] = "Felskorn Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97825,
},
[448276] = {
["source"] = "Fungarian Sporeflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 218667,
},
[176032] = {
["source"] = "Grom'kar Cinderseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 88163,
},
[395035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Galtmaa",
["npcID"] = 195927,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charred Hornspike",
["npcID"] = 191479,
},
[37361] = {
["source"] = "Skeletal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 10390,
},
[431896] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Thirsty Patron",
["npcID"] = 215819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[126420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gaohun the Soul-Severer",
["npcID"] = 62881,
},
[31865] = {
["source"] = "Illidari Succubus",
["event"] = "SPELL_CAST_START",
["npcID"] = 22860,
},
[198559] = {
["source"] = "Muorg",
["event"] = "SPELL_CAST_START",
["npcID"] = 97944,
},
[390943] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[120789] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["event"] = "SPELL_CAST_START",
["npcID"] = 61634,
},
[114646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[386849] = {
["source"] = "Unleashed Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 195846,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[452378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Civilian Puppet",
["npcID"] = 219495,
},
[148391] = {
["source"] = "Gate-Crasher Sav'ah",
["event"] = "SPELL_CAST_START",
["npcID"] = 73670,
},
[413473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Deviation",
["npcID"] = 206063,
},
[36594] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Thunderhawk Cloudscraper",
["event"] = "SPELL_CAST_START",
["npcID"] = 37557,
},
[147368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Great Bull",
["npcID"] = 72844,
},
[266036] = {
["source"] = "Thistle Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 135474,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[272180] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[407332] = {
["source"] = "Agitated Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 202316,
},
[196515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Ashioi",
["npcID"] = 100250,
},
[140202] = {
["source"] = "Animated Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 67473,
},
[397094] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[374569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2581,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[202659] = {
["encounterName"] = "Blood-Princess Thal'ena",
["source"] = "Blood-Princess Thal'ena",
["npcID"] = 102431,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1855,
},
[390952] = {
["source"] = "Grand Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188009,
},
[196516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualist Lesha",
["npcID"] = 100248,
},
[272183] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[397096] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[401192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[321330] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkmaul Channeler",
["npcID"] = 157328,
},
[117720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormali Incinerator",
["npcID"] = 54703,
},
[423718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balboan",
["npcID"] = 210559,
},
[59376] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[199589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helarjar Mistcaller",
["npcID"] = 99033,
},
[419624] = {
["source"] = "Whispering Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207171,
},
[421672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcoross",
["npcID"] = 208478,
},
[115161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Snapper",
["npcID"] = 56447,
},
[397100] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[22907] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 24696,
},
[218020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Stonewarden",
["npcID"] = 108856,
},
[413483] = {
["source"] = "Apiazhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 200981,
},
[47346] = {
["isChanneled"] = true,
["source"] = "Novos the Summoner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26631,
},
[372529] = {
["source"] = "Scav Notail",
["event"] = "SPELL_CAST_START",
["npcID"] = 193136,
},
[39667] = {
["source"] = "Illidari Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 23403,
},
[200615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Sorcerer",
["npcID"] = 102726,
},
[411437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[454440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Pillager",
["npcID"] = 135241,
},
[423725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balboan",
["npcID"] = 210559,
},
[411439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[413487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Fusion",
["npcID"] = 206068,
},
[59377] = {
["encounterName"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[395058] = {
["source"] = "Pirdan the Blinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186512,
},
[143280] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71152,
},
[419632] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spiteful Shade",
["npcID"] = 208945,
},
[446253] = {
["isChanneled"] = true,
["source"] = "Congealed Mass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222461,
},
[130521] = {
["source"] = "Captain Doren",
["event"] = "SPELL_CAST_START",
["npcID"] = 66052,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[397108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seaborne Colossus",
["npcID"] = 214437,
},
[150448] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 76465,
},
[319294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[333629] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Reanimated Crossbowman",
["npcID"] = 168246,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[397110] = {
["source"] = "Stormbound Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 187843,
},
[270150] = {
["source"] = "Feathered Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 132409,
},
[280389] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[372538] = {
["source"] = "Lava Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 189470,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[409398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Guardian",
["npcID"] = 203831,
},
[397112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornmu the Ancient",
["npcID"] = 196382,
},
[319298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[84448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aeosera",
["npcID"] = 43641,
},
[137140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Warlord Teng",
["npcID"] = 69471,
},
[423734] = {
["encounterName"] = "Rezan",
["source"] = "Doomfiend",
["npcID"] = 210910,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[129499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestation of Fear",
["npcID"] = 59874,
},
[113629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneweaver",
["npcID"] = 59193,
},
[407354] = {
["source"] = "Molten Leadspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 210064,
},
[388925] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[401212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crabtankerous",
["npcID"] = 209909,
},
[137142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Itoka",
["npcID"] = 69461,
},
[382783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tyrant",
["npcID"] = 202483,
},
[118749] = {
["isChanneled"] = true,
["source"] = "Frenzyhop",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56514,
},
[111582] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Starving Hound",
["npcID"] = 58876,
},
[401214] = {
["source"] = "Elder Honeypelt",
["event"] = "SPELL_CAST_START",
["npcID"] = 202451,
},
[260008] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Zeth'jir Seacaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 130824,
},
[130524] = {
["source"] = "Captain Doren",
["event"] = "SPELL_CAST_START",
["npcID"] = 66052,
},
[147382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Grazer",
["npcID"] = 72843,
},
[66532] = {
["encounterName"] = "Lord Jaraxxus",
["source"] = "Lord Jaraxxus",
["encounterID"] = 1087,
["event"] = "SPELL_CAST_START",
["npcID"] = 34780,
},
[407359] = {
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 202303,
},
[401216] = {
["source"] = "Nevroll",
["event"] = "SPELL_CAST_START",
["npcID"] = 203039,
},
[382787] = {
["source"] = "Brackenhide Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194467,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[198577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tideskorn Worker",
["npcID"] = 108526,
},
[390979] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185168,
},
[450364] = {
["source"] = "Royal Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222881,
},
[194482] = {
["source"] = "Priestess of Eyir",
["event"] = "SPELL_CAST_START",
["npcID"] = 94856,
},
[114143] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chief Gukgut",
["npcID"] = 54868,
},
[319310] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hrun the Exiled",
["npcID"] = 156900,
},
[446271] = {
["isChanneled"] = true,
["source"] = "Congealed Mass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222461,
},
[382791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[147385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Great Bull",
["npcID"] = 72844,
},
[372553] = {
["source"] = "Darktooth Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195273,
},
[390983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turboris",
["npcID"] = 187886,
},
[393031] = {
["source"] = "Colossal Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186672,
},
[193460] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["npcID"] = 96756,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1822,
},
[390984] = {
["source"] = "Qalashi Magmacrafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 187867,
},
[425796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Incineration",
["npcID"] = 210147,
},
[264024] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[199604] = {
["source"] = "Sledge",
["event"] = "SPELL_CAST_START",
["npcID"] = 92990,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[202676] = {
["encounterName"] = "Blood-Princess Thal'ena",
["source"] = "Blood-Princess Thal'ena",
["npcID"] = 102431,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1855,
},
[382795] = {
["isChanneled"] = true,
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193944,
},
[140220] = {
["source"] = "Zandalari Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 69405,
},
[372557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Howler",
["npcID"] = 195273,
},
[390987] = {
["source"] = "Emberspark",
["event"] = "SPELL_CAST_START",
["npcID"] = 208664,
},
[143292] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["encounterID"] = 1598,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71479,
},
[390988] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185168,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[388941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Guardian",
["npcID"] = 201718,
},
[200630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindshattered Screecher",
["npcID"] = 95769,
},
[38391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Inferno",
["npcID"] = 105137,
},
[419659] = {
["source"] = "Molten Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207101,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187772,
},
[39671] = {
["isChanneled"] = true,
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22853,
},
[129504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestation of Fear",
["npcID"] = 59874,
},
[388944] = {
["source"] = "Waterpots",
["event"] = "SPELL_CAST_START",
["npcID"] = 201556,
},
[195512] = {
["isChanneled"] = true,
["source"] = "Felskorn Raider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108306,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[382802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 187224,
},
[168892] = {
["isChanneled"] = true,
["source"] = "Mother Araneae",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76473,
},
[137152] = {
["source"] = "Hidden Fog",
["event"] = "SPELL_CAST_START",
["npcID"] = 69375,
},
[268129] = {
["source"] = "Refreshment Vendor",
["event"] = "SPELL_CAST_START",
["npcID"] = 136470,
},
[59381] = {
["encounterName"] = "Ley-Guardian Eregos",
["source"] = "Ley-Guardian Eregos",
["npcID"] = 27656,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2013,
},
[460618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overworked Cook",
["npcID"] = 220744,
},
[372565] = {
["isChanneled"] = true,
["source"] = "Temporal Deviation",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[456523] = {
["source"] = "Clump O' Wax",
["event"] = "SPELL_CAST_START",
["npcID"] = 226809,
},
[114147] = {
["source"] = "The Fearmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 59656,
},
[388949] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Legionnaire",
["encounterID"] = 2614,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196679,
},
[325469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decrepit Bilespawn",
["npcID"] = 166928,
},
[225207] = {
["isChanneled"] = true,
["source"] = "Greela \"The Grunt\" Crankchain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101146,
},
[54518] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ik'thik Infestor",
["npcID"] = 59831,
},
[372568] = {
["isChanneled"] = true,
["source"] = "Temporal Deviation",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[417619] = {
["isChanneled"] = true,
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204808,
},
[264038] = {
["source"] = "Coven Thornshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 131666,
},
[87527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dustbelcher Trainee",
["npcID"] = 46695,
},
[71657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechachicken",
["npcID"] = 38224,
},
[388952] = {
["source"] = "Echoed Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 202636,
},
[210875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[59638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 31216,
},
[391003] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Shaman Rotknuckle",
["npcID"] = 197356,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[413529] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190690,
},
[155587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Dreadweaver",
["npcID"] = 77035,
},
[37113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190686,
},
[319334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jugnug",
["npcID"] = 153583,
},
[388958] = {
["isChanneled"] = true,
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196671,
},
[244665] = {
["source"] = "Ember of Azzinoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 122712,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 95674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[409437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[440154] = {
["source"] = "Kobold Candlelighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 218758,
},
[204735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magus Bonechill",
["npcID"] = 103757,
},
[124389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodthirsty Saurok",
["npcID"] = 63279,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[193473] = {
["isChanneled"] = true,
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192337,
},
[186306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daggerbeak",
["npcID"] = 90057,
},
[126437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Locust-Guard",
["npcID"] = 63974,
},
[155590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Summoner",
["npcID"] = 77036,
},
[264050] = {
["source"] = "Thistle Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 135474,
},
[78827] = {
["isChanneled"] = true,
["source"] = "Mankrik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 37847,
},
[423775] = {
["source"] = "Elder Scaleguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 211384,
},
[384868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[144328] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71859,
},
[114663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brewmaster Blanche",
["npcID"] = 58740,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56747,
},
[413538] = {
["source"] = "Myrmidon Solek'vosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 200864,
},
[256955] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["encounterID"] = 2103,
["event"] = "SPELL_CAST_START",
["npcID"] = 127490,
},
[200642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[448351] = {
["source"] = "Kobold Snuffercrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 218662,
},
[198595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Thundercaller",
["npcID"] = 95842,
},
[39674] = {
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[409445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[144330] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[194500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Annihilator",
["npcID"] = 110896,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[442210] = {
["encounterName"] = "Anub'zekt",
["source"] = "Bloodstained Webmage",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 220599,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["npcID"] = 194367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[256957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Waveshaper",
["npcID"] = 129370,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[378731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fimbol",
["npcID"] = 200739,
},
[127463] = {
["source"] = "Shao-Tien Antiquator",
["event"] = "SPELL_CAST_START",
["npcID"] = 58928,
},
[266106] = {
["source"] = "Feral Bloodswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133835,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[395115] = {
["source"] = "Smogswog the Firebreather",
["event"] = "SPELL_CAST_START",
["npcID"] = 193120,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[417641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felbolg",
["npcID"] = 206189,
},
[256959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[143309] = {
["encounterName"] = "Immerseus",
["source"] = "Immerseus",
["encounterID"] = 1602,
["event"] = "SPELL_CAST_START",
["npcID"] = 71543,
},
[388974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Territorial Coastling",
["npcID"] = 193163,
},
[450407] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[388975] = {
["isChanneled"] = true,
["source"] = "Steamgill",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193123,
},
[200647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felguard Butcher",
["npcID"] = 96494,
},
[388976] = {
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[195528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Storm",
["npcID"] = 95920,
},
[140239] = {
["source"] = "Zandalari Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 69405,
},
[41467] = {
["encounterName"] = "The Illidari Council",
["source"] = "Gathios the Shatterer",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22949,
},
[395121] = {
["isChanneled"] = true,
["source"] = "Baron Crustcore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192266,
},
[117738] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Longfang Patriarch",
["npcID"] = 58889,
},
[391026] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[413552] = {
["source"] = "Ducks Devil",
["event"] = "SPELL_CAST_START",
["npcID"] = 200751,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[120810] = {
["source"] = "Tormented Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 60825,
},
[36604] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[440175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agaricus Festerbloom",
["npcID"] = 215545,
},
[117227] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["npcID"] = 60586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[421746] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[127466] = {
["source"] = "Shao-Tien Antiquator",
["event"] = "SPELL_CAST_START",
["npcID"] = 58928,
},
[393079] = {
["source"] = "Koroleth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188180,
},
[187341] = {
["source"] = "Fel Commander Igrius",
["event"] = "SPELL_CAST_START",
["npcID"] = 95285,
},
[327552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doom Shroom",
["npcID"] = 168573,
},
[138196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Guardian",
["npcID"] = 69834,
},
[126955] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[207820] = {
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_START",
["npcID"] = 95451,
},
[79857] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Twilight Cryptomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 44855,
},
[186319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daggerbeak",
["npcID"] = 90057,
},
[140245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Stone Conqueror",
["npcID"] = 69238,
},
[142293] = {
["source"] = "Whale Shark",
["event"] = "SPELL_CAST_START",
["npcID"] = 71303,
},
[427897] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[407420] = {
["source"] = "Primalist Runestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 204001,
},
[157652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Magus",
["npcID"] = 77694,
},
[11969] = {
["source"] = "Blazebound Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 38896,
},
[79858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Challe Tebrilinde",
["npcID"] = 82005,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1751,
},
[376706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[194513] = {
["source"] = "Valkyra Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 92764,
},
[12737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[384899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Ranger",
["npcID"] = 186208,
},
[140248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Stone Conqueror",
["npcID"] = 69238,
},
[111599] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[256970] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["encounterID"] = 2103,
["event"] = "SPELL_CAST_START",
["npcID"] = 127490,
},
[409473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Magma Worm",
["npcID"] = 203825,
},
[185299] = {
["source"] = "Eredar Supplicant",
["event"] = "SPELL_CAST_START",
["npcID"] = 90661,
},
[202705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Rector",
["npcID"] = 103453,
},
[138201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Lord",
["npcID"] = 69821,
},
[147416] = {
["source"] = "Ordon Candlekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72875,
},
[115183] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ik'thik Bloodrager",
["npcID"] = 59887,
},
[200658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadsoul Ruiner",
["npcID"] = 95771,
},
[136154] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Crimson Fog",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 69050,
},
[454526] = {
["source"] = "Shellbinder Kiku",
["event"] = "SPELL_CAST_START",
["npcID"] = 223857,
},
[126958] = {
["source"] = "Mogu'shan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 64061,
},
[444288] = {
["source"] = "Web Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 218320,
},
[111600] = {
["encounterName"] = "Raigonn",
["source"] = "Krik'thik Swarm Bringer",
["encounterID"] = 1419,
["event"] = "SPELL_CAST_START",
["npcID"] = 56930,
},
[142298] = {
["source"] = "Embercore",
["event"] = "SPELL_CAST_START",
["npcID"] = 70663,
},
[409477] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[113136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
},
[7105] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Private Hallan",
["event"] = "SPELL_CAST_START",
["npcID"] = 5045,
},
[195540] = {
["source"] = "Bloodtotem Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 108289,
},
[262092] = {
["source"] = "Addled Thug",
["event"] = "SPELL_CAST_START",
["npcID"] = 130435,
},
[440195] = {
["source"] = "Irritated Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 226052,
},
[137180] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1577,
},
[268185] = {
["source"] = "Refreshment Vendor",
["event"] = "SPELL_CAST_START",
["npcID"] = 136470,
},
[139228] = {
["source"] = "Zandalari High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 69906,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[186327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Mistcaller",
["npcID"] = 93377,
},
[395148] = {
["source"] = "Mikrin of the Raging Winds",
["event"] = "SPELL_CAST_START",
["npcID"] = 193173,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[84469] = {
["source"] = "Ironforge Cabalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 67762,
},
[417675] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[140254] = {
["source"] = "Zandalari Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 69405,
},
[438153] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[48894] = {
["source"] = "Drakkari Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 26639,
},
[147422] = {
["source"] = "Ordon Candlekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72875,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[110579] = {
["source"] = "Golden Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 58386,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1057,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[423825] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cracking Sediment",
["npcID"] = 210999,
},
[425873] = {
["source"] = "Lingering Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 209564,
},
[186332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daggerbeak",
["npcID"] = 90057,
},
[448399] = {
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[409492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Afflicted Soul",
["npcID"] = 204773,
},
[142306] = {
["isChanneled"] = true,
["source"] = "Dark Shaman Xorenth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70683,
},
[270246] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Adhara White",
["event"] = "SPELL_CAST_START",
["npcID"] = 138279,
},
[48895] = {
["source"] = "Drakkari Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 26639,
},
[41472] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[395161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure-Mad Trambladd",
["npcID"] = 193146,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[450451] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[436117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 135552,
},
[88056] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1430,
},
[421785] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Flamemancer",
["npcID"] = 210170,
},
[116725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Husshun",
["npcID"] = 54925,
},
[417691] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[111606] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[11970] = {
["source"] = "Subjugated Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[395167] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[323496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[432027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twice-Stinger the Wretched",
["npcID"] = 219271,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[382883] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[25602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maelgwyn",
["npcID"] = 81995,
},
[432030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Screamer",
["npcID"] = 215411,
},
[129013] = {
["source"] = "Windward Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 58213,
},
[113143] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1430,
},
[211936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glimar Ironfist",
["npcID"] = 91529,
},
[384933] = {
["isChanneled"] = true,
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[79868] = {
["source"] = "Brainwashed Noble",
["event"] = "SPELL_CAST_START",
["npcID"] = 596,
},
[64767] = {
["source"] = "Thorim",
["event"] = "SPELL_CAST_START",
["npcID"] = 32865,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[199652] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Haldor",
["npcID"] = 95843,
},
[41986] = {
["source"] = "Angered Soul Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 23398,
},
[395177] = {
["source"] = "Massive Magmashell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193152,
},
[413607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[432037] = {
["source"] = "Sparklit Buttonmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[456611] = {
["source"] = "Zillix",
["event"] = "SPELL_CAST_START",
["npcID"] = 221976,
},
[79869] = {
["isChanneled"] = true,
["source"] = "Arcanist Rathaella",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68049,
},
[61184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Huntress",
["npcID"] = 58070,
},
[116217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Creeper",
["npcID"] = 56304,
},
[117241] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[68607] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Hummel",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36296,
},
[203750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Warpcaster",
["npcID"] = 109652,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[386991] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194146,
},
[111610] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[88061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[80382] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Explorer's League Digger",
["npcID"] = 38998,
},
[389040] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[376754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Erupting Droplet",
["npcID"] = 191983,
},
[395184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[456617] = {
["source"] = "Zillix",
["event"] = "SPELL_CAST_START",
["npcID"] = 221976,
},
[75775] = {
["source"] = "Frostmane Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 41146,
},
[168940] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[50690] = {
["source"] = "Azure Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27633,
},
[147439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zesqua",
["npcID"] = 72245,
},
[427950] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[129017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Enforcer",
["npcID"] = 65626,
},
[218087] = {
["isChanneled"] = true,
["source"] = "Cove Raven",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 110846,
},
[44547] = {
["source"] = "Sister of Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 24697,
},
[448429] = {
["source"] = "Kobold Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
[114683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theramore Arcanist",
["npcID"] = 59596,
},
[395188] = {
["source"] = "Irontree",
["event"] = "SPELL_CAST_START",
["npcID"] = 188124,
},
[123898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brewmaster Bo",
["npcID"] = 62491,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["npcID"] = 44704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[458669] = {
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[101885] = {
["source"] = "The Abominable Greench",
["event"] = "SPELL_CAST_START",
["npcID"] = 54499,
},
[69633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Specter",
["npcID"] = 47220,
},
[165871] = {
["isChanneled"] = true,
["source"] = "Keli'dan the Breaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79702,
},
[268230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Deckhand",
["npcID"] = 138464,
},
[79872] = {
["source"] = "Kaldorei Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 191112,
},
[427955] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[413621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Watchkeeper",
["npcID"] = 207177,
},
[413622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Watchkeeper",
["npcID"] = 207177,
},
[168944] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[450483] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[436149] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 136541,
},
[401338] = {
["source"] = "Sawscale Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[129531] = {
["source"] = "Mo Mo",
["event"] = "SPELL_CAST_START",
["npcID"] = 59805,
},
[440246] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[393148] = {
["source"] = "Maneet",
["event"] = "SPELL_CAST_START",
["npcID"] = 188704,
},
[395196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[374719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonejaw Basilisk",
["npcID"] = 188128,
},
[387006] = {
["source"] = "Rotting Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 186361,
},
[389054] = {
["source"] = "Arcane Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196694,
},
[317383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Warrior",
["npcID"] = 150237,
},
[118781] = {
["source"] = "Aiyu the Skillet",
["event"] = "SPELL_CAST_START",
["npcID"] = 56520,
},
[140278] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Animator",
["npcID"] = 70069,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[199663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Councilor",
["npcID"] = 98370,
},
[401342] = {
["source"] = "Crimson Oldblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 201054,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[432059] = {
["source"] = "Candlelit Hexthrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 213685,
},
[417725] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[427964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Incarnation",
["npcID"] = 213559,
},
[49668] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Crystal Handler",
["encounterID"] = 1976,
["event"] = "SPELL_CAST_START",
["npcID"] = 26627,
},
[161781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfire Gronnling",
["npcID"] = 79529,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[59395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 200823,
},
[452539] = {
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["npcID"] = 98965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[51972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystalline Tender",
["npcID"] = 28231,
},
[200689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Soulmaster",
["npcID"] = 102724,
},
[456636] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Rebellious Queen",
["npcID"] = 222616,
},
[147448] = {
["source"] = "Foreboding Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 73162,
},
[37638] = {
["source"] = "Harala the Firespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60030,
},
[458685] = {
["source"] = "Moth'ethk",
["event"] = "SPELL_CAST_START",
["npcID"] = 206203,
},
[194547] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 62825,
},
[264150] = {
["source"] = "Thornguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 131858,
},
[462782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Defense Turret",
["npcID"] = 229678,
},
[458688] = {
["source"] = "Awakened Volcanic Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[427972] = {
["encounterName"] = "Volcoross",
["source"] = "Lieutenant Lunker",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 211272,
},
[372683] = {
["source"] = "Infused Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187894,
},
[432068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waterworks Brute",
["npcID"] = 222979,
},
[384970] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gutchewer Bear",
["npcID"] = 186284,
},
[378827] = {
["source"] = "Qalashi Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192786,
},
[454594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tor'go",
["npcID"] = 222690,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[214003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Swordsman",
["npcID"] = 102094,
},
[15043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gold Mage",
["npcID"] = 32341,
},
[96259] = {
["isChanneled"] = true,
["source"] = "Shox'tik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66784,
},
[136189] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2895,
},
[417737] = {
["source"] = "Whispering Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207171,
},
[387021] = {
["source"] = "Agitated Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192238,
},
[53765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Alistra",
["npcID"] = 29195,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[38663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valiyaka the Stormbringer",
["npcID"] = 89650,
},
[401357] = {
["isChanneled"] = true,
["source"] = "Overloading Defense Matrix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201550,
},
[378832] = {
["source"] = "Skulking Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 196384,
},
[434122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascended Neophyte",
["npcID"] = 216326,
},
[446409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Kelp",
["npcID"] = 215702,
},
[195576] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Helarjar Guardian",
["npcID"] = 115753,
},
[147454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Jadefire",
["npcID"] = 72769,
},
[116226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slingtail Stickypaw",
["npcID"] = 55110,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[419790] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[266209] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[401361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadful Defender",
["npcID"] = 203842,
},
[401362] = {
["source"] = "Zaqali Heatbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200452,
},
[154623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Spirit-Tender",
["npcID"] = 77131,
},
[147456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Jadefire",
["npcID"] = 72769,
},
[207865] = {
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_START",
["npcID"] = 95451,
},
[372696] = {
["source"] = "Primal Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[118275] = {
["source"] = "Ale-Addled Hozen",
["event"] = "SPELL_CAST_START",
["npcID"] = 57672,
},
[197627] = {
["source"] = "Brood Queen Tyranna",
["event"] = "SPELL_CAST_START",
["npcID"] = 93802,
},
[446416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honey-fused Droplet",
["npcID"] = 213697,
},
[142338] = {
["source"] = "Kor'kron Dark Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 71245,
},
[417748] = {
["source"] = "Klaxxi Blade Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 207922,
},
[186365] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nameless King",
["npcID"] = 92763,
},
[456656] = {
["source"] = "Rabaan",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[401368] = {
["source"] = "Deepstrider Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 203727,
},
[419798] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[417751] = {
["source"] = "Vernon Whitlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 212812,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[417752] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[427992] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[135174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorin Magehand",
["npcID"] = 68587,
},
[378847] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Spinecrusher",
["npcID"] = 192787,
},
[389086] = {
["source"] = "Hunting Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 193741,
},
[401373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[387039] = {
["source"] = "Nokhud Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187842,
},
[141318] = {
["source"] = "Frostmane Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 70473,
},
[39945] = {
["encounterName"] = "Shade of Akama",
["source"] = "Akama",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23191,
},
[444377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highland Bear",
["npcID"] = 226179,
},
[421852] = {
["source"] = "Shoreline Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 210283,
},
[391136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Breaker",
["npcID"] = 187240,
},
[384993] = {
["source"] = "Horned Filcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194702,
},
[378850] = {
["source"] = "Destabilized Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 181536,
},
[41481] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[135176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 68609,
},
[84490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pebble",
["npcID"] = 43116,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[79883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kavem the Callous",
["npcID"] = 47567,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200927,
},
[252923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[387045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Xymra",
["npcID"] = 200186,
},
[372711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[142345] = {
["source"] = "Poison Bolt Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 71334,
},
[84491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pebble",
["npcID"] = 43116,
},
[137226] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[440288] = {
["source"] = "Roaming Mongrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 218330,
},
[417763] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131545,
},
[401382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Past Self",
["npcID"] = 185800,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["npcID"] = 214608,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[387049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Loyalist",
["npcID"] = 200869,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[395241] = {
["source"] = "Primalist Voltweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198868,
},
[389098] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[401385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Wormling",
["npcID"] = 205613,
},
[438245] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[374765] = {
["source"] = "Prowling Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 193430,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[137229] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[423912] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[385005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalsworn Furbolg",
["npcID"] = 190738,
},
[389101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alia Sunsoar",
["npcID"] = 196737,
},
[15620] = {
["source"] = "Orc Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 35894,
},
[387054] = {
["source"] = "Soggymaw Crabtrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187971,
},
[137230] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[257024] = {
["source"] = "Matron Ceridwen",
["event"] = "SPELL_CAST_START",
["npcID"] = 133307,
},
[409581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[64776] = {
["isChanneled"] = true,
["source"] = "Arachnopod Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 34183,
},
[121865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Ook",
["npcID"] = 62465,
},
[131088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistblade Scale-Lord",
["npcID"] = 63179,
},
[436203] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[41483] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[407535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[262145] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Tauren Earthshaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 147173,
},
[139280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Gatekeeper",
["npcID"] = 69510,
},
[436205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Test Subject",
["npcID"] = 216328,
},
[462826] = {
["source"] = "Explosive Bomberbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229706,
},
[448492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[192522] = {
["source"] = "Ash'golm",
["event"] = "SPELL_CAST_START",
["npcID"] = 96681,
},
[136209] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["encounterID"] = 1574,
["event"] = "SPELL_CAST_START",
["npcID"] = 69017,
},
[313342] = {
["source"] = "Mechanized Lab Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 156908,
},
[405491] = {
["source"] = "Buried Wealth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205330,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[195595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 99300,
},
[425970] = {
["source"] = "Verdant Boughwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213576,
},
[395254] = {
["source"] = "Primalist Tempestmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 198878,
},
[257028] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["encounterID"] = 2103,
["event"] = "SPELL_CAST_START",
["npcID"] = 127490,
},
[417780] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[428019] = {
["source"] = "Royal Wicklighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[372730] = {
["source"] = "Primal Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 188244,
},
[417781] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[66066] = {
["encounterName"] = "Faction Champions",
["source"] = "Melador Valestrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 34469,
},
[134164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Sentinel",
["npcID"] = 67900,
},
[225289] = {
["source"] = "Dark Ranger Kalira",
["event"] = "SPELL_CAST_START",
["npcID"] = 113084,
},
[288774] = {
["isChanneled"] = true,
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229739,
},
[186382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malgalor",
["npcID"] = 92608,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[34829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rangari Jonaa",
["npcID"] = 86663,
},
[387067] = {
["source"] = "Forgotten Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 193214,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[428023] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[372735] = {
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187969,
},
[432120] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[458181] = {
["source"] = "Deathtide",
["event"] = "SPELL_CAST_START",
["npcID"] = 221753,
},
[458289] = {
["source"] = "Deathtide",
["event"] = "SPELL_CAST_START",
["npcID"] = 221753,
},
[411644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[165907] = {
["source"] = "Stribit",
["event"] = "SPELL_CAST_START",
["npcID"] = 79728,
},
[183132] = {
["source"] = "Questioner Arev'naal",
["event"] = "SPELL_CAST_START",
["npcID"] = 89673,
},
[385024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Snapper Matriarch",
["npcID"] = 205078,
},
[456612] = {
["source"] = "Zeeben",
["event"] = "SPELL_CAST_START",
["npcID"] = 221975,
},
[89105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[456696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[323149] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[41229] = {
["source"] = "Bonechewer Blood Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 23237,
},
[165908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borogahn",
["npcID"] = 81043,
},
[440188] = {
["source"] = "Chitin Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[200720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Fragment",
["npcID"] = 101753,
},
[136216] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["npcID"] = 69017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1574,
},
[450454] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[131097] = {
["source"] = "Captain Doren",
["event"] = "SPELL_CAST_START",
["npcID"] = 66052,
},
[122797] = {
["source"] = "Uruk",
["event"] = "SPELL_CAST_START",
["npcID"] = 62613,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[258058] = {
["source"] = "Silt Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 127381,
},
[443908] = {
["encounterName"] = "Speaker Halven",
["source"] = "Speaker Halven",
["encounterID"] = 3007,
["event"] = "SPELL_CAST_START",
["npcID"] = 217570,
},
[121870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ba-Bam",
["npcID"] = 62466,
},
[146456] = {
["source"] = "Goro'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 72964,
},
[385029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 186246,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[372743] = {
["isChanneled"] = true,
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[456133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Sentinel",
["npcID"] = 224828,
},
[143385] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["encounterID"] = 1601,
["event"] = "SPELL_CAST_START",
["npcID"] = 71504,
},
[444415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadegrumble Bear",
["npcID"] = 220059,
},
[456326] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Rebellious Queen",
["npcID"] = 222616,
},
[456702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Blight",
["npcID"] = 220273,
},
[125311] = {
["source"] = "Scritch",
["event"] = "SPELL_CAST_START",
["npcID"] = 50831,
},
[164887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[448213] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[191508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[456623] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Rebellious Queen",
["npcID"] = 222616,
},
[79884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tawn Winterbluff",
["npcID"] = 45393,
},
[65035] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Vanquished Corruptor Tentacle",
["npcID"] = 34265,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2879,
},
[445936] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[139003] = {
["source"] = "Mumta",
["event"] = "SPELL_CAST_START",
["npcID"] = 69664,
},
[140315] = {
["source"] = "Spirit Mask",
["event"] = "SPELL_CAST_START",
["npcID"] = 69476,
},
[447950] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Ascended Voidspeaker",
["npcID"] = 223150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[191509] = {
["source"] = "Hill Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 102886,
},
[454587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tor'go",
["npcID"] = 222690,
},
[395273] = {
["source"] = "Primal Stormsentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 196856,
},
[448047] = {
["isChanneled"] = true,
["source"] = "Pale Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223646,
},
[7395] = {
["source"] = "Undead Dynamiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 625,
},
[450191] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[387083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Briarback",
["npcID"] = 187264,
},
[413704] = {
["source"] = "Ducks Devil",
["event"] = "SPELL_CAST_START",
["npcID"] = 200751,
},
[374797] = {
["source"] = "Divebeak Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 189373,
},
[385036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[378453] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[396742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crabtankerous",
["npcID"] = 209909,
},
[171033] = {
["isChanneled"] = true,
["source"] = "Blackrock Flamecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85644,
},
[129018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dojani Enforcer",
["npcID"] = 65626,
},
[448458] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Devoted Worshipper",
["npcID"] = 223318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[61964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Acolyte",
["npcID"] = 32886,
},
[327664] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[124944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ikkess",
["npcID"] = 62074,
},
[168986] = {
["source"] = "Tol'ressa",
["event"] = "SPELL_CAST_START",
["npcID"] = 77902,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[101907] = {
["source"] = "Strange Snowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 54523,
},
[409612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[136954] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[141342] = {
["source"] = "Newt",
["event"] = "SPELL_CAST_START",
["npcID"] = 70606,
},
[456711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[425995] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[218133] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Uldgar",
["npcID"] = 105443,
},
[194584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tideskorn Huntress",
["npcID"] = 100446,
},
[439814] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[139295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yalia Sagewhisper",
["npcID"] = 69618,
},
[321226] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2388,
},
[446474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealed Wax-hulk",
["npcID"] = 223206,
},
[456713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[17162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunreaver Summoner",
["npcID"] = 68760,
},
[17290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmage Yurias",
["npcID"] = 67994,
},
[139296] = {
["encounterName"] = "Ji-Kun",
["source"] = "Hatchling",
["encounterID"] = 1573,
["event"] = "SPELL_CAST_START",
["npcID"] = 68192,
},
[387091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Sunseeker",
["npcID"] = 187239,
},
[133153] = {
["isChanneled"] = true,
["source"] = "Cordfellow Hack",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67420,
},
[432142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 222731,
},
[417808] = {
["source"] = "Haywire Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 205889,
},
[428047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[446477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepsludger",
["npcID"] = 216536,
},
[140106] = {
["source"] = "Zeb'tula Spearanger",
["event"] = "SPELL_CAST_START",
["npcID"] = 69518,
},
[30851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[189467] = {
["source"] = "Malace Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 97090,
},
[61965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Acolyte",
["npcID"] = 32886,
},
[333602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[124946] = {
["source"] = "Morgrinn Crackfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 50350,
},
[325163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[136953] = {
["source"] = "Zandalari Water-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69455,
},
[9734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barbery the Crazy Cat Lady",
["npcID"] = 82009,
},
[148513] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Kun-Da",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71408,
},
[458311] = {
["source"] = "Venombite",
["event"] = "SPELL_CAST_START",
["npcID"] = 227632,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[458767] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ravageant",
["npcID"] = 207826,
},
[250901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Night Elf Sentinel",
["npcID"] = 147274,
},
[226102] = {
["source"] = "Suramar Loyalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 113618,
},
[327130] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flesh Crafter",
["npcID"] = 165872,
},
[456174] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[189469] = {
["source"] = "Malace Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 97090,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[134180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sam the Wise",
["npcID"] = 68128,
},
[442387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 222731,
},
[264233] = {
["encounterName"] = "Merektha",
["source"] = "Egg",
["npcID"] = 134516,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2125,
},
[117780] = {
["source"] = "Longfang Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 56524,
},
[171764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baron Scaldius",
["npcID"] = 107195,
},
[458770] = {
["source"] = "Awakened Sulfuric Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190588,
},
[124935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sele'na",
["npcID"] = 50766,
},
[323177] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["npcID"] = 164804,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2397,
},
[306697] = {
["source"] = "Bloodeyes",
["event"] = "SPELL_CAST_START",
["npcID"] = 150721,
},
[121876] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62405,
},
[415769] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[131110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doom Bloom",
["npcID"] = 61414,
},
[140325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Creeping Moor Beast",
["npcID"] = 67772,
},
[116606] = {
["isChanneled"] = true,
["source"] = "Zandalari Skullcharger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60375,
},
[415770] = {
["source"] = "Coalesced Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 206140,
},
[124948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ikkess",
["npcID"] = 62074,
},
[432116] = {
["source"] = "Candleclaw Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 213833,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[391198] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[462264] = {
["isChanneled"] = true,
["source"] = "Blood Drainer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229399,
},
[63758] = {
["source"] = "Twilight Frost Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 33819,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["npcID"] = 164804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[137994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[264239] = {
["encounterName"] = "Merektha",
["source"] = "Egg",
["npcID"] = 134517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2125,
},
[65038] = {
["source"] = "Vanquished Crusher Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 34264,
},
[415773] = {
["source"] = "Interval",
["event"] = "SPELL_CAST_START",
["npcID"] = 206065,
},
[458325] = {
["source"] = "Venombite",
["event"] = "SPELL_CAST_START",
["npcID"] = 227632,
},
[140327] = {
["source"] = "Arcanital Tula'chek",
["event"] = "SPELL_CAST_START",
["npcID"] = 69475,
},
[129916] = {
["source"] = "Siftworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 65711,
},
[432156] = {
["source"] = "Waxtail Outrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 213095,
},
[124949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ikkess",
["npcID"] = 62074,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[430109] = {
["source"] = "Cursed Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207198,
},
[171044] = {
["source"] = "Siege Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 85587,
},
[454438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[59663] = {
["source"] = "Thexal Deathchill",
["event"] = "SPELL_CAST_START",
["npcID"] = 31775,
},
[276068] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[439857] = {
["source"] = "Royal Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219723,
},
[393251] = {
["source"] = "Frenzied Grovetalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 187507,
},
[395299] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[325413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinemaw Acidgullet",
["npcID"] = 167113,
},
[431612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Venomspitter",
["npcID"] = 219661,
},
[458780] = {
["source"] = "Awakened Sulfuric Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[395300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Pathfinder",
["npcID"] = 194210,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[154356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulpriest",
["npcID"] = 76595,
},
[434089] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[450519] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[385063] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[127510] = {
["source"] = "Unga Bird-Haver",
["event"] = "SPELL_CAST_START",
["npcID"] = 62475,
},
[389159] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[456735] = {
["source"] = "Aquellion",
["event"] = "SPELL_CAST_START",
["npcID"] = 220274,
},
[456259] = {
["source"] = "Candleflyer Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 220276,
},
[444449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[121879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ba-Bam",
["npcID"] = 62466,
},
[447926] = {
["source"] = "Galvanized Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224779,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[148522] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72958,
},
[268260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Cannoneer",
["npcID"] = 138465,
},
[456737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Captain",
["npcID"] = 221963,
},
[225313] = {
["source"] = "Dark Ranger Velonara",
["event"] = "SPELL_CAST_START",
["npcID"] = 113086,
},
[263628] = {
["source"] = "Mechanized Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 136139,
},
[153642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Warcaster",
["npcID"] = 76151,
},
[441782] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[450447] = {
["source"] = "Shallowshell the Clacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 219278,
},
[450505] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[128023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Remora",
["npcID"] = 63353,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[393259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[169001] = {
["source"] = "Tol'ressa",
["event"] = "SPELL_CAST_START",
["npcID"] = 77902,
},
[104318] = {
["encounterName"] = "Rezan",
["source"] = "Wild Imp",
["npcID"] = 55659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[130583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Cannoneer",
["npcID"] = 66395,
},
[450597] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["npcID"] = 224077,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[440181] = {
["source"] = "Boskroot Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 212736,
},
[61968] = {
["encounterName"] = "Hodir",
["source"] = "Hodir",
["encounterID"] = 1135,
["event"] = "SPELL_CAST_START",
["npcID"] = 32845,
},
[438218] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[447966] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[325205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeneye Bowman",
["npcID"] = 166936,
},
[454694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalo'xic",
["npcID"] = 222691,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[442408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of Turalyon",
["npcID"] = 214649,
},
[214053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Rockshell",
["npcID"] = 107667,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[423979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Cursed Crusher",
["npcID"] = 214419,
},
[71711] = {
["source"] = "Calder Gray",
["event"] = "SPELL_CAST_START",
["npcID"] = 37908,
},
[50403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastes Scavenger",
["npcID"] = 28005,
},
[186409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agnol",
["npcID"] = 105440,
},
[456729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[139311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Scavenger",
["npcID"] = 70224,
},
[450488] = {
["source"] = "Mosspelt Sheep",
["event"] = "SPELL_CAST_START",
["npcID"] = 222419,
},
[458161] = {
["source"] = "Lurker of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 220285,
},
[456745] = {
["source"] = "Crimson Deathweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[393265] = {
["source"] = "Tombcaller Ganzaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 188509,
},
[387122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 186740,
},
[128952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hawkmaster Nurong",
["npcID"] = 64474,
},
[146479] = {
["isChanneled"] = true,
["source"] = "Goro'dan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72964,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[452651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[452153] = {
["source"] = "Flickerflame Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212528,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["event"] = "SPELL_CAST_START",
["npcID"] = 56719,
},
[79903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turkina",
["npcID"] = 81996,
},
[458160] = {
["source"] = "Skulldunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 221310,
},
[113691] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[81439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[462856] = {
["source"] = "Nullbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229729,
},
[387125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[462892] = {
["source"] = "Malfunctioning Pylon",
["event"] = "SPELL_CAST_START",
["npcID"] = 229739,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[54290] = {
["source"] = "Anub'ar Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[88959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[456327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gong'tze the Riverhewer",
["npcID"] = 221974,
},
[432179] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[417843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Listless Nae'dra",
["npcID"] = 211164,
},
[387127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[372793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Tarasek",
["npcID"] = 188244,
},
[448560] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[64529] = {
["encounterName"] = "Mimiron",
["source"] = "Leviathan Mk II",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 34071,
},
[395319] = {
["isChanneled"] = true,
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194402,
},
[372794] = {
["isChanneled"] = true,
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187897,
},
[81440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[442418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burkhalt",
["npcID"] = 228671,
},
[140339] = {
["source"] = "Scout Captain Elsia",
["event"] = "SPELL_CAST_START",
["npcID"] = 69485,
},
[123931] = {
["source"] = "Jol'Grum",
["event"] = "SPELL_CAST_START",
["npcID"] = 63312,
},
[32103] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fordragon Marksman",
["npcID"] = 27540,
},
[124955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ek'vem",
["npcID"] = 62073,
},
[388535] = {
["source"] = "Gnawbone Chainchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196521,
},
[445910] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[440372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understalker Tunneler",
["npcID"] = 216249,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[446325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Island Proudfeather",
["npcID"] = 227198,
},
[454675] = {
["source"] = "Rampaging Stones",
["event"] = "SPELL_CAST_START",
["npcID"] = 223526,
},
[370104] = {
["source"] = "Dragonbane Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186600,
},
[456513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gong'tze the Riverhewer",
["npcID"] = 221974,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[257063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Waveshaper",
["npcID"] = 129370,
},
[256039] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[199726] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Ranulf",
["npcID"] = 97083,
},
[407125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Raider",
["npcID"] = 207969,
},
[428089] = {
["source"] = "Lowly Moleherd",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[372800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187125,
},
[440376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scary Skitterer",
["npcID"] = 216944,
},
[394676] = {
["source"] = "Council Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198501,
},
[387135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Arcblade",
["npcID"] = 194898,
},
[32011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Spray",
["npcID"] = 32928,
},
[183345] = {
["source"] = "Aranasi Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 100244,
},
[449965] = {
["source"] = "Raging Roots",
["event"] = "SPELL_CAST_START",
["npcID"] = 216250,
},
[193584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepbrine Horror",
["npcID"] = 97445,
},
[456249] = {
["source"] = "Earthfury Cragshar",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
[81442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[196656] = {
["source"] = "Malace Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 97090,
},
[202473] = {
["encounterName"] = "Sael'orn",
["source"] = "Sael'orn",
["npcID"] = 102387,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1851,
},
[206895] = {
["isChanneled"] = true,
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 104583,
},
[444172] = {
["isChanneled"] = true,
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221845,
},
[200425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo'arg Brute",
["npcID"] = 98484,
},
[193585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Trapper",
["npcID"] = 102232,
},
[450045] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[456762] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[442428] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[444473] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ringing Death",
["npcID"] = 214162,
},
[440377] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[450100] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[386866] = {
["source"] = "Mischievous Stagnose",
["event"] = "SPELL_CAST_START",
["npcID"] = 204432,
},
[147512] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[194610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacursed Mistmender",
["npcID"] = 97365,
},
[122398] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Mutated Construct",
["npcID"] = 62701,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[270419] = {
["source"] = "Unbound Deposits",
["event"] = "SPELL_CAST_START",
["npcID"] = 223532,
},
[470588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Witherer",
["npcID"] = 214251,
},
[123934] = {
["source"] = "Jol'Grum",
["event"] = "SPELL_CAST_START",
["npcID"] = 63312,
},
[454718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalo'xic",
["npcID"] = 222691,
},
[192563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Purifier",
["npcID"] = 97197,
},
[444479] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[445949] = {
["source"] = "Sureki Silkbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 222273,
},
[442432] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[272469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Reach",
["npcID"] = 138538,
},
[445866] = {
["isChanneled"] = true,
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216578,
},
[456256] = {
["source"] = "Earthfury Cragshar",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
[417860] = {
["source"] = "Shoreline Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 210283,
},
[129566] = {
["source"] = "Bataari Fire-Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 59083,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[73599] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gobber",
["npcID"] = 39201,
},
[140347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Spellblade",
["npcID"] = 67970,
},
[41238] = {
["isChanneled"] = true,
["source"] = "Bonechewer Blood Prophet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23237,
},
[442250] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[450088] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1049,
},
[76711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[434137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Venomshell",
["npcID"] = 220730,
},
[204852] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[188470] = {
["source"] = "Noxious Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211410,
},
[448269] = {
["source"] = "Foreseer Xix'amon",
["event"] = "SPELL_CAST_START",
["npcID"] = 215435,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[166969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olin Umberhide",
["npcID"] = 79315,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[370766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 196117,
},
[446533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warphorn",
["npcID"] = 219263,
},
[36631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Pyremaw",
["npcID"] = 42824,
},
[147516] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[446230] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[438343] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[148518] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73724,
},
[137077] = {
["isChanneled"] = true,
["source"] = "Zandalari Spear-Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69388,
},
[436200] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[456262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqu'yinra",
["npcID"] = 222605,
},
[22883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siaszerathel",
["npcID"] = 189583,
},
[456302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaniga the Tracker",
["npcID"] = 222639,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[165947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watch Commander Branson",
["npcID"] = 82136,
},
[374865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Dreamsaber",
["npcID"] = 210320,
},
[417868] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[427432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[439789] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[447909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[139327] = {
["source"] = "Unblinking Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 70238,
},
[450613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[113017] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["npcID"] = 58826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[448249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Titan Orb",
["npcID"] = 221730,
},
[50198] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Mage Hunter Initiate",
["npcID"] = 26728,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[270431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Sage",
["npcID"] = 221962,
},
[454730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalo'xic",
["npcID"] = 222691,
},
[456778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Captain",
["npcID"] = 221963,
},
[393298] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[173116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beremus the Overgrowth",
["npcID"] = 80700,
},
[454731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[470592] = {
["source"] = "Nightfall Shadeguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[417872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[454732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tka'ktath",
["npcID"] = 216046,
},
[456780] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Splash",
["npcID"] = 220275,
},
[450637] = {
["source"] = "Nerubian Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[411730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Hound",
["npcID"] = 205611,
},
[123938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodthirsty Saurok",
["npcID"] = 63279,
},
[383062] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[452162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Covert Webmancer",
["npcID"] = 223844,
},
[452156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[9672] = {
["source"] = "Dark Conclave Scorncrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 21385,
},
[456782] = {
["source"] = "Workmaster Nast",
["event"] = "SPELL_CAST_START",
["npcID"] = 213200,
},
[118819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Belligerent Blossom",
["npcID"] = 61183,
},
[62938] = {
["encounterName"] = "Freya",
["source"] = "Storm Lasher",
["encounterID"] = 1133,
["event"] = "SPELL_CAST_START",
["npcID"] = 32919,
},
[182333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormcaller",
["npcID"] = 88087,
},
[75645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[395351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Pathfinder",
["npcID"] = 194210,
},
[41410] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[378282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[141379] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[438355] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[33500] = {
["encounterName"] = "Thorim",
["source"] = "Dark Rune Champion",
["encounterID"] = 1141,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 32876,
},
[393305] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[372828] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[110117] = {
["source"] = "Ethereal Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 65414,
},
[393306] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[238648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomflame Infernal",
["npcID"] = 121045,
},
[141380] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[458836] = {
["isChanneled"] = true,
["source"] = "Speaker Xanventh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220130,
},
[393307] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[193598] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soulthirster",
["npcID"] = 97630,
},
[389213] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[22414] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[393308] = {
["source"] = "Primalist Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 201560,
},
[411738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rashok",
["npcID"] = 201320,
},
[430168] = {
["source"] = "Invading Hurler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214677,
},
[166978] = {
["source"] = "Exarch Maladaar",
["event"] = "SPELL_CAST_START",
["npcID"] = 79537,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[84521] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["npcID"] = 45259,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1055,
},
[413787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[146501] = {
["isChanneled"] = true,
["source"] = "Sra'thik Amber-Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72929,
},
[452205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggregation of Horrors",
["npcID"] = 220999,
},
[411740] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rashok",
["npcID"] = 201320,
},
[20716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronze Shrine Warden",
["npcID"] = 26277,
},
[142406] = {
["source"] = "Kor'kron Emberguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 70798,
},
[241722] = {
["source"] = "Ok'rok Icetouch",
["event"] = "SPELL_CAST_START",
["npcID"] = 121200,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[430171] = {
["source"] = "Wandering Candle",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[394662] = {
["source"] = "Sky Vixen Shokhari",
["event"] = "SPELL_CAST_START",
["npcID"] = 190761,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1833,
},
[462936] = {
["source"] = "Medbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229769,
},
[446328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fog Form",
["npcID"] = 213953,
},
[200768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Razorbeak",
["npcID"] = 95766,
},
[306635] = {
["source"] = "Spirit of Balance",
["event"] = "SPELL_CAST_START",
["npcID"] = 150411,
},
[273844] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Honorbound Spiritcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 145008,
},
[317547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grunk",
["npcID"] = 153581,
},
[434269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daetan Swiftplume",
["npcID"] = 218738,
},
[452699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Hulk",
["npcID"] = 215813,
},
[439811] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astral Attendant",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[456751] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[427760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[122406] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62397,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[448384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[372839] = {
["source"] = "Nokhud Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 191227,
},
[82844] = {
["source"] = "Shox'tik",
["event"] = "SPELL_CAST_START",
["npcID"] = 66784,
},
[195473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gritslime Snail",
["npcID"] = 91786,
},
[411747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Elementium",
["npcID"] = 205628,
},
[427567] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Raszageth's Last Breath",
["npcID"] = 209912,
},
[270453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geolord Grek'og",
["npcID"] = 151091,
},
[180293] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runas the Shamed",
["npcID"] = 90372,
},
[428130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[198723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196482,
},
[64535] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 33670,
},
[436322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[186437] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nameless King",
["npcID"] = 92763,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[180294] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runas the Shamed",
["npcID"] = 90372,
},
[197700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Priestess",
["npcID"] = 100450,
},
[440056] = {
["source"] = "Nerubian Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60410,
},
[458849] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[458638] = {
["source"] = "Awakened Flamecoil Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[448179] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[374892] = {
["source"] = "Mossy Armoredon",
["event"] = "SPELL_CAST_START",
["npcID"] = 193723,
},
[409704] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[86572] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crimson Shale Spider",
["npcID"] = 44425,
},
[143436] = {
["encounterName"] = "Immerseus",
["source"] = "Immerseus",
["encounterID"] = 1602,
["event"] = "SPELL_CAST_START",
["npcID"] = 71543,
},
[383084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Primalist",
["npcID"] = 190066,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[129575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korjan Slavemaster",
["npcID"] = 65638,
},
[121896] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62397,
},
[122408] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["npcID"] = 62711,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[262268] = {
["source"] = "Venture Co. Alchemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 133432,
},
[411754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[415850] = {
["source"] = "Roiling Deathstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 211242,
},
[458853] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[411755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[413803] = {
["source"] = "Cenrrrn Cirrgl Mooncaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 205851,
},
[317559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak",
["npcID"] = 153964,
},
[417899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Adventurer",
["npcID"] = 205992,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[413804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Mender",
["npcID"] = 205852,
},
[448616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hevo'myk",
["npcID"] = 211591,
},
[458720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Volcanic Fury",
["npcID"] = 225896,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[413805] = {
["source"] = "Cenrrrn Cirrgl Tideshifter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204516,
},
[374898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Chieftain",
["npcID"] = 187266,
},
[452442] = {
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[255041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Skyscreamer",
["npcID"] = 128434,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[388688] = {
["source"] = "Garlic-Breathed Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 224751,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[395377] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[395378] = {
["source"] = "Malsegan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193212,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[147535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gu'chi the Swarmbringer",
["npcID"] = 72909,
},
[86574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Behemoth",
["npcID"] = 42475,
},
[115062] = {
["source"] = "Unga Spearscamp",
["event"] = "SPELL_CAST_START",
["npcID"] = 62474,
},
[142416] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71160,
},
[249923] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[129577] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Captive Sentinel",
["npcID"] = 65638,
},
[428004] = {
["isChanneled"] = true,
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210423,
},
[138321] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[423324] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[387189] = {
["source"] = "Reclaimer Makko",
["event"] = "SPELL_CAST_START",
["npcID"] = 191536,
},
[454765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tka'ktath",
["npcID"] = 216046,
},
[401209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oblivious Shaleshell",
["npcID"] = 217123,
},
[434288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daetan Swiftplume",
["npcID"] = 218738,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[145489] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Jun-Wei",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73723,
},
[456274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaniga the Tracker",
["npcID"] = 222639,
},
[145461] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71393,
},
[431702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colormancer Nirethi",
["npcID"] = 222150,
},
[214749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Starbuck",
["npcID"] = 107487,
},
[257092] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["encounterID"] = 2101,
["event"] = "SPELL_CAST_START",
["npcID"] = 127479,
},
[64537] = {
["encounterName"] = "Mimiron",
["source"] = "VX-001",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 33651,
},
[387192] = {
["source"] = "Djaradin Hammer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209831,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[456664] = {
["source"] = "Rabaan",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[385145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Raptor",
["npcID"] = 187256,
},
[140371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunreaver Magus",
["npcID"] = 67661,
},
[98705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magister Brasael",
["npcID"] = 68751,
},
[456817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Captain",
["npcID"] = 221963,
},
[446255] = {
["source"] = "Congealing Mass",
["event"] = "SPELL_CAST_START",
["npcID"] = 222459,
},
[428150] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[389242] = {
["source"] = "Stormed Blackpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 193827,
},
[415863] = {
["source"] = "Time Slime Prime",
["event"] = "SPELL_CAST_START",
["npcID"] = 202453,
},
[204876] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Portal Keeper",
["npcID"] = 102302,
},
[140372] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slateshell Ancient",
["npcID"] = 67763,
},
[458867] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 220577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2949,
},
[199758] = {
["source"] = "Immolanth",
["event"] = "SPELL_CAST_START",
["npcID"] = 96682,
},
[409721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 202610,
},
[144468] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[372862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Waterspout",
["npcID"] = 194219,
},
[244808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandclaw Crab",
["npcID"] = 145337,
},
[450677] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[321669] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Clone",
["npcID"] = 165108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[465012] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[200782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fiendish Creeper",
["npcID"] = 99759,
},
[331274] = {
["source"] = "Animated Goo",
["event"] = "SPELL_CAST_START",
["npcID"] = 218519,
},
[382712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[438012] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[409724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[173138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beremus the Overgrowth",
["npcID"] = 80700,
},
[389247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Avenger",
["npcID"] = 187187,
},
[456823] = {
["source"] = "Grand-Heister Bokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213679,
},
[79922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Flayer",
["npcID"] = 42808,
},
[144470] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[323720] = {
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 204808,
},
[122413] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["npcID"] = 62711,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[122740] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[288909] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Voidmaster Evenshade",
["event"] = "SPELL_CAST_START",
["npcID"] = 147998,
},
[401205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oblivious Shaleshell",
["npcID"] = 217123,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[272528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[186450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Jailer",
["npcID"] = 93005,
},
[391298] = {
["isChanneled"] = true,
["source"] = "Maldra Flametongue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196608,
},
[270481] = {
["encounterName"] = "Rezan",
["source"] = "Demonic Tyrant",
["npcID"] = 135002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[456171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[389251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overgrown Lasher",
["npcID"] = 208626,
},
[458874] = {
["source"] = "Speaker Xanventh",
["event"] = "SPELL_CAST_START",
["npcID"] = 220130,
},
[458434] = {
["source"] = "Pride of Beledar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221786,
},
[452133] = {
["source"] = "Skulldunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 221310,
},
[190174] = {
["source"] = "Skyfire Powder Monkey",
["event"] = "SPELL_CAST_START",
["npcID"] = 94275,
},
[81459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[385157] = {
["source"] = "Pudgy Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 196017,
},
[387205] = {
["source"] = "Isles Gryphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 199192,
},
[200674] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vile Soulmaster",
["npcID"] = 97014,
},
[118644] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ken-Ken",
["npcID"] = 60979,
},
[195293] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skjal",
["npcID"] = 99307,
},
[144473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[444408] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218022,
},
[295032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Livid Enforcer",
["npcID"] = 227355,
},
[295028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Livid Enforcer",
["npcID"] = 227355,
},
[140378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Firespear",
["npcID"] = 70421,
},
[128046] = {
["source"] = "Adjunct G'kkal",
["event"] = "SPELL_CAST_START",
["npcID"] = 63103,
},
[87603] = {
["source"] = "Silver Covenant Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 70262,
},
[458879] = {
["encounterName"] = "Speaker Xanventh",
["source"] = "Speaker Xanventh",
["encounterID"] = 2947,
["event"] = "SPELL_CAST_START",
["npcID"] = 220119,
},
[440222] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[413829] = {
["source"] = "Myrmidon Solek'vosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 200864,
},
[448347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[147546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[138044] = {
["source"] = "Zandalari Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69769,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[417926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[406934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[389258] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[417928] = {
["source"] = "Wildfire Amberpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 207144,
},
[139356] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Archritualist Kelada",
["npcID"] = 70243,
},
[403593] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[422023] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209333,
},
[456835] = {
["source"] = "Hungerer of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 221199,
},
[442501] = {
["source"] = "Sureki Ironweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 220551,
},
[143423] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71480,
},
[386555] = {
["source"] = "Dathea Stormlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[391308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boolk",
["npcID"] = 191450,
},
[106546] = {
["source"] = "Bloated Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59518,
},
[148572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thresher Turret",
["npcID"] = 73742,
},
[15497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Athissa",
["npcID"] = 88091,
},
[133859] = {
["source"] = "Zan'thik Brutalizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67774,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emboldened Fog Wither",
["npcID"] = 219909,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grove Forager",
["npcID"] = 186380,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[456292] = {
["source"] = "Harvester Qixt",
["event"] = "SPELL_CAST_START",
["npcID"] = 216050,
},
[86581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadecrest Basilisk",
["npcID"] = 43981,
},
[197719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonehide Buck",
["npcID"] = 145975,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["npcID"] = 207800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[431691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki String Conductor",
["npcID"] = 216554,
},
[176218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smokemaster Snarl",
["npcID"] = 81749,
},
[313497] = {
["source"] = "Street Thug",
["event"] = "SPELL_CAST_START",
["npcID"] = 157434,
},
[462983] = {
["source"] = "Automatic Ironstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 229778,
},
[212054] = {
["source"] = "Nightglaive the Traitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 90621,
},
[106547] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[66104] = {
["encounterName"] = "Faction Champions",
["source"] = "Anthar Forgemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 34466,
},
[436180] = {
["source"] = "Rampant Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 215048,
},
[456841] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[393361] = {
["source"] = "Nightrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 188707,
},
[144479] = {
["encounterName"] = "Norushen",
["source"] = "Essence of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 71976,
},
[378394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riled Kelpcoil",
["npcID"] = 225901,
},
[187482] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Squallhunter",
["npcID"] = 107469,
},
[409744] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[86582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalesworn Cultist",
["npcID"] = 44221,
},
[78903] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[306779] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 152329,
},
[409745] = {
["source"] = "Shadeisethal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203411,
},
[272546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129366,
},
[389268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187135,
},
[81463] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Force of Earth",
["npcID"] = 43537,
},
[262308] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Whispering Lurker",
["npcID"] = 207175,
},
[450182] = {
["source"] = "Disturbed Mudspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219897,
},
[256083] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[186302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Helhound",
["npcID"] = 91384,
},
[144482] = {
["encounterName"] = "Norushen",
["source"] = "Manifestation of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 71977,
},
[125490] = {
["source"] = "Amber Searsting",
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[389270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187123,
},
[138338] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[147553] = {
["source"] = "Harbinger of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 73452,
},
[119347] = {
["source"] = "Sik'thik Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61434,
},
[389271] = {
["source"] = "Munchbeak Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 195970,
},
[407701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 204030,
},
[448660] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[387224] = {
["source"] = "Sundered Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 199942,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[138339] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[417941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotted Gladiator",
["npcID"] = 207808,
},
[411798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozing Sludge",
["npcID"] = 205644,
},
[389273] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[199772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Champion",
["npcID"] = 97087,
},
[325802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeneye Bowman",
["npcID"] = 166936,
},
[144483] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Iron Juggernaut",
["encounterID"] = 1600,
["event"] = "SPELL_CAST_START",
["npcID"] = 71466,
},
[389274] = {
["source"] = "Prozela Galeshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 193669,
},
[440468] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[430238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[424087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Devastator",
["npcID"] = 207089,
},
[417944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[442526] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[383143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightpaw the Depraved",
["npcID"] = 193128,
},
[383133] = {
["isChanneled"] = true,
["source"] = "Ruby Whelpling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186771,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[238681] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Equine Sunrunner",
["npcID"] = 120528,
},
[141413] = {
["source"] = "Ice Spike",
["event"] = "SPELL_CAST_START",
["npcID"] = 70988,
},
[456853] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[124980] = {
["source"] = "Morgrinn Crackfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 50350,
},
[136294] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[446615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[448663] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[409756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[86585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Scalesister",
["npcID"] = 43967,
},
[111670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[120373] = {
["source"] = "Reclaimer Zuan",
["event"] = "SPELL_CAST_START",
["npcID"] = 61305,
},
[409757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[387232] = {
["source"] = "Emerald Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 209202,
},
[389280] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[383137] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ruby Whelpling",
["npcID"] = 186771,
},
[427406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[140391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Halu'kal",
["npcID"] = 69482,
},
[198752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacursed Slaver",
["npcID"] = 97043,
},
[167012] = {
["source"] = "Saberon Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 88813,
},
[450714] = {
["source"] = "Nerubian Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 218103,
},
[193633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[194657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waterlogged Soul Guard",
["npcID"] = 99188,
},
[126517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Kunchong",
["npcID"] = 63696,
},
[204896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodscent Felhound",
["npcID"] = 98813,
},
[164965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[78907] = {
["source"] = "Kaldorei Starcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183994,
},
[392594] = {
["source"] = "Meatgrinder Sotok",
["event"] = "SPELL_CAST_START",
["npcID"] = 186777,
},
[442525] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[411809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pahi'rys",
["npcID"] = 205540,
},
[121910] = {
["source"] = "Ookie",
["event"] = "SPELL_CAST_START",
["npcID"] = 62468,
},
[146536] = {
["source"] = "Kor'thik Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72954,
},
[417953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galok Wingslicer",
["npcID"] = 206460,
},
[148584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skunky Brew Alemental",
["npcID"] = 71908,
},
[454813] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[456861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore-infused Shalewing",
["npcID"] = 221217,
},
[159847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Grunt",
["npcID"] = 76556,
},
[411811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Slime",
["npcID"] = 205651,
},
[405668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
},
[456862] = {
["source"] = "Grand-Heister Bokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213679,
},
[417955] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Freya",
["npcID"] = 205304,
},
[63775] = {
["source"] = "Twilight Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 33820,
},
[389287] = {
["isChanneled"] = true,
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193533,
},
[456863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankoan Champion Utaari",
["npcID"] = 222637,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[123958] = {
["source"] = "Little Liuyang",
["event"] = "SPELL_CAST_START",
["npcID"] = 63313,
},
[145119] = {
["source"] = "Storeroom Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 73152,
},
[394641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfist",
["npcID"] = 192030,
},
[147562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashleaf Sprite",
["npcID"] = 72877,
},
[173159] = {
["isChanneled"] = true,
["source"] = "Botani Roottender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86581,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[393385] = {
["source"] = "Chalsec of the Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193847,
},
[395433] = {
["isChanneled"] = true,
["source"] = "Frost Tomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198878,
},
[454818] = {
["source"] = "Anub'ilith",
["event"] = "SPELL_CAST_START",
["npcID"] = 222185,
},
[456866] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[180327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felflame Minion",
["npcID"] = 107548,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[442530] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[456847] = {
["source"] = "Grand-Heister Bokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213679,
},
[200805] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queen's Centurion",
["npcID"] = 96277,
},
[144492] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Iron Juggernaut",
["encounterID"] = 1600,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71466,
},
[272571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[456868] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[204901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Keeper",
["npcID"] = 102336,
},
[140397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mighty Devilsaur",
["npcID"] = 69406,
},
[15498] = {
["source"] = "Zandalari Diviner",
["event"] = "SPELL_CAST_START",
["npcID"] = 66700,
},
[450180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angry Rocks",
["npcID"] = 220543,
},
[187406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gunnlaug Scaleheart",
["npcID"] = 91240,
},
[421260] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[460587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vindictive Technician",
["npcID"] = 220472,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Black Blood",
["npcID"] = 215968,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2901,
},
[442536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Covert Webmancer",
["npcID"] = 223844,
},
[140398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Halu'kal",
["npcID"] = 69482,
},
[128056] = {
["source"] = "Mygoness",
["event"] = "SPELL_CAST_START",
["npcID"] = 62766,
},
[120377] = {
["source"] = "Nakk'rakas",
["event"] = "SPELL_CAST_START",
["npcID"] = 60572,
},
[450728] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[128368] = {
["source"] = "Kor'thik Battlesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 62758,
},
[170091] = {
["source"] = "Gorebound Vessel",
["event"] = "SPELL_CAST_START",
["npcID"] = 79125,
},
[440137] = {
["source"] = "Feral Sharpclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 221470,
},
[448161] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[66112] = {
["encounterName"] = "Faction Champions",
["source"] = "Velanaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 34465,
},
[141423] = {
["source"] = "Frostmane Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 70464,
},
[458193] = {
["source"] = "Lurker of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 220285,
},
[192617] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[185450] = {
["source"] = "Volatile Sailor",
["event"] = "SPELL_CAST_START",
["npcID"] = 91563,
},
[194665] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ymiron, the Fallen King",
["npcID"] = 96756,
},
[448441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorloc Springcaller",
["npcID"] = 218650,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[164973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[413872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[129081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Child of Chi-Ji",
["npcID"] = 60616,
},
[226406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 102287,
},
[126842] = {
["source"] = "Sra'thik Regenerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 63681,
},
[456136] = {
["source"] = "Murkshade",
["event"] = "SPELL_CAST_START",
["npcID"] = 218452,
},
[147568] = {
["source"] = "Great Turtle Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 220524,
},
[115259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Incubator",
["npcID"] = 59890,
},
[396684] = {
["source"] = "Kangalo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200738,
},
[186420] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nameless King",
["npcID"] = 92763,
},
[37924] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Fleet Squallshaper",
["npcID"] = 58939,
},
[434281] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218034,
},
[186476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voldgar",
["npcID"] = 105436,
},
[374158] = {
["source"] = "Snoozing Basilisk Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 189757,
},
[9739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smokemaster Snarl",
["npcID"] = 81749,
},
[264390] = {
["source"] = "Runic Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 131685,
},
[454831] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[431697] = {
["source"] = "Boltweaver Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223362,
},
[272581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[430179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[139379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Gatekeeper",
["npcID"] = 69510,
},
[141427] = {
["source"] = "Spiteleaf Squirt",
["event"] = "SPELL_CAST_START",
["npcID"] = 84655,
},
[256101] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[12675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Watershaper",
["npcID"] = 59361,
},
[303300] = {
["source"] = "Primalist Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 186112,
},
[145523] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Stone Statue",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 72535,
},
[340160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[448691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[147571] = {
["source"] = "Great Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 72764,
},
[456884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacle",
["npcID"] = 227168,
},
[141428] = {
["source"] = "Bonechiller Barafu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70468,
},
[456883] = {
["source"] = "Gramwharl",
["event"] = "SPELL_CAST_START",
["npcID"] = 220308,
},
[258150] = {
["source"] = "Bilge Rat Seaspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130026,
},
[201837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[36645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irestone Rumbler",
["npcID"] = 42527,
},
[383165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightpaw the Depraved",
["npcID"] = 193128,
},
[388529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seabreaker Skrog",
["npcID"] = 192931,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[446646] = {
["source"] = "Surek'Tak the Sundered",
["event"] = "SPELL_CAST_START",
["npcID"] = 222190,
},
[73097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcanoth",
["npcID"] = 38855,
},
[272588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Cutthroat",
["npcID"] = 137511,
},
[117309] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["npcID"] = 60586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[407740] = {
["source"] = "Aurantia",
["event"] = "SPELL_CAST_START",
["npcID"] = 203047,
},
[440504] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[147573] = {
["source"] = "Elder Great Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 72765,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189232,
},
[411837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Fire",
["npcID"] = 205971,
},
[134263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sam the Wise",
["npcID"] = 68128,
},
[79938] = {
["source"] = "Cabalist Doombrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 70708,
},
[201839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Summoner",
["npcID"] = 99366,
},
[170099] = {
["source"] = "Gorebound Vessel",
["event"] = "SPELL_CAST_START",
["npcID"] = 79125,
},
[440506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stream Skipper",
["npcID"] = 213700,
},
[270543] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "7th Legion Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 145769,
},
[197744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Mystic",
["npcID"] = 96501,
},
[231532] = {
["source"] = "Pyrestar Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 114845,
},
[448698] = {
["isChanneled"] = true,
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218657,
},
[258153] = {
["source"] = "Bilge Rat Seaspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130026,
},
[272592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[12747] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[163957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungus Covered Shambler",
["npcID"] = 80721,
},
[197745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 96884,
},
[456891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[393411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chalsec of the Earth",
["npcID"] = 193847,
},
[144504] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Desperation",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71482,
},
[274642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hoodoo Hexer",
["npcID"] = 136250,
},
[130414] = {
["source"] = "Aarko",
["event"] = "SPELL_CAST_START",
["npcID"] = 77664,
},
[13323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theramore Arcanist",
["npcID"] = 59596,
},
[139336] = {
["source"] = "Unblinking Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 70238,
},
[123966] = {
["source"] = "Little Liuyang",
["event"] = "SPELL_CAST_START",
["npcID"] = 63313,
},
[175221] = {
["source"] = "Worgen Tracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 93961,
},
[431714] = {
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[183135] = {
["source"] = "Questioner Arev'naal",
["event"] = "SPELL_CAST_START",
["npcID"] = 89673,
},
[126014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aetha",
["npcID"] = 58778,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[444296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[256108] = {
["source"] = "Savage Cursespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 223655,
},
[456895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yor'sith",
["npcID"] = 222632,
},
[377033] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[78196] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Pyromancer",
["npcID"] = 41902,
},
[450435] = {
["source"] = "Y'tekhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 215660,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["encounterID"] = 2564,
["event"] = "SPELL_CAST_START",
["npcID"] = 191736,
},
[66118] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1085,
["event"] = "SPELL_CAST_START",
["npcID"] = 34564,
},
[83012] = {
["source"] = "Skumblade Filthmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 69228,
},
[444145] = {
["source"] = "Frenzied Siege Artillery",
["event"] = "SPELL_CAST_START",
["npcID"] = 224521,
},
[137227] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[126015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aetha",
["npcID"] = 58778,
},
[187510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Tempest",
["npcID"] = 91565,
},
[393419] = {
["source"] = "Penumbrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189289,
},
[197749] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Volroth",
["npcID"] = 97370,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[431488] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Idriana",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214211,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[80453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Tunneler",
["npcID"] = 43031,
},
[82803] = {
["isChanneled"] = true,
["source"] = "Lashvine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 37093,
},
[456900] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[450757] = {
["source"] = "Waxtail Browbeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 213000,
},
[387277] = {
["source"] = "Torch Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 201472,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[192631] = {
["source"] = "Ash'golm",
["event"] = "SPELL_CAST_START",
["npcID"] = 96681,
},
[452806] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[422090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treant",
["npcID"] = 54983,
},
[456902] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[39207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Spray",
["npcID"] = 32928,
},
[141438] = {
["source"] = "Lieutenant Parker",
["event"] = "SPELL_CAST_START",
["npcID"] = 71326,
},
[130413] = {
["source"] = "Strongarm Ace",
["event"] = "SPELL_CAST_START",
["npcID"] = 66000,
},
[456198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smaragthr",
["npcID"] = 220362,
},
[186488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tideskorn Longaxe",
["npcID"] = 91204,
},
[454524] = {
["source"] = "Shellbinder Kiku",
["event"] = "SPELL_CAST_START",
["npcID"] = 223857,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[313562] = {
["source"] = "Trade Prince Gallywix",
["event"] = "SPELL_CAST_START",
["npcID"] = 157456,
},
[126907] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Kor'thik Fleshrender",
["npcID"] = 64902,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[456905] = {
["source"] = "Disturbed Earthgorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 218393,
},
[33832] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crazed Mana-Wraith",
["npcID"] = 26746,
},
[17174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Rifleman",
["npcID"] = 82029,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[171132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfang Hunter",
["npcID"] = 89747,
},
[458775] = {
["source"] = "Awakened Sulfuric Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225894,
},
[272609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[190586] = {
["isChanneled"] = true,
["source"] = "God-King Skovald",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92307,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[258162] = {
["source"] = "Lago the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 193025,
},
[163541] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79545,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210149,
},
[391380] = {
["source"] = "Raging Windlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200390,
},
[163966] = {
["isChanneled"] = true,
["source"] = "Grimrail Technician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81236,
},
[125805] = {
["source"] = "Sra'thik Cacophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 63680,
},
[430288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[456910] = {
["source"] = "Disturbed Earthgorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 218393,
},
[450766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Living Honey",
["npcID"] = 217833,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[235638] = {
["source"] = "Roottender Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 209280,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 197671,
},
[393430] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Custodial Protector",
["npcID"] = 192703,
},
[119875] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["encounterID"] = 1447,
["event"] = "SPELL_CAST_START",
["npcID"] = 61485,
},
[340189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[452730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Hulk",
["npcID"] = 215813,
},
[142296] = {
["source"] = "Dark Shaman Xorenth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70683,
},
[115054] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engorged Crocolisk",
["npcID"] = 56183,
},
[137347] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69132,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[393432] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[411862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animation Fluid",
["npcID"] = 203939,
},
[458104] = {
["source"] = "Tala",
["event"] = "SPELL_CAST_START",
["npcID"] = 227513,
},
[391385] = {
["source"] = "Devouring Blaze",
["event"] = "SPELL_CAST_START",
["npcID"] = 207413,
},
[262377] = {
["source"] = "Crawler Mine",
["event"] = "SPELL_CAST_START",
["npcID"] = 133482,
},
[387290] = {
["source"] = "Giant Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194588,
},
[448640] = {
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[212091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Athissa",
["npcID"] = 88091,
},
[393434] = {
["source"] = "Sundered Supplyhand",
["event"] = "SPELL_CAST_START",
["npcID"] = 193790,
},
[313526] = {
["isChanneled"] = true,
["source"] = "Dax Blitzblaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157455,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[199805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Sentinel",
["npcID"] = 96574,
},
[456346] = {
["source"] = "Anguishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[440205] = {
["source"] = "The Creeping Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 226062,
},
[130115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Terror",
["npcID"] = 66100,
},
[122436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Keg",
["npcID"] = 62713,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[462802] = {
["source"] = "Corrupted Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 229695,
},
[83017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smokemaster Snarl",
["npcID"] = 81749,
},
[116293] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tortured Spirit",
["npcID"] = 56444,
},
[395284] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[272620] = {
["source"] = "Cutwater Striker",
["event"] = "SPELL_CAST_START",
["npcID"] = 131112,
},
[137350] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69132,
},
[138966] = {
["source"] = "Shadowed Voodoo Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 70060,
},
[147589] = {
["source"] = "Elder Great Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 72765,
},
[119365] = {
["source"] = "Sorcerer Mogu",
["event"] = "SPELL_CAST_START",
["npcID"] = 61250,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[119693] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[393439] = {
["source"] = "Sundered Supplyhand",
["event"] = "SPELL_CAST_START",
["npcID"] = 193790,
},
[446682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warped Sapling",
["npcID"] = 220655,
},
[130116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cornan",
["npcID"] = 57213,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[147590] = {
["source"] = "Elder Great Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 72765,
},
[387297] = {
["source"] = "Sundered Runebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186354,
},
[83018] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Magmatooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 45099,
},
[375011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismic Force",
["npcID"] = 192745,
},
[258169] = {
["source"] = "Sandana the Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 193176,
},
[450718] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[117830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xiao",
["npcID"] = 54926,
},
[137990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Electromancer Ju'le",
["npcID"] = 69339,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[393443] = {
["source"] = "Veshrak of the North",
["event"] = "SPELL_CAST_START",
["npcID"] = 188713,
},
[427384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[452828] = {
["source"] = "Hunting Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 226150,
},
[442589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Honey Harvester",
["npcID"] = 220946,
},
[26262] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Void Tendril",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 65282,
},
[440007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Runed Protector",
["npcID"] = 214576,
},
[136917] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69131,
},
[450781] = {
["source"] = "Flickerflame Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212629,
},
[428256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[123974] = {
["source"] = "Chagan Firehoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 63318,
},
[116295] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1390,
},
[143497] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71480,
},
[313583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Meredy Huntswell",
["npcID"] = 156943,
},
[117809] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jahesh of Osul",
["npcID"] = 60802,
},
[162951] = {
["source"] = "Cliffscar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 85516,
},
[139402] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "No'ku Stormsayer",
["npcID"] = 70276,
},
[454877] = {
["source"] = "Rhak'ik",
["event"] = "SPELL_CAST_START",
["npcID"] = 221032,
},
[458406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Droghung",
["npcID"] = 221316,
},
[450784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xeph'itik",
["npcID"] = 219984,
},
[418020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freya",
["npcID"] = 205304,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[450628] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[130630] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gyrocopter Turret",
["npcID"] = 66299,
},
[452314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[272631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[372971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[448002] = {
["source"] = "Great Stormfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 216017,
},
[450786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[437620] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[340208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[391402] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189492,
},
[163977] = {
["isChanneled"] = true,
["source"] = "Lernaea Vilescale",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85693,
},
[456851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore-infused Shalewing",
["npcID"] = 221217,
},
[270590] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[440549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Executioner",
["npcID"] = 213408,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[321780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[170121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Leadbelcher",
["npcID"] = 85188,
},
[114249] = {
["source"] = "Broketooth Tosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 59416,
},
[434407] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[215754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawn of Serpentrix",
["npcID"] = 108655,
},
[429428] = {
["source"] = "Earth Burst Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 214287,
},
[440551] = {
["source"] = "Kobyss Shellbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213598,
},
[393453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Champion",
["npcID"] = 203215,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60708,
},
[63272] = {
["source"] = "Mangrove Ent",
["event"] = "SPELL_CAST_START",
["npcID"] = 33525,
},
[393454] = {
["source"] = "Zaqali Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 201341,
},
[444648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riftwalker Nilara",
["npcID"] = 214644,
},
[128072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Scarab",
["npcID"] = 63587,
},
[161932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gangamesh",
["npcID"] = 89653,
},
[143502] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71515,
},
[456936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Protocol",
["npcID"] = 222946,
},
[454888] = {
["source"] = "Khak'ik",
["event"] = "SPELL_CAST_START",
["npcID"] = 216032,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[148582] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Xiang-Lin",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73725,
},
[395504] = {
["isChanneled"] = true,
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192769,
},
[432114] = {
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[145551] = {
["source"] = "Kor'kron Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 72150,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23524,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["npcID"] = 213684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2836,
},
[463081] = {
["source"] = "Awakened Phalanx",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[140356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slateshell Ancient",
["npcID"] = 67763,
},
[393458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Defender",
["npcID"] = 199941,
},
[387315] = {
["source"] = "Mistyvale Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 193969,
},
[446700] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Voracious Worm",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219046,
},
[120394] = {
["encounterName"] = "Sha of Fear",
["source"] = "Dread Spawn",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 61003,
},
[129097] = {
["source"] = "Norvakess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62324,
},
[140400] = {
["source"] = "Zandalari Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[389364] = {
["source"] = "Sandana the Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 193176,
},
[424176] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 210637,
},
[270595] = {
["source"] = "Rapacious Fathomjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 129305,
},
[387317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Culler",
["npcID"] = 190093,
},
[445808] = {
["source"] = "Heelripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 216555,
},
[392576] = {
["source"] = "Tempest Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[431639] = {
["source"] = "Nerubian Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 212715,
},
[136338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalak",
["npcID"] = 69099,
},
[9613] = {
["source"] = "Necrophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 73320,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[452169] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[143445] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["encounterID"] = 1599,
["event"] = "SPELL_CAST_START",
["npcID"] = 71529,
},
[64041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shatterspear Raider",
["npcID"] = 34309,
},
[456940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Protocol",
["npcID"] = 222946,
},
[440266] = {
["source"] = "Roaming Mongrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 218330,
},
[144530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yu'lon",
["npcID"] = 71955,
},
[374135] = {
["source"] = "Craggy Stag",
["event"] = "SPELL_CAST_START",
["npcID"] = 191541,
},
[372087] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[425974] = {
["source"] = "Earth Infused Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[433519] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[166032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Warcrusher",
["npcID"] = 80775,
},
[76369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[393465] = {
["isChanneled"] = true,
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198263,
},
[136340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalak",
["npcID"] = 69099,
},
[145555] = {
["source"] = "Kor'kron Warshaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 71773,
},
[44475] = {
["source"] = "Sunblade Mage Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 24683,
},
[51243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Ley-Whelp",
["npcID"] = 28276,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2570,
},
[128075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadmaw Grouper",
["npcID"] = 63375,
},
[427710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 213434,
},
[11021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Whelp",
["npcID"] = 4324,
},
[427583] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[429422] = {
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[139413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spiritweaver",
["npcID"] = 69285,
},
[262412] = {
["source"] = "Mechanized Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 136139,
},
[379134] = {
["source"] = "Stonebreath Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 201467,
},
[37054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Watershaper",
["npcID"] = 59361,
},
[450176] = {
["source"] = "Nerubian Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[139231] = {
["source"] = "Zandalari Storm-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 69390,
},
[145557] = {
["source"] = "Healing Tide Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 72563,
},
[383231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[139414] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Soultwister",
["npcID"] = 69296,
},
[440231] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[79442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thundergill",
["npcID"] = 67125,
},
[462859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[272654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Krolusk",
["npcID"] = 134686,
},
[454904] = {
["source"] = "Surek'Tak the Sundered",
["event"] = "SPELL_CAST_START",
["npcID"] = 222190,
},
[136986] = {
["source"] = "Zandalari Spear-Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69388,
},
[442618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Dominator",
["npcID"] = 215601,
},
[272655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Krolusk",
["npcID"] = 134686,
},
[31598] = {
["isChanneled"] = true,
["source"] = "Pao-kun the Pyromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60031,
},
[50476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[124951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatescale Spitter",
["npcID"] = 63490,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[139416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Arcanital",
["npcID"] = 69281,
},
[272657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scaled Krolusk Rider",
["npcID"] = 134629,
},
[256138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Honor Guard",
["npcID"] = 127799,
},
[79443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duneclaw Stalker",
["npcID"] = 44587,
},
[139417] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Arcanital",
["npcID"] = 69281,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[446717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Shadeweaver",
["npcID"] = 221102,
},
[383237] = {
["source"] = "Provoking Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188697,
},
[426240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[411906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[458087] = {
["source"] = "Tala",
["event"] = "SPELL_CAST_START",
["npcID"] = 227513,
},
[392955] = {
["source"] = "Korthrox the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183422,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[431552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Vanguard Magus",
["npcID"] = 212435,
},
[212113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Athissa",
["npcID"] = 88091,
},
[458657] = {
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[321807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Bonecarver",
["npcID"] = 163619,
},
[128078] = {
["source"] = "Adjunct Pivvika",
["event"] = "SPELL_CAST_START",
["npcID"] = 63104,
},
[95826] = {
["source"] = "Orgrimmar Wind Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 51346,
},
[383236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shimmerfin Oracle",
["npcID"] = 220249,
},
[272662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Raider",
["npcID"] = 129369,
},
[125288] = {
["source"] = "Kor'thik Timberhusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 61355,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sholazian Roc",
["npcID"] = 205854,
},
[139419] = {
["source"] = "Zandalari Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 69136,
},
[387337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[463104] = {
["source"] = "Brood Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 222167,
},
[199828] = {
["source"] = "Immolanth",
["event"] = "SPELL_CAST_START",
["npcID"] = 96682,
},
[15536] = {
["source"] = "Twilight Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 38926,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[145563] = {
["source"] = "Kor'kron Arcweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 71771,
},
[82797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snickerfang Hyena",
["npcID"] = 5985,
},
[450546] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[411912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[128079] = {
["source"] = "Dreadspinner Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 61981,
},
[411910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[185495] = {
["source"] = "Lieutenant Gom'tok",
["event"] = "SPELL_CAST_START",
["npcID"] = 109800,
},
[145564] = {
["source"] = "Kor'kron Arcweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 71771,
},
[440185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustul Titancap",
["npcID"] = 213115,
},
[415253] = {
["source"] = "Invasive Sporecap",
["event"] = "SPELL_CAST_START",
["npcID"] = 207482,
},
[81317] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Troggzor the Earthinator",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43456,
},
[140390] = {
["source"] = "Zandalari Beast Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 69312,
},
[61730] = {
["source"] = "Snowplain Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 26705,
},
[193364] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["npcID"] = 96756,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1822,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[126032] = {
["source"] = "Cracklefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 58768,
},
[244881] = {
["source"] = "Memory of a Shield",
["event"] = "SPELL_CAST_START",
["npcID"] = 224994,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[387343] = {
["source"] = "Molded Boulder",
["event"] = "SPELL_CAST_START",
["npcID"] = 190213,
},
[32024] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Spiritbinder",
["npcID"] = 69225,
},
[165985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Spinecrusher",
["npcID"] = 81240,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Guard",
["npcID"] = 190510,
},
[272670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandswept Marksman",
["npcID"] = 134600,
},
[121937] = {
["isChanneled"] = true,
["source"] = "Monkey Island Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62493,
},
[375058] = {
["source"] = "Old Arbhog",
["event"] = "SPELL_CAST_START",
["npcID"] = 196897,
},
[204951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Keeper",
["npcID"] = 102336,
},
[156829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gul'kosh",
["npcID"] = 78437,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[257169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[33840] = {
["isChanneled"] = true,
["source"] = "Landquaker Bull",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 37556,
},
[444683] = {
["source"] = "Moss-Draped Ramolith",
["event"] = "SPELL_CAST_START",
["npcID"] = 218191,
},
[454922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pterrordaxus",
["npcID"] = 222718,
},
[139010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mumta",
["npcID"] = 69664,
},
[430013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[140448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slateshell Wanderer",
["npcID"] = 69795,
},
[15472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[257170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Raider",
["npcID"] = 129369,
},
[169117] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[129617] = {
["source"] = "Duyi Edgewater",
["event"] = "SPELL_CAST_START",
["npcID"] = 65745,
},
[145568] = {
["source"] = "Overlord Runthak",
["event"] = "SPELL_CAST_START",
["npcID"] = 72191,
},
[148302] = {
["encounterName"] = "Galakras",
["source"] = "Kor'kron Demolisher",
["npcID"] = 72947,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[139206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 69390,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[444687] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[175261] = {
["source"] = "Icejaw Rockbiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72297,
},
[125010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Tzikzi",
["npcID"] = 62076,
},
[411923] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[145569] = {
["source"] = "Hellscream Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 72194,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[128034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Scarab",
["npcID"] = 63587,
},
[63789] = {
["source"] = "Twilight Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 33820,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[375065] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[387352] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[188573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Subduer",
["npcID"] = 91759,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[426260] = {
["source"] = "Torchsnarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 212411,
},
[136207] = {
["source"] = "Lion's Landing Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 67512,
},
[389401] = {
["source"] = "Beguiled Aquamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195960,
},
[119360] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60410,
},
[426261] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[85867] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Needlerock Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 43250,
},
[405784] = {
["source"] = "Tarasek Boarder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203307,
},
[448787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[102998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xiao",
["npcID"] = 54926,
},
[444692] = {
["source"] = "Ramolith Curlhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[35377] = {
["source"] = "Subjugated Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["npcID"] = 190630,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[124284] = {
["source"] = "Urang",
["event"] = "SPELL_CAST_START",
["npcID"] = 60725,
},
[321828] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[145572] = {
["isChanneled"] = true,
["source"] = "Thunderlord Grappler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72273,
},
[440207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
},
[172193] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "7th Legion Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 149129,
},
[137132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Itoka",
["npcID"] = 69461,
},
[22938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcanist Rathaella",
["npcID"] = 68049,
},
[424217] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Sparring Sentinel",
["npcID"] = 216676,
},
[385310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[373024] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[448791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Paladin",
["npcID"] = 206704,
},
[410978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[196290] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["npcID"] = 91792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[439646] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[409885] = {
["source"] = "Highmountain Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201646,
},
[432125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Silk Hauler",
["npcID"] = 221327,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[114262] = {
["encounterName"] = "Lilian Voss",
["source"] = "Darkmaster Gandling",
["encounterID"] = 1429,
["event"] = "SPELL_CAST_START",
["npcID"] = 58875,
},
[385313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shockcaster",
["npcID"] = 195119,
},
[420125] = {
["source"] = "Roth the Earthwound",
["event"] = "SPELL_CAST_START",
["npcID"] = 226300,
},
[458746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[137045] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[191170] = {
["isChanneled"] = true,
["source"] = "Felskorn Chosen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96489,
},
[321834] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[450197] = {
["source"] = "Skittering Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208245,
},
[446483] = {
["source"] = "Deepwater Sludger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216515,
},
[201858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[143420] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Ironblade",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71516,
},
[396641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Elder Rockfang",
["npcID"] = 194085,
},
[432414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wormcaller Iz'tikrine",
["npcID"] = 214153,
},
[394593] = {
["source"] = "Captain Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193198,
},
[125365] = {
["source"] = "Scritch",
["event"] = "SPELL_CAST_START",
["npcID"] = 50831,
},
[135271] = {
["source"] = "Chief Ingoo Ingoo XVII",
["event"] = "SPELL_CAST_START",
["npcID"] = 68545,
},
[49592] = {
["encounterName"] = "Ley-Guardian Eregos",
["source"] = "Amber Drake",
["npcID"] = 27755,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2013,
},
[418081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound",
["npcID"] = 206090,
},
[258864] = {
["source"] = "Ashvane Marine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130027,
},
[81770] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Earthen Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 43509,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[426273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Winged Goblin",
["npcID"] = 212517,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[418082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound",
["npcID"] = 206090,
},
[144070] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71859,
},
[391050] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[423259] = {
["source"] = "Wildfire Blazekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210685,
},
[128086] = {
["source"] = "Kz'Kzik",
["event"] = "SPELL_CAST_START",
["npcID"] = 62832,
},
[424227] = {
["source"] = "Priestess of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211076,
},
[138328] = {
["encounterName"] = "Ra-den",
["source"] = "Unraveling Sands",
["encounterID"] = 1580,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69870,
},
[444705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[373034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Mudskipper",
["npcID"] = 187540,
},
[454945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pterrordaxus",
["npcID"] = 222718,
},
[204963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Malgath",
["npcID"] = 102282,
},
[63414] = {
["encounterName"] = "Mimiron",
["source"] = "VX-001",
["encounterID"] = 1138,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 33651,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[382303] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[396637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Elder Rockfang",
["npcID"] = 194085,
},
[138341] = {
["encounterName"] = "Ra-den",
["source"] = "Sanguine Horror",
["npcID"] = 69871,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[450424] = {
["source"] = "Congealed Wax-hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223206,
},
[386745] = {
["source"] = "Prozela Galeshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 193669,
},
[130515] = {
["source"] = "Captain Doren",
["event"] = "SPELL_CAST_START",
["npcID"] = 66052,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["npcID"] = 100486,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[413544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[272700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faithless Tender",
["npcID"] = 134364,
},
[79965] = {
["source"] = "Lion's Vindicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 69006,
},
[272698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Incubator",
["npcID"] = 139425,
},
[406874] = {
["source"] = "Acidhide Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 202269,
},
[445781] = {
["source"] = "Stolen Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 223541,
},
[454951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Kobyss",
["npcID"] = 223102,
},
[272699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Incubator",
["npcID"] = 139425,
},
[79721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Southsea Musketeer",
["npcID"] = 40632,
},
[440615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[125016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dog",
["npcID"] = 63955,
},
[185512] = {
["source"] = "Lieutenant Gom'tok",
["event"] = "SPELL_CAST_START",
["npcID"] = 109800,
},
[262463] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Razak Ironsides",
["npcID"] = 133556,
},
[391470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Bulwark",
["npcID"] = 203948,
},
[139438] = {
["source"] = "Risen Ancestor",
["event"] = "SPELL_CAST_START",
["npcID"] = 69237,
},
[264510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Marksman",
["npcID"] = 131849,
},
[389423] = {
["source"] = "Thieving Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196388,
},
[306533] = {
["source"] = "Spirit of Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 150364,
},
[143534] = {
["source"] = "Joan Lorraine",
["event"] = "SPELL_CAST_START",
["npcID"] = 67530,
},
[395567] = {
["source"] = "Gravlion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193654,
},
[426283] = {
["source"] = "Cursedheart Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 212389,
},
[146606] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[393520] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[340279] = {
["source"] = "Mistveil Nightblossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 173714,
},
[454953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pterrordaxus",
["npcID"] = 222718,
},
[33844] = {
["source"] = "Rapidly Grown Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 209218,
},
[262465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razak Ironsides",
["npcID"] = 133556,
},
[432113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[146607] = {
["source"] = "Corrupted Skullsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72983,
},
[385331] = {
["encounterName"] = "Umbrelskul",
["source"] = "Detonating Crystal",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 195138,
},
[411952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[141488] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[399666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[327995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titanic Fungus",
["npcID"] = 202658,
},
[375094] = {
["source"] = "Swift Hornstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 190029,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[440622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Grom'kar Gunner",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 77483,
},
[411954] = {
["isChanneled"] = true,
["source"] = "Epoch Ripper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[274755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zian-Ti Spirit",
["npcID"] = 138969,
},
[424241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amirdrassil Sentinel",
["npcID"] = 207782,
},
[393525] = {
["source"] = "Ceeqa the Peacetaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 188708,
},
[452910] = {
["source"] = "Zilthara",
["event"] = "SPELL_CAST_START",
["npcID"] = 220270,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[149186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grunt",
["npcID"] = 82047,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["encounterID"] = 1304,
["event"] = "SPELL_CAST_START",
["npcID"] = 56541,
},
[130914] = {
["source"] = "Terrorling",
["event"] = "SPELL_CAST_START",
["npcID"] = 66597,
},
[220926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Enslaver",
["npcID"] = 97176,
},
[273766] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "7th Legion Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 147195,
},
[393527] = {
["source"] = "Cracktooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187528,
},
[129427] = {
["source"] = "Elder Viseclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 61091,
},
[440162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Stinkcap",
["npcID"] = 212579,
},
[444722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[413012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Additive",
["npcID"] = 205671,
},
[411958] = {
["source"] = "Iridikron's Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 205691,
},
[389433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ar Shadowcaster",
["npcID"] = 206007,
},
[448818] = {
["source"] = "Kobold Skullface",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[98393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enlisted Cannoneer",
["npcID"] = 67633,
},
[144563] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["encounterID"] = 1604,
["event"] = "SPELL_CAST_START",
["npcID"] = 71734,
},
[264520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[389435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[197805] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["npcID"] = 96759,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1824,
},
[340289] = {
["source"] = "Mistveil Nightblossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 173714,
},
[448820] = {
["source"] = "Kobold Skullface",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[426295] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[387388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Adept",
["npcID"] = 200178,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187772,
},
[193211] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["npcID"] = 96756,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1822,
},
[118256] = {
["source"] = "Brewmaster Chani",
["event"] = "SPELL_CAST_START",
["npcID"] = 60996,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[414010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Shredder",
["npcID"] = 200964,
},
[136374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Speaker",
["npcID"] = 69136,
},
[217260] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[264525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[306527] = {
["source"] = "Mistfang Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 150108,
},
[138422] = {
["source"] = "Skumblade Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 69338,
},
[210635] = {
["source"] = "Isel the Hammer",
["event"] = "SPELL_CAST_START",
["npcID"] = 94413,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[446776] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Lynx",
["npcID"] = 206699,
},
[399678] = {
["source"] = "Rampant Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 203698,
},
[438586] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[193712] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[137399] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1577,
},
[89697] = {
["source"] = "Defias Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 48266,
},
[377154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[137344] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69132,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187771,
},
[383298] = {
["source"] = "Devouring Blaze",
["event"] = "SPELL_CAST_START",
["npcID"] = 207413,
},
[116830] = {
["isChanneled"] = true,
["source"] = "Konk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55509,
},
[432036] = {
["source"] = "Hairless the Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 213550,
},
[135177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorin Magehand",
["npcID"] = 68587,
},
[80279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Rift Conjurer",
["npcID"] = 42691,
},
[395586] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[156854] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gul'kosh",
["npcID"] = 78437,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[391491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootscale the Indomitable",
["npcID"] = 190307,
},
[393539] = {
["source"] = "Champion Choruk",
["event"] = "SPELL_CAST_START",
["npcID"] = 186592,
},
[460106] = {
["source"] = "Slatefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[118626] = {
["source"] = "Shai Hu",
["event"] = "SPELL_CAST_START",
["npcID"] = 61069,
},
[136339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalak",
["npcID"] = 69099,
},
[393540] = {
["source"] = "Zhurtan the Riverboiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 188687,
},
[445771] = {
["source"] = "Deepwater Makura",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[340300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Gorgegullet",
["npcID"] = 173720,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[176309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Guardian",
["npcID"] = 88279,
},
[452926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zilthara",
["npcID"] = 220270,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[141421] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[385351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[191161] = {
["source"] = "God-King Skovald",
["event"] = "SPELL_CAST_START",
["npcID"] = 92307,
},
[99172] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[213686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderweb Creeper",
["npcID"] = 105049,
},
[137231] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[139205] = {
["source"] = "Zandalari Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 70557,
},
[113760] = {
["source"] = "Fragrant Lotus",
["event"] = "SPELL_CAST_START",
["npcID"] = 56472,
},
[138427] = {
["source"] = "Gurubashi Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 69905,
},
[453960] = {
["source"] = "Broodtwister Ovi'nax",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[64692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechagnome Battletank",
["npcID"] = 34164,
},
[384336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Lancemaster",
["npcID"] = 192800,
},
[125900] = {
["isChanneled"] = true,
["source"] = "Kor'thik Warsinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64458,
},
[149181] = {
["source"] = "Grom'kar Pyro",
["event"] = "SPELL_CAST_START",
["npcID"] = 75387,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[340304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Gorgegullet",
["npcID"] = 173720,
},
[195765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yotnar",
["npcID"] = 96175,
},
[418119] = {
["source"] = "Aqir Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207912,
},
[395594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zurgaz Corebreaker",
["npcID"] = 193680,
},
[340305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Gorgegullet",
["npcID"] = 173720,
},
[120416] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[146534] = {
["source"] = "Aggron",
["event"] = "SPELL_CAST_START",
["npcID"] = 72981,
},
[119775] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[118312] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["npcID"] = 60586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[136894] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[418121] = {
["source"] = "Klaxxi Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207923,
},
[428360] = {
["source"] = "Firelands Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Kagani Nightstrike",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24557,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[409931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[31516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Saboteur",
["npcID"] = 42885,
},
[146621] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[434505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[126560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Kunchong",
["npcID"] = 63696,
},
[128096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vor'thik Dreadsworn",
["npcID"] = 62813,
},
[125995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quid",
["npcID"] = 58771,
},
[120929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abomination of Anger",
["npcID"] = 61707,
},
[73605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Assistant Greely",
["npcID"] = 39199,
},
[186553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Soulflayer",
["npcID"] = 91575,
},
[147544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[418125] = {
["source"] = "Varian Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 205308,
},
[197816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algromon",
["npcID"] = 107593,
},
[463176] = {
["source"] = "Voracious Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 222145,
},
[450188] = {
["source"] = "Candlelit Blind-Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 218213,
},
[448843] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[387410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Poacher",
["npcID"] = 200173,
},
[147647] = {
["source"] = "Harbinger of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 73452,
},
[440652] = {
["source"] = "Wandering Candle",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[385363] = {
["source"] = "Maneet",
["event"] = "SPELL_CAST_START",
["npcID"] = 188704,
},
[387411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulharvester Galtmaa",
["npcID"] = 195927,
},
[166077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Machinist",
["npcID"] = 80468,
},
[197818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malgalor",
["npcID"] = 92608,
},
[216755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Excess Power",
["npcID"] = 109009,
},
[87396] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sapphire Scarab",
["npcID"] = 46127,
},
[149179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grunt",
["npcID"] = 82047,
},
[138433] = {
["source"] = "Skumblade Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 69338,
},
[368983] = {
["source"] = "Cinderstep Melter",
["event"] = "SPELL_CAST_START",
["npcID"] = 201465,
},
[123490] = {
["source"] = "Enslaved Bonesmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63030,
},
[110945] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56747,
},
[407891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[368984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Devastator",
["npcID"] = 207089,
},
[140481] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spiritbinder Tu'chek",
["npcID"] = 69301,
},
[448847] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[399701] = {
["source"] = "Swooping Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 199809,
},
[63541] = {
["source"] = "Storm Tempered Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 33722,
},
[463182] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[128098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vor'thik Fear-Shaper",
["npcID"] = 62814,
},
[317792] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[113764] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["npcID"] = 59223,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1424,
},
[128099] = {
["source"] = "Manifestation of Pride",
["event"] = "SPELL_CAST_START",
["npcID"] = 72280,
},
[147650] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[181438] = {
["source"] = "Flashwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 107098,
},
[414038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[453953] = {
["source"] = "Broodtwister Ovi'nax",
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[418134] = {
["source"] = "Zal'kir the Chosen",
["event"] = "SPELL_CAST_START",
["npcID"] = 205865,
},
[169152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Electrified Stingtail",
["npcID"] = 83444,
},
[373084] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[138436] = {
["source"] = "Skumblade Seadragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 69226,
},
[270697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Prisoner",
["npcID"] = 147349,
},
[321891] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Vulpin",
["npcID"] = 165251,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[166081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Laborer",
["npcID"] = 81063,
},
[405850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
},
[368990] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[414041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Shredder",
["npcID"] = 200964,
},
[138437] = {
["source"] = "Skumblade Seadragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 69226,
},
[418137] = {
["source"] = "Varian Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 205308,
},
[411994] = {
["isChanneled"] = true,
["source"] = "Infinite Chronoweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["encounterID"] = 2606,
["event"] = "SPELL_CAST_START",
["npcID"] = 189886,
},
[448854] = {
["source"] = "Enraged Drunkard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218655,
},
[143503] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71515,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[446807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222787,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[147653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tsavo'ka",
["npcID"] = 72808,
},
[129496] = {
["source"] = "Lupello",
["event"] = "SPELL_CAST_START",
["npcID"] = 56357,
},
[381280] = {
["source"] = "Uktulut Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 193203,
},
[194488] = {
["source"] = "Tideskorn Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 93584,
},
[438618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Crawler",
["npcID"] = 214840,
},
[129636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60603,
},
[260280] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["encounterID"] = 2108,
["event"] = "SPELL_CAST_START",
["npcID"] = 129232,
},
[407902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[396614] = {
["source"] = "Cavernous Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 199197,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[115814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Trickster",
["npcID"] = 54987,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[393569] = {
["isChanneled"] = true,
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198214,
},
[169156] = {
["source"] = "Lesser Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 77517,
},
[389474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Flowbreaker",
["npcID"] = 203748,
},
[448859] = {
["source"] = "Enraged Drunkard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218655,
},
[162622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huezeki Windsong",
["npcID"] = 205497,
},
[387427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgam of Desperation",
["npcID"] = 199423,
},
[166085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Blade Saberguard",
["npcID"] = 81129,
},
[456746] = {
["source"] = "Workmaster Earwax",
["event"] = "SPELL_CAST_START",
["npcID"] = 213195,
},
[88170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Squall",
["npcID"] = 45924,
},
[144584] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71983,
},
[438622] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engorged Crawler",
["npcID"] = 214840,
},
[446519] = {
["source"] = "Shalehorn Impaler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216970,
},
[139465] = {
["source"] = "Risen Ancestor",
["event"] = "SPELL_CAST_START",
["npcID"] = 69237,
},
[145548] = {
["source"] = "Poison Bolt Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 72562,
},
[389477] = {
["source"] = "Ezralor",
["event"] = "SPELL_CAST_START",
["npcID"] = 188755,
},
[224447] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Acolyte of Sael'orn",
["npcID"] = 112742,
},
[77721] = {
["source"] = "Spiritbinder Tu'chek",
["event"] = "SPELL_CAST_START",
["npcID"] = 69301,
},
[62131] = {
["encounterName"] = "Thorim",
["source"] = "Thorim",
["encounterID"] = 1141,
["event"] = "SPELL_CAST_START",
["npcID"] = 32865,
},
[389478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Spirit-Caller",
["npcID"] = 195267,
},
[15493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Crusader",
["npcID"] = 213564,
},
[385383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Overseer",
["npcID"] = 192699,
},
[173254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watch Commander Branson",
["npcID"] = 82136,
},
[394564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Epochbrgl",
["npcID"] = 193241,
},
[175302] = {
["source"] = "Char the Burning",
["event"] = "SPELL_CAST_START",
["npcID"] = 82311,
},
[145550] = {
["source"] = "Kor'kron Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 72150,
},
[22273] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Theramore Arcanist",
["npcID"] = 59596,
},
[130150] = {
["isChanneled"] = true,
["source"] = "Master Cheng",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66180,
},
[125480] = {
["source"] = "Amber Searsting",
["event"] = "SPELL_CAST_START",
["npcID"] = 63569,
},
[121182] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61392,
},
[387433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaphil the Defiant",
["npcID"] = 192223,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210153,
},
[142539] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71397,
},
[385386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Menial Attendant",
["npcID"] = 192702,
},
[125825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Venomspitter",
["npcID"] = 62575,
},
[133817] = {
["source"] = "Team Leader Scooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 67810,
},
[399721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[139468] = {
["event"] = "SPELL_CAST_START",
["source"] = "No'ku Stormsayer",
["npcID"] = 70276,
},
[133321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Rifleman",
["npcID"] = 67297,
},
[262522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dizzy Dina",
["npcID"] = 133585,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[200901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Solsten",
["npcID"] = 97219,
},
[125988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quid",
["npcID"] = 58771,
},
[130151] = {
["isChanneled"] = true,
["source"] = "Master Cheng",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66180,
},
[125441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kri'thik Screamer",
["npcID"] = 61377,
},
[418153] = {
["source"] = "Cinderclaw Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 207084,
},
[140377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Frostspear",
["npcID"] = 70419,
},
[154828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Growth",
["npcID"] = 81769,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["source"] = "Teron Gorefiend",
["encounterID"] = 604,
["event"] = "SPELL_CAST_START",
["npcID"] = 22871,
},
[385390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Sentinel",
["npcID"] = 192700,
},
[68207] = {
["source"] = "Poison Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 35896,
},
[405868] = {
["source"] = "Shadowflame Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201218,
},
[146637] = {
["source"] = "Corrupted Skullsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72983,
},
[393582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindershard Igniter",
["npcID"] = 198382,
},
[264574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandswept Marksman",
["npcID"] = 134600,
},
[389487] = {
["source"] = "Zaqali Heatbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200452,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[455016] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 225817,
},
[387440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Beastcaller",
["npcID"] = 195878,
},
[405870] = {
["source"] = "Arcantrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200737,
},
[144522] = {
["encounterName"] = "Norushen",
["source"] = "Sun Tenderheart",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72000,
},
[393584] = {
["source"] = "Gladehorn Armoredon",
["event"] = "SPELL_CAST_START",
["npcID"] = 196555,
},
[140279] = {
["source"] = "Shan'ze Animator",
["event"] = "SPELL_CAST_START",
["npcID"] = 70069,
},
[194674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacursed Slaver",
["npcID"] = 97043,
},
[224453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acolyte of Sael'orn",
["npcID"] = 112738,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[68208] = {
["source"] = "Poison Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 35896,
},
[137424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beastmaster Horaki",
["npcID"] = 69559,
},
[126878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taoshi",
["npcID"] = 62593,
},
[418159] = {
["source"] = "Varian Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 205308,
},
[140496] = {
["source"] = "Zandalari Haruspex",
["event"] = "SPELL_CAST_START",
["npcID"] = 69297,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["encounterID"] = 1419,
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[448877] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[446832] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[89710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salhet",
["npcID"] = 48022,
},
[393588] = {
["isChanneled"] = true,
["source"] = "Broodguardian Ziruss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198214,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[455021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Scaleguard",
["npcID"] = 223106,
},
[440687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Jelly Purveyor",
["npcID"] = 220141,
},
[137427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lor'danel Sentinel",
["npcID"] = 32969,
},
[436592] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[260291] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Captain Jalazko",
["event"] = "SPELL_CAST_START",
["npcID"] = 131053,
},
[276868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Mantid",
["npcID"] = 138838,
},
[385399] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 192955,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2585,
},
[215241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Warpcaster",
["npcID"] = 111523,
},
[167119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarmleaf Drone",
["npcID"] = 85532,
},
[389496] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[395639] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[123499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Fanatic",
["npcID"] = 63031,
},
[450929] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[395640] = {
["isChanneled"] = true,
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194401,
},
[389497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Sand",
["npcID"] = 187475,
},
[224457] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acolyte of Sael'orn",
["npcID"] = 112738,
},
[409975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[463217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Guardian",
["npcID"] = 166276,
},
[455026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Scaleguard",
["npcID"] = 223106,
},
[134058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Blastgineer",
["npcID"] = 67884,
},
[463218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 210269,
},
[395642] = {
["isChanneled"] = true,
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194401,
},
[256198] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[452980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggregation of Horrors",
["npcID"] = 220999,
},
[326021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinemaw Gorger",
["npcID"] = 172312,
},
[387452] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Attentive Guardian",
["npcID"] = 181775,
},
[455028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ton'kei The Fierce",
["npcID"] = 223518,
},
[114285] = {
["source"] = "Hateful Ko Ko",
["event"] = "SPELL_CAST_START",
["npcID"] = 59430,
},
[262540] = {
["source"] = "Expert Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 133593,
},
[387453] = {
["source"] = "Professor Maxdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[256199] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 127503,
},
[224459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acolyte of Sael'orn",
["npcID"] = 112738,
},
[116845] = {
["source"] = "Dook Ookem",
["event"] = "SPELL_CAST_START",
["npcID"] = 55622,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[396739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Hornswog",
["npcID"] = 191621,
},
[146605] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[147669] = {
["source"] = "Dragonmaw Elite Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 72350,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[224460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venomhide Shadowspinner",
["npcID"] = 112733,
},
[448888] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[129132] = {
["source"] = "Mogujia Soul-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 59797,
},
[147447] = {
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72770,
},
[405886] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["npcID"] = 203230,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[147543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golganarr",
["npcID"] = 72970,
},
[452985] = {
["source"] = "Siege Marshal Tekhzok",
["event"] = "SPELL_CAST_START",
["npcID"] = 215987,
},
[395648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sogglmoggl",
["npcID"] = 188859,
},
[389505] = {
["source"] = "Vernon Whitlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 212812,
},
[399744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[199341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
},
[140346] = {
["source"] = "Silver Covenant Spellblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 67970,
},
[126061] = {
["source"] = "Torjar's Bane",
["event"] = "SPELL_CAST_START",
["npcID"] = 58439,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["npcID"] = 201668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[129085] = {
["source"] = "Imperial Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 60826,
},
[143431] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Arcweaver",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71517,
},
[446844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasitic Worm",
["npcID"] = 222786,
},
[399746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warp Crystal",
["npcID"] = 201082,
},
[200913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[122874] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["npcID"] = 60585,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[118162] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[262383] = {
["source"] = "Venture Co. War Machine",
["event"] = "SPELL_CAST_START",
["npcID"] = 133463,
},
[450941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Knight",
["npcID"] = 222820,
},
[395652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sogglmoggl",
["npcID"] = 188859,
},
[119843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maragor",
["npcID"] = 71492,
},
[457085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[424322] = {
["source"] = "Blazing Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 223777,
},
[405893] = {
["source"] = "Tidesmith Zarviss",
["event"] = "SPELL_CAST_START",
["npcID"] = 200730,
},
[111216] = {
["encounterName"] = "Armsmaster Harlan",
["source"] = "Armsmaster Harlan",
["encounterID"] = 1421,
["event"] = "SPELL_CAST_START",
["npcID"] = 58632,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Brain of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33890,
},
[14033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lorekeeper Vaeldrin",
["npcID"] = 58975,
},
[438658] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[122479] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 63554,
},
[137435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beastmaster Horaki",
["npcID"] = 69559,
},
[448897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[147674] = {
["source"] = "Ordon Oathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72892,
},
[387465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Attentive Guardian",
["npcID"] = 181775,
},
[207059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Harpooner",
["npcID"] = 107447,
},
[224465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venomhide Shadowspinner",
["npcID"] = 112733,
},
[393609] = {
["source"] = "Krojek The Shoreprowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187645,
},
[210131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Killclaw the Terrible",
["npcID"] = 153266,
},
[149184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grunt",
["npcID"] = 82047,
},
[124309] = {
["source"] = "Ashfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 60932,
},
[385419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[131896] = {
["isChanneled"] = true,
["source"] = "Angry, Stabby Townlong Yak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61635,
},
[135173] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorin Magehand",
["npcID"] = 68587,
},
[129135] = {
["source"] = "Crimson Lory",
["event"] = "SPELL_CAST_START",
["npcID"] = 60198,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[106851] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[424328] = {
["source"] = "Waxtail Browbeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 213000,
},
[372201] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[111594] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[134366] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["event"] = "SPELL_CAST_START",
["npcID"] = 69712,
},
[432520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[200918] = {
["source"] = "Wrath-Lord Lekos",
["event"] = "SPELL_CAST_START",
["npcID"] = 97069,
},
[140375] = {
["source"] = "Loa Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 69302,
},
[389518] = {
["source"] = "Koroleth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188180,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[128105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Hiss'ir",
["npcID"] = 63998,
},
[107356] = {
["encounterName"] = "Taran Zhu",
["source"] = "Corrupted Taran Zhu",
["encounterID"] = 1306,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56884,
},
[268702] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Stonefury",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 130635,
},
[393615] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[89205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominance Sniper",
["npcID"] = 67362,
},
[268703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charged Dust Devil",
["npcID"] = 134990,
},
[140511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hu'seng the Gatekeeper",
["npcID"] = 69483,
},
[403855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[163973] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Varashian Vilefang",
["npcID"] = 85429,
},
[275778] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Ettin Stoneflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 136419,
},
[122409] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Kor'thik Elite Blademaster",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62402,
},
[144396] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71475,
},
[446859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackblood Coalescence",
["npcID"] = 215205,
},
[268705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sand-Crusted Striker",
["npcID"] = 135846,
},
[207064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Harpooner",
["npcID"] = 107447,
},
[127601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kri'chon",
["npcID"] = 63978,
},
[405905] = {
["source"] = "Failed Experiment",
["event"] = "SPELL_CAST_START",
["npcID"] = 203007,
},
[105504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[144608] = {
["source"] = "Niuzao",
["event"] = "SPELL_CAST_START",
["npcID"] = 71954,
},
[455052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supervisor Radlock",
["npcID"] = 220897,
},
[399763] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[448910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darklost Brute",
["npcID"] = 216260,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[446862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasitic Worm",
["npcID"] = 222786,
},
[134370] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["event"] = "SPELL_CAST_START",
["npcID"] = 69712,
},
[186041] = {
["source"] = "Nightglaive the Traitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 90621,
},
[199361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Trapper",
["npcID"] = 96934,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[268709] = {
["source"] = "Venture Co. Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 130661,
},
[369049] = {
["encounterName"] = "Emberon",
["source"] = "Vault Keeper",
["npcID"] = 186107,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[395670] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[128114] = {
["source"] = "Greatback Mushan",
["event"] = "SPELL_CAST_START",
["npcID"] = 62029,
},
[448912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowguard Adept",
["npcID"] = 216263,
},
[369050] = {
["source"] = "Stormcaller Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 187817,
},
[144610] = {
["source"] = "Niuzao",
["event"] = "SPELL_CAST_START",
["npcID"] = 71954,
},
[383385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Filth Caller",
["npcID"] = 185656,
},
[138467] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Appraising Eye",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 67858,
},
[164064] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Sparring Death Knight",
["npcID"] = 216725,
},
[387481] = {
["source"] = "Brinetooth Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 187285,
},
[463248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[50495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[144611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[455058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wavetwist Seer",
["npcID"] = 223107,
},
[449834] = {
["source"] = "Springbubble",
["event"] = "SPELL_CAST_START",
["npcID"] = 219262,
},
[459155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[444820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[438677] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[395675] = {
["source"] = "Embar Firepath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[127552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Sorcerer",
["npcID"] = 65133,
},
[369055] = {
["source"] = "Qalashi Crustshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186638,
},
[125865] = {
["source"] = "Zar'thik Augurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 64454,
},
[117708] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60708,
},
[140277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shan'ze Animator",
["npcID"] = 70069,
},
[418202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[389534] = {
["source"] = "Korthrox the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 183422,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33136,
},
[120300] = {
["isChanneled"] = true,
["source"] = "Tormented Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60524,
},
[143362] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber Parasite",
["encounterID"] = 1593,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71578,
},
[375201] = {
["source"] = "Bright Gustfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 195002,
},
[397726] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 188100,
},
[11986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimtotem Elder",
["npcID"] = 23714,
},
[273770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chadwick Paxton",
["npcID"] = 147628,
},
[32417] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zan'thik Manipulator",
["npcID"] = 65274,
},
[83066] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["npcID"] = 44819,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1055,
},
[81530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[434589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overfiend",
["npcID"] = 217429,
},
[140519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sentry Totem",
["npcID"] = 70581,
},
[463256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Defender",
["npcID"] = 171772,
},
[436637] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[50496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[455066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wavetwist Seer",
["npcID"] = 223107,
},
[418208] = {
["source"] = "Dark Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 206474,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[119414] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60999,
},
[444829] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[433448] = {
["isChanneled"] = true,
["source"] = "Gem Hoarder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220148,
},
[278961] = {
["source"] = "Diseased Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 133870,
},
[144616] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Siege Engineer",
["encounterID"] = 1623,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71984,
},
[53824] = {
["source"] = "Undertide Deepfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 226961,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[114807] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["npcID"] = 59223,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1424,
},
[404779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 202320,
},
[455069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arax'ne",
["npcID"] = 217465,
},
[116343] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nahassa",
["npcID"] = 60203,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[272820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imbued Stormcaller",
["npcID"] = 134599,
},
[405924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[139498] = {
["source"] = "Corpse Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 68248,
},
[118903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintrok Hexxer",
["npcID"] = 61216,
},
[181477] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfallen Construct",
["npcID"] = 109229,
},
[135403] = {
["source"] = "Joan Lorraine",
["event"] = "SPELL_CAST_START",
["npcID"] = 67530,
},
[14034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fireguard",
["npcID"] = 8909,
},
[120951] = {
["source"] = "Cho Cho the Wicked",
["event"] = "SPELL_CAST_START",
["npcID"] = 60090,
},
[321968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[393217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[124297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackhoof",
["npcID"] = 51059,
},
[387497] = {
["source"] = "Time-Lost Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187244,
},
[115320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Infiltrator",
["npcID"] = 56303,
},
[143432] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Arcweaver",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71517,
},
[134380] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["event"] = "SPELL_CAST_START",
["npcID"] = 69712,
},
[135404] = {
["source"] = "Joan Lorraine",
["event"] = "SPELL_CAST_START",
["npcID"] = 67530,
},
[139378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Gatekeeper",
["npcID"] = 69510,
},
[13952] = {
["source"] = "Lightsworn Vindicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 22861,
},
[143199] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["encounterID"] = 1595,
["event"] = "SPELL_CAST_START",
["npcID"] = 71454,
},
[450980] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217491,
},
[338353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Collector",
["npcID"] = 173016,
},
[381356] = {
["source"] = "Luddy Quicksnap",
["event"] = "SPELL_CAST_START",
["npcID"] = 193292,
},
[399786] = {
["isChanneled"] = true,
["source"] = "Hunting Rock Viper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201117,
},
[459171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Val'kyr Shadowguard",
["npcID"] = 227940,
},
[118104] = {
["source"] = "Unruly Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 56684,
},
[430503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["encounterID"] = 2668,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201792,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["npcID"] = 99868,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1807,
},
[387501] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Uncontrolled Guardian",
["npcID"] = 181775,
},
[157931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[86374] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[135220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Spellbow",
["npcID"] = 68043,
},
[62662] = {
["encounterName"] = "General Vezax",
["source"] = "General Vezax",
["encounterID"] = 1134,
["event"] = "SPELL_CAST_START",
["npcID"] = 33271,
},
[116711] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60009,
},
[338357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kyrian Stitchwerk",
["npcID"] = 172981,
},
[369073] = {
["source"] = "Battlehorn Pyrhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190986,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shocktrooper",
["npcID"] = 199037,
},
[148138] = {
["source"] = "Blackfuse Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 73095,
},
[129926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60601,
},
[398631] = {
["source"] = "Irontide Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 199963,
},
[201959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 102295,
},
[129656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kracor",
["npcID"] = 67128,
},
[32674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Reanimated Crusader",
["npcID"] = 226096,
},
[463272] = {
["source"] = "Caustic Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 229918,
},
[197864] = {
["source"] = "Skyfire Gryphon Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 91414,
},
[198888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 99891,
},
[449824] = {
["source"] = "Springbubble",
["event"] = "SPELL_CAST_START",
["npcID"] = 219262,
},
[33860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theramore Arcanist",
["npcID"] = 59596,
},
[87387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimgore",
["npcID"] = 4339,
},
[453919] = {
["source"] = "Resource Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223943,
},
[276928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razak Ironsides",
["npcID"] = 133556,
},
[118906] = {
["isChanneled"] = true,
["source"] = "Dojani Reclaimer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58117,
},
[120442] = {
["isChanneled"] = true,
["source"] = "Shek'zeer Bladesworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62563,
},
[412081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[142576] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71152,
},
[129145] = {
["source"] = "Emerald Lory",
["event"] = "SPELL_CAST_START",
["npcID"] = 60200,
},
[387508] = {
["source"] = "Time-Lost Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187244,
},
[260322] = {
["source"] = "Nol'ixwan",
["event"] = "SPELL_CAST_START",
["npcID"] = 130741,
},
[138481] = {
["source"] = "Skumblade Saur-Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 69229,
},
[377270] = {
["source"] = "Cliffdrip Wavemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189814,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[137457] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oondasta",
["npcID"] = 69161,
},
[137458] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[385462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rellen, The Learned",
["npcID"] = 190949,
},
[453041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matriarch Charfuria",
["npcID"] = 220890,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29307,
},
[167590] = {
["source"] = "Field Medic Nesrerah",
["event"] = "SPELL_CAST_START",
["npcID"] = 83736,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["npcID"] = 156814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[140530] = {
["isChanneled"] = true,
["source"] = "Zandalari Haruspex",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69297,
},
[18651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathanos Blightcaller",
["npcID"] = 91158,
},
[448944] = {
["source"] = "Kobold Snuffercrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 218662,
},
[49987] = {
["source"] = "Defendo-tank 66D",
["event"] = "SPELL_CAST_START",
["npcID"] = 25758,
},
[441630] = {
["source"] = "Kaheti Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218316,
},
[340414] = {
["source"] = "Forgotten Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 202446,
},
[423200] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["encounterID"] = 2880,
["event"] = "SPELL_CAST_START",
["npcID"] = 210156,
},
[145064] = {
["encounterName"] = "Norushen",
["source"] = "Essence of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72263,
},
[428468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[198892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Drake",
["npcID"] = 99891,
},
[150770] = {
["isChanneled"] = true,
["source"] = "Subjugated Gronn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85653,
},
[432565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 211341,
},
[117372] = {
["source"] = "Viseclaw Fisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 58880,
},
[208544] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runeseer Faljar",
["npcID"] = 93093,
},
[187630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Trapper",
["npcID"] = 91244,
},
[257254] = {
["source"] = "Splintered Servitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 131547,
},
[144628] = {
["encounterName"] = "Norushen",
["source"] = "Titanic Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72051,
},
[128123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Hiss'ir",
["npcID"] = 63998,
},
[191726] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[377277] = {
["source"] = "Volethi",
["event"] = "SPELL_CAST_START",
["npcID"] = 200727,
},
[395707] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[430519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[135095] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[455093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Enforcer",
["npcID"] = 224819,
},
[428472] = {
["isChanneled"] = true,
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210295,
},
[124028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[51779] = {
["source"] = "7th Legion Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 94737,
},
[373184] = {
["source"] = "Luddy Quicksnap",
["event"] = "SPELL_CAST_START",
["npcID"] = 193292,
},
[125564] = {
["isChanneled"] = true,
["source"] = "Maki Waterblade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64280,
},
[145653] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Gloom",
["npcID"] = 71477,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[460057] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[63554] = {
["isChanneled"] = true,
["source"] = "Mangrove Ent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 33525,
},
[389567] = {
["source"] = "Slavering Snapdragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 195668,
},
[128124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mire Beast",
["npcID"] = 63731,
},
[120445] = {
["isChanneled"] = true,
["source"] = "Shek'zeer Bladesworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62563,
},
[459191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[445746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwater Tidecrusher",
["npcID"] = 220621,
},
[137463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Tak'u",
["npcID"] = 69336,
},
[448953] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1051,
},
[418237] = {
["source"] = "Prophet Skitra",
["event"] = "SPELL_CAST_START",
["npcID"] = 208491,
},
[142315] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[140112] = {
["source"] = "Zeb'tula Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 69657,
},
[441626] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[147688] = {
["encounterName"] = "Galakras",
["source"] = "Lieutenant Krugruk",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72357,
},
[144631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[455098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abductor Arzda",
["npcID"] = 222836,
},
[159969] = {
["source"] = "Gorebound Vessel",
["event"] = "SPELL_CAST_START",
["npcID"] = 79125,
},
[147703] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[95729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Therazane",
["npcID"] = 43792,
},
[455102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Enforcer",
["npcID"] = 224819,
},
[375237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[88194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[423195] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nymue",
["npcID"] = 206172,
},
[414145] = {
["source"] = "Ducks Devil",
["event"] = "SPELL_CAST_START",
["npcID"] = 200751,
},
[146680] = {
["isChanneled"] = true,
["source"] = "Blackfuse Sellsword",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72986,
},
[418241] = {
["source"] = "Prophet Skitra",
["event"] = "SPELL_CAST_START",
["npcID"] = 208491,
},
[420289] = {
["source"] = "Tempest Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 207040,
},
[124030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[457149] = {
["source"] = "Shipwright Isaebela",
["event"] = "SPELL_CAST_START",
["npcID"] = 219801,
},
[157348] = {
["encounterName"] = "Gnarlroot",
["source"] = "Greater Storm Elemental",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 77936,
},
[148133] = {
["source"] = "Enraged Mushan Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 73185,
},
[137466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Tak'u",
["npcID"] = 69336,
},
[138490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Saur-Priest",
["npcID"] = 69229,
},
[449815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[148729] = {
["source"] = "Spectral Windwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 73021,
},
[455104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abductor Arzda",
["npcID"] = 222836,
},
[191732] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[451008] = {
["source"] = "Cinderbee Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[420292] = {
["source"] = "Tempest Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 207040,
},
[145658] = {
["source"] = "Doomlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 72564,
},
[383433] = {
["isChanneled"] = true,
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194147,
},
[440768] = {
["source"] = "Black Blood Container",
["event"] = "SPELL_CAST_START",
["npcID"] = 220002,
},
[420293] = {
["isChanneled"] = true,
["source"] = "Tempest Conqueror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207040,
},
[140539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Defender",
["npcID"] = 200816,
},
[148730] = {
["source"] = "Spectral Brewmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 73018,
},
[122301] = {
["source"] = "Water Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 62930,
},
[144635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[445718] = {
["source"] = "Stolen Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 223541,
},
[122784] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[328146] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[37367] = {
["source"] = "Gurubashi Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 64642,
},
[174328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulbinder Nyami",
["npcID"] = 76177,
},
[126973] = {
["source"] = "Mogu'shan Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 64063,
},
[143330] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71479,
},
[141381] = {
["source"] = "Lieutenant Boltblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 71329,
},
[405962] = {
["source"] = "Bronogg the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 203386,
},
[122496] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 63554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[140541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcanital Ra'kul",
["npcID"] = 69300,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[279003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Vanguard",
["npcID"] = 142082,
},
[125568] = {
["source"] = "Maki Waterblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 64280,
},
[136990] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69131,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[63556] = {
["source"] = "Mangrove Ent",
["event"] = "SPELL_CAST_START",
["npcID"] = 33525,
},
[7978] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Technician",
["npcID"] = 35333,
},
[389583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Militant Arcanist",
["npcID"] = 199739,
},
[375249] = {
["source"] = "Nubagh",
["event"] = "SPELL_CAST_START",
["npcID"] = 195514,
},
[115678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Thief",
["npcID"] = 54930,
},
[46150] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 24696,
},
[138042] = {
["source"] = "Zandalari Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69841,
},
[122497] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 63554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[157375] = {
["encounterName"] = "The Stone Guard",
["source"] = "Primal Storm Elemental",
["encounterID"] = 1395,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77942,
},
[197880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Runeaxe",
["npcID"] = 93066,
},
[198904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotheart Dryad",
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[143446] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71480,
},
[79939] = {
["source"] = "Cabalist Doombrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 70708,
},
[314658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 161504,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[118914] = {
["source"] = "Shado-Pan Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61252,
},
[115809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Trickster",
["npcID"] = 54987,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[114004] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[135425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Hunter",
["npcID"] = 68334,
},
[265511] = {
["source"] = "Spirit Drain Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 135169,
},
[369946] = {
["source"] = "Zaqali Wingripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 202439,
},
[146688] = {
["source"] = "Dragonmaw Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72365,
},
[73864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Scout",
["npcID"] = 48041,
},
[181500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Withered Exile",
["npcID"] = 90379,
},
[183042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vethir",
["npcID"] = 92302,
},
[124546] = {
["source"] = "Apothecary Cheng",
["event"] = "SPELL_CAST_START",
["npcID"] = 63812,
},
[135426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Scout",
["npcID"] = 68368,
},
[420306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chainmaster",
["npcID"] = 211058,
},
[133795] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Hungry Eye",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 67859,
},
[45895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Urgev the Flayer",
["npcID"] = 93401,
},
[393686] = {
["source"] = "Turboris",
["event"] = "SPELL_CAST_START",
["npcID"] = 187886,
},
[57780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelforged Defender",
["npcID"] = 33236,
},
[81363] = {
["source"] = "Xiong the Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 57325,
},
[175358] = {
["source"] = "Fel Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 73325,
},
[149463] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[144642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[314655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 161504,
},
[148728] = {
["source"] = "Spectral Mistweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 73025,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[453073] = {
["source"] = "Sweetspark the Oozeful",
["event"] = "SPELL_CAST_START",
["npcID"] = 220883,
},
[122485] = {
["isChanneled"] = true,
["source"] = "Ookie",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62468,
},
[175359] = {
["source"] = "Fel Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 73325,
},
[451026] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[58438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Trickster",
["npcID"] = 30856,
},
[418262] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[204028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Guardian",
["npcID"] = 102337,
},
[125980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quid",
["npcID"] = 58771,
},
[389572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Devilsaur",
["npcID"] = 187262,
},
[414993] = {
["source"] = "Smoldering Hierophant",
["event"] = "SPELL_CAST_START",
["npcID"] = 206860,
},
[383452] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[80009] = {
["source"] = "Aarko",
["event"] = "SPELL_CAST_START",
["npcID"] = 77664,
},
[123960] = {
["source"] = "Little Liuyang",
["event"] = "SPELL_CAST_START",
["npcID"] = 63313,
},
[120788] = {
["source"] = "Imperial Antiquator",
["event"] = "SPELL_CAST_START",
["npcID"] = 61641,
},
[424408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bodwin",
["npcID"] = 209153,
},
[120213] = {
["isChanneled"] = true,
["source"] = "The Ook of Dook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60188,
},
[98951] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[123791] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[83593] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Lorthuna",
["npcID"] = 43837,
},
[135251] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[117187] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["npcID"] = 60585,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[105519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[126596] = {
["source"] = "The Blade",
["event"] = "SPELL_CAST_START",
["npcID"] = 61010,
},
[69771] = {
["source"] = "Azure Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 27608,
},
[181505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Withered Leyhunter",
["npcID"] = 108197,
},
[381408] = {
["source"] = "Shiverweb Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 185810,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201790,
},
[449817] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vilewing",
["npcID"] = 216037,
},
[436698] = {
["source"] = "Scarab Captain Vul'akan",
["event"] = "SPELL_CAST_START",
["npcID"] = 218306,
},
[147682] = {
["source"] = "Ordon Oathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72892,
},
[81754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Southsea Taskmaster",
["npcID"] = 40593,
},
[393696] = {
["source"] = "Vadne Bleakheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 195764,
},
[98952] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[143007] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["encounterID"] = 1598,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71475,
},
[129082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruqin Elder",
["npcID"] = 59826,
},
[123918] = {
["source"] = "Scar-Shell",
["event"] = "SPELL_CAST_START",
["npcID"] = 63311,
},
[115147] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59789,
},
[136098] = {
["source"] = "Lion's Faithful",
["event"] = "SPELL_CAST_START",
["npcID"] = 69004,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[122193] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62408,
},
[445705] = {
["source"] = "Deepwater Makura",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[438749] = {
["encounterName"] = "The Silken Court",
["source"] = "Shattershell Scarab",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218884,
},
[103560] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "An Windfur",
["npcID"] = 55369,
},
[412129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[453084] = {
["source"] = "Sweetspark the Oozeful",
["event"] = "SPELL_CAST_START",
["npcID"] = 220883,
},
[114185] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[147720] = {
["source"] = "Ordon Fire-Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 72894,
},
[164102] = {
["source"] = "Grimrail Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81235,
},
[98953] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[205462] = {
["source"] = "Karuas",
["event"] = "SPELL_CAST_START",
["npcID"] = 97859,
},
[144649] = {
["encounterName"] = "Norushen",
["source"] = "Titanic Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72051,
},
[459229] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Broken Queen",
["npcID"] = 214368,
},
[210177] = {
["source"] = "Isel the Hammer",
["event"] = "SPELL_CAST_START",
["npcID"] = 94413,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[453894] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[369129] = {
["source"] = "Modak Flamespit",
["event"] = "SPELL_CAST_START",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[128134] = {
["source"] = "Ilikkax",
["event"] = "SPELL_CAST_START",
["npcID"] = 62833,
},
[120455] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[200963] = {
["isChanneled"] = true,
["source"] = "Fel Shocktrooper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92776,
},
[187653] = {
["source"] = "Felskorn Warmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 96135,
},
[455136] = {
["source"] = "Crateron",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[424420] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[457183] = {
["source"] = "Shadowspinner Azarak",
["event"] = "SPELL_CAST_START",
["npcID"] = 222612,
},
[197892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Runeaxe",
["npcID"] = 93066,
},
[63760] = {
["source"] = "Twilight Adherent",
["event"] = "SPELL_CAST_START",
["npcID"] = 33818,
},
[424421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
},
[272888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Destroyer",
["npcID"] = 137517,
},
[420326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamebound Sentinel",
["npcID"] = 206900,
},
[260349] = {
["source"] = "Ten'gor",
["event"] = "SPELL_CAST_START",
["npcID"] = 130713,
},
[131085] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ik'thik Harvester",
["npcID"] = 63206,
},
[147723] = {
["source"] = "Ordon Fire-Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 72894,
},
[412136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[424423] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Sergeant Shaynemail",
["npcID"] = 211291,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[451044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Lasher",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[440806] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["npcID"] = 219676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2946,
},
[385517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Sentry",
["npcID"] = 187021,
},
[395756] = {
["source"] = "Qalashi Wingscorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197798,
},
[119688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Et'kil",
["npcID"] = 61540,
},
[83597] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Lorthuna",
["npcID"] = 43837,
},
[140427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mighty Devilsaur",
["npcID"] = 69406,
},
[136462] = {
["source"] = "Horde Squallshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 71367,
},
[111667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[268797] = {
["source"] = "Venture Co. Alchemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 133432,
},
[129030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorge Stalker",
["npcID"] = 58432,
},
[111242] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Groundbreaker Brojai",
["npcID"] = 58224,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2582,
},
[147446] = {
["source"] = "Foreboding Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 73162,
},
[79971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunwalker Dezco",
["npcID"] = 59851,
},
[140543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hu'seng the Gatekeeper",
["npcID"] = 69483,
},
[116838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Gormal",
["npcID"] = 55016,
},
[406792] = {
["source"] = "Agitated Magmaclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 202288,
},
[199481] = {
["source"] = "Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 97632,
},
[126601] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blade",
["npcID"] = 61010,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[276991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Overseer",
["npcID"] = 156676,
},
[20825] = {
["source"] = "Guzzling Patron",
["event"] = "SPELL_CAST_START",
["npcID"] = 9547,
},
[420334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Adranas",
["npcID"] = 209931,
},
[145679] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[59209] = {
["source"] = "Azure Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27633,
},
[459242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nix'k the Wicked",
["npcID"] = 219749,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[414192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krrrn Trr Cryomancer",
["npcID"] = 204451,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[80015] = {
["source"] = "Blackmane Tracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60434,
},
[395763] = {
["source"] = "Qalashi Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 196336,
},
[455148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[453889] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[279041] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Tinker Mekkatorque",
["npcID"] = 146589,
},
[181516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Withered Outcast",
["npcID"] = 91157,
},
[381430] = {
["source"] = "Sedentary Sediment",
["event"] = "SPELL_CAST_START",
["npcID"] = 194284,
},
[120458] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[377335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kob'rok",
["npcID"] = 203462,
},
[144657] = {
["encounterName"] = "Norushen",
["source"] = "Titanic Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72051,
},
[125001] = {
["source"] = "Zan'thik Ambermancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62838,
},
[204042] = {
["source"] = "Mo'arg Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 103176,
},
[393718] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[459246] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Broken Queen",
["npcID"] = 214368,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[418292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[137491] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Suen",
["npcID"] = 68904,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1560,
},
[455152] = {
["source"] = "Crateron",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[455937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Stinger",
["npcID"] = 223602,
},
[377338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqualing",
["npcID"] = 190406,
},
[453887] = {
["source"] = "Savage Cursespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 223655,
},
[455153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Devourer",
["npcID"] = 216031,
},
[116364] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60009,
},
[64740] = {
["isChanneled"] = true,
["source"] = "Clockwork Sapper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 34193,
},
[79881] = {
["source"] = "Twilight Vanquisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 38913,
},
[178837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[59210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Ley-Whelp",
["npcID"] = 27636,
},
[418295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[140564] = {
["isChanneled"] = true,
["source"] = "Possessed Blood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69436,
},
[121291] = {
["source"] = "Mischievous Snow Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 59967,
},
[147649] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[121484] = {
["source"] = "Hozen Groundpounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 55470,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[12742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Soulbreaker",
["npcID"] = 68342,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[100842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bulgeback Tortoise",
["npcID"] = 58431,
},
[422393] = {
["source"] = "Skittering Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 208457,
},
[417735] = {
["isChanneled"] = true,
["source"] = "Mycelial Growth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208525,
},
[419166] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[453110] = {
["source"] = "Ascended Webfriar",
["event"] = "SPELL_CAST_START",
["npcID"] = 219022,
},
[455158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[375296] = {
["source"] = "Skulking Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 196384,
},
[377344] = {
["source"] = "Territorial Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192329,
},
[420347] = {
["source"] = "Kaldorei Archdruid",
["event"] = "SPELL_CAST_START",
["npcID"] = 211066,
},
[455932] = {
["source"] = "Heartfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 216035,
},
[257288] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Cleaver",
["npcID"] = 129879,
},
[385536] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[140117] = {
["isChanneled"] = true,
["source"] = "Zeb'tula Stoneshield",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69517,
},
[113806] = {
["isChanneled"] = true,
["source"] = "Enraged Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63467,
},
[449017] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[451064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[158997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Gembiter",
["npcID"] = 81729,
},
[258313] = {
["source"] = "Ashvane Jailer",
["event"] = "SPELL_CAST_START",
["npcID"] = 135699,
},
[125069] = {
["source"] = "Amber-Ridden Mushan",
["event"] = "SPELL_CAST_START",
["npcID"] = 63568,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drifting Sporebloom",
["npcID"] = 214961,
},
[59211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Ring Guardian",
["npcID"] = 27638,
},
[369157] = {
["isChanneled"] = true,
["source"] = "Venomsprout Shootling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188948,
},
[428542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[432638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[393731] = {
["source"] = "Flayfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 187505,
},
[136473] = {
["source"] = "Admiral Hodgson",
["event"] = "SPELL_CAST_START",
["npcID"] = 71327,
},
[277010] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moon Priestess Liara",
["npcID"] = 152729,
},
[449021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[115328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Bloodrager",
["npcID"] = 59887,
},
[374020] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[277011] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moon Priestess Liara",
["npcID"] = 152729,
},
[87698] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanic Guardian",
["npcID"] = 47032,
},
[83794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haethen Kaul",
["npcID"] = 44835,
},
[414974] = {
["source"] = "Searing Rootguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210592,
},
[264153] = {
["source"] = "Devouring Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 134024,
},
[196883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[135300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korune Mutilator",
["npcID"] = 68401,
},
[198931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[285204] = {
["event"] = "SPELL_CAST_START",
["source"] = "A.F.M.O.D.",
["npcID"] = 148769,
},
[393735] = {
["isChanneled"] = true,
["source"] = "Champion Choruk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186592,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[265487] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[426500] = {
["source"] = "Gnarlroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81984,
},
[395784] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[141327] = {
["source"] = "Lieutenant Fizzboil",
["event"] = "SPELL_CAST_START",
["npcID"] = 71330,
},
[148762] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Na'kaz",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73949,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["npcID"] = 61445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[453879] = {
["source"] = "Grand Overspinner Antourix",
["event"] = "SPELL_CAST_START",
["npcID"] = 225263,
},
[274968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zian-Ti Spirit",
["npcID"] = 138969,
},
[59212] = {
["source"] = "Azure Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 27635,
},
[196885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skjal",
["npcID"] = 99307,
},
[369921] = {
["source"] = "Blazing Flamewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 207337,
},
[274969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zian-Ti Shadowcaster",
["npcID"] = 126185,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["event"] = "SPELL_CAST_START",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[387596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mystic",
["npcID"] = 195877,
},
[162074] = {
["source"] = "Bloodtotem Flameheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 100435,
},
[118657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snagtooth Hooligan",
["npcID"] = 56462,
},
[274972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zian-Ti Cloudbreaker",
["npcID"] = 138972,
},
[379406] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 189472,
},
[198934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Mystic",
["npcID"] = 95834,
},
[23337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Guardian",
["npcID"] = 162941,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 191510,
},
[136478] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[455174] = {
["source"] = "Crateron",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[449031] = {
["source"] = "Nerubian Slashjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 218654,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[82876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssion",
["npcID"] = 44289,
},
[111762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
},
[388349] = {
["source"] = "Sunless Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219606,
},
[128954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Tormentor",
["npcID"] = 58377,
},
[434697] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[16006] = {
["source"] = "Farseer Drek'Thar",
["event"] = "SPELL_CAST_START",
["npcID"] = 78996,
},
[391696] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["encounterID"] = 2605,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190690,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194990,
},
[453129] = {
["source"] = "Caustic Bomber",
["event"] = "SPELL_CAST_START",
["npcID"] = 224970,
},
[120429] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[449034] = {
["source"] = "Nerubian Slashjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 218654,
},
[418318] = {
["source"] = "Faceless One",
["event"] = "SPELL_CAST_START",
["npcID"] = 206463,
},
[338456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kyrian Stitchwerk",
["npcID"] = 172981,
},
[422414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[424462] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[410873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gust Soldier",
["npcID"] = 45477,
},
[427333] = {
["source"] = "Rydra Scalegorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 209048,
},
[123914] = {
["source"] = "Enraged Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 63467,
},
[115139] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1423,
},
[443636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[188046] = {
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[137505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oondasta",
["npcID"] = 69161,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[205081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathlord Bulwark",
["npcID"] = 102397,
},
[453874] = {
["source"] = "Vrykul Hoardseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 223653,
},
[394763] = {
["source"] = "Motivator Krathos",
["event"] = "SPELL_CAST_START",
["npcID"] = 201561,
},
[449038] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[395797] = {
["source"] = "Primalist Frostsculptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 198424,
},
[162078] = {
["source"] = "Grom'kar Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 85457,
},
[174735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khaano",
["npcID"] = 86282,
},
[393750] = {
["source"] = "Taresh",
["event"] = "SPELL_CAST_START",
["npcID"] = 188711,
},
[444944] = {
["source"] = "Bounty Swiftlet",
["event"] = "SPELL_CAST_START",
["npcID"] = 221897,
},
[438801] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[128658] = {
["source"] = "Ironforge Cabalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 67762,
},
[434706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tasting Room Attendant",
["npcID"] = 214920,
},
[428563] = {
["source"] = "Kobold Flametender",
["event"] = "SPELL_CAST_START",
["npcID"] = 213913,
},
[260372] = {
["source"] = "Venture Co. Skyscorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 133436,
},
[111728] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["encounterID"] = 1419,
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[410870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[428564] = {
["isChanneled"] = true,
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[125349] = {
["isChanneled"] = true,
["source"] = "Sharpshell Wader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61971,
},
[387608] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[444946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormtop Terralisk",
["npcID"] = 214581,
},
[268061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plague Doctor",
["npcID"] = 139949,
},
[455186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbringer Prophet",
["npcID"] = 223034,
},
[391118] = {
["encounterName"] = "Azureblade",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[124839] = {
["source"] = "Seething Fleshripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61299,
},
[181535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sea Skrog",
["npcID"] = 88094,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[411700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[225562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
},
[453140] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[387613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[387614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Deathspeaker",
["npcID"] = 195851,
},
[106646] = {
["source"] = "Flying Snow",
["event"] = "SPELL_CAST_START",
["npcID"] = 56473,
},
[222491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Soulflayer",
["npcID"] = 91575,
},
[438807] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Colossal Spider",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 219045,
},
[444953] = {
["source"] = "Xur'khun the Defiled",
["event"] = "SPELL_CAST_START",
["npcID"] = 221845,
},
[451822] = {
["source"] = "Territorial Deepwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224218,
},
[453142] = {
["source"] = "Web Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[83791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haethen Kaul",
["npcID"] = 44835,
},
[406771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[451098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Militant",
["npcID"] = 213932,
},
[451097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Militant",
["npcID"] = 213932,
},
[47696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[268846] = {
["source"] = "Weapons Tester",
["event"] = "SPELL_CAST_START",
["npcID"] = 136934,
},
[209182] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runeseer Faljar",
["npcID"] = 93093,
},
[453144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tephratennae",
["npcID"] = 221126,
},
[145702] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71385,
},
[116886] = {
["source"] = "Dook Ookem",
["event"] = "SPELL_CAST_START",
["npcID"] = 55622,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[115350] = {
["encounterName"] = "Lilian Voss",
["source"] = "Lilian's Soul",
["encounterID"] = 1429,
["event"] = "SPELL_CAST_START",
["npcID"] = 58791,
},
[198944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enslaved Shieldmaiden",
["npcID"] = 102104,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187768,
},
[200992] = {
["isChanneled"] = true,
["source"] = "Savage Felstalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92782,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["npcID"] = 196043,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[451099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Militant",
["npcID"] = 213932,
},
[59215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Ley-Whelp",
["npcID"] = 28276,
},
[205088] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blazing Infernal",
["npcID"] = 102398,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[455195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad Vanguard",
["npcID"] = 223033,
},
[193603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulthirster",
["npcID"] = 97630,
},
[444957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Light-Bathed Eagle",
["npcID"] = 223191,
},
[395811] = {
["source"] = "Qalashi Bonebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187599,
},
[277042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshrot Mystic",
["npcID"] = 146893,
},
[146728] = {
["source"] = "Dragonmaw Tidal Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 72367,
},
[205089] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blazing Infernal",
["npcID"] = 102398,
},
[453149] = {
["source"] = "Web Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[451102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascendant Vis'coxria",
["npcID"] = 211261,
},
[159015] = {
["source"] = "Glowgullet Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79190,
},
[377383] = {
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["npcID"] = 44819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[119394] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greenstone Terror",
["npcID"] = 61159,
},
[432673] = {
["source"] = "Kobold Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 216303,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[122852] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[371956] = {
["source"] = "Primal Terrasentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 188011,
},
[442913] = {
["source"] = "Blind Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72131,
},
[434722] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[130198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heavy Mook",
["npcID"] = 67399,
},
[142222] = {
["source"] = "Huntmaster S'thoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 71259,
},
[442914] = {
["source"] = "Blind Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72131,
},
[3606] = {
["source"] = "Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 2523,
},
[455201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Blood",
["npcID"] = 223035,
},
[159017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zipteq",
["npcID"] = 78734,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[395817] = {
["isChanneled"] = true,
["source"] = "Primalist Frostsculptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[141612] = {
["isChanneled"] = true,
["source"] = "Fiery Anger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70824,
},
[369197] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186605,
},
[412200] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[455203] = {
["event"] = "SPELL_CAST_START",
["source"] = "XT-Minecrusher 8700",
["npcID"] = 216034,
},
[391723] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[377389] = {
["source"] = "Alpha Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 192333,
},
[395819] = {
["source"] = "Qalashi Scaleripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187602,
},
[106827] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[393772] = {
["source"] = "Hihveer",
["event"] = "SPELL_CAST_START",
["npcID"] = 188717,
},
[387629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[438823] = {
["source"] = "Diabolic Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 219161,
},
[442919] = {
["source"] = "Blind Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72131,
},
[75934] = {
["source"] = "Yongqi Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 59385,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[394479] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[391726] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[63568] = {
["source"] = "Nature's Blade",
["event"] = "SPELL_CAST_START",
["npcID"] = 33527,
},
[55633] = {
["source"] = "Spirit-Bound Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 69335,
},
[457959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[123033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lao-Chin the Iron Belly",
["npcID"] = 62804,
},
[86861] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Golgarok",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50059,
},
[185641] = {
["source"] = "Knight-Captain Brimley",
["event"] = "SPELL_CAST_START",
["npcID"] = 94809,
},
[438826] = {
["source"] = "Atik",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[89757] = {
["source"] = "Defias Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 48266,
},
[131376] = {
["source"] = "Manifestation of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 66785,
},
[453161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[426541] = {
["source"] = "Runic Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 131685,
},
[277055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moon Priestess Liara",
["npcID"] = 152729,
},
[451114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Darkness",
["npcID"] = 213905,
},
[440876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Jelly Purveyor",
["npcID"] = 220141,
},
[436781] = {
["isChanneled"] = true,
["source"] = "Scarab Captain Vul'akan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218306,
},
[268865] = {
["source"] = "Weapons Tester",
["event"] = "SPELL_CAST_START",
["npcID"] = 136934,
},
[205096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infiltrator Assassin",
["npcID"] = 102395,
},
[140592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tideskorn Huntress",
["npcID"] = 100446,
},
[145037] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[395827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerdrool",
["npcID"] = 195968,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["npcID"] = 97264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[453164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tephratennae",
["npcID"] = 221126,
},
[145712] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71385,
},
[217385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Webmistress Shinaris",
["npcID"] = 108027,
},
[393780] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[420403] = {
["source"] = "Decaymonger Rotpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 205995,
},
[393783] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[393781] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[144689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordos",
["npcID"] = 72057,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 196116,
},
[449071] = {
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[451119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixkreten the Unbreakable",
["npcID"] = 211262,
},
[148785] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Master Kragg",
["npcID"] = 73775,
},
[397878] = {
["encounterName"] = "Wise Mari",
["source"] = "Corrupt Living Water",
["npcID"] = 56511,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[449072] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["encounterID"] = 2990,
["event"] = "SPELL_CAST_START",
["npcID"] = 220437,
},
[143666] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71160,
},
[463408] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[397881] = {
["encounterName"] = "Wise Mari",
["source"] = "Corrupt Living Water",
["npcID"] = 56511,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[81568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonecore Berserker",
["npcID"] = 43430,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[420405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[141619] = {
["source"] = "Frostmane Bonechiller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70465,
},
[412905] = {
["isChanneled"] = true,
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203709,
},
[434740] = {
["source"] = "Nightfall Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[412215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[340544] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[457266] = {
["source"] = "Greenhorn Extra",
["event"] = "SPELL_CAST_START",
["npcID"] = 228307,
},
[118940] = {
["encounterName"] = "Gekkan",
["source"] = "Glintrok Oracle",
["npcID"] = 61339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2129,
},
[395834] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197121,
},
[141620] = {
["source"] = "Bonechiller Barafu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70468,
},
[419048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[393787] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[144692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordos",
["npcID"] = 72057,
},
[131381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gatrul'lon Flamecaller",
["npcID"] = 66268,
},
[128026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Lurker",
["npcID"] = 62751,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[141621] = {
["source"] = "Frost Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 70982,
},
[369901] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 186965,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[207861] = {
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_START",
["npcID"] = 95451,
},
[439524] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[131972] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[205102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Shadow Mender",
["npcID"] = 102400,
},
[62016] = {
["encounterName"] = "Thorim",
["source"] = "Thorim",
["encounterID"] = 1141,
["event"] = "SPELL_CAST_START",
["npcID"] = 32865,
},
[198959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[372235] = {
["source"] = "Rebel Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 195064,
},
[451128] = {
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[444985] = {
["source"] = "Shacklefang Hornet",
["event"] = "SPELL_CAST_START",
["npcID"] = 223178,
},
[146707] = {
["encounterName"] = "Norushen",
["source"] = "Greater Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72001,
},
[397888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[205103] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Shadow Mender",
["npcID"] = 102400,
},
[115358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Puckish Sprite",
["npcID"] = 56349,
},
[133432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Domination Point Demolisher",
["npcID"] = 67671,
},
[63551] = {
["source"] = "Guardian of Life",
["event"] = "SPELL_CAST_START",
["npcID"] = 33528,
},
[183202] = {
["source"] = "Dread-Rider Malwick",
["event"] = "SPELL_CAST_START",
["npcID"] = 95307,
},
[395841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 197120,
},
[137528] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69712,
},
[283893] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Tinker Mekkatorque",
["npcID"] = 146066,
},
[131385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felstorm Warlock",
["npcID"] = 66270,
},
[140600] = {
["source"] = "Cavern Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 70589,
},
[166197] = {
["source"] = "Bloodmaul Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 77995,
},
[144695] = {
["source"] = "Ordos",
["event"] = "SPELL_CAST_START",
["npcID"] = 72057,
},
[451132] = {
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[387652] = {
["isChanneled"] = true,
["source"] = "Frost Shackler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195141,
},
[136904] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69131,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[131386] = {
["source"] = "Akkolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 66783,
},
[417678] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[198962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Runecarver",
["npcID"] = 96664,
},
[142649] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["encounterID"] = 1593,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71420,
},
[125370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torik-Ethis",
["npcID"] = 50388,
},
[394470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ko'jo",
["npcID"] = 186367,
},
[63059] = {
["source"] = "Forest Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 33431,
},
[204082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathblade Invader",
["npcID"] = 107551,
},
[147769] = {
["source"] = "Damp Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 72771,
},
[420419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[142650] = {
["source"] = "Proto-Drake Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 71401,
},
[386993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Proto-Drake",
["npcID"] = 194939,
},
[121503] = {
["source"] = "Norvakess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62324,
},
[176127] = {
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80935,
},
[196916] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[114848] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[387657] = {
["source"] = "Earthborne Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 201471,
},
[159033] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shaadum",
["npcID"] = 78728,
},
[440899] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[434756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 210269,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[131067] = {
["source"] = "Strongarm Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 65842,
},
[417784] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[412233] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[257326] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[377421] = {
["source"] = "Amberfur Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187455,
},
[453188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragmund",
["npcID"] = 220269,
},
[397899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[393804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirglgurgl",
["npcID"] = 188860,
},
[131390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bellandra Felstorm",
["npcID"] = 66275,
},
[444998] = {
["source"] = "Fallowbarb",
["event"] = "SPELL_CAST_START",
["npcID"] = 216078,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 187593,
},
[159035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shaadum",
["npcID"] = 78728,
},
[124378] = {
["source"] = "Den Mother Moof",
["event"] = "SPELL_CAST_START",
["npcID"] = 63518,
},
[43291] = {
["source"] = "Dragonflayer Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 24216,
},
[381519] = {
["source"] = "Wrathion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201412,
},
[113641] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[378818] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[414944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Gutter",
["npcID"] = 207454,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[80038] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonecore Magmalord",
["npcID"] = 42789,
},
[395855] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Black Gulper",
["npcID"] = 195975,
},
[381521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Downpour",
["npcID"] = 191324,
},
[187706] = {
["source"] = "Felskorn Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 96121,
},
[394466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Hail",
["npcID"] = 189039,
},
[41303] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Suffering",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23418,
},
[397904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[33624] = {
["source"] = "Undercity Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 18971,
},
[253562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[395857] = {
["source"] = "Qalashi Stonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 187600,
},
[438860] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[118434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Precursor",
["npcID"] = 58367,
},
[393810] = {
["source"] = "Shiverweb Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 186064,
},
[382179] = {
["source"] = "Arcane Manipulator Tharohn",
["event"] = "SPELL_CAST_START",
["npcID"] = 188171,
},
[166205] = {
["source"] = "Bloodmaul Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 77995,
},
[126625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Violence",
["npcID"] = 64656,
},
[142655] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71420,
},
[393812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirglgurgl",
["npcID"] = 188860,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[115363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Puckish Sprite",
["npcID"] = 56349,
},
[426576] = {
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211339,
},
[395860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiked Matriarch",
["npcID"] = 192430,
},
[120215] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Abomination of Anger",
["npcID"] = 61707,
},
[65868] = {
["encounterName"] = "Faction Champions",
["source"] = "Alyssia Moonstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 34467,
},
[388942] = {
["source"] = "Arcane Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 196671,
},
[387670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Chieftain",
["npcID"] = 187266,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[440912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Festering Sporemass",
["npcID"] = 217963,
},
[369241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Berserker",
["npcID"] = 200058,
},
[453199] = {
["source"] = "Vanishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
[421616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcoross",
["npcID"] = 208478,
},
[375385] = {
["source"] = "Primalbound Water Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 190739,
},
[76813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Oracle",
["npcID"] = 41096,
},
[453200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragmund",
["npcID"] = 220269,
},
[40536] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Akama",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 23089,
},
[81576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[257656] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[387186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 217557,
},
[147702] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[11975] = {
["source"] = "Skeletal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 10390,
},
[377435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Geomancer",
["npcID"] = 187265,
},
[51287] = {
["source"] = "Y'kish the Deceiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81266,
},
[455250] = {
["source"] = "Stumbling Rock",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[375388] = {
["source"] = "Primal Watercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190995,
},
[434773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Patron",
["npcID"] = 214668,
},
[449768] = {
["source"] = "Escaped Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 219266,
},
[455251] = {
["source"] = "Stumbling Rock",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[187194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Trapper",
["npcID"] = 91244,
},
[378420] = {
["source"] = "Lumbering Boulder",
["event"] = "SPELL_CAST_START",
["npcID"] = 203594,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77816,
},
[394817] = {
["source"] = "Windscale the Stormborn",
["event"] = "SPELL_CAST_START",
["npcID"] = 192364,
},
[253239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[194442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waterlogged Soul Guard",
["npcID"] = 99188,
},
[387677] = {
["source"] = "Deathling Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190214,
},
[285290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Airyn Swiftfeet",
["npcID"] = 144776,
},
[134470] = {
["source"] = "Bow Fly Swarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 68222,
},
[115013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Borokhula the Destroyer",
["npcID"] = 58739,
},
[126628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Violence",
["npcID"] = 64656,
},
[381535] = {
["source"] = "Sedentary Sediment",
["event"] = "SPELL_CAST_START",
["npcID"] = 194284,
},
[146757] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72958,
},
[445016] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221667,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[388316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[395872] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[451160] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[129700] = {
["isChanneled"] = true,
["source"] = "Master Kistane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65899,
},
[381537] = {
["source"] = "Icebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199279,
},
[171331] = {
["source"] = "Shadow Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 88039,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[107175] = {
["isChanneled"] = true,
["source"] = "Sodden Hozen Brawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56867,
},
[115878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silkwood Stalker",
["npcID"] = 56070,
},
[257337] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 129214,
},
[114183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[126117] = {
["source"] = "Slitherscale Eggdrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 63532,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[415556] = {
["source"] = "Dr. Boom",
["event"] = "SPELL_CAST_START",
["npcID"] = 215146,
},
[453212] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[387683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Arlin",
["npcID"] = 190719,
},
[438877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakt",
["npcID"] = 218324,
},
[138569] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69699,
},
[459355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[445021] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Summoned Acolyte",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 221863,
},
[455260] = {
["source"] = "Deathspore Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[359016] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[114855] = {
["source"] = "Scarlet Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 58783,
},
[195577] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Helarjar Guardian",
["npcID"] = 115753,
},
[121871] = {
["source"] = "Ookie",
["event"] = "SPELL_CAST_START",
["npcID"] = 62468,
},
[79886] = {
["source"] = "Mangletooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 37940,
},
[139594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcweaver Jor'guva",
["npcID"] = 69665,
},
[395878] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[426596] = {
["source"] = "Coven Diviner",
["event"] = "SPELL_CAST_START",
["npcID"] = 131819,
},
[393830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gragza the Dragon-Breaker",
["npcID"] = 191507,
},
[86699] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Golgarok",
["event"] = "SPELL_CAST_START",
["npcID"] = 50059,
},
[451793] = {
["source"] = "Al'haggro",
["event"] = "SPELL_CAST_START",
["npcID"] = 216560,
},
[40872] = {
["source"] = "Dragonmaw Sky Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[434786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[371306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[140619] = {
["source"] = "Cavern Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 70589,
},
[164168] = {
["source"] = "Grimrail Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81212,
},
[412262] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[275063] = {
["source"] = "Vugthuth",
["event"] = "SPELL_CAST_START",
["npcID"] = 128584,
},
[142667] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71420,
},
[126631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Anger",
["npcID"] = 64684,
},
[146763] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72353,
},
[101546] = {
["isChanneled"] = true,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[449123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[79176] = {
["isChanneled"] = true,
["source"] = "Azure Prickly Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60437,
},
[140620] = {
["source"] = "Fungal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70153,
},
[447076] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[142668] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71156,
},
[393835] = {
["source"] = "Shiverweb Cloaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195397,
},
[397931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Doubt",
["npcID"] = 57109,
},
[463459] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131527,
},
[336499] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[165193] = {
["source"] = "Stele",
["event"] = "SPELL_CAST_START",
["npcID"] = 72627,
},
[124072] = {
["source"] = "Set'thik Gustwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 63592,
},
[61909] = {
["encounterName"] = "Hodir",
["source"] = "Sissy Flamecuffs",
["encounterID"] = 1135,
["event"] = "SPELL_CAST_START",
["npcID"] = 33327,
},
[37979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominance Knight",
["npcID"] = 67805,
},
[384648] = {
["source"] = "Withering Writhebark",
["event"] = "SPELL_CAST_START",
["npcID"] = 197366,
},
[384961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Ranger",
["npcID"] = 186208,
},
[395541] = {
["source"] = "Emblazion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193650,
},
[434793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trilling Attendant",
["npcID"] = 216293,
},
[371313] = {
["source"] = "Excited Ember",
["event"] = "SPELL_CAST_START",
["npcID"] = 203330,
},
[64717] = {
["isChanneled"] = true,
["source"] = "Arachnopod Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 34183,
},
[200007] = {
["source"] = "Bastillax",
["event"] = "SPELL_CAST_START",
["npcID"] = 96783,
},
[144718] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Crawler Mine",
["encounterID"] = 1600,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72050,
},
[121513] = {
["isChanneled"] = true,
["source"] = "The Ook of Dook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60188,
},
[130728] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rankbite Ancient",
["npcID"] = 66462,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131527,
},
[120946] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[130488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Lieutenant",
["npcID"] = 66287,
},
[455273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepsludger",
["npcID"] = 216536,
},
[391793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Deluge",
["npcID"] = 197220,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[131733] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hozen Diver",
["npcID"] = 66148,
},
[455274] = {
["source"] = "Rumblestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[126633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Hatred",
["npcID"] = 64744,
},
[131409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twinspire Demolitionist",
["npcID"] = 66273,
},
[386992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 192636,
},
[455275] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[258674] = {
["source"] = "Off-Duty Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 130436,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2677,
},
[146768] = {
["encounterName"] = "Galakras",
["source"] = "Vereesa Windrunner",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 73910,
},
[406737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[399987] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[114859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[445038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[455277] = {
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[162127] = {
["source"] = "Grimfrost Drudge",
["event"] = "SPELL_CAST_START",
["npcID"] = 72955,
},
[435405] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[62809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battle-Priest Eliza",
["npcID"] = 32948,
},
[117931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arconiss",
["npcID"] = 60824,
},
[449135] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[140626] = {
["source"] = "Fungal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70153,
},
[442994] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[449136] = {
["isChanneled"] = true,
["source"] = "Glumtooth Bug-beater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222176,
},
[434802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[373972] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[455287] = {
["encounterName"] = "Rasha'nan",
["source"] = "Infested Spawn",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 219739,
},
[131414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twinspire Demolitionist",
["npcID"] = 66273,
},
[434803] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215657,
},
[420469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Austin Huxworth",
["npcID"] = 209065,
},
[455281] = {
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[75441] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Sadist",
["npcID"] = 40447,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1040,
},
[135508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Rootshaper",
["npcID"] = 68821,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["encounterID"] = 2669,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204449,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[375420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Chomper",
["npcID"] = 190886,
},
[262794] = {
["source"] = "Venture Co. Mastermind",
["event"] = "SPELL_CAST_START",
["npcID"] = 133430,
},
[140628] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[140630] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[275085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grizzlefur Mauler",
["npcID"] = 140059,
},
[442997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215597,
},
[395899] = {
["source"] = "Primalist Chillblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 199124,
},
[435403] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[375422] = {
["source"] = "Im'bunata",
["event"] = "SPELL_CAST_START",
["npcID"] = 196199,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[140629] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[99503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Wielder",
["npcID"] = 53575,
},
[100015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Twisted Spellweaver",
["npcID"] = 152135,
},
[201038] = {
["source"] = "Kethrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 96997,
},
[412283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadful Defender",
["npcID"] = 203842,
},
[426619] = {
["source"] = "Torchsnarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 212993,
},
[146773] = {
["encounterName"] = "Galakras",
["source"] = "Master Cannoneer Dagryn",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72356,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2672,
},
[412284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[183633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Trapper",
["npcID"] = 102232,
},
[443001] = {
["source"] = "Boltweaver Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223362,
},
[420476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[275086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smashmaw the Man-Eater",
["npcID"] = 140063,
},
[179538] = {
["source"] = "Hatecoil Spitespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 89025,
},
[41053] = {
["source"] = "Shadowmoon Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 22880,
},
[157013] = {
["source"] = "Thunderlord Eagle-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 78962,
},
[381570] = {
["source"] = "Sedentary Sediment",
["event"] = "SPELL_CAST_START",
["npcID"] = 194284,
},
[326281] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[443003] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 214506,
},
[453242] = {
["source"] = "Trungal",
["event"] = "SPELL_CAST_START",
["npcID"] = 220268,
},
[260425] = {
["source"] = "Muddy Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 130757,
},
[406141] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Loot Specialist",
["npcID"] = 203353,
},
[118958] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Harthak Stormcaller",
["npcID"] = 61242,
},
[445052] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[159062] = {
["isChanneled"] = true,
["source"] = "Kigli'ak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79727,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[122542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hawkmaster Nurong",
["npcID"] = 62574,
},
[145752] = {
["source"] = "Spike Mine",
["event"] = "SPELL_CAST_START",
["npcID"] = 72656,
},
[146776] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Proto-Drake",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72943,
},
[262804] = {
["source"] = "Venture Co. Mastermind",
["event"] = "SPELL_CAST_START",
["npcID"] = 133430,
},
[395908] = {
["source"] = "Primal Icebulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 192767,
},
[88080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whipping Wind",
["npcID"] = 47238,
},
[334476] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[381575] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[185684] = {
["source"] = "7th Legion Paratrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 94812,
},
[275092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grizzlefur Cub",
["npcID"] = 132849,
},
[204114] = {
["source"] = "Felsoul Fleshcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 95329,
},
[196947] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["npcID"] = 96759,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1824,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1423,
},
[120495] = {
["source"] = "Agitated Seedstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61302,
},
[201033] = {
["source"] = "Kethrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 96997,
},
[129643] = {
["source"] = "Corporal Jackson Silver",
["event"] = "SPELL_CAST_START",
["npcID"] = 65881,
},
[118081] = {
["source"] = "Curious Water Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 57673,
},
[32863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[393864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trap-Layer Kerwal",
["npcID"] = 186516,
},
[455301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Brute",
["npcID"] = 222986,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[377483] = {
["source"] = "Deepflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221572,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[381582] = {
["source"] = "Sundered Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 188173,
},
[213620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fal'dorei Web Walker",
["npcID"] = 108033,
},
[15577] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hedric Evencane",
["npcID"] = 58840,
},
[143709] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71154,
},
[146781] = {
["encounterName"] = "Galakras",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72302,
},
[394443] = {
["source"] = "Primordial Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 190579,
},
[135517] = {
["source"] = "Shieldwall Vindicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 67296,
},
[129711] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60793,
},
[164187] = {
["source"] = "Grimrail Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81407,
},
[457348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[377486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 184335,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["npcID"] = 100485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[275099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smashmaw the Man-Eater",
["npcID"] = 140063,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[434824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixin",
["npcID"] = 217531,
},
[420490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[373392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[31664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Gargoyle",
["npcID"] = 27691,
},
[147805] = {
["source"] = "Damp Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 72771,
},
[455304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Brute",
["npcID"] = 222986,
},
[131424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalgan",
["npcID"] = 66274,
},
[141663] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[391825] = {
["source"] = "Primal Watercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190995,
},
[8858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Schnottz Rifleman",
["npcID"] = 47067,
},
[381585] = {
["source"] = "Sundered Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 188173,
},
[146782] = {
["encounterName"] = "Galakras",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72302,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[387729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Infused Rock Snail",
["npcID"] = 203239,
},
[373395] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[334488] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[393876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Isaqa",
["npcID"] = 209919,
},
[453258] = {
["source"] = "Sikran",
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[82615] = {
["isChanneled"] = true,
["source"] = "Zandalari Jaguar Warrior",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69171,
},
[432781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Radiating Voidstone",
["npcID"] = 212739,
},
[434829] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[165213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Cultivator",
["npcID"] = 81985,
},
[455307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Brute",
["npcID"] = 222986,
},
[381593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebonstone Golem",
["npcID"] = 184300,
},
[143712] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71697,
},
[387732] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185168,
},
[122034] = {
["source"] = "Dread Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 62307,
},
[375446] = {
["source"] = "Elusive Elder Armoredon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194105,
},
[418449] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[395924] = {
["source"] = "Maeleera",
["event"] = "SPELL_CAST_START",
["npcID"] = 193677,
},
[122547] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[83639] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Captain Dreadbeard",
["npcID"] = 38749,
},
[160095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Gundriver",
["npcID"] = 78193,
},
[41382] = {
["isChanneled"] = true,
["source"] = "Illidari Battle-mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23402,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29573,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[118963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintrok Skulker",
["npcID"] = 61240,
},
[82616] = {
["isChanneled"] = true,
["source"] = "Zandalari Jaguar Warrior",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69171,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[457359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[426643] = {
["source"] = "The Abominable Greench",
["event"] = "SPELL_CAST_START",
["npcID"] = 54499,
},
[147811] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73483,
},
[275110] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[146786] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["npcID"] = 73909,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[164192] = {
["source"] = "Grimrail Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 81236,
},
[420501] = {
["source"] = "Wildfire Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 209200,
},
[455313] = {
["source"] = "Deathspore Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 221424,
},
[391833] = {
["source"] = "Sherath",
["event"] = "SPELL_CAST_START",
["npcID"] = 188710,
},
[443027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[136548] = {
["encounterName"] = "Lei Shen",
["source"] = "Ball Lightning",
["npcID"] = 69232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[275112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[131429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalgan",
["npcID"] = 66274,
},
[377500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 184335,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[40102] = {
["source"] = "Aqueous Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 22883,
},
[445077] = {
["source"] = "Kobyss Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 219715,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[166519] = {
["source"] = "Lava Plume",
["event"] = "SPELL_CAST_START",
["npcID"] = 82701,
},
[424600] = {
["source"] = "Fungal Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211063,
},
[377502] = {
["source"] = "Enthralled Shellcracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195918,
},
[421059] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[223579] = {
["source"] = "Or'ell",
["event"] = "SPELL_CAST_START",
["npcID"] = 102495,
},
[391837] = {
["source"] = "Emerald Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 191252,
},
[31281] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 43123,
},
[369865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Huntmaster",
["npcID"] = 185353,
},
[453271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggregation of Horrors",
["npcID"] = 220999,
},
[110262] = {
["source"] = "Eddy",
["event"] = "SPELL_CAST_START",
["npcID"] = 58014,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[395934] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[451224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Warlock",
["npcID"] = 224271,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[12058] = {
["source"] = "Iron Dwarf Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 29979,
},
[451222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hollows Resident",
["npcID"] = 219983,
},
[271579] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Venture Co. Earthshaper",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 130661,
},
[3396] = {
["source"] = "Battle Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 48268,
},
[33634] = {
["source"] = "Bloodmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 19258,
},
[420509] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lethka",
["npcID"] = 210503,
},
[124085] = {
["source"] = "Set'thik Zephyrian",
["event"] = "SPELL_CAST_START",
["npcID"] = 63593,
},
[375459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Thunder Lizard",
["npcID"] = 193859,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 162692,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[185698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thane Wildsky",
["npcID"] = 91571,
},
[147815] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73483,
},
[383651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["npcID"] = 163157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2388,
},
[86713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boldrich Stonerender",
["npcID"] = 42923,
},
[65033] = {
["encounterName"] = "Ragnaros",
["source"] = "Vanquished Constrictor Tentacle",
["npcID"] = 34266,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[17843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Green Priest",
["npcID"] = 32343,
},
[254959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Colossus",
["npcID"] = 122984,
},
[387748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Zambul",
["npcID"] = 191145,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[395816] = {
["source"] = "Qalashi Wallcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187813,
},
[422541] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[266153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamescale Strider",
["npcID"] = 132742,
},
[118865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Destroyer",
["npcID"] = 62619,
},
[459422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[459421] = {
["source"] = "Sir Finley Mrrgglton",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[395941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Hungry Riverbeast",
["npcID"] = 195969,
},
[145769] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["encounterID"] = 1624,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72276,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[377512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Mollusc",
["npcID"] = 200806,
},
[268415] = {
["isChanneled"] = true,
["source"] = "Azerite Extractor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 136643,
},
[430754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[326319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[6358] = {
["source"] = "Carrnys",
["event"] = "SPELL_CAST_START",
["npcID"] = 1863,
},
[338606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Separation Assistant",
["npcID"] = 167731,
},
[388290] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[106681] = {
["source"] = "Fragrant Lotus",
["event"] = "SPELL_CAST_START",
["npcID"] = 56472,
},
[147818] = {
["source"] = "Crimsonscale Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 72876,
},
[384194] = {
["source"] = "Primalist Cinderweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190207,
},
[406183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krono Sandtongue",
["npcID"] = 205622,
},
[142699] = {
["source"] = "Horde Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 71445,
},
[301748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulmath",
["npcID"] = 152697,
},
[185702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beagan",
["npcID"] = 91954,
},
[447141] = {
["source"] = "Repurposed Loaderbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 222923,
},
[424614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Stabber",
["npcID"] = 207450,
},
[139895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Fed Construct",
["npcID"] = 70308,
},
[395946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 197119,
},
[111801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Guard",
["npcID"] = 58822,
},
[424615] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[426663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Snap Dragon",
["npcID"] = 212681,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213216,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[395947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 197124,
},
[114873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[412330] = {
["source"] = "Malrogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 202606,
},
[15578] = {
["isChanneled"] = true,
["source"] = "Blood Guard Gro'tash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67927,
},
[440999] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[369328] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Runic Protector",
["npcID"] = 184107,
},
[117945] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60793,
},
[68799] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[447143] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219856,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[86717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zoltrik Drakebane",
["npcID"] = 44135,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["npcID"] = 192464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2611,
},
[191848] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["npcID"] = 91808,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1813,
},
[418476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidan Stormrage",
["npcID"] = 205306,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[148085] = {
["isChanneled"] = true,
["source"] = "Blackfuse Engineer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73095,
},
[195944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skrog Wavecrasher",
["npcID"] = 91796,
},
[451241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[395952] = {
["source"] = "Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197125,
},
[447146] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[424621] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Sergeant Shaynemail",
["npcID"] = 211291,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[418478] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[120706] = {
["source"] = "Dragon Launcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 62024,
},
[63138] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["encounterID"] = 1406,
["event"] = "SPELL_CAST_START",
["npcID"] = 56636,
},
[443052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191222,
},
[455339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prehistoric Diemetradon",
["npcID"] = 223434,
},
[400050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Hunter",
["npcID"] = 221198,
},
[393907] = {
["source"] = "Discordant Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 189149,
},
[453292] = {
["source"] = "Trungal",
["event"] = "SPELL_CAST_START",
["npcID"] = 220268,
},
[455340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Weaver",
["npcID"] = 222985,
},
[138609] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69699,
},
[369335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Protector",
["npcID"] = 184107,
},
[371383] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[436910] = {
["source"] = "Woven Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 218317,
},
[400052] = {
["source"] = "Swooping Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 199809,
},
[138607] = {
["source"] = "Amani'shi Flame Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 69909,
},
[453294] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[396476] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[182146] = {
["isChanneled"] = true,
["source"] = "Fist of the Deceiver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95429,
},
[395957] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[148849] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["npcID"] = 73909,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[203373] = {
["source"] = "Felsoul Tormentor",
["event"] = "SPELL_CAST_START",
["npcID"] = 109697,
},
[277189] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Voidmaster Evenshade",
["event"] = "SPELL_CAST_START",
["npcID"] = 147998,
},
[396475] = {
["source"] = "Apex Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 191705,
},
[461487] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[394427] = {
["isChanneled"] = true,
["source"] = "Flamescale Tarasek",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198503,
},
[400055] = {
["source"] = "Scavenging Slicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203384,
},
[147826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huolon",
["npcID"] = 73167,
},
[140659] = {
["source"] = "Zandalari Stoneshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 69865,
},
[455345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Weaver",
["npcID"] = 222985,
},
[114182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[426677] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[57825] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 70979,
},
[137588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Tak'u",
["npcID"] = 69336,
},
[177460] = {
["source"] = "Corrupted Wind Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80381,
},
[377532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Crasher",
["npcID"] = 191057,
},
[369853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Rock-Thrower",
["npcID"] = 184019,
},
[138868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan Bu",
["npcID"] = 69534,
},
[52067] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystalline Frayer",
["npcID"] = 26793,
},
[126139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Harbinger",
["npcID"] = 66426,
},
[121532] = {
["source"] = "Dread Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 62307,
},
[114849] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sha of Despair",
["npcID"] = 59651,
},
[389245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Slayer",
["npcID"] = 201831,
},
[147828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huolon",
["npcID"] = 73167,
},
[157043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Ritualist",
["npcID"] = 77130,
},
[414394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nixke Voltscroll",
["npcID"] = 200965,
},
[378886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turi Flickerflame",
["npcID"] = 199740,
},
[182894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gangamesh",
["npcID"] = 89653,
},
[123707] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["encounterID"] = 1501,
["event"] = "SPELL_CAST_START",
["npcID"] = 62837,
},
[130900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[457398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[324293] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[82625] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Explorer's League Digger",
["npcID"] = 38998,
},
[455351] = {
["source"] = "Kx",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[79554] = {
["source"] = "Kor'kron Provisioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 72411,
},
[320200] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[395967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Hyena",
["npcID"] = 197123,
},
[391871] = {
["source"] = "Duskpaw Tendontearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197820,
},
[400063] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[426684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[125623] = {
["source"] = "Salyin Warscout",
["event"] = "SPELL_CAST_START",
["npcID"] = 50783,
},
[133496] = {
["source"] = "Shieldwall Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67297,
},
[459449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[50276] = {
["source"] = "Ilsa Direbrew",
["event"] = "SPELL_CAST_START",
["npcID"] = 26764,
},
[455354] = {
["source"] = "Searing Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 223528,
},
[153974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Iron Leadbelcher",
["npcID"] = 76157,
},
[301773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulmath",
["npcID"] = 152697,
},
[443068] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[209263] = {
["source"] = "Ravathes",
["event"] = "SPELL_CAST_START",
["npcID"] = 97942,
},
[438973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pit Lord",
["npcID"] = 228574,
},
[301774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moon Priestess Liara",
["npcID"] = 152729,
},
[135545] = {
["isChanneled"] = true,
["source"] = "Kor'kron Gunship",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67275,
},
[185715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guthrie",
["npcID"] = 91956,
},
[406210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[451261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[110781] = {
["source"] = "Hemet Nesingwary",
["event"] = "SPELL_CAST_START",
["npcID"] = 58462,
},
[395695] = {
["source"] = "Sleeping Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 196073,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[46181] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Apoko",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24553,
},
[338636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Separation Assistant",
["npcID"] = 167731,
},
[438976] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["npcID"] = 45379,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1054,
},
[62625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulduar Colossus",
["npcID"] = 33237,
},
[387783] = {
["source"] = "Windseeker Avash",
["event"] = "SPELL_CAST_START",
["npcID"] = 192045,
},
[262152] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Veteran Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 147189,
},
[373943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[320208] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[397014] = {
["source"] = "Qalashi Emissary",
["event"] = "SPELL_CAST_START",
["npcID"] = 197146,
},
[145786] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71397,
},
[119487] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[449709] = {
["source"] = "Gramwharl",
["event"] = "SPELL_CAST_START",
["npcID"] = 220308,
},
[157049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[406215] = {
["source"] = "Remembered Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221883,
},
[218019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runebound Stonewarden",
["npcID"] = 93344,
},
[15664] = {
["source"] = "Flamekin Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 9776,
},
[445123] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[117952] = {
["isChanneled"] = true,
["source"] = "Aiws",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[424646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flametouched Enforcer",
["npcID"] = 210150,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["npcID"] = 75839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1686,
},
[124048] = {
["source"] = "Osul Sharphorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 60647,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[120512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Veteran Archer",
["npcID"] = 61886,
},
[451268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[445125] = {
["source"] = "Cindersting",
["event"] = "SPELL_CAST_START",
["npcID"] = 220238,
},
[455364] = {
["source"] = "Kx",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[383693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Beastmaster",
["npcID"] = 192794,
},
[369359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Proto-Drake",
["npcID"] = 190032,
},
[157051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'tash the Destructor",
["npcID"] = 77889,
},
[332500] = {
["source"] = "Fathomless Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 209580,
},
[181536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sea Skrog",
["npcID"] = 88094,
},
[171385] = {
["source"] = "Unstable Earth Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80382,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[107044] = {
["isChanneled"] = true,
["source"] = "Gripping Hatred",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56865,
},
[210535] = {
["source"] = "Garzareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 97822,
},
[86725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defaced Earthrager",
["npcID"] = 44076,
},
[120001] = {
["encounterName"] = "Vizier Jin'bak",
["source"] = "Vizier Jin'bak",
["encounterID"] = 1465,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61567,
},
[72014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthcaller Torunscar",
["npcID"] = 42730,
},
[135551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skyglaive Sentinel",
["npcID"] = 68470,
},
[134768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disha Fearwarden",
["npcID"] = 68319,
},
[381649] = {
["isChanneled"] = true,
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191129,
},
[66880] = {
["encounterName"] = "Northrend Beasts",
["source"] = "Acidmaw",
["encounterID"] = 1088,
["event"] = "SPELL_CAST_START",
["npcID"] = 35144,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["encounterID"] = 2639,
["event"] = "SPELL_CAST_START",
["npcID"] = 190496,
},
[115394] = {
["source"] = "Spirit Darter",
["event"] = "SPELL_CAST_START",
["npcID"] = 59788,
},
[46036] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[445130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindersting",
["npcID"] = 220238,
},
[393937] = {
["source"] = "Discordant Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 189149,
},
[422606] = {
["source"] = "Volgoth The Flamebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209129,
},
[117954] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[146815] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Unstable Spark",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73104,
},
[369365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 184132,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[134767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disha Fearwarden",
["npcID"] = 68319,
},
[451276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[395987] = {
["source"] = "Jumping Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 199182,
},
[22272] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Theramore Arcanist",
["npcID"] = 59596,
},
[86845] = {
["isChanneled"] = true,
["source"] = "High Priest Sekhemet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47730,
},
[451277] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217489,
},
[140673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rocky Horror",
["npcID"] = 70430,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[83877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Pathfinder",
["npcID"] = 44932,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[138862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan Bu",
["npcID"] = 69534,
},
[373936] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[171390] = {
["source"] = "Volatile Fire Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80380,
},
[214392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fjara Rockjaw",
["npcID"] = 109867,
},
[338653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stitching Assistant",
["npcID"] = 173044,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[451280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[395991] = {
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191129,
},
[170367] = {
["source"] = "Shadow Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 77973,
},
[391896] = {
["source"] = "Ruby Lifetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 196647,
},
[143746] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Despair",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71474,
},
[91335] = {
["source"] = "Zandalari Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 61842,
},
[406231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Wrath",
["npcID"] = 201758,
},
[115761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tian Pupil",
["npcID"] = 54944,
},
[431333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[322274] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Zolramus Siphoner",
["npcID"] = 164815,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[430805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[196198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oktel Dragonblood",
["npcID"] = 92920,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[86728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Soulreaper",
["npcID"] = 42916,
},
[324323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[199034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Aspirant",
["npcID"] = 101637,
},
[435366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[379033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffside Bakar",
["npcID"] = 194786,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[140676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rocky Horror",
["npcID"] = 70430,
},
[385757] = {
["source"] = "Mender Eskros",
["event"] = "SPELL_CAST_START",
["npcID"] = 195303,
},
[140677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rocky Horror",
["npcID"] = 70430,
},
[412378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[142725] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[455380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Railbot",
["npcID"] = 218251,
},
[142726] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[381663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[171394] = {
["source"] = "Tumultuous Water Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80379,
},
[21331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprot Tangler",
["npcID"] = 13142,
},
[428762] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Twilight Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 39437,
},
[79050] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1057,
},
[87753] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Titanic Guardian",
["npcID"] = 47032,
},
[459479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Onyxia",
["npcID"] = 221585,
},
[144774] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["encounterID"] = 1604,
["event"] = "SPELL_CAST_START",
["npcID"] = 71734,
},
[455384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lasher",
["npcID"] = 223430,
},
[196870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[451288] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221667,
},
[428765] = {
["source"] = "Tindral Sageswift",
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[430812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[142727] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[17207] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pandriarch Bramblestaff",
["npcID"] = 56209,
},
[396001] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[126149] = {
["source"] = "Final Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57330,
},
[138632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavemaster Shiaxu",
["npcID"] = 69923,
},
[41378] = {
["source"] = "Priestess of Delight",
["event"] = "SPELL_CAST_START",
["npcID"] = 22964,
},
[418528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidan Stormrage",
["npcID"] = 205306,
},
[373477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Shoresnapper",
["npcID"] = 190193,
},
[142728] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[35946] = {
["source"] = "A.C.E. Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 69009,
},
[136585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Beastlord",
["npcID"] = 71298,
},
[78828] = {
["isChanneled"] = true,
["source"] = "Mankrik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 37847,
},
[449245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[195172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[457434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riled Dirtdiver",
["npcID"] = 225905,
},
[390982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 197129,
},
[449246] = {
["source"] = "General Emmerich",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
[396005] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[131091] = {
["source"] = "Skyfire Marine",
["event"] = "SPELL_CAST_START",
["npcID"] = 92950,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[451295] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hollows Resident",
["npcID"] = 219983,
},
[140682] = {
["source"] = "Mist Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 70594,
},
[182661] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Savage Cursespitter",
["npcID"] = 147055,
},
[120519] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[222499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Cursewalker",
["npcID"] = 89759,
},
[136587] = {
["encounterName"] = "Horridon",
["source"] = "Gurubashi Venom Priest",
["npcID"] = 69164,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[62823] = {
["encounterName"] = "Hodir",
["source"] = "Missy Flamecuffs",
["encounterID"] = 1135,
["event"] = "SPELL_CAST_START",
["npcID"] = 32893,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[453790] = {
["source"] = "Conqueror Or'sosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 222723,
},
[66254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malaka'jin Witch Doctor",
["npcID"] = 34807,
},
[373483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soggymaw Wavebringer",
["npcID"] = 187263,
},
[391913] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[426725] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[218498] = {
["source"] = "Azurewing Scalewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 89940,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[449251] = {
["source"] = "Nerubian Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[427169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[140684] = {
["isChanneled"] = true,
["source"] = "Mist Lurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70594,
},
[256382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowlands Doe",
["npcID"] = 128385,
},
[391915] = {
["source"] = "Cragsworn Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195838,
},
[457442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of Azshara",
["npcID"] = 222621,
},
[457441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["event"] = "SPELL_CAST_START",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[44961] = {
["source"] = "Cursed Sea Dog",
["event"] = "SPELL_CAST_START",
["npcID"] = 24911,
},
[453345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 211341,
},
[258128] = {
["source"] = "Irontide Thug",
["event"] = "SPELL_CAST_START",
["npcID"] = 130025,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[443111] = {
["source"] = "Glooming Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 216867,
},
[205093] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infiltrator Assassin",
["npcID"] = 102395,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[213846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brawlgoth",
["npcID"] = 107127,
},
[114864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[78542] = {
["source"] = "Fizzy Yellow Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 58017,
},
[283388] = {
["event"] = "SPELL_CAST_START",
["source"] = "G.M.O.D",
["npcID"] = 148640,
},
[457447] = {
["source"] = "Ixlorb the Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 218426,
},
[426731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Oracle",
["npcID"] = 41096,
},
[114890] = {
["source"] = "Bataari Yaungol",
["event"] = "SPELL_CAST_START",
["npcID"] = 58961,
},
[381681] = {
["source"] = "Rustpine Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187396,
},
[457448] = {
["source"] = "Kobold Thwacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203877,
},
[459496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Lich King",
["npcID"] = 224157,
},
[404207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[305913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grunk",
["npcID"] = 153581,
},
[16568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Horde Priest",
["npcID"] = 68333,
},
[143759] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["encounterID"] = 1593,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71154,
},
[387826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Beastcaller",
["npcID"] = 195878,
},
[381683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[85710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[426734] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[86734] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Rockslice Flayer",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42606,
},
[389875] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[439012] = {
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_START",
["npcID"] = 219006,
},
[396019] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[263345] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Heavy Cannon",
["encounterID"] = 2104,
["event"] = "SPELL_CAST_START",
["npcID"] = 134025,
},
[457881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zekvir",
["npcID"] = 227471,
},
[369399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Weaver",
["npcID"] = 186420,
},
[396020] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[199050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Shieldmaiden",
["npcID"] = 95832,
},
[191883] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magnar Icebreaker",
["npcID"] = 96034,
},
[369400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 184132,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["event"] = "SPELL_CAST_START",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
},
[417640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Touched Shu'halo",
["npcID"] = 206182,
},
[457880] = {
["source"] = "Kobold Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
[406686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Magmashaper",
["npcID"] = 202257,
},
[47723] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[453784] = {
["source"] = "Conqueror Or'sosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 222723,
},
[40097] = {
["source"] = "Coilskar Soothsayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 22876,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[390788] = {
["source"] = "Chief Grrlgllmesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 186678,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[412046] = {
["source"] = "Monstrous Magmaclaw Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 204214,
},
[124107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ban Bearheart",
["npcID"] = 61819,
},
[375547] = {
["source"] = "Molten Eruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 191286,
},
[426741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[404216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[145552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Coin Counter",
["npcID"] = 202398,
},
[457458] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["npcID"] = 61243,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2129,
},
[412408] = {
["source"] = "Field Despair Bot K156",
["event"] = "SPELL_CAST_START",
["npcID"] = 205612,
},
[463602] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2393,
},
[120524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Veteran Archer",
["npcID"] = 61886,
},
[40936] = {
["isChanneled"] = true,
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[77626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Idra'kess Enchantress",
["npcID"] = 41467,
},
[145812] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71405,
},
[457460] = {
["source"] = "Ixlorb the Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 218426,
},
[126667] = {
["source"] = "Brewmaster Bo",
["event"] = "SPELL_CAST_START",
["npcID"] = 62467,
},
[445174] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Forgotten Harbinger",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 221945,
},
[439031] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[213851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brawlgoth",
["npcID"] = 107127,
},
[143765] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71156,
},
[404220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[459925] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[20792] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Arcanist Savor",
["npcID"] = 67662,
},
[369409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Custodian",
["npcID"] = 184130,
},
[157797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Arbiter",
["npcID"] = 77080,
},
[165474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azurewing Scalewarden",
["npcID"] = 91643,
},
[87761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[369823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Basilisk",
["npcID"] = 184023,
},
[111772] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[31287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smokemaster Snarl",
["npcID"] = 81749,
},
[80549] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Raging Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 39939,
},
[369411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Seeker",
["npcID"] = 184301,
},
[459923] = {
["source"] = "Exalted Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[175314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vindicator Maraad",
["npcID"] = 78554,
},
[126151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Final Doubt",
["npcID"] = 57330,
},
[396018] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Crybaby Hozen",
["npcID"] = 59552,
},
[378012] = {
["source"] = "Lavacaller Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 186823,
},
[414463] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Tangler",
["npcID"] = 205824,
},
[253526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[147863] = {
["source"] = "Jademist Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72767,
},
[387843] = {
["source"] = "Spectral Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 196202,
},
[439037] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ravenous Spawn",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 216205,
},
[87762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[463609] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 218429,
},
[188818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Subduer",
["npcID"] = 91759,
},
[427157] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208747,
},
[449277] = {
["source"] = "General Emmerich",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[142947] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71395,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[414466] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Gutcutter",
["npcID"] = 204515,
},
[301840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulmath",
["npcID"] = 152697,
},
[424704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Gutter",
["npcID"] = 207454,
},
[175847] = {
["source"] = "Y'kish the Deceiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81266,
},
[68821] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 36565,
},
[155961] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_START",
["npcID"] = 75864,
},
[377608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fimbol",
["npcID"] = 200739,
},
[126937] = {
["source"] = "Sra'thik Ambercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 64917,
},
[231823] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Exploited Crown Intern",
["npcID"] = 114279,
},
[385108] = {
["source"] = "Rampaging Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 209630,
},
[377609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Poacher",
["npcID"] = 200173,
},
[417782] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[142745] = {
["source"] = "Flame Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 70702,
},
[391944] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[443138] = {
["source"] = "Royal Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 221035,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[436991] = {
["source"] = "Sureki Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 224066,
},
[200084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Retainer",
["npcID"] = 98366,
},
[418566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time Slime Prime",
["npcID"] = 202453,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213806,
},
[138652] = {
["source"] = "Amani'shi Flame Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 69909,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[148888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shredder",
["npcID"] = 73767,
},
[199061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enslaved Shieldmaiden",
["npcID"] = 102104,
},
[194966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[131486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Succubus",
["npcID"] = 66901,
},
[324372] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[130767] = {
["source"] = "Elder Sage Snow-Ting",
["event"] = "SPELL_CAST_START",
["npcID"] = 57323,
},
[369423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Crawler",
["npcID"] = 184303,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 188252,
},
[449285] = {
["source"] = "Shyalude",
["event"] = "SPELL_CAST_START",
["npcID"] = 223834,
},
[83669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquementas the Unchained",
["npcID"] = 44761,
},
[272659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scaled Krolusk Rider",
["npcID"] = 134629,
},
[445191] = {
["source"] = "Spitfire Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[397109] = {
["source"] = "Stormbound Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 187843,
},
[41245] = {
["source"] = "Suffering Soul Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 23399,
},
[393998] = {
["source"] = "Discordant Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 189149,
},
[64528] = {
["encounterName"] = "Hodir",
["source"] = "Sissy Flamecuffs",
["encounterID"] = 1135,
["event"] = "SPELL_CAST_START",
["npcID"] = 33327,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[441097] = {
["source"] = "Regurgitating Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 220138,
},
[411503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[186446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Jailer",
["npcID"] = 93005,
},
[41071] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[131488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fixxul Lonelyheart",
["npcID"] = 66281,
},
[90325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naga Brute",
["npcID"] = 91459,
},
[135584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skyglaive Archer",
["npcID"] = 68471,
},
[256401] = {
["source"] = "Bilefang Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 132317,
},
[400144] = {
["source"] = "Vraken the Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200584,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[286840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalized Azerite",
["npcID"] = 152835,
},
[11985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Hatchling",
["npcID"] = 4323,
},
[187656] = {
["source"] = "Felskorn Warmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 96135,
},
[60781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Depths Acolyte",
["npcID"] = 30205,
},
[273185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[130769] = {
["source"] = "Stout Shaghorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 59139,
},
[269090] = {
["source"] = "Ordnance Specialist",
["event"] = "SPELL_CAST_START",
["npcID"] = 137029,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[144800] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["encounterID"] = 1604,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71734,
},
[373526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dizzying Flutterer",
["npcID"] = 211020,
},
[457484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 224798,
},
[426768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[388911] = {
["source"] = "Spellbound Battleaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 196577,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[67289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 64013,
},
[418578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidan Stormrage",
["npcID"] = 205306,
},
[391958] = {
["source"] = "Cloying Gale",
["event"] = "SPELL_CAST_START",
["npcID"] = 198126,
},
[115506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Flamethrower",
["npcID"] = 59705,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[453392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[65133] = {
["encounterName"] = "Hodir",
["source"] = "Elementalist Mahfuun",
["encounterID"] = 1135,
["event"] = "SPELL_CAST_START",
["npcID"] = 33328,
},
[41072] = {
["source"] = "Shadowmoon Blood Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 22945,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[426771] = {
["source"] = "Void Bound Despoiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[113364] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[203163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[130770] = {
["source"] = "Jade",
["event"] = "SPELL_CAST_START",
["npcID"] = 62653,
},
[139683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcweaver Jor'guva",
["npcID"] = 69665,
},
[198442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Ancestor",
["npcID"] = 93094,
},
[50715] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ring-Lord Sorceress",
["npcID"] = 27639,
},
[449298] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[180395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Soul Lasher",
["npcID"] = 107535,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[80835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Crystal-walker",
["npcID"] = 43373,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[324387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[455443] = {
["source"] = "Waxx",
["event"] = "SPELL_CAST_START",
["npcID"] = 226267,
},
[87768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[406282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Buzzer",
["npcID"] = 215021,
},
[72922] = {
["source"] = "Tolliver Houndstooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 38804,
},
[277290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proudmoore Infantry",
["npcID"] = 147891,
},
[82137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
},
[126256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ranger Orestes",
["npcID"] = 68393,
},
[133542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vol'jin",
["npcID"] = 67414,
},
[62318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captured Mercenary Soldier",
["npcID"] = 32885,
},
[126283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmaster Sydow",
["npcID"] = 63240,
},
[445207] = {
["source"] = "Void Bound Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 221979,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["npcID"] = 44404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[282316] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brother Bruen",
["npcID"] = 144782,
},
[90329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Marksman",
["npcID"] = 48514,
},
[371489] = {
["isChanneled"] = true,
["source"] = "Infused Whelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[255567] = {
["event"] = "SPELL_CAST_START",
["source"] = "T'lonja",
["npcID"] = 128455,
},
[437019] = {
["source"] = "Kaheti Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218316,
},
[385824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[216478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orbyth",
["npcID"] = 91155,
},
[324394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Monstrosity",
["npcID"] = 165197,
},
[136797] = {
["encounterName"] = "Horridon",
["source"] = "Zandalari Dinomancer",
["npcID"] = 69221,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1575,
},
[147878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Guardian",
["npcID"] = 72888,
},
[445210] = {
["source"] = "Spitfire Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[277296] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Irontide Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 131302,
},
[457497] = {
["isChanneled"] = true,
["source"] = "Ixlorb the Spinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218426,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[52080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Trogg Beast Tamer",
["npcID"] = 43598,
},
[406304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Defender",
["npcID"] = 200816,
},
[441116] = {
["isChanneled"] = true,
["source"] = "Regurgitating Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220138,
},
[147879] = {
["source"] = "Cinderfall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73175,
},
[412448] = {
["source"] = "Deepflayer Broodmatron",
["event"] = "SPELL_CAST_START",
["npcID"] = 200115,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[142760] = {
["source"] = "Kor'kron Dire Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 70665,
},
[426783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Seer",
["npcID"] = 212775,
},
[441119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[447261] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[457858] = {
["source"] = "Deepfiend Azellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 218458,
},
[147880] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[76508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mage",
["npcID"] = 39982,
},
[200099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Sapling",
["npcID"] = 191313,
},
[445217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[396069] = {
["source"] = "Earthshatter Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 194524,
},
[117975] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60583,
},
[400165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[147881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Guardian",
["npcID"] = 72888,
},
[119511] = {
["isChanneled"] = true,
["source"] = "Tak Tak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59958,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[457503] = {
["source"] = "Cogchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212617,
},
[201123] = {
["source"] = "Vilethorn Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 99360,
},
[396071] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["encounterID"] = 2114,
["event"] = "SPELL_CAST_START",
["npcID"] = 131667,
},
[173479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cannon Turret",
["npcID"] = 86690,
},
[133548] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkhatched Sorcerer",
["npcID"] = 67748,
},
[265016] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[33395] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Elemental de agua",
["npcID"] = 208441,
},
[41374] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[396075] = {
["source"] = "Awakened Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 191129,
},
[396073] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nodding Tiger",
["npcID"] = 59544,
},
[267067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeweaver Zarra",
["npcID"] = 134216,
},
[375596] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[245152] = {
["source"] = "Devlynn Styx",
["event"] = "SPELL_CAST_START",
["npcID"] = 121527,
},
[420647] = {
["source"] = "Ashendir Hartwood",
["event"] = "SPELL_CAST_START",
["npcID"] = 211258,
},
[373549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oasis Damselfly",
["npcID"] = 189368,
},
[88883] = {
["isChanneled"] = true,
["source"] = "Dark Pharaoh Tekahn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47753,
},
[451364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[265019] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[422696] = {
["source"] = "Avius Flamebeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 210305,
},
[130775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kunzen Rockflinger",
["npcID"] = 59120,
},
[147884] = {
["source"] = "Arcweaver Reinforcements",
["event"] = "SPELL_CAST_START",
["npcID"] = 73153,
},
[115417] = {
["source"] = "Shan'ze Spiritbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 55279,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[269116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imbued Stormcaller",
["npcID"] = 134599,
},
[143962] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Sorrow",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71481,
},
[449318] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[447271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Warshell",
["npcID"] = 221103,
},
[457510] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224798,
},
[47773] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[396078] = {
["source"] = "Inflammable Wall",
["event"] = "SPELL_CAST_START",
["npcID"] = 201413,
},
[88186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empyrean Assassin",
["npcID"] = 45922,
},
[139866] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70250,
},
[391982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmatalon",
["npcID"] = 189538,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[147704] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[245154] = {
["source"] = "Devlynn Styx",
["event"] = "SPELL_CAST_START",
["npcID"] = 121527,
},
[418605] = {
["encounterName"] = "Rezan",
["source"] = "Future Self",
["npcID"] = 208959,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[115418] = {
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59801,
},
[377991] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[457853] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Taskmaker",
["npcID"] = 218444,
},
[58053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusader of Virtue",
["npcID"] = 30189,
},
[50092] = {
["source"] = "Shek'zeer Needler",
["event"] = "SPELL_CAST_START",
["npcID"] = 64714,
},
[130163] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gunship Turret",
["npcID"] = 66183,
},
[424750] = {
["source"] = "Fungal Rotcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[400177] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Ritualist",
["npcID"] = 199971,
},
[289599] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "7th Legion Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 147239,
},
[375605] = {
["source"] = "Viridian Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 200321,
},
[200105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[278012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remote-Controlled Mechanostrider",
["npcID"] = 145789,
},
[258634] = {
["source"] = "Ashvane Flamecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 127488,
},
[130265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66291,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[159085] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 85642,
},
[396084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 203747,
},
[39670] = {
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[394037] = {
["source"] = "Viridian Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 200319,
},
[217382] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Webmistress Shinaris",
["npcID"] = 108027,
},
[142329] = {
["source"] = "Kor'kron Dark Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 71245,
},
[428345] = {
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213696,
},
[369465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Weaver",
["npcID"] = 186420,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[158128] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[141746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[271174] = {
["source"] = "Pallid Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 137830,
},
[41056] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Battleready Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 147207,
},
[130266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66200,
},
[150102] = {
["source"] = "Thunderlord Driftstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 74981,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[429180] = {
["source"] = "Cycle Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 210518,
},
[213582] = {
["source"] = "Savage Felbat",
["event"] = "SPELL_CAST_START",
["npcID"] = 93556,
},
[142771] = {
["source"] = "Overseer Elaglo",
["event"] = "SPELL_CAST_START",
["npcID"] = 71030,
},
[451378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[427159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[262464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razak Ironsides",
["npcID"] = 133557,
},
[373051] = {
["source"] = "Mudfin Salamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186669,
},
[451379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[445236] = {
["source"] = "Agitated Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 227369,
},
[389947] = {
["source"] = "Ronsak the Decimator",
["event"] = "SPELL_CAST_START",
["npcID"] = 193227,
},
[377661] = {
["source"] = "Azure Herdmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 194283,
},
[434998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chef Chewie",
["npcID"] = 214697,
},
[257608] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["encounterID"] = 2101,
["event"] = "SPELL_CAST_START",
["npcID"] = 127479,
},
[3110] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Gargup",
["npcID"] = 416,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[146868] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Ebon Stalker",
["npcID"] = 72352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 59804,
},
[115421] = {
["isChanneled"] = true,
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59801,
},
[133558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korune Spellweaver",
["npcID"] = 67752,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["npcID"] = 45259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[209325] = {
["source"] = "Nightglaive the Traitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 90621,
},
[144821] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[141750] = {
["source"] = "Huntmaster S'thoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 71259,
},
[138678] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari High Priest",
["npcID"] = 70047,
},
[392318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Initiate Zorig",
["npcID"] = 193985,
},
[189872] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "7th Legion Voidcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 146294,
},
[389951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[391999] = {
["source"] = "Nokhud Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 185445,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[131512] = {
["source"] = "Ordo Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 65928,
},
[455480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Take",
["npcID"] = 226272,
},
[245162] = {
["isChanneled"] = true,
["source"] = "Death Metal Knight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122899,
},
[205231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkglare",
["npcID"] = 103673,
},
[451702] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[324425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elite Queensguard",
["npcID"] = 158555,
},
[373573] = {
["source"] = "Sprite Dreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207617,
},
[418622] = {
["source"] = "Aqir Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 207910,
},
[412479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warchanter Ronvath",
["npcID"] = 200128,
},
[50804] = {
["encounterName"] = "Ley-Guardian Eregos",
["source"] = "Ley-Guardian Eregos",
["npcID"] = 27656,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2013,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[451387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[190898] = {
["source"] = "Mirana Starlight",
["event"] = "SPELL_CAST_START",
["npcID"] = 99451,
},
[418621] = {
["source"] = "Aqir Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207896,
},
[453749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelpmire",
["npcID"] = 220287,
},
[443510] = {
["source"] = "Nightfall Executor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217516,
},
[381765] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 191654,
},
[432959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[106720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waveguard Adept",
["npcID"] = 56673,
},
[214448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Highlands Runehorn",
["npcID"] = 108538,
},
[199090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[33910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Knight of Theramore",
["npcID"] = 59654,
},
[385862] = {
["source"] = "Murloc Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195218,
},
[396101] = {
["isChanneled"] = true,
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197128,
},
[130781] = {
["source"] = "Kunzen Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 59119,
},
[392006] = {
["source"] = "Scav Notail",
["event"] = "SPELL_CAST_START",
["npcID"] = 193136,
},
[451391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[119007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60602,
},
[320336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[392007] = {
["source"] = "Gnawbone Underboss",
["event"] = "SPELL_CAST_START",
["npcID"] = 187503,
},
[201139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[412486] = {
["source"] = "Warchanter Ronvath",
["event"] = "SPELL_CAST_START",
["npcID"] = 200128,
},
[162232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogron Spinecrusher",
["npcID"] = 81240,
},
[406344] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[41078] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[41334] = {
["source"] = "Temple Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 22939,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["npcID"] = 192481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[424773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarled Reviver",
["npcID"] = 207468,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[445251] = {
["source"] = "Scavenging Stormfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 218401,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[432965] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[451395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[445252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Leviathan Manipulator",
["npcID"] = 220710,
},
[406345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[42870] = {
["source"] = "Dragonflayer Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 24051,
},
[201141] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[368287] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[432967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sentry Stagshell",
["npcID"] = 216340,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[73958] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Drowned Thunder Lizard",
["npcID"] = 39464,
},
[270513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geoactive Azershard",
["npcID"] = 147933,
},
[227376] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Crown Technician",
["npcID"] = 114275,
},
[392013] = {
["source"] = "Viridian Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 200319,
},
[143805] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["encounterID"] = 1595,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71454,
},
[369788] = {
["source"] = "Qalashi Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190983,
},
[195590] = {
["source"] = "Felskorn Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 96121,
},
[383823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["npcID"] = 61442,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[123691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kang Bramblestaff",
["npcID"] = 58206,
},
[35913] = {
["source"] = "Fel-Blessed Highborne",
["event"] = "SPELL_CAST_START",
["npcID"] = 207147,
},
[387910] = {
["source"] = "Algeth'ar Echoknight",
["event"] = "SPELL_CAST_START",
["npcID"] = 196200,
},
[395017] = {
["source"] = "Massive Magmashell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193152,
},
[114291] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[394881] = {
["isChanneled"] = true,
["source"] = "Council Earthcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198502,
},
[22121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timberstep Archer",
["npcID"] = 194041,
},
[131520] = {
["source"] = "Farraki Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 66169,
},
[60646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korjan Slavemaster",
["npcID"] = 65638,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[11642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shatterspear Priestess",
["npcID"] = 32855,
},
[161533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandragora Lifedrinker",
["npcID"] = 80699,
},
[193977] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["npcID"] = 96756,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1822,
},
[406644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[106933] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Striker Ga'dok",
["npcID"] = 56589,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1405,
},
[41173] = {
["isChanneled"] = true,
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23339,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[49084] = {
["source"] = "Ymirjar Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 26691,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[428879] = {
["source"] = "Rock Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[389953] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[385170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[400066] = {
["source"] = "Preying Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 201068,
},
[257459] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
},
[15305] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[68841] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[196027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[86830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[173502] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gun Turret",
["npcID"] = 86691,
},
[406357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[424787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crabtankerous",
["npcID"] = 209909,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[441452] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[138691] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[180670] = {
["source"] = "K'ute",
["event"] = "SPELL_CAST_START",
["npcID"] = 90215,
},
[125056] = {
["source"] = "MAYHEM",
["event"] = "SPELL_CAST_START",
["npcID"] = 165189,
},
[166335] = {
["source"] = "Grom'kar Far Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82579,
},
[424789] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crabtankerous",
["npcID"] = 209909,
},
[135620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeb'tula Stoneshield",
["npcID"] = 69517,
},
[196028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[394893] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[424790] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crabtankerous",
["npcID"] = 209909,
},
[385883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[119524] = {
["source"] = "Mogu Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61345,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[41371] = {
["source"] = "Priestess of Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 22956,
},
[451412] = {
["source"] = "Ulgrax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[412505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyr's Vanguard",
["npcID"] = 205151,
},
[145860] = {
["source"] = "Thunderlord Talon",
["event"] = "SPELL_CAST_START",
["npcID"] = 72232,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[443222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Memory of Turalyon",
["npcID"] = 214616,
},
[371551] = {
["source"] = "Rebel Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195062,
},
[396615] = {
["source"] = "Munchbeak Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 195970,
},
[23102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snow Blossom",
["npcID"] = 63907,
},
[320358] = {
["encounterName"] = "Surgeon Stitchflesh",
["event"] = "SPELL_CAST_START",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
},
[193983] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1808,
},
[145861] = {
["source"] = "Zeal",
["event"] = "SPELL_CAST_START",
["npcID"] = 72661,
},
[196031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[46035] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1834,
},
[160332] = {
["source"] = "Pale Tormentor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77348,
},
[449368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[192072] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[64152] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[406366] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[138695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yalia Sagewhisper",
["npcID"] = 69618,
},
[195799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yotnar",
["npcID"] = 96175,
},
[81642] = {
["encounterName"] = "Lockmaw",
["source"] = "Lockmaw",
["npcID"] = 43614,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1054,
},
[263318] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["npcID"] = 133944,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2124,
},
[212415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Urgev the Flayer",
["npcID"] = 93401,
},
[426845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[144839] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71153,
},
[62872] = {
["encounterName"] = "Freya",
["source"] = "Freya",
["encounterID"] = 1133,
["event"] = "SPELL_CAST_START",
["npcID"] = 32906,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[166341] = {
["source"] = "Grom'kar Far Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82579,
},
[428894] = {
["source"] = "Cursedforge Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 214264,
},
[406369] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191232,
},
[400492] = {
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 202803,
},
[161222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Nightsaber",
["npcID"] = 221947,
},
[54431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlok Basilisk Rider",
["npcID"] = 42711,
},
[453733] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[301933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Tannin",
["npcID"] = 152736,
},
[372562] = {
["source"] = "Brackenhide Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 188542,
},
[216763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ael'Yith",
["npcID"] = 90267,
},
[383846] = {
["source"] = "Inflammable Wall",
["event"] = "SPELL_CAST_START",
["npcID"] = 201413,
},
[271220] = {
["source"] = "Qalashi Djaradin",
["event"] = "SPELL_CAST_START",
["npcID"] = 195032,
},
[169414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Warcaster",
["npcID"] = 78670,
},
[269169] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Jalazko's Ironguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 149437,
},
[451423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xeph'itik",
["npcID"] = 219984,
},
[443232] = {
["source"] = "Shadowsilk Jailer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224842,
},
[422078] = {
["source"] = "Emerald Wingguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210278,
},
[412806] = {
["source"] = "Risen Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205804,
},
[457567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of Azshara",
["npcID"] = 222621,
},
[401193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[410728] = {
["source"] = "Sabellian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201411,
},
[162248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remote-Controlled Mechanotiger",
["npcID"] = 145791,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[131532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Shooter",
["npcID"] = 66928,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2086,
},
[141771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Decimator",
["npcID"] = 71353,
},
[277009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moon Priestess Liara",
["npcID"] = 152729,
},
[377707] = {
["source"] = "Rustlily",
["event"] = "SPELL_CAST_START",
["npcID"] = 195223,
},
[265081] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[82668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zoltrik Drakebane",
["npcID"] = 44135,
},
[265337] = {
["source"] = "Gorestained Piglet",
["event"] = "SPELL_CAST_START",
["npcID"] = 135048,
},
[21071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Behemoth",
["npcID"] = 12206,
},
[371565] = {
["source"] = "Unbound Windscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 195854,
},
[79085] = {
["source"] = "Osul Mist-Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 60697,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[451428] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xeph'itik",
["npcID"] = 219984,
},
[169417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Warcaster",
["npcID"] = 78670,
},
[406378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[130791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[131534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rothek",
["npcID"] = 62581,
},
[82669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zoltrik Drakebane",
["npcID"] = 44135,
},
[437093] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[214594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azurewing Scalewarden",
["npcID"] = 91643,
},
[125160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snow Blossom",
["npcID"] = 63907,
},
[387950] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[41114] = {
["source"] = "Ashtongue Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 22845,
},
[118505] = {
["source"] = "Kang Bramblestaff",
["event"] = "SPELL_CAST_START",
["npcID"] = 60978,
},
[373614] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[128232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[433002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Assistant",
["npcID"] = 216333,
},
[320376] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["npcID"] = 164578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[225732] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[449385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[428908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[267136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razak Ironsides",
["npcID"] = 133557,
},
[408677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Scaleguard",
["npcID"] = 198871,
},
[63032] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Heartwise",
["npcID"] = 33443,
},
[265089] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[214593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foothills Greatstag",
["npcID"] = 97516,
},
[212423] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[451435] = {
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[387955] = {
["source"] = "Ethereal Restorer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196203,
},
[128233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[424771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Incineration",
["npcID"] = 210147,
},
[404171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[155524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Spirit-Tender",
["npcID"] = 77131,
},
[76588] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[13608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Raider",
["npcID"] = 48626,
},
[134609] = {
["source"] = "Wakened Mogu",
["event"] = "SPELL_CAST_START",
["npcID"] = 68102,
},
[166350] = {
["isChanneled"] = true,
["source"] = "Assault Cannon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82590,
},
[375671] = {
["source"] = "Primal Watercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190995,
},
[443247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Memory of Turalyon",
["npcID"] = 214616,
},
[390245] = {
["source"] = "Embertooth Vinewrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 191131,
},
[414579] = {
["source"] = "Fuzani Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 205858,
},
[367481] = {
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[275013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Direprowl the Ravager",
["npcID"] = 140072,
},
[86766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mercurial Ooze",
["npcID"] = 43158,
},
[160681] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79548,
},
[383864] = {
["source"] = "Erupting Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 191917,
},
[385912] = {
["isChanneled"] = true,
["source"] = "Azure Herdmare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192591,
},
[387960] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[124071] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osul Marauder",
["npcID"] = 60692,
},
[383866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnated Wick",
["npcID"] = 205407,
},
[5137] = {
["source"] = "Undead Excavator",
["event"] = "SPELL_CAST_START",
["npcID"] = 624,
},
[428916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[124139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[367484] = {
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[426869] = {
["source"] = "Flickerflame Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212548,
},
[367485] = {
["isChanneled"] = true,
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185508,
},
[85232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Field Worker",
["npcID"] = 47699,
},
[146899] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Bonecrusher",
["encounterID"] = 1622,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72945,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[118905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Capacitor Totem",
["npcID"] = 61245,
},
[324483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elite Queensguard",
["npcID"] = 158555,
},
[441205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gloom Stalker",
["npcID"] = 225138,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[263775] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["npcID"] = 133944,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2124,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[371584] = {
["source"] = "Brinetooth Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 188115,
},
[197070] = {
["source"] = "Mightstone Rockcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 100433,
},
[387965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Bladewing",
["npcID"] = 187232,
},
[124140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Gatewatcher",
["npcID"] = 63564,
},
[424825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvanesh the Ascended",
["npcID"] = 207107,
},
[85802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonescale Matriarch",
["npcID"] = 44148,
},
[117485] = {
["encounterName"] = "Will of the Emperor",
["source"] = "Emperor's Courage",
["encounterID"] = 1407,
["event"] = "SPELL_CAST_START",
["npcID"] = 60398,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["encounterID"] = 2114,
["event"] = "SPELL_CAST_START",
["npcID"] = 131667,
},
[138710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taran Zhu",
["npcID"] = 69501,
},
[275568] = {
["source"] = "Coastal Goat",
["event"] = "SPELL_CAST_START",
["npcID"] = 161130,
},
[125733] = {
["source"] = "Swamp Rodent",
["event"] = "SPELL_CAST_START",
["npcID"] = 60733,
},
[455543] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Watcher",
["npcID"] = 223647,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[418684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[396159] = {
["source"] = "Worldcarver Wurmling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187366,
},
[417937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotted Gladiator",
["npcID"] = 207808,
},
[111854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
},
[91032] = {
["source"] = "Mine Bunny",
["event"] = "SPELL_CAST_START",
["npcID"] = 48338,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[406399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malgosa Spellbinder",
["npcID"] = 205620,
},
[6257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Looter",
["npcID"] = 35234,
},
[86733] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Rockslice Flayer",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42606,
},
[197924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Carver",
["npcID"] = 93070,
},
[455546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Watcher",
["npcID"] = 223647,
},
[118510] = {
["isChanneled"] = true,
["source"] = "Torjar's Bane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58439,
},
[131545] = {
["isChanneled"] = true,
["source"] = "Osul Mist-Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66940,
},
[428926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[182739] = {
["source"] = "Legion Skyterror",
["event"] = "SPELL_CAST_START",
["npcID"] = 90659,
},
[128749] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magnar Icebreaker",
["npcID"] = 96034,
},
[377732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Custodian",
["npcID"] = 184319,
},
[209470] = {
["source"] = "Ravathes",
["event"] = "SPELL_CAST_START",
["npcID"] = 97942,
},
[441214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[277394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Hexcaller",
["npcID"] = 137131,
},
[389269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187123,
},
[420737] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[455549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Watcher",
["npcID"] = 223647,
},
[375687] = {
["source"] = "Decay Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190426,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["npcID"] = 125977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[445311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shallowshell the Clacker",
["npcID"] = 219278,
},
[153764] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["npcID"] = 75927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[394464] = {
["source"] = "Piercer Gigra",
["event"] = "SPELL_CAST_START",
["npcID"] = 186511,
},
[145989] = {
["source"] = "Amalgamated Hubris",
["event"] = "SPELL_CAST_START",
["npcID"] = 72658,
},
[214481] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampaging Squallhunter",
["npcID"] = 107469,
},
[387974] = {
["isChanneled"] = true,
["source"] = "Spectral Invoker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196202,
},
[128750] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magnar Icebreaker",
["npcID"] = 96034,
},
[426883] = {
["source"] = "Kobold Taskworker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212383,
},
[160323] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[7951] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Darkfang Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 4414,
},
[424836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvanesh the Ascended",
["npcID"] = 207107,
},
[275563] = {
["source"] = "Shadowstarved Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[115440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warden of Zhu",
["npcID"] = 59845,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[29120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silvermoon Ranger",
["npcID"] = 18147,
},
[317791] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[322450] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2393,
},
[391006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blisterhide",
["npcID"] = 197353,
},
[433029] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["encounterID"] = 2999,
["event"] = "SPELL_CAST_START",
["npcID"] = 219763,
},
[263066] = {
["source"] = "Feckless Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 133345,
},
[392284] = {
["source"] = "Ravenous Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 193145,
},
[373201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windyfin Skybasher",
["npcID"] = 187431,
},
[167385] = {
["source"] = "Boulderfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 189617,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["npcID"] = 43873,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1041,
},
[197077] = {
["source"] = "Mightstone Rockcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 100433,
},
[68209] = {
["source"] = "Freezya",
["event"] = "SPELL_CAST_START",
["npcID"] = 35897,
},
[367503] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[451461] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murgle-whurgle",
["npcID"] = 214546,
},
[128803] = {
["source"] = "Shek'zeer Clutch-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 64559,
},
[191038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Windshaper",
["npcID"] = 94813,
},
[146908] = {
["source"] = "Brute Reinforcements",
["event"] = "SPELL_CAST_START",
["npcID"] = 73155,
},
[116977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 202789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[195031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacursed Soulkeeper",
["npcID"] = 97200,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191230,
},
[420746] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[79094] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Faceless Soulclaimer",
["npcID"] = 45395,
},
[373636] = {
["source"] = "Scavenging Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200113,
},
[121073] = {
["source"] = "Malevolent Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 61333,
},
[411433] = {
["isChanneled"] = true,
["source"] = "Panicked Cliffhorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[392281] = {
["source"] = "Frostdrake",
["event"] = "SPELL_CAST_START",
["npcID"] = 188804,
},
[116004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Fiend",
["npcID"] = 56820,
},
[123121] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["npcID"] = 62983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1506,
},
[270987] = {
["source"] = "Disciple of Nalorakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 120949,
},
[174555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunted Hound",
["npcID"] = 82143,
},
[120149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 194853,
},
[426893] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[166364] = {
["isChanneled"] = true,
["source"] = "Grom'kar Gunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82579,
},
[73212] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Darkspear Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 38326,
},
[218006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Cleaver",
["npcID"] = 108939,
},
[43135] = {
["source"] = "Bubbling Swamp Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 4394,
},
[387987] = {
["source"] = "Keen Skywatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 190778,
},
[369754] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[79607] = {
["source"] = "Venomtail Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 3127,
},
[143840] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["encounterID"] = 1598,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71478,
},
[143961] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Misery",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71476,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[114419] = {
["isChanneled"] = true,
["source"] = "Ancient Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56595,
},
[106740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Watershaper",
["npcID"] = 59361,
},
[396180] = {
["source"] = "Worldcarver Wurmling",
["event"] = "SPELL_CAST_START",
["npcID"] = 187366,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 190686,
},
[334748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Harvester",
["npcID"] = 166302,
},
[433040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[118563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springtail Burrower",
["npcID"] = 59514,
},
[334747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Harvester",
["npcID"] = 166302,
},
[76584] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1038,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[185468] = {
["source"] = "Spymaster Illandris",
["event"] = "SPELL_CAST_START",
["npcID"] = 91468,
},
[141794] = {
["source"] = "Champion Sithiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 59632,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charred Hornspike",
["npcID"] = 191479,
},
[40064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[189626] = {
["source"] = "Genn Greymane",
["event"] = "SPELL_CAST_START",
["npcID"] = 95451,
},
[275366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remote-Controlled Mechanogorilla",
["npcID"] = 145790,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[209370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Boneservant",
["npcID"] = 108940,
},
[324513] = {
["source"] = "Experimental Misstep",
["event"] = "SPELL_CAST_START",
["npcID"] = 199859,
},
[142819] = {
["source"] = "Summit Guster",
["event"] = "SPELL_CAST_START",
["npcID"] = 71277,
},
[451474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Purgle-lurgle",
["npcID"] = 214544,
},
[169571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dionor Seedpriest",
["npcID"] = 81721,
},
[195037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[139841] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70235,
},
[425040] = {
["source"] = "Fungarian Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 207460,
},
[116980] = {
["isChanneled"] = true,
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60576,
},
[120052] = {
["isChanneled"] = true,
["source"] = "Adolescent Mushan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56239,
},
[196814] = {
["isChanneled"] = true,
["source"] = "Felsoul Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95423,
},
[41171] = {
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23339,
},
[195036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacursed Soulkeeper",
["npcID"] = 97200,
},
[373662] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Custodian",
["npcID"] = 186420,
},
[400283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[130803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hozen Ravager",
["npcID"] = 57119,
},
[396370] = {
["source"] = "Tikarr Frostclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201542,
},
[275371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remote-Controlled Mechanogorilla",
["npcID"] = 145790,
},
[62334] = {
["source"] = "Dark Rune Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 32886,
},
[385950] = {
["source"] = "Deathwingurlugull",
["event"] = "SPELL_CAST_START",
["npcID"] = 195314,
},
[218755] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Festerhide Grizzly",
["npcID"] = 95779,
},
[265759] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 202824,
},
[131559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Frostweaver",
["npcID"] = 66707,
},
[195474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Mystic",
["npcID"] = 93071,
},
[32063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Heretic",
["npcID"] = 44681,
},
[396447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornmu the Ancient",
["npcID"] = 196382,
},
[200248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Arcanist",
["npcID"] = 98280,
},
[388000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["npcID"] = 190187,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[441242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[388001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[400288] = {
["source"] = "Unstable Pain",
["event"] = "SPELL_CAST_START",
["npcID"] = 201290,
},
[116982] = {
["isChanneled"] = true,
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60576,
},
[388002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bertinuat",
["npcID"] = 196288,
},
[385955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[433053] = {
["source"] = "Heartfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 216035,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[90932] = {
["source"] = "Defias Blood Wizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 48417,
},
[231901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overspritzed Guard",
["npcID"] = 116285,
},
[139744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 70370,
},
[377765] = {
["source"] = "Mikrin of the Raging Winds",
["event"] = "SPELL_CAST_START",
["npcID"] = 193173,
},
[169445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[439198] = {
["isChanneled"] = true,
["source"] = "Venommaster Nezarox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219006,
},
[138729] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[114935] = {
["source"] = "Grummle Trail Guide",
["event"] = "SPELL_CAST_START",
["npcID"] = 59593,
},
[195801] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skrog Tidestomper",
["npcID"] = 95939,
},
[408483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Lavatongue",
["npcID"] = 208661,
},
[375719] = {
["source"] = "Primalbound Water Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 190739,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[62335] = {
["source"] = "Dark Rune Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 32886,
},
[326574] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["npcID"] = 162689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2389,
},
[118519] = {
["isChanneled"] = true,
["source"] = "Mutated Silkmoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 57422,
},
[385959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defense Orb",
["npcID"] = 195184,
},
[139838] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70247,
},
[371618] = {
["source"] = "Moltenbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 206477,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[40066] = {
["source"] = "Coilskar Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["npcID"] = 186737,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2583,
},
[439202] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[76611] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1038,
},
[381357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giant Ottuk Whomper",
["npcID"] = 189490,
},
[400279] = {
["source"] = "Zaqali Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 204826,
},
[57984] = {
["source"] = "Greater Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 95061,
},
[116472] = {
["isChanneled"] = true,
["source"] = "Angry Monkey Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60370,
},
[108793] = {
["source"] = "Ook-Ook",
["event"] = "SPELL_CAST_START",
["npcID"] = 57628,
},
[388897] = {
["source"] = "Scavenging Hardshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193605,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[441252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underdrip Crawler",
["npcID"] = 223069,
},
[400296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[81147] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Avalanchion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44372,
},
[389564] = {
["source"] = "Steamgill",
["event"] = "SPELL_CAST_START",
["npcID"] = 193123,
},
[449444] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[410537] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[267195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskrunner Lorinas",
["npcID"] = 134215,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[188161] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azariah",
["npcID"] = 91737,
},
[395427] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[386700] = {
["source"] = "Hailbringer Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189228,
},
[439365] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[124664] = {
["source"] = "Assistant Tart",
["event"] = "SPELL_CAST_START",
["npcID"] = 62793,
},
[436841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[322486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tirnenn Villager",
["npcID"] = 164929,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188252,
},
[449447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[15586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[425030] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[447400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Rickiticka",
["npcID"] = 215772,
},
[82742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Southsea Strongarm",
["npcID"] = 40635,
},
[263103] = {
["source"] = "Feckless Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 133345,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[202365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarver Slave",
["npcID"] = 102375,
},
[285630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razak Ironsides",
["npcID"] = 133556,
},
[41091] = {
["isChanneled"] = true,
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23018,
},
[157165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Zealot",
["npcID"] = 77132,
},
[166380] = {
["source"] = "Grom'kar Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 82597,
},
[408495] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[135664] = {
["source"] = "Ironforge Cabalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 67762,
},
[420782] = {
["isChanneled"] = true,
["source"] = "Zaqali Lavatongue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208661,
},
[192706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritualist Lesha",
["npcID"] = 100248,
},
[375732] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bubbling Sapling",
["npcID"] = 191164,
},
[396360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Scout",
["npcID"] = 189851,
},
[169839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[128249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[424879] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[131570] = {
["source"] = "Skullcrusher Gundu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70787,
},
[36228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rental Shredder",
["npcID"] = 38650,
},
[36996] = {
["source"] = "Mercurial Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 67833,
},
[449453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[451501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burgle-gurgle",
["npcID"] = 214545,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[143941] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71161,
},
[135739] = {
["source"] = "Ishi",
["event"] = "SPELL_CAST_START",
["npcID"] = 68225,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[461741] = {
["source"] = "Sir Finley Mrrgglton",
["event"] = "SPELL_CAST_START",
["npcID"] = 228030,
},
[455598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vin'ris the Corruptor",
["npcID"] = 222630,
},
[449455] = {
["source"] = "Ghastly Voidsoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 212453,
},
[126202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Soul-Caller",
["npcID"] = 63611,
},
[453551] = {
["source"] = "Wavecrasher Jurvak",
["event"] = "SPELL_CAST_START",
["npcID"] = 222728,
},
[47747] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["npcID"] = 26763,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2009,
},
[265084] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[394167] = {
["source"] = "Cygenoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 185660,
},
[144882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zhu-Gon the Sour",
["npcID"] = 71919,
},
[461886] = {
["source"] = "Cavern Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 221298,
},
[138739] = {
["source"] = "Farraki Sand Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69899,
},
[76590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[453553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charmonger",
["npcID"] = 220267,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[188907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[447411] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[428981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auctioned Pages Past",
["npcID"] = 214069,
},
[145907] = {
["source"] = "Kor'kron Skullsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72744,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[328781] = {
["source"] = "Vault Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199126,
},
[157170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[373693] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[112893] = {
["source"] = "Zouchin Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62247,
},
[428983] = {
["isChanneled"] = true,
["source"] = "Dream Bench",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210518,
},
[130299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springtail Thumper",
["npcID"] = 66229,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[118560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springtail Trapper",
["npcID"] = 59513,
},
[265911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Nimbus",
["npcID"] = 136076,
},
[271443] = {
["source"] = "Toadstool Danner",
["event"] = "SPELL_CAST_START",
["npcID"] = 200260,
},
[201399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[451510] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[118525] = {
["source"] = "Enraged Tideweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 59181,
},
[396355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ritual Scout",
["npcID"] = 189851,
},
[138742] = {
["source"] = "Farraki Sand Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69899,
},
[131575] = {
["source"] = "Monk Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 66947,
},
[157172] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sargerei Soulbinder",
["npcID"] = 77812,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[408509] = {
["source"] = "Portalkeeper Cimbra",
["event"] = "SPELL_CAST_START",
["npcID"] = 202613,
},
[112894] = {
["source"] = "Zouchin Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62247,
},
[136695] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shan'ze Slaver",
["npcID"] = 67466,
},
[373698] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["npcID"] = 184580,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2555,
},
[41093] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[157173] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felguard",
["npcID"] = 79507,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["npcID"] = 91808,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[373692] = {
["source"] = "Blazebound Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190034,
},
[116990] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Speartender",
["npcID"] = 207456,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[392130] = {
["source"] = "Professor Maxdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 189668,
},
[197105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[393859] = {
["source"] = "Thaldraszian Hoverbug",
["event"] = "SPELL_CAST_START",
["npcID"] = 195380,
},
[269266] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137614,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[142840] = {
["source"] = "Echo of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 71123,
},
[443325] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[86785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mercurial Ooze",
["npcID"] = 43158,
},
[426943] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[159949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Warsmith",
["npcID"] = 77653,
},
[43133] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Darkmist Recluse",
["event"] = "SPELL_CAST_START",
["npcID"] = 4378,
},
[461880] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[131640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Whisperer",
["npcID"] = 64622,
},
[375751] = {
["isChanneled"] = true,
["source"] = "Risen Bakar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188509,
},
[320462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Necromancer",
["npcID"] = 163618,
},
[461757] = {
["source"] = "Reno Jackson",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[9143] = {
["encounterName"] = "Tinkerer Gizlock",
["source"] = "Tinkerer Gizlock",
["npcID"] = 13601,
["event"] = "SPELL_CAST_START",
["encounterID"] = 427,
},
[435136] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[391855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmatalon",
["npcID"] = 189538,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131545,
},
[435138] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[142842] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["encounterID"] = 1595,
["event"] = "SPELL_CAST_START",
["npcID"] = 71454,
},
[112896] = {
["source"] = "Frostmane Flesh-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 70746,
},
[32903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jungle Skitterer",
["npcID"] = 58067,
},
[130302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springtail Thumper",
["npcID"] = 66229,
},
[261612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethrak Warden",
["npcID"] = 136546,
},
[320465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 200823,
},
[398501] = {
["source"] = "Hunting Rock Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 203783,
},
[80012] = {
["source"] = "Aarko",
["event"] = "SPELL_CAST_START",
["npcID"] = 77664,
},
[419595] = {
["source"] = "Molten General",
["event"] = "SPELL_CAST_START",
["npcID"] = 207941,
},
[378112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nibbling Hornswog",
["npcID"] = 189026,
},
[41396] = {
["source"] = "Ardent Host",
["event"] = "SPELL_CAST_START",
["npcID"] = 22959,
},
[125212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'nas Nightsavage",
["npcID"] = 50338,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[139772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shan'ze Celestial Shaper",
["npcID"] = 70240,
},
[119552] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[455619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vin'ris the Corruptor",
["npcID"] = 222630,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["encounterID"] = 2854,
["event"] = "SPELL_CAST_START",
["npcID"] = 210108,
},
[41069] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[384385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostsnout Bear",
["npcID"] = 199354,
},
[414665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Gillbeater",
["npcID"] = 205823,
},
[262493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razak Ironsides",
["npcID"] = 133556,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[123648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Stormcaller",
["npcID"] = 61946,
},
[232653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcanist Valtrois",
["npcID"] = 147088,
},
[441287] = {
["isChanneled"] = true,
["source"] = "Kaheti Sentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218315,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[388046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[118529] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[400333] = {
["source"] = "Cliffkeeper Bouldani",
["event"] = "SPELL_CAST_START",
["npcID"] = 202612,
},
[443336] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[119553] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[404756] = {
["source"] = "Sundered Flame Flamespinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 203686,
},
[441289] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[128283] = {
["source"] = "Shuffling Mistlurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 65404,
},
[121601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Stormcaller",
["npcID"] = 61946,
},
[453683] = {
["source"] = "Nexus-Princess Ky'veza",
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[400335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Xymra",
["npcID"] = 200186,
},
[123137] = {
["source"] = "Jungle Brewstealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67027,
},
[453577] = {
["source"] = "Wavecrasher Jurvak",
["event"] = "SPELL_CAST_START",
["npcID"] = 222728,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[134656] = {
["source"] = "Roaming Fog",
["event"] = "SPELL_CAST_START",
["npcID"] = 68313,
},
[435148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Footman",
["npcID"] = 212835,
},
[123649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61947,
},
[126209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Soul-Caller",
["npcID"] = 63611,
},
[431811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[119554] = {
["source"] = "Subetai the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 61427,
},
[166397] = {
["source"] = "Grimrail Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 82590,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[328667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brittlebone Mage",
["npcID"] = 163126,
},
[453580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charmonger",
["npcID"] = 220267,
},
[137729] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70212,
},
[420817] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[139777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Sentinel",
["npcID"] = 70324,
},
[66313] = {
["source"] = "Snobold Vassal",
["event"] = "SPELL_CAST_START",
["npcID"] = 34800,
},
[143872] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71515,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 209800,
},
[11990] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Firemane Flamecaller",
["npcID"] = 4334,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[320464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Sorcerer",
["npcID"] = 163128,
},
[463956] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[140800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Arcanital",
["npcID"] = 69281,
},
[389560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Tyrant",
["npcID"] = 202483,
},
[417241] = {
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_START",
["npcID"] = 204808,
},
[406581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2085,
},
[33417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Night Elf Mage",
["npcID"] = 35154,
},
[375770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monsoo, The Boiling Rage",
["npcID"] = 190718,
},
[426964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[123651] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61947,
},
[398296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[277479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshrot Marauder",
["npcID"] = 146892,
},
[377912] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[453586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wavecrasher Jurvak",
["npcID"] = 222728,
},
[136708] = {
["encounterName"] = "Horridon",
["source"] = "Sul'lithuz Stonegazer",
["npcID"] = 69172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[185854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Rider",
["npcID"] = 92792,
},
[197117] = {
["encounterName"] = "Helya",
["source"] = "Piercing Tentacle",
["npcID"] = 100188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1824,
},
[119556] = {
["source"] = "Weeping Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 57649,
},
[461869] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ringing Death",
["npcID"] = 214162,
},
[277481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshrot Vandal",
["npcID"] = 146895,
},
[386012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Boroo",
["npcID"] = 194317,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[96134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Drake",
["npcID"] = 42522,
},
[262347] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 129214,
},
[188927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreamtwister",
["npcID"] = 92788,
},
[123652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargesh Ribcrusher",
["npcID"] = 61947,
},
[398300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[453588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Monstrosity",
["npcID"] = 220266,
},
[461781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargassum Guardian",
["npcID"] = 212582,
},
[127236] = {
["source"] = "Mogu Effigy",
["event"] = "SPELL_CAST_START",
["npcID"] = 59156,
},
[392159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[386015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[453591] = {
["source"] = "Congealed Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 225494,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[32197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gatrul'lon Curseweaver",
["npcID"] = 66267,
},
[443353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloated Cindermite",
["npcID"] = 222295,
},
[185857] = {
["source"] = "Bilgewater Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 101026,
},
[139894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horgak the Enslaver",
["npcID"] = 70176,
},
[259618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Diemetradon",
["npcID"] = 130756,
},
[41097] = {
["isChanneled"] = true,
["source"] = "Shadowmoon Weapon Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23049,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[395060] = {
["source"] = "Im'bunata",
["event"] = "SPELL_CAST_START",
["npcID"] = 196199,
},
[267237] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Faithless Tender",
["npcID"] = 134364,
},
[396346] = {
["source"] = "Ronsak the Decimator",
["event"] = "SPELL_CAST_START",
["npcID"] = 193227,
},
[461785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargassum Guardian",
["npcID"] = 212582,
},
[93449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Schnottz Air Officer",
["npcID"] = 46993,
},
[396665] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[426974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[129325] = {
["source"] = "Bloodthirsty Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 62945,
},
[390115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[398385] = {
["source"] = "Raging Blazehound",
["event"] = "SPELL_CAST_START",
["npcID"] = 207429,
},
[429021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[122118] = {
["encounterName"] = "Gara'jal the Spiritbinder",
["source"] = "Shadowy Minion",
["encounterID"] = 1434,
["event"] = "SPELL_CAST_START",
["npcID"] = 60184,
},
[427175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[11538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Marius Sunshard",
["npcID"] = 113542,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[445492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Gutter",
["npcID"] = 214551,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["npcID"] = 97259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[148029] = {
["source"] = "Pterrordax",
["event"] = "SPELL_CAST_START",
["npcID"] = 73223,
},
[445407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Gutter",
["npcID"] = 214551,
},
[383975] = {
["source"] = "Mikrin of the Raging Winds",
["event"] = "SPELL_CAST_START",
["npcID"] = 193173,
},
[118535] = {
["source"] = "Orachi",
["event"] = "SPELL_CAST_START",
["npcID"] = 59180,
},
[13860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantasmal Seeker",
["npcID"] = 16323,
},
[328687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brittlebone Crossbowman",
["npcID"] = 166079,
},
[447456] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[269302] = {
["source"] = "Hired Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 134232,
},
[386024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormspeaker",
["npcID"] = 194894,
},
[136751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Cave Bat",
["npcID"] = 69351,
},
[122119] = {
["source"] = "Dreadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 62306,
},
[138763] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[41098] = {
["isChanneled"] = true,
["source"] = "Shadowmoon Weapon Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23049,
},
[443433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of Ansurek",
["npcID"] = 220196,
},
[447458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Rickiticka",
["npcID"] = 215772,
},
[408551] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[386026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Squall",
["npcID"] = 194895,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[16102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[441316] = {
["isChanneled"] = true,
["source"] = "Frenzied Leaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222214,
},
[418791] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[445412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shallowshell the Clacker",
["npcID"] = 219278,
},
[136716] = {
["source"] = "Echo of Kros",
["event"] = "SPELL_CAST_START",
["npcID"] = 69341,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[135693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 68059,
},
[122120] = {
["source"] = "Dreadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 62306,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[383981] = {
["source"] = "Rising Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 194575,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[406802] = {
["source"] = "Sawscale Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[54673] = {
["source"] = "Zim'Torga Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 28387,
},
[386028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Thunderbeast",
["npcID"] = 195696,
},
[416743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungering Ghoul",
["npcID"] = 206016,
},
[322550] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2393,
},
[275452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshrot Blighthound",
["npcID"] = 146911,
},
[138766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Devilsaur",
["npcID"] = 70008,
},
[408502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["npcID"] = 204412,
},
[453607] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[16100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathanos Blightcaller",
["npcID"] = 91158,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["npcID"] = 134419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[418796] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[136719] = {
["encounterName"] = "Horridon",
["source"] = "Farraki Wastewalker",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 69175,
},
[56969] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[49034] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["encounterID"] = 1976,
["event"] = "SPELL_CAST_START",
["npcID"] = 26631,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["npcID"] = 40788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[109322] = {
["source"] = "War Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 57927,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[131601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Corpse",
["npcID"] = 66948,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[441381] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[138768] = {
["source"] = "Horned Battlebeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 69142,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186122,
},
[453611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automaxor",
["npcID"] = 220265,
},
[139903] = {
["source"] = "Stormbringer Draz'kil",
["event"] = "SPELL_CAST_START",
["npcID"] = 70445,
},
[189990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ingrid Bellix",
["npcID"] = 147623,
},
[445422] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[59280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowflake",
["npcID"] = 28153,
},
[195109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[138769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Direhorn Hatchling",
["npcID"] = 70013,
},
[74000] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trade Prince Gallywix",
["npcID"] = 39582,
},
[273411] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["npcID"] = 133944,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2124,
},
[86798] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Elemental Overseer",
["npcID"] = 45084,
},
[134674] = {
["source"] = "Wakened Mogu",
["event"] = "SPELL_CAST_START",
["npcID"] = 68102,
},
[201226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Fury",
["npcID"] = 100531,
},
[9573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incendosaur",
["npcID"] = 9318,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[138770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Dinomancer",
["npcID"] = 69925,
},
[443427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Silkbinder",
["npcID"] = 220195,
},
[86799] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Elemental Overseer",
["npcID"] = 45084,
},
[200228] = {
["source"] = "Questioner Arev'naal",
["event"] = "SPELL_CAST_START",
["npcID"] = 89673,
},
[322557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drust Soulcleaver",
["npcID"] = 164920,
},
[40076] = {
["source"] = "Coilskar Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[453616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 225493,
},
[178702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bittertide Brinetail",
["npcID"] = 131674,
},
[40844] = {
["source"] = "Bonechewer Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 22963,
},
[10277] = {
["source"] = "Darkspear Axe Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 18970,
},
[420853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Investi-gator",
["npcID"] = 201664,
},
[132652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Shaman",
["npcID"] = 67255,
},
[449522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drone Abductor",
["npcID"] = 219655,
},
[53333] = {
["encounterName"] = "Hadronox",
["source"] = "Anub'ar Necromancer",
["encounterID"] = 1972,
["event"] = "SPELL_CAST_START",
["npcID"] = 29098,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[114456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hedric Evencane",
["npcID"] = 58840,
},
[138772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Direhorn",
["npcID"] = 70016,
},
[406566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[396327] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[396600] = {
["source"] = "Karkidan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193725,
},
[62601] = {
["encounterName"] = "Thorim",
["source"] = "Sif",
["encounterID"] = 1141,
["event"] = "SPELL_CAST_START",
["npcID"] = 33196,
},
[396432] = {
["source"] = "Acrosoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193243,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[404517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vakan",
["npcID"] = 199855,
},
[139818] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70247,
},
[139797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manchu",
["npcID"] = 70202,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[189992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ingrid Bellix",
["npcID"] = 147623,
},
[76572] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Sadist",
["npcID"] = 39980,
},
[427001] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[93456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Cork",
["npcID"] = 47980,
},
[196111] = {
["encounterName"] = "Serpentrix",
["source"] = "Seaspray Crab",
["npcID"] = 91793,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[136725] = {
["encounterName"] = "Horridon",
["source"] = "Farraki Wastewalker",
["npcID"] = 69175,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[461814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[20680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 68609,
},
[131642] = {
["source"] = "Gyro-Mechanic Lavenderp",
["event"] = "SPELL_CAST_START",
["npcID"] = 65883,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[412669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klakatak",
["npcID"] = 203618,
},
[142894] = {
["source"] = "Admiral Hodgson",
["event"] = "SPELL_CAST_START",
["npcID"] = 71327,
},
[377854] = {
["source"] = "Rustlily",
["event"] = "SPELL_CAST_START",
["npcID"] = 195223,
},
[65812] = {
["source"] = "Serissa Grimdabbler",
["event"] = "SPELL_CAST_START",
["npcID"] = 34474,
},
[74003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trade Prince Gallywix",
["npcID"] = 39582,
},
[166420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Deadeye",
["npcID"] = 81422,
},
[192017] = {
["source"] = "Valkyra Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 92764,
},
[394275] = {
["source"] = "Cygenoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 185660,
},
[461817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[392194] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[197137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[112911] = {
["source"] = "Fragment of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58810,
},
[420895] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["npcID"] = 95833,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1806,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2685,
},
[130317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Spitfire",
["npcID"] = 66289,
},
[145944] = {
["source"] = "Zeal",
["event"] = "SPELL_CAST_START",
["npcID"] = 72661,
},
[453617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automaxor",
["npcID"] = 220265,
},
[170517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Explosive",
["npcID"] = 78479,
},
[404480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 202810,
},
[192019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Night Watch Mariner",
["npcID"] = 97182,
},
[441343] = {
["isChanneled"] = true,
["source"] = "Frenzied Leaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222214,
},
[169494] = {
["source"] = "Gnarlroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81984,
},
[117519] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["npcID"] = 60583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[390150] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[138778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 69616,
},
[411916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[369674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Geomancer",
["npcID"] = 184022,
},
[281621] = {
["source"] = "Mech Jockey",
["event"] = "SPELL_CAST_START",
["npcID"] = 130488,
},
[139803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manchu",
["npcID"] = 70202,
},
[40078] = {
["source"] = "Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[144922] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71380,
},
[20297] = {
["source"] = "Dmong Naruuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 60683,
},
[49037] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["encounterID"] = 1976,
["event"] = "SPELL_CAST_START",
["npcID"] = 26631,
},
[369675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Geomancer",
["npcID"] = 184022,
},
[49549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Ring Guardian",
["npcID"] = 27638,
},
[267288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Ring Shaman",
["npcID"] = 135671,
},
[259597] = {
["source"] = "Feral Ravasaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 131560,
},
[386059] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[144923] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71380,
},
[34447] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Archmage Aethas Sunreaver",
["npcID"] = 69619,
},
[451608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungering Shimmerfin",
["npcID"] = 215243,
},
[197141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[200214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[21833] = {
["encounterName"] = "Tinkerer Gizlock",
["source"] = "Tinkerer Gizlock",
["npcID"] = 13601,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 427,
},
[394269] = {
["isChanneled"] = true,
["source"] = "Cygenoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185660,
},
[443397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Venomblade",
["npcID"] = 220193,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["npcID"] = 186338,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2581,
},
[64652] = {
["source"] = "Champion of Hodir",
["event"] = "SPELL_CAST_START",
["npcID"] = 34133,
},
[114449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hedric Evencane",
["npcID"] = 58840,
},
[392207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gareed",
["npcID"] = 200722,
},
[147998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[396317] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[441351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[15653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Wyrmkin",
["npcID"] = 5280,
},
[125204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten King",
["npcID"] = 67081,
},
[200216] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[138782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Spellbow",
["npcID"] = 69624,
},
[147997] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest of Ordos",
["npcID"] = 72898,
},
[396302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[142879] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["encounterID"] = 1595,
["event"] = "SPELL_CAST_START",
["npcID"] = 71454,
},
[64396] = {
["encounterName"] = "Auriaya",
["source"] = "Auriaya",
["encounterID"] = 1131,
["event"] = "SPELL_CAST_START",
["npcID"] = 33515,
},
[40079] = {
["source"] = "Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[132646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Oracle",
["npcID"] = 67256,
},
[148004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Kilnmaster",
["npcID"] = 72896,
},
[138783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunreaver Ranger",
["npcID"] = 69625,
},
[197144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[396304] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 197135,
},
[117010] = {
["source"] = "Dread Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 62307,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1040,
},
[160285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goren Gouger",
["npcID"] = 80690,
},
[404496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 202810,
},
[126737] = {
["source"] = "Kz'Kzik",
["event"] = "SPELL_CAST_START",
["npcID"] = 62832,
},
[146975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Iron Scorpion",
["npcID"] = 73194,
},
[263202] = {
["source"] = "Venture Co. Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 130661,
},
[396315] = {
["source"] = "Stormcaller Narkena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201539,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[420881] = {
["source"] = "Zaqali Ashwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 208659,
},
[451600] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Expeller",
["npcID"] = 224368,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[136737] = {
["source"] = "Shan'ze Gravekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69235,
},
[172574] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 86373,
},
[396314] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Filth Caller",
["npcID"] = 197122,
},
[271401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Craghorn Behemoth",
["npcID"] = 140657,
},
[461836] = {
["source"] = "Flickerflame Candleflyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219341,
},
[59278] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ring-Lord Sorceress",
["npcID"] = 27639,
},
[124690] = {
["source"] = "Seething Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 61054,
},
[62605] = {
["encounterName"] = "Thorim",
["source"] = "Sif",
["encounterID"] = 1141,
["event"] = "SPELL_CAST_START",
["npcID"] = 33196,
},
[386072] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[118547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Wing Commander",
["npcID"] = 56723,
},
[394262] = {
["source"] = "Cygenoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 185660,
},
[263209] = {
["source"] = "Mine Rat",
["event"] = "SPELL_CAST_START",
["npcID"] = 130437,
},
[394264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[49807] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Guard Gro'tash",
["npcID"] = 67927,
},
[64653] = {
["source"] = "Winter Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 34134,
},
[412693] = {
["source"] = "Zaqali Dreamcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 211057,
},
[132644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Flesh-hunter",
["npcID"] = 67259,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[148002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[41360] = {
["source"] = "Promenade Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 23394,
},
[390169] = {
["source"] = "Trueborn Dropflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 201439,
},
[142883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maragor",
["npcID"] = 71492,
},
[394265] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hyenamaster Durgun",
["npcID"] = 186515,
},
[396313] = {
["source"] = "Entropic Diruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 201598,
},
[126227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Ek'vem",
["npcID"] = 62073,
},
[126739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korvexxis",
["npcID"] = 62579,
},
[148003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Kilnmaster",
["npcID"] = 72896,
},
[461842] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[148001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Chanter",
["npcID"] = 72897,
},
[142884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maragor",
["npcID"] = 71492,
},
[394261] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[136741] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[200218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[114965] = {
["isChanneled"] = true,
["source"] = "Wyrmhorn Turtle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56256,
},
[396316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Yrgena",
["npcID"] = 201538,
},
[138784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunreaver Ranger",
["npcID"] = 69625,
},
[124692] = {
["source"] = "Spiteful Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 63839,
},
[386078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[125716] = {
["source"] = "Set'thik Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 64358,
},
[195103] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wandering Shellback",
["npcID"] = 91785,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[172578] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[412700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Dreamcrusher",
["npcID"] = 211057,
},
[128276] = {
["isChanneled"] = true,
["source"] = "Ik'thik Egg-Drone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63257,
},
[408605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[64654] = {
["source"] = "Winter Rumbler",
["event"] = "SPELL_CAST_START",
["npcID"] = 34135,
},
[138781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Spellbow",
["npcID"] = 69624,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["npcID"] = 184580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[32914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Drake",
["npcID"] = 42522,
},
[16587] = {
["source"] = "Vile Tutor",
["event"] = "SPELL_CAST_START",
["npcID"] = 8548,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[410629] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[410655] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[386096] = {
["source"] = "Screechflight Cursewife",
["event"] = "SPELL_CAST_START",
["npcID"] = 184816,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[83730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarinexx",
["npcID"] = 39149,
},
[139816] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70235,
},
[461850] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ringing Death",
["npcID"] = 214162,
},
[398370] = {
["source"] = "Calcifying Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 203342,
},
[375812] = {
["isChanneled"] = true,
["source"] = "Convoked Tremor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187082,
},
[451612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1040,
},
[125720] = {
["source"] = "Osul Mist-Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 60697,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[441385] = {
["source"] = "Hollow Frostweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222193,
},
[124182] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Battat",
["npcID"] = 60728,
},
[48191] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alliance Ranger",
["npcID"] = 26802,
},
[161150] = {
["source"] = "Grom'kar Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 80936,
},
[396325] = {
["source"] = "Disease Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197138,
},
[142934] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71393,
},
[449567] = {
["source"] = "Sunless Tidemarshal",
["event"] = "SPELL_CAST_START",
["npcID"] = 219602,
},
[131627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Haunt",
["npcID"] = 66425,
},
[119575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildscale Herbalist",
["npcID"] = 58216,
},
[185868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyndrissen",
["npcID"] = 90390,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[40082] = {
["source"] = "Coilskar Harpooner",
["event"] = "SPELL_CAST_START",
["npcID"] = 22874,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[195108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[408614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devastator",
["npcID"] = 198869,
},
[64649] = {
["isChanneled"] = true,
["source"] = "Champion of Hodir",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 34133,
},
[165416] = {
["source"] = "Frozen Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 78631,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["encounterID"] = 2609,
["event"] = "SPELL_CAST_START",
["npcID"] = 189893,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[21067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Sprite",
["npcID"] = 12216,
},
[136748] = {
["source"] = "Shan'ze Soulripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69903,
},
[463905] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[118552] = {
["source"] = "Mogu'shan Secret-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 61131,
},
[377900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Treesmasher",
["npcID"] = 207087,
},
[396330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Sentry",
["npcID"] = 185357,
},
[262524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automatic Explosive Ejector",
["npcID"] = 133588,
},
[241184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kvaldir Mistcaller",
["npcID"] = 93377,
},
[416751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vargul Mystic",
["npcID"] = 207805,
},
[118538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Invader",
["npcID"] = 65684,
},
[125736] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Fear",
["npcID"] = 64368,
},
[435263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 218346,
},
[443430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Silkbinder",
["npcID"] = 220195,
},
[189991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ingrid Bellix",
["npcID"] = 147623,
},
[82610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabersnout",
["npcID"] = 37513,
},
[387711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[201189] = {
["isChanneled"] = true,
["source"] = "Vampiric Felbat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97228,
},
[322614] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["npcID"] = 164517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2393,
},
[126232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Warrior",
["npcID"] = 65170,
},
[441384] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[139822] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70212,
},
[119577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildscale Herbalist",
["npcID"] = 58216,
},
[163337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Rylak",
["npcID"] = 88643,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[80158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Warbringer",
["npcID"] = 42696,
},
[273470] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[443363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riled Sandtwister",
["npcID"] = 225900,
},
[130310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springtail Digger",
["npcID"] = 66264,
},
[394288] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[16588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Priestess",
["npcID"] = 42823,
},
[267997] = {
["source"] = "Vilefiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 135816,
},
[50066] = {
["source"] = "Pumpkin Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 27936,
},
[115510] = {
["source"] = "Shan'ze Spiritclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55291,
},
[136752] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Lu'lin",
["npcID"] = 68905,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1560,
},
[390194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[87680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Colossus",
["npcID"] = 46646,
},
[443436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of Ansurek",
["npcID"] = 220196,
},
[204243] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Dweller",
["npcID"] = 101991,
},
[439341] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[118077] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["npcID"] = 60585,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[121114] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[88862] = {
["isChanneled"] = true,
["source"] = "Neferset Snake Charmer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47738,
},
[12471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Shadowcaster",
["npcID"] = 5648,
},
[406493] = {
["source"] = "Cavern Flayer Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 202309,
},
[90398] = {
["source"] = "Defias Squallshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 48521,
},
[451543] = {
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[199210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[167470] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[185900] = {
["source"] = "Overseer Lykill",
["event"] = "SPELL_CAST_START",
["npcID"] = 86535,
},
[47668] = {
["source"] = "Risen Drakkari Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 26635,
},
[293954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eclipsing Grasp",
["npcID"] = 218693,
},
[131635] = {
["source"] = "Morgus Grimhatchet",
["event"] = "SPELL_CAST_START",
["npcID"] = 65880,
},
[461870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 229227,
},
[128282] = {
["source"] = "Shek'zeer Clutch-Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 64559,
},
[449584] = {
["source"] = "Sunless Tidemarshal",
["event"] = "SPELL_CAST_START",
["npcID"] = 219602,
},
[412156] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[169519] = {
["source"] = "Frenzied Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 83450,
},
[422964] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[160312] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Cleric",
["npcID"] = 77134,
},
[389848] = {
["isChanneled"] = true,
["source"] = "Taranthiza",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196970,
},
[461872] = {
["isChanneled"] = true,
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214162,
},
[398392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfira Wanderling",
["npcID"] = 205808,
},
[441395] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[21068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corruptor",
["npcID"] = 12217,
},
[429109] = {
["source"] = "Forgebound Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[126235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Warrior",
["npcID"] = 65170,
},
[449481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Roskarrag",
["npcID"] = 221071,
},
[386107] = {
["source"] = "Screechflight Hexclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 183995,
},
[429110] = {
["source"] = "Forgebound Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 213338,
},
[398394] = {
["source"] = "Deep Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203898,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["npcID"] = 86684,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[383953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bakar Companion",
["npcID"] = 194255,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["npcID"] = 88862,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[15587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zan'do",
["npcID"] = 214870,
},
[400443] = {
["isChanneled"] = true,
["source"] = "Crumbling Scoria",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201339,
},
[328772] = {
["source"] = "Vault Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199126,
},
[396348] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 197134,
},
[115997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dappled Moth",
["npcID"] = 57232,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1839,
},
[328773] = {
["source"] = "Vault Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199126,
},
[41372] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[398397] = {
["source"] = "Clacking Magmaclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 205809,
},
[186529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeard",
["npcID"] = 91657,
},
[386111] = {
["source"] = "Screechflight Butcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187650,
},
[396350] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 197133,
},
[139771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Celestial Shaper",
["npcID"] = 70240,
},
[409041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[71812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Tentacle",
["npcID"] = 33420,
},
[461879] = {
["source"] = "Waxy Globule",
["event"] = "SPELL_CAST_START",
["npcID"] = 213873,
},
[398399] = {
["source"] = "Chittering Acidclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201093,
},
[245155] = {
["source"] = "Devlynn Styx",
["event"] = "SPELL_CAST_START",
["npcID"] = 121527,
},
[74019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 39594,
},
[420925] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[393908] = {
["isChanneled"] = true,
["source"] = "Discordant Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189149,
},
[398464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Wormling",
["npcID"] = 205613,
},
[377923] = {
["source"] = "Bound Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 186626,
},
[443640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Elf Riftwalker",
["npcID"] = 215475,
},
[390210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 197130,
},
[118558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Fish-Getter",
["npcID"] = 60299,
},
[256865] = {
["source"] = "Heartsbane Sister",
["event"] = "SPELL_CAST_START",
["npcID"] = 131538,
},
[279264] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Honorbound Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 149536,
},
[411399] = {
["source"] = "Bogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 201747,
},
[457787] = {
["isChanneled"] = true,
["source"] = "Wickbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215077,
},
[199151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[429119] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[122142] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Borokhula the Destroyer",
["npcID"] = 58739,
},
[204337] = {
["source"] = "Felsoul Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 95314,
},
[74020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 39594,
},
[461884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spring Elemental",
["npcID"] = 215810,
},
[42024] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Elementalist",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23523,
},
[41183] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[377927] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192690,
},
[194099] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Grimewalker",
["npcID"] = 97185,
},
[16561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Primalist",
["npcID"] = 82857,
},
[408749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["npcID"] = 204412,
},
[88055] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[63891] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[23601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rangari Jonaa",
["npcID"] = 86663,
},
[425027] = {
["source"] = "Earth Infused Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 210109,
},
[40086] = {
["source"] = "Dragon Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 22885,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[441410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worker Bee",
["npcID"] = 210265,
},
[129785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistblade Scale-Lord",
["npcID"] = 63179,
},
[420933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcoross",
["npcID"] = 208478,
},
[99618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gai-Cho Cauterizer",
["npcID"] = 62577,
},
[396208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 197126,
},
[271448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proudmoore Defender",
["npcID"] = 147892,
},
[369442] = {
["source"] = "Tempestrian",
["event"] = "SPELL_CAST_START",
["npcID"] = 193258,
},
[197486] = {
["isChanneled"] = true,
["source"] = "Brood Queen Tyranna",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 93802,
},
[441412] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deathpetal",
["npcID"] = 206184,
},
[384134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Warspear",
["npcID"] = 192791,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[267354] = {
["source"] = "Hired Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 134232,
},
[257582] = {
["encounterName"] = "Azerokk",
["source"] = "Earthrager",
["encounterID"] = 2106,
["event"] = "SPELL_CAST_START",
["npcID"] = 129802,
},
[320596] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[36247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felblood Warlock",
["npcID"] = 89754,
},
[105762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grookin Wildtail",
["npcID"] = 56309,
},
[195046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122967,
},
[420937] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2728,
},
[443292] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[408466] = {
["source"] = "Drogbar Crystal-collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 204407,
},
[135742] = {
["isChanneled"] = true,
["source"] = "Ishi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68225,
},
[176301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Waterspeaker",
["npcID"] = 88261,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[263262] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Shalebiter",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 134005,
},
[396366] = {
["source"] = "Rimetalon Spellflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 195756,
},
[390223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Tarasek",
["npcID"] = 187089,
},
[425035] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[112930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lu-Shero",
["npcID"] = 69274,
},
[396367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[406798] = {
["isChanneled"] = true,
["source"] = "Sawscale Viper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208691,
},
[130848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191206,
},
[451734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Persistent Honeyslime",
["npcID"] = 222843,
},
[431180] = {
["source"] = "Dripear the Waxy",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[425037] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[459849] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[367521] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[195129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[204344] = {
["source"] = "Blacktalon Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 186634,
},
[459850] = {
["source"] = "Exalted Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 222368,
},
[119586] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[426905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Ghur'sha",
["npcID"] = 212778,
},
[387217] = {
["source"] = "Andantenormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 199609,
},
[369750] = {
["source"] = "Zaqali Blazestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200451,
},
[136769] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[200498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Soulstalker",
["npcID"] = 96278,
},
[138817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Pterrorwing",
["npcID"] = 70263,
},
[369751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Arbalist",
["npcID"] = 204274,
},
[453709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelpmire",
["npcID"] = 220287,
},
[269099] = {
["isChanneled"] = true,
["source"] = "Venture Co. War Machine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133463,
},
[81008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalspawn Giant",
["npcID"] = 42810,
},
[81320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungalmancer Glop",
["npcID"] = 43372,
},
[136770] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[387708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[425042] = {
["source"] = "Fungarian Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 207460,
},
[172606] = {
["source"] = "Goc",
["event"] = "SPELL_CAST_START",
["npcID"] = 85580,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[201176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[392279] = {
["source"] = "Territorial Proto Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 191778,
},
[40088] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[8994] = {
["source"] = "Gul'tar the Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 68048,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[392280] = {
["source"] = "Kaurdyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 197835,
},
[20801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp Minion",
["npcID"] = 12922,
},
[461904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orb of Ascendance",
["npcID"] = 229296,
},
[390233] = {
["source"] = "Rendvith",
["event"] = "SPELL_CAST_START",
["npcID"] = 196971,
},
[425045] = {
["source"] = "Splinterlimb",
["event"] = "SPELL_CAST_START",
["npcID"] = 209365,
},
[143939] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71161,
},
[82878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssion",
["npcID"] = 44289,
},
[275560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshrot Blighthound",
["npcID"] = 146911,
},
[165220] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[131653] = {
["source"] = "Vor'thik Fear-Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 62814,
},
[445524] = {
["source"] = "Shrillwing Hunter En'kilah",
["event"] = "SPELL_CAST_START",
["npcID"] = 222038,
},
[120100] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[392283] = {
["source"] = "Roosting Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 196369,
},
[263275] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Taskmaster Askari",
["encounterID"] = 2105,
["event"] = "SPELL_CAST_START",
["npcID"] = 134012,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[80117] = {
["source"] = "Burrowing Leyworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 106630,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[367500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 195135,
},
[133702] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodmaster Noshi",
["npcID"] = 67264,
},
[392285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Proto-Dragon",
["npcID"] = 193658,
},
[320614] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[387145] = {
["source"] = "Stormcaller Solongo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194315,
},
[275564] = {
["source"] = "Shadowstarved Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[384095] = {
["source"] = "Ohuna Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194254,
},
[394334] = {
["source"] = "Matriarch Avethyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 184847,
},
[111398] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[124654] = {
["source"] = "Water Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 63519,
},
[394843] = {
["source"] = "Oshigol",
["event"] = "SPELL_CAST_START",
["npcID"] = 193235,
},
[48280] = {
["source"] = "Blingtron 5000",
["event"] = "SPELL_CAST_START",
["npcID"] = 77789,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[122149] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62408,
},
[396775] = {
["source"] = "Primal Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190996,
},
[443482] = {
["source"] = "Shipwright Bodyguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 225218,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[428915] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Manifested Monarch",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 214020,
},
[200256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Minion",
["npcID"] = 101549,
},
[386146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[371812] = {
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 197123,
},
[414815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slagnaros",
["npcID"] = 206134,
},
[425054] = {
["source"] = "Zaqali Portalkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 211756,
},
[131657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Vanguard",
["npcID"] = 58368,
},
[440131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alleria Windrunner",
["npcID"] = 215014,
},
[375599] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Cliff",
["npcID"] = 191315,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187771,
},
[164218] = {
["source"] = "Grimrail Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81407,
},
[41084] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[260666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilded Priestess",
["npcID"] = 132126,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[409921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[396388] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[275571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Tannin",
["npcID"] = 152736,
},
[64174] = {
["source"] = "Hodir",
["event"] = "SPELL_CAST_START",
["npcID"] = 33411,
},
[443487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worker Bee",
["npcID"] = 210265,
},
[144969] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[423010] = {
["source"] = "Zealous Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 210813,
},
[269429] = {
["source"] = "Venture Co. War Machine",
["event"] = "SPELL_CAST_START",
["npcID"] = 133463,
},
[47257] = {
["isChanneled"] = true,
["source"] = "Arcane Serpent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26319,
},
[55704] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 29981,
},
[428910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auctioned Pages Past",
["npcID"] = 214069,
},
[400486] = {
["isChanneled"] = true,
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202803,
},
[185794] = {
["source"] = "Burning Hellion",
["event"] = "SPELL_CAST_START",
["npcID"] = 90660,
},
[171799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfang Prowler",
["npcID"] = 89746,
},
[472158] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["encounterID"] = 2987,
["event"] = "SPELL_CAST_START",
["npcID"] = 225204,
},
[114472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Granders",
["npcID"] = 58936,
},
[377962] = {
["source"] = "Frostfoot Yeti",
["event"] = "SPELL_CAST_START",
["npcID"] = 192914,
},
[41370] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[277365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kao-Tien Subjugator",
["npcID"] = 136551,
},
[400488] = {
["isChanneled"] = true,
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202803,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[412775] = {
["isChanneled"] = true,
["source"] = "Dinn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203646,
},
[145995] = {
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72770,
},
[425062] = {
["source"] = "Zaqali Steelshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[205380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Archer",
["npcID"] = 103729,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189232,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[258622] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["encounterID"] = 2106,
["event"] = "SPELL_CAST_START",
["npcID"] = 129227,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[145996] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Na'kaz",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73949,
},
[377140] = {
["event"] = "SPELL_CAST_START",
["source"] = "River Hornswog",
["npcID"] = 191618,
},
[201902] = {
["source"] = "Taintheart Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 100539,
},
[214596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Starbuck",
["npcID"] = 107487,
},
[340412] = {
["source"] = "Forgotten Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 202446,
},
[375919] = {
["source"] = "Streamside Scythid",
["event"] = "SPELL_CAST_START",
["npcID"] = 191469,
},
[424798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infected Beast",
["npcID"] = 210478,
},
[371824] = {
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 197123,
},
[373872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Decay",
["npcID"] = 186227,
},
[459609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Sabertusk",
["npcID"] = 223432,
},
[320631] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["npcID"] = 164702,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[119593] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[439401] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[449640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Siegebomber",
["npcID"] = 216044,
},
[40091] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[371471] = {
["isChanneled"] = true,
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187969,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anxious Memory",
["npcID"] = 200170,
},
[294491] = {
["source"] = "Time Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 202450,
},
[377206] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[396400] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[406639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Response Team Watcher",
["npcID"] = 202318,
},
[192073] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[377971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawning Thresher",
["npcID"] = 194342,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[145999] = {
["source"] = "Arcweaver Reinforcements",
["event"] = "SPELL_CAST_START",
["npcID"] = 73153,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["npcID"] = 184580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[443500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Swarmguard",
["npcID"] = 220197,
},
[388211] = {
["source"] = "Oshigol",
["event"] = "SPELL_CAST_START",
["npcID"] = 193235,
},
[8873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Child of Volcanoth",
["npcID"] = 38845,
},
[148929] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75835,
},
[419327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[453740] = {
["source"] = "Conqueror Or'sosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 222723,
},
[252687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowblade Stalker",
["npcID"] = 122970,
},
[262554] = {
["source"] = "Expert Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 133593,
},
[320637] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[144832] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["encounterID"] = 1604,
["event"] = "SPELL_CAST_START",
["npcID"] = 71734,
},
[166478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Soul",
["npcID"] = 82647,
},
[39794] = {
["source"] = "Lightsworn Vindicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 22861,
},
[258627] = {
["encounterName"] = "Azerokk",
["source"] = "Earthrager",
["encounterID"] = 2106,
["event"] = "SPELL_CAST_START",
["npcID"] = 129802,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["npcID"] = 190381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[38556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Headhunter",
["npcID"] = 45015,
},
[200757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Minion",
["npcID"] = 96280,
},
[128708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Brew Alemental",
["npcID"] = 59521,
},
[435004] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chef Chewie",
["npcID"] = 214697,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[176718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Houndmaster Ely",
["npcID"] = 92951,
},
[455815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Cabbage Smacker",
["npcID"] = 206514,
},
[146002] = {
["source"] = "Kor'kron War Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 72768,
},
[155909] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_START",
["npcID"] = 75864,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[265352] = {
["source"] = "Blight Toad",
["event"] = "SPELL_CAST_START",
["npcID"] = 135052,
},
[385172] = {
["source"] = "Wind Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 191645,
},
[417481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[443507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Swarmguard",
["npcID"] = 220197,
},
[387243] = {
["source"] = "Captivated Shellwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 195962,
},
[227913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[394060] = {
["source"] = "Productive Pollinator",
["event"] = "SPELL_CAST_START",
["npcID"] = 193809,
},
[394362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rasnar the War Ender",
["npcID"] = 193232,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[412488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawling Goo",
["npcID"] = 205820,
},
[20797] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Novice Darkspear Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 38279,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 213770,
},
[87779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[115423] = {
["source"] = "Shan'ze Spiritbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 55279,
},
[79932] = {
["source"] = "High Priest Sekhemet",
["event"] = "SPELL_CAST_START",
["npcID"] = 47730,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[429176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[122078] = {
["source"] = "Dreadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 62306,
},
[277643] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gholvran the Cryptic",
["npcID"] = 146880,
},
[263309] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Adderis",
["npcID"] = 133379,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2124,
},
[445559] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[38557] = {
["source"] = "Frostmane Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 41175,
},
[196175] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Hardshell",
["npcID"] = 95947,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[84837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oostan Headhunter",
["npcID"] = 38811,
},
[51963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Ebon Gargoyle",
["npcID"] = 27829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[143958] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Gloom",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71477,
},
[396415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 190587,
},
[398463] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[388857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Walker",
["npcID"] = 197647,
},
[41117] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[388225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfist",
["npcID"] = 192030,
},
[182866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geir",
["npcID"] = 91948,
},
[269456] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["npcID"] = 128652,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[41277] = {
["source"] = "Bonechewer Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[78807] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[46042] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[123610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Protector",
["npcID"] = 63275,
},
[191058] = {
["source"] = "Mirana Starlight",
["event"] = "SPELL_CAST_START",
["npcID"] = 99451,
},
[302222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titanic Fungus",
["npcID"] = 202658,
},
[135769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan Kien",
["npcID"] = 68378,
},
[83796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlok Shroomtender",
["npcID"] = 43368,
},
[113967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Swarmbreaker",
["npcID"] = 65683,
},
[269900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titanic Fungus",
["npcID"] = 202658,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[392635] = {
["source"] = "Kaurdyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 197835,
},
[199250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seacursed Swiftblade",
["npcID"] = 98919,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[201298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtainted Burster",
["npcID"] = 100532,
},
[144985] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[427960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firebrand Fystia",
["npcID"] = 209893,
},
[457854] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Taskmaker",
["npcID"] = 218444,
},
[320655] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["npcID"] = 162691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2387,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[373897] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[375945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watchful Gladehind",
["npcID"] = 207621,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[396423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 190587,
},
[414506] = {
["source"] = "Ashen Emberwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 209098,
},
[253517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[139867] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[265368] = {
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 131587,
},
[138668] = {
["source"] = "Drakkari Frost Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 69910,
},
[385832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rageclaw",
["npcID"] = 187192,
},
[160345] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[426787] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[47729] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[118576] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Springtail Gnasher",
["npcID"] = 57413,
},
[410760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[277297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Inspector",
["npcID"] = 139804,
},
[141916] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Wrenix the Wretched",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71188,
},
[164261] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75835,
},
[369806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[265371] = {
["source"] = "Enthralled Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 131585,
},
[455812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Cabbage Smacker",
["npcID"] = 206514,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[139869] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[265372] = {
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 131587,
},
[443162] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[179996] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfallen Overseer",
["npcID"] = 90377,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[44503] = {
["source"] = "Wretched Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 24690,
},
[455814] = {
["source"] = "Elemental Rift",
["event"] = "SPELL_CAST_START",
["npcID"] = 217914,
},
[211957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glimar Ironfist",
["npcID"] = 91529,
},
[127280] = {
["source"] = "Viletongue Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 58738,
},
[372296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[128304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Disciple",
["npcID"] = 58198,
},
[75073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spiritbinder",
["npcID"] = 69225,
},
[64668] = {
["encounterName"] = "Mimiron",
["source"] = "Assault Bot",
["encounterID"] = 1138,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 34057,
},
[445577] = {
["source"] = "Shrillwing Hunter En'kilah",
["event"] = "SPELL_CAST_START",
["npcID"] = 222038,
},
[398479] = {
["source"] = "Hibernating Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204742,
},
[381721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 197120,
},
[369811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[265376] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[116018] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[441483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathpetal",
["npcID"] = 206184,
},
[378003] = {
["source"] = "Guardian Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 192680,
},
[265377] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[146848] = {
["encounterName"] = "Galakras",
["source"] = "High Enforcer Thranok",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72355,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fire Elemental",
["npcID"] = 189843,
},
[40946] = {
["isChanneled"] = true,
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[128305] = {
["source"] = "Suna Silentstrike",
["event"] = "SPELL_CAST_START",
["npcID"] = 61055,
},
[449290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockgore",
["npcID"] = 220241,
},
[395936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Hungry Riverbeast",
["npcID"] = 195969,
},
[88886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Scryer",
["npcID"] = 48625,
},
[382101] = {
["source"] = "Rebel Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195063,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[111775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lilian Voss",
["npcID"] = 58722,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[382102] = {
["source"] = "Rebel Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 195063,
},
[392341] = {
["source"] = "Khuumog",
["event"] = "SPELL_CAST_START",
["npcID"] = 194761,
},
[392757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Proto-Drake",
["npcID"] = 195094,
},
[147868] = {
["source"] = "Blackfuse Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 73095,
},
[38560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smart Mining Monkey",
["npcID"] = 35812,
},
[391948] = {
["source"] = "Steam Coalescence",
["event"] = "SPELL_CAST_START",
["npcID"] = 190110,
},
[122064] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62405,
},
[131485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Succubus",
["npcID"] = 66901,
},
[182877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geir",
["npcID"] = 91948,
},
[40508] = {
["encounterName"] = "Gurtogg Bloodboil",
["source"] = "Gurtogg Bloodboil",
["encounterID"] = 605,
["event"] = "SPELL_CAST_START",
["npcID"] = 22948,
},
[369818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[169567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Growth",
["npcID"] = 81769,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[457872] = {
["source"] = "Deepfiend Azellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 218458,
},
[394392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Loss",
["npcID"] = 190259,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[233048] = {
["source"] = "Felblade Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 118776,
},
[135780] = {
["source"] = "Ishi",
["event"] = "SPELL_CAST_START",
["npcID"] = 68225,
},
[118990] = {
["source"] = "Mortbreath Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60202,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[51103] = {
["encounterName"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[410776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Protector",
["npcID"] = 204658,
},
[199674] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Bjorn",
["npcID"] = 97081,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[142948] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["encounterID"] = 1593,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71153,
},
[451732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarming Cogwalker",
["npcID"] = 232871,
},
[157053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[178784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prince Farondis",
["npcID"] = 88869,
},
[82837] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Wildhammer Mercenary",
["event"] = "SPELL_CAST_START",
["npcID"] = 37977,
},
[114997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angry Sprite",
["npcID"] = 71823,
},
[115509] = {
["source"] = "Shado-Pan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 59751,
},
[388977] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Territorial Coastling",
["npcID"] = 193163,
},
[392349] = {
["source"] = "Khuumog",
["event"] = "SPELL_CAST_START",
["npcID"] = 194761,
},
[143973] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[404636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Narlena",
["npcID"] = 202244,
},
[63134] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[449687] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[427162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[407039] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Beast",
["npcID"] = 203812,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2684,
},
[398494] = {
["source"] = "Zaqali Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 207090,
},
[400542] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 193460,
},
[143974] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71155,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[324776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Shaper",
["npcID"] = 166275,
},
[384161] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["encounterID"] = 1412,
["event"] = "SPELL_CAST_START",
["npcID"] = 56637,
},
[371875] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[390305] = {
["source"] = "Rendvith",
["event"] = "SPELL_CAST_START",
["npcID"] = 196971,
},
[449690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Ge'zah",
["npcID"] = 223839,
},
[369828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Basilisk",
["npcID"] = 184023,
},
[83151] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["npcID"] = 44819,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1055,
},
[398497] = {
["source"] = "Quartzite Sporebat",
["event"] = "SPELL_CAST_START",
["npcID"] = 201306,
},
[9053] = {
["source"] = "Seasoned Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 22863,
},
[182359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naga Brute",
["npcID"] = 91459,
},
[436971] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[387037] = {
["source"] = "Torch Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 201472,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["npcID"] = 99192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1839,
},
[114874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[449693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Re'zah",
["npcID"] = 223822,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[90938] = {
["source"] = "Defias Blood Wizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 48417,
},
[398500] = {
["source"] = "Conflagrated Rock Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 203328,
},
[134762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disha Fearwarden",
["npcID"] = 68319,
},
[143977] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71155,
},
[169574] = {
["isChanneled"] = true,
["source"] = "Dionor Seedpriest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81721,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[269493] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["encounterID"] = 2105,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 129214,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[396454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Insatiable Hornswog",
["npcID"] = 185715,
},
[413133] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[449696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Ge'zah",
["npcID"] = 223839,
},
[157001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["npcID"] = 59153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1428,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[157543] = {
["isChanneled"] = true,
["source"] = "Frozen Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78963,
},
[146823] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["encounterID"] = 1604,
["event"] = "SPELL_CAST_START",
["npcID"] = 71734,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[398504] = {
["source"] = "Sulfurous Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 203900,
},
[257629] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[447187] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[118072] = {
["source"] = "The Ook of Dook",
["event"] = "SPELL_CAST_START",
["npcID"] = 60188,
},
[425149] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[459938] = {
["source"] = "Dripear the Waxy",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[198245] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[412366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterrax",
["npcID"] = 203662,
},
[146050] = {
["source"] = "Kor'kron Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 72784,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[393348] = {
["source"] = "Stalwart Broodwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 198263,
},
[111813] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["npcID"] = 58822,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[441510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deadly Sprout",
["npcID"] = 220316,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 213008,
},
[371887] = {
["isChanneled"] = true,
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[15530] = {
["source"] = "Bloodmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 19258,
},
[138627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavemaster Shiaxu",
["npcID"] = 69923,
},
[394413] = {
["source"] = "Goremaul the Gluttonous",
["event"] = "SPELL_CAST_START",
["npcID"] = 193125,
},
[461989] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[392366] = {
["source"] = "Awakened Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 197793,
},
[386223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormshield",
["npcID"] = 194896,
},
[437417] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[455373] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2918,
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[441513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathpetal",
["npcID"] = 206184,
},
[320696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stitched Vanguard",
["npcID"] = 163121,
},
[265407] = {
["source"] = "Banquet Steward",
["event"] = "SPELL_CAST_START",
["npcID"] = 131586,
},
[154221] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Cackling Pyromaniac",
["npcID"] = 76260,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[369193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cravat",
["npcID"] = 194516,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[128192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Soul",
["npcID"] = 68345,
},
[439467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yes Man",
["npcID"] = 219588,
},
[392369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Elemental",
["npcID"] = 190173,
},
[125241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'nas Nightsavage",
["npcID"] = 50338,
},
[136816] = {
["source"] = "Zandalari Fetish-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69155,
},
[203368] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 114404,
},
[375988] = {
["source"] = "Amberfur Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187455,
},
[412868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karokta",
["npcID"] = 203625,
},
[173180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneshamble Basilisk",
["npcID"] = 74962,
},
[455851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Finclaw Bloodtide",
["npcID"] = 220492,
},
[134769] = {
["source"] = "Ubunti the Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 68320,
},
[417497] = {
["source"] = "Rude Crude",
["event"] = "SPELL_CAST_START",
["npcID"] = 206617,
},
[428077] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[441518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Batch",
["npcID"] = 220368,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[42526] = {
["source"] = "Spore",
["event"] = "SPELL_CAST_START",
["npcID"] = 23876,
},
[116027] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[438971] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Ravenous Cinderbee",
["npcID"] = 218016,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[451758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungering Shimmerfin",
["npcID"] = 215243,
},
[210537] = {
["source"] = "Garzareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 97822,
},
[406708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sindragosa",
["npcID"] = 201094,
},
[457902] = {
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 207802,
},
[400877] = {
["source"] = "Smoldering Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 199823,
},
[398012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[157794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Magus",
["npcID"] = 76263,
},
[134771] = {
["source"] = "Ubunti the Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 68320,
},
[394423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rohzor Forgesmash",
["npcID"] = 187598,
},
[394620] = {
["source"] = "Withering Writhebark",
["event"] = "SPELL_CAST_START",
["npcID"] = 197366,
},
[203371] = {
["source"] = "Hill Ettin",
["event"] = "SPELL_CAST_START",
["npcID"] = 102886,
},
[270334] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[459952] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[20692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 68609,
},
[373947] = {
["source"] = "Amberpelt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 195906,
},
[449714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[427189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[388284] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60709,
},
[400569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[394426] = {
["source"] = "Council Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198503,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["npcID"] = 186616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[79854] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Twilight Cryptomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 44855,
},
[382233] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[263371] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["npcID"] = 133944,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2124,
},
[322756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Gatekeeper",
["npcID"] = 165137,
},
[455860] = {
["event"] = "SPELL_CAST_START",
["source"] = "S'toth the Insatiable",
["npcID"] = 222629,
},
[367807] = {
["source"] = "Worldbreaker Escapee",
["event"] = "SPELL_CAST_START",
["npcID"] = 185626,
},
[451765] = {
["source"] = "[DNT]Teleport Bunny Prime",
["event"] = "SPELL_CAST_START",
["npcID"] = 224528,
},
[82753] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Neferset Theurgist",
["npcID"] = 44980,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[159087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Leadslinger",
["npcID"] = 89777,
},
[393045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Causality",
["npcID"] = 186672,
},
[210541] = {
["source"] = "Karuas",
["event"] = "SPELL_CAST_START",
["npcID"] = 97859,
},
[382143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turi Flickerflame",
["npcID"] = 199740,
},
[253544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[394430] = {
["source"] = "Primordial Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 190579,
},
[55715] = {
["source"] = "Earthen Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 29980,
},
[256616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Gutter",
["npcID"] = 133990,
},
[257640] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[143990] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[388288] = {
["isChanneled"] = true,
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190780,
},
[146038] = {
["isChanneled"] = true,
["source"] = "Kor'kron Gunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72784,
},
[376002] = {
["isChanneled"] = true,
["source"] = "Risen Ohuna",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189928,
},
[115006] = {
["source"] = "Hozen Groundpounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 55470,
},
[41381] = {
["source"] = "Priestess of Delight",
["event"] = "SPELL_CAST_START",
["npcID"] = 22964,
},
[65026] = {
["encounterName"] = "Mimiron",
["source"] = "Leviathan Mk II",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 34071,
},
[257641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Powdershot",
["npcID"] = 137521,
},
[41058] = {
["source"] = "Whirling Blade",
["event"] = "SPELL_CAST_START",
["npcID"] = 23369,
},
[185970] = {
["source"] = "Overseer Lykill",
["event"] = "SPELL_CAST_START",
["npcID"] = 86535,
},
[455866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Finclaw Bloodtide",
["npcID"] = 207780,
},
[114872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[394434] = {
["isChanneled"] = true,
["source"] = "Primordial Wrath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190579,
},
[147817] = {
["source"] = "Crimsonscale Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 72876,
},
[198715] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Val'kyr Battlemaiden",
["npcID"] = 100876,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[395012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Investi-gator",
["npcID"] = 201664,
},
[80195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Bruiser",
["npcID"] = 42692,
},
[428703] = {
["source"] = "Rock Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 213954,
},
[394746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskron the Dazzling",
["npcID"] = 193273,
},
[258889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanical Guardhound",
["npcID"] = 139805,
},
[427200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamation of Dreams",
["npcID"] = 209915,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[55811] = {
["source"] = "Iron Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 29984,
},
[395214] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[274254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proudmoore Sentry",
["npcID"] = 147893,
},
[125758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Fear",
["npcID"] = 64368,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[451775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cogwalker",
["npcID"] = 224527,
},
[322767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[64163] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Yogg-Saron",
["encounterID"] = 1143,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 33288,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[394439] = {
["source"] = "Acequian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187617,
},
[387740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[37985] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunreaver Dragonhawk",
["npcID"] = 68762,
},
[426645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[394440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Yrgena",
["npcID"] = 201538,
},
[14443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gai-Cho Boltshooter",
["npcID"] = 62589,
},
[423109] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[83780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Scout",
["npcID"] = 44897,
},
[451778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Machine Speaker",
["npcID"] = 212878,
},
[265433] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[188763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Subduer",
["npcID"] = 91759,
},
[392394] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[139900] = {
["source"] = "Stormbringer Draz'kil",
["event"] = "SPELL_CAST_START",
["npcID"] = 70445,
},
[306389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaul Centurion",
["npcID"] = 156825,
},
[455875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glintwick",
["npcID"] = 219797,
},
[392395] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[435398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algari Expedition Priest",
["npcID"] = 217676,
},
[126128] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ivory Starling",
["npcID"] = 57396,
},
[431303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213892,
},
[449733] = {
["isChanneled"] = true,
["source"] = "Cha'tak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216042,
},
[115009] = {
["isChanneled"] = true,
["source"] = "Shado-Pan Stormbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59808,
},
[396492] = {
["source"] = "Slobberclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 195972,
},
[455877] = {
["source"] = "Deepwater Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 215654,
},
[449734] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[449154] = {
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[23381] = {
["source"] = "Taunka Windfury",
["event"] = "SPELL_CAST_START",
["npcID"] = 27571,
},
[392398] = {
["source"] = "Primal Thundercloud",
["event"] = "SPELL_CAST_START",
["npcID"] = 197509,
},
[435401] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["npcID"] = 95676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1809,
},
[406733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Traitorous Sister",
["npcID"] = 200826,
},
[117664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Hui",
["npcID"] = 61156,
},
[195234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[391081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[262802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskrunner Lorinas",
["npcID"] = 134215,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[197240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prolifica",
["npcID"] = 98986,
},
[388305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Giantess",
["npcID"] = 193075,
},
[423117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volcoross",
["npcID"] = 208478,
},
[62042] = {
["encounterName"] = "Thorim",
["source"] = "Thorim",
["encounterID"] = 1141,
["event"] = "SPELL_CAST_START",
["npcID"] = 32865,
},
[442998] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[442995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Honey Harvester",
["npcID"] = 220946,
},
[431309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213892,
},
[51110] = {
["encounterName"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[394450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Krakle",
["npcID"] = 191972,
},
[103236] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jade Guardian",
["npcID"] = 55236,
},
[79175] = {
["isChanneled"] = true,
["source"] = "Azure Prickly Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60437,
},
[412275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Reykal",
["npcID"] = 203355,
},
[121154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Sentinel",
["npcID"] = 62220,
},
[106923] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[118297] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[449130] = {
["source"] = "Forge Loader",
["event"] = "SPELL_CAST_START",
["npcID"] = 213343,
},
[443598] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[159021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durag the Dominator",
["npcID"] = 77890,
},
[256627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Enforcer",
["npcID"] = 129374,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[388310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[112998] = {
["source"] = "Residual Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58803,
},
[392406] = {
["source"] = "Storm Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 197982,
},
[172816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 155197,
},
[48698] = {
["source"] = "Dragonflayer Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 26554,
},
[39592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Searing Totem",
["npcID"] = 22895,
},
[21807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wily Woodling",
["npcID"] = 61155,
},
[265880] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[396503] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[89415] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Ghost Iron Dragonling",
["npcID"] = 57783,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1405,
},
[196220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oktel Dragonblood",
["npcID"] = 92920,
},
[65866] = {
["encounterName"] = "Faction Champions",
["source"] = "Alyssia Moonstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 34467,
},
[82760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[390361] = {
["source"] = "Primalist Stormslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 203746,
},
[134788] = {
["source"] = "Kar Warmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 68321,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[286842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azergem Crystalback",
["npcID"] = 147938,
},
[372561] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[457938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beledar's Spawn",
["npcID"] = 207802,
},
[459986] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 222305,
},
[136521] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69078,
},
[133765] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 68036,
},
[371984] = {
["source"] = "Flashfrost Chillweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 188067,
},
[427223] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[129859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60603,
},
[395871] = {
["source"] = "Qalashi Stonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 187600,
},
[160068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Warsmith",
["npcID"] = 77653,
},
[172673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Garrick",
["npcID"] = 155197,
},
[30933] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 86663,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[395833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[144005] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[147289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death Adder",
["npcID"] = 72841,
},
[397914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depraved Mistweaver",
["npcID"] = 200137,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[117924] = {
["source"] = "Orbiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 60857,
},
[132743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Oracle",
["npcID"] = 67256,
},
[39593] = {
["source"] = "Ashtongue Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 22896,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131545,
},
[44538] = {
["source"] = "Ethereum Smuggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24698,
},
[40873] = {
["source"] = "Dragonmaw Sky Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[414942] = {
["source"] = "Gnarled Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 207740,
},
[63274] = {
["encounterName"] = "Mimiron",
["source"] = "VX-001",
["encounterID"] = 1138,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 33651,
},
[225917] = {
["source"] = "Rook Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 114516,
},
[412895] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[406752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[51112] = {
["encounterName"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[410848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neltharion",
["npcID"] = 201668,
},
[119622] = {
["source"] = "Sha of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 60491,
},
[455899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vil'vim the Mindtwister",
["npcID"] = 222626,
},
[126005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jack Arrow",
["npcID"] = 63809,
},
[394467] = {
["isChanneled"] = true,
["source"] = "Acequian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187617,
},
[113479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Archer",
["npcID"] = 59175,
},
[414945] = {
["source"] = "Fungal Rotspreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 207453,
},
[457948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vek'kix",
["npcID"] = 225425,
},
[115015] = {
["source"] = "Terracotta Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 59758,
},
[136509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spirit-Twister",
["npcID"] = 69195,
},
[455901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sharpscale the Devourer",
["npcID"] = 215252,
},
[172774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mangled Boulderbreaker",
["npcID"] = 85988,
},
[135818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Footman",
["npcID"] = 67901,
},
[33111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[418000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Corrupted Kaldorei",
["npcID"] = 206146,
},
[64966] = {
["source"] = "Clockwork Mechanic",
["event"] = "SPELL_CAST_START",
["npcID"] = 34184,
},
[139914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcweaver Jor'guva",
["npcID"] = 69665,
},
[165511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miserain Starsorrow",
["npcID"] = 82017,
},
[384473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Displaced Tick",
["npcID"] = 217558,
},
[408805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incorporeal Being",
["npcID"] = 204560,
},
[40106] = {
["isChanneled"] = true,
["source"] = "Aqueous Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22883,
},
[129669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kracor",
["npcID"] = 67128,
},
[455904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozemodius",
["npcID"] = 220410,
},
[65648] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["encounterID"] = 1138,
["event"] = "SPELL_CAST_START",
["npcID"] = 33670,
},
[172679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gronnling Bonebreaker",
["npcID"] = 80685,
},
[396520] = {
["source"] = "Quilmo the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196386,
},
[20823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amariel Sunsworn",
["npcID"] = 67674,
},
[50089] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["encounterID"] = 1976,
["event"] = "SPELL_CAST_START",
["npcID"] = 26631,
},
[278444] = {
["source"] = "Devouring Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 134024,
},
[136844] = {
["source"] = "Drakkari God-Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 69200,
},
[406760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[416999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[451811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pious Disciple",
["npcID"] = 217464,
},
[190086] = {
["isChanneled"] = true,
["source"] = "Felsoul Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95452,
},
[455907] = {
["source"] = "Tefferty Ulreth",
["event"] = "SPELL_CAST_START",
["npcID"] = 219189,
},
[41276] = {
["source"] = "Bonechewer Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[388332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[455908] = {
["source"] = "Tefferty Ulreth",
["event"] = "SPELL_CAST_START",
["npcID"] = 219189,
},
[449765] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[106826] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56719,
},
[82765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[256639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktar Bomber",
["npcID"] = 129372,
},
[408811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Siegemaster",
["npcID"] = 198874,
},
[451117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixkreten the Unbreakable",
["npcID"] = 211262,
},
[259711] = {
["source"] = "Block Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 131445,
},
[144688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordos",
["npcID"] = 72057,
},
[444972] = {
["source"] = "Saurolisk Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 224725,
},
[142252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten King",
["npcID"] = 67081,
},
[388335] = {
["source"] = "Arcane Manipulator Tharohn",
["event"] = "SPELL_CAST_START",
["npcID"] = 188171,
},
[174730] = {
["source"] = "Shadowborne Felcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 88040,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[419052] = {
["encounterName"] = "Rezan",
["source"] = "Future Self",
["npcID"] = 208959,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[121673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salyin Skirmisher",
["npcID"] = 62350,
},
[413806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Tideshifter",
["npcID"] = 204516,
},
[40875] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[156301] = {
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80935,
},
[132752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhatched Shaman",
["npcID"] = 67255,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[157331] = {
["encounterName"] = "Gnarlroot",
["source"] = "Greater Storm Elemental",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 77936,
},
[427245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hapless Assistant",
["npcID"] = 212981,
},
[273664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Bringer Togan",
["npcID"] = 139438,
},
[414959] = {
["source"] = "Searing Rootguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210592,
},
[427947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[50705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Ley-Whelp",
["npcID"] = 27636,
},
[157326] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Insidious Defiler",
["npcID"] = 76969,
},
[121284] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["encounterID"] = 1464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62205,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["npcID"] = 97269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[451820] = {
["source"] = "Gargantuan Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222960,
},
[388340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 196439,
},
[105513] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 56192,
},
[61353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dagna Flintlock",
["npcID"] = 96779,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[412914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Shadow",
["npcID"] = 205968,
},
[390389] = {
["source"] = "Taranthiza",
["event"] = "SPELL_CAST_START",
["npcID"] = 196970,
},
[302336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Twisted Invader",
["npcID"] = 151742,
},
[394485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hypoxicron",
["npcID"] = 186334,
},
[136850] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[417011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[373279] = {
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[63913] = {
["source"] = "Twilight Frost Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 33819,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 82721,
},
[449776] = {
["source"] = "Escaped Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 219266,
},
[147646] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[412063] = {
["isChanneled"] = true,
["source"] = "Epoch Ripper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205435,
},
[127561] = {
["source"] = "Oku-Oku",
["event"] = "SPELL_CAST_START",
["npcID"] = 62486,
},
[40876] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[165520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rainiara the Kingslayer",
["npcID"] = 82260,
},
[20824] = {
["source"] = "Deadwind Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 7379,
},
[125506] = {
["source"] = "Commander Lindon",
["event"] = "SPELL_CAST_START",
["npcID"] = 59191,
},
[142625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wily Woodling",
["npcID"] = 61155,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["npcID"] = 75927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1678,
},
[431349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Dark Architect",
["npcID"] = 213885,
},
[10733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Mechano-Tank",
["npcID"] = 213785,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[453875] = {
["source"] = "Shurrai",
["event"] = "SPELL_CAST_START",
["npcID"] = 221224,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[384252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Elemental",
["npcID"] = 190780,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[142623] = {
["source"] = "Hekima the Wise",
["event"] = "SPELL_CAST_START",
["npcID"] = 70544,
},
[406778] = {
["source"] = "Wild Blaze Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 202279,
},
[381438] = {
["source"] = "Tormented Steam",
["event"] = "SPELL_CAST_START",
["npcID"] = 188696,
},
[156307] = {
["source"] = "Armsmaster Gokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 77143,
},
[412922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[125432] = {
["source"] = "Sra'thik Pool-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 63570,
},
[417018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
},
[394493] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[63147] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[14030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverblade Bloodletter",
["npcID"] = 58981,
},
[164499] = {
["source"] = "Nagrand Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 86398,
},
[273677] = {
["encounterName"] = "Avatar of Sethraliss",
["source"] = "Hoodoo Hexer",
["npcID"] = 137204,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2127,
},
[64170] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Freya",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33410,
},
[147563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashleaf Sprite",
["npcID"] = 72877,
},
[121165] = {
["encounterName"] = "Gekkan",
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Flameseeker",
["npcID"] = 61392,
},
[136855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God-Hulk",
["npcID"] = 69200,
},
[113998] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maw of Despair",
["npcID"] = 59237,
},
[40877] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[427260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rooktender",
["npcID"] = 207199,
},
[417683] = {
["source"] = "Fury of N'zoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 205307,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[392449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Elemental",
["npcID"] = 190173,
},
[80003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Cleft Brave",
["npcID"] = 59853,
},
[138480] = {
["encounterName"] = "Dark Animus",
["source"] = "Large Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69700,
},
[68948] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["encounterID"] = 2879,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 36565,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[369925] = {
["source"] = "Transformed Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 197225,
},
[412928] = {
["source"] = "Forgemaster Algrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 203709,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 204918,
},
[392451] = {
["source"] = "Flame Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 197985,
},
[127412] = {
["source"] = "Unga Scallywag",
["event"] = "SPELL_CAST_START",
["npcID"] = 62590,
},
[105296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[143638] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71515,
},
[270264] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[18649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathanos Blightcaller",
["npcID"] = 91158,
},
[120431] = {
["source"] = "Needlebottom",
["event"] = "SPELL_CAST_START",
["npcID"] = 61818,
},
[79937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anruin",
["npcID"] = 81998,
},
[129084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruqin Elder",
["npcID"] = 59826,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[455934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbringer Zealot",
["npcID"] = 223604,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[378120] = {
["isChanneled"] = true,
["source"] = "Blazing Firesquall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192799,
},
[132763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ban Bearheart",
["npcID"] = 62806,
},
[64171] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Thorim",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33413,
},
[433410] = {
["source"] = "Chittering Fearmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[443649] = {
["source"] = "Royal Scribe",
["event"] = "SPELL_CAST_START",
["npcID"] = 221035,
},
[387473] = {
["source"] = "Brinetooth Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 187285,
},
[81236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Vulture",
["npcID"] = 47202,
},
[433411] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[115024] = {
["source"] = "Terracotta Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 59758,
},
[396552] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[116560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Horror",
["npcID"] = 56310,
},
[121994] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62511,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[137884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Electromancer Ju'le",
["npcID"] = 69339,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[451843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
},
[131022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[267546] = {
["source"] = "Rowdy Reveler",
["event"] = "SPELL_CAST_START",
["npcID"] = 144231,
},
[147309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windfeather Nestkeeper",
["npcID"] = 72761,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["npcID"] = 162693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2390,
},
[120926] = {
["source"] = "Mo Mo",
["event"] = "SPELL_CAST_START",
["npcID"] = 59805,
},
[114565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Big Bessa",
["npcID"] = 58787,
},
[253583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[410890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Warder",
["npcID"] = 205259,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[439559] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["encounterID"] = 2898,
["event"] = "SPELL_CAST_START",
["npcID"] = 214503,
},
[78742] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thundergill",
["npcID"] = 67125,
},
[84309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Margun",
["npcID"] = 47981,
},
[145053] = {
["source"] = "Vestige of Pride",
["event"] = "SPELL_CAST_START",
["npcID"] = 72279,
},
[111752] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[102227] = {
["source"] = "Enemy Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 54642,
},
[435465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Machinist Protector",
["npcID"] = 217799,
},
[306457] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tunk",
["npcID"] = 157328,
},
[455943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Scuttler",
["npcID"] = 223601,
},
[143424] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71480,
},
[124289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackhoof",
["npcID"] = 51059,
},
[396559] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[267551] = {
["source"] = "Coin-Operated Crowd Pummeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 129214,
},
[147333] = {
["isChanneled"] = true,
["source"] = "Tormented Initiate",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 73349,
},
[125398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torik-Ethis",
["npcID"] = 50388,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["encounterID"] = 2960,
["event"] = "SPELL_CAST_START",
["npcID"] = 220314,
},
[147398] = {
["source"] = "Fallen Pool Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 73342,
},
[457993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[73867] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "KTC Oil Bot",
["npcID"] = 39376,
},
[84822] = {
["source"] = "Algari Expedition Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 217676,
},
[129963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rothek",
["npcID"] = 62581,
},
[147652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stalker",
["npcID"] = 72805,
},
[80996] = {
["isChanneled"] = true,
["source"] = "Akonu the Embercaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60032,
},
[396828] = {
["source"] = "Vorgan the Mangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190467,
},
[414992] = {
["source"] = "Rootsear Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 209256,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[369942] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191901,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["npcID"] = 202971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 187767,
},
[417041] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Keeper Orendi",
["npcID"] = 205874,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[402769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[130466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twinspire Grunt",
["npcID"] = 66269,
},
[83799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haethen Kaul",
["npcID"] = 44835,
},
[271652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Tannin",
["npcID"] = 152736,
},
[388374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Dreadsquall",
["npcID"] = 191831,
},
[167092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cackling Pyromaniac",
["npcID"] = 79510,
},
[136099] = {
["source"] = "Lion's Faithful",
["event"] = "SPELL_CAST_START",
["npcID"] = 69004,
},
[156320] = {
["source"] = "Armsmaster Gokk",
["event"] = "SPELL_CAST_START",
["npcID"] = 77143,
},
[404757] = {
["source"] = "Sundered Flame Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 203681,
},
[191132] = {
["source"] = "God-King Skovald",
["event"] = "SPELL_CAST_START",
["npcID"] = 92307,
},
[95283] = {
["source"] = "Admiral Hagman",
["event"] = "SPELL_CAST_START",
["npcID"] = 71436,
},
[135843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varatus the Conqueror",
["npcID"] = 68907,
},
[105301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[137891] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[114516] = {
["source"] = "Trail Packer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59527,
},
[459210] = {
["source"] = "Void Bound Despoiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 212765,
},
[388377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Dreadsquall",
["npcID"] = 191831,
},
[116831] = {
["source"] = "Konk",
["event"] = "SPELL_CAST_START",
["npcID"] = 55509,
},
[394948] = {
["source"] = "Ashbinder Tornecha",
["event"] = "SPELL_CAST_START",
["npcID"] = 192344,
},
[134059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Blastgineer",
["npcID"] = 67884,
},
[453906] = {
["source"] = "Lost Wickedfoot",
["event"] = "SPELL_CAST_START",
["npcID"] = 223654,
},
[260072] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Pa'kura Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131834,
},
[392474] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197799,
},
[172704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Vinewarden",
["npcID"] = 80698,
},
[190110] = {
["source"] = "Abigail the Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 94822,
},
[128339] = {
["source"] = "Ethereal Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 65414,
},
[192158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Olmyr the Enlightened",
["npcID"] = 97202,
},
[436679] = {
["source"] = "Scarab Captain Vul'akan",
["event"] = "SPELL_CAST_START",
["npcID"] = 218306,
},
[123928] = {
["source"] = "Scar-Shell",
["event"] = "SPELL_CAST_START",
["npcID"] = 63311,
},
[128951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hawkmaster Nurong",
["npcID"] = 64474,
},
[116710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zhi-Zhi",
["npcID"] = 54924,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["npcID"] = 95675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1808,
},
[30937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Channeler",
["npcID"] = 17653,
},
[140401] = {
["source"] = "Silver Covenant Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 70262,
},
[75610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infiltrator",
["npcID"] = 189869,
},
[76634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tainted Sentry",
["npcID"] = 40925,
},
[439576] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[335141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'zudah",
["npcID"] = 165824,
},
[427290] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209047,
},
[388383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskaara Defender",
["npcID"] = 186431,
},
[215709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomherald Ak'vesh",
["npcID"] = 98975,
},
[387528] = {
["source"] = "Earthborne Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 201471,
},
[201375] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seacursed Slaver",
["npcID"] = 97043,
},
[201672] = {
["encounterName"] = "Shivermaw",
["source"] = "Shivermaw",
["npcID"] = 101951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1845,
},
[195232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[335143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Bonemender",
["npcID"] = 165222,
},
[115030] = {
["source"] = "Muck Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192630,
},
[145216] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72276,
},
[130062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Zet'uk",
["npcID"] = 65478,
},
[441627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flavor Scientist",
["npcID"] = 214673,
},
[144039] = {
["source"] = "Juvenile Skyscreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69162,
},
[136872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Kros",
["npcID"] = 69341,
},
[146537] = {
["source"] = "Aggron",
["event"] = "SPELL_CAST_START",
["npcID"] = 72981,
},
[384291] = {
["source"] = "Elusive Storm Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 194082,
},
[394530] = {
["source"] = "Acequian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187617,
},
[121468] = {
["source"] = "Raigonn",
["event"] = "SPELL_CAST_START",
["npcID"] = 61177,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 194647,
},
[121174] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[265523] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[130389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Spitfire",
["npcID"] = 66289,
},
[449821] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Groundskeeper",
["npcID"] = 216038,
},
[378150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infiltrator",
["npcID"] = 189869,
},
[190115] = {
["source"] = "Abigail the Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 94822,
},
[324909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drust Boughbreaker",
["npcID"] = 164926,
},
[134826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korune Sha-weaver",
["npcID"] = 68410,
},
[140531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hu'seng the Gatekeeper",
["npcID"] = 69483,
},
[259739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charged Sentinel",
["npcID"] = 136550,
},
[11829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gai-Cho Cauterizer",
["npcID"] = 62577,
},
[392486] = {
["source"] = "Tempest Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[451871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[222880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brimstone Wrathguard",
["npcID"] = 111889,
},
[174758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khaano",
["npcID"] = 86282,
},
[384296] = {
["source"] = "Elusive Storm Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 194082,
},
[201379] = {
["encounterName"] = "Shivermaw",
["source"] = "Shivermaw",
["npcID"] = 101951,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1845,
},
[388392] = {
["source"] = "Unruly Textbook",
["event"] = "SPELL_CAST_START",
["npcID"] = 196044,
},
[382249] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[138923] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["event"] = "SPELL_CAST_START",
["npcID"] = 69712,
},
[394536] = {
["source"] = "Chief Dead Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 195337,
},
[140526] = {
["source"] = "Fleshcrafter Hoku",
["event"] = "SPELL_CAST_START",
["npcID"] = 69435,
},
[133804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodmaster Noshi",
["npcID"] = 67264,
},
[302388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vexiona",
["npcID"] = 151798,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[79856] = {
["source"] = "Pyromancer Flamehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70709,
},
[324914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Tender",
["npcID"] = 166299,
},
[51121] = {
["encounterName"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[143427] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Ironblade",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71516,
},
[131991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hawkmaster Nurong",
["npcID"] = 64474,
},
[398634] = {
["source"] = "Irontide Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 199963,
},
[270474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Thornweaver",
["npcID"] = 221745,
},
[143265] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["encounterID"] = 1601,
["event"] = "SPELL_CAST_START",
["npcID"] = 71504,
},
[407296] = {
["source"] = "Erupting Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199838,
},
[198407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Sorcerer",
["npcID"] = 114289,
},
[107357] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56884,
},
[147689] = {
["source"] = "Ordon Oathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72892,
},
[157355] = {
["source"] = "Shadowmoon Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 80787,
},
[121762] = {
["source"] = "Sik'thik Builder",
["event"] = "SPELL_CAST_START",
["npcID"] = 62633,
},
[167594] = {
["source"] = "Slithershock Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 83742,
},
[320822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zolramus Bonemender",
["npcID"] = 165222,
},
[210597] = {
["source"] = "Ivory Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 92751,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[449831] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kaheti Silk Hauler",
["npcID"] = 221327,
},
[172714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Botani Greensworn",
["npcID"] = 80696,
},
[455065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arax'ne",
["npcID"] = 217465,
},
[455975] = {
["source"] = "Rampaging Blight",
["event"] = "SPELL_CAST_START",
["npcID"] = 220273,
},
[134831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korune Sha-weaver",
["npcID"] = 68410,
},
[123429] = {
["source"] = "Broketooth Sneaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60195,
},
[194216] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["npcID"] = 96754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1823,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["npcID"] = 103344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1837,
},
[122713] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[148515] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Jun-Wei",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73723,
},
[135191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Archmage Lan'dalock",
["npcID"] = 68617,
},
[121263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gai-Cho Boltshooter",
["npcID"] = 62589,
},
[91997] = {
["source"] = "Zandalari Spiritbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69225,
},
[124820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Wound-Mender",
["npcID"] = 61517,
},
[202408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarver Slave",
["npcID"] = 102375,
},
[455978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Sentinel",
["npcID"] = 224828,
},
[326046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[126856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Serevex",
["npcID"] = 62580,
},
[124018] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62980,
},
[324923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drust Boughbreaker",
["npcID"] = 164926,
},
[41471] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[145566] = {
["source"] = "Kor'kron Ironblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 71770,
},
[136881] = {
["source"] = "Zandalari Water-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69455,
},
[382261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgam of Desperation",
["npcID"] = 199423,
},
[425264] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[56326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckscale Shaman",
["npcID"] = 64008,
},
[265540] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Fetid Maggot",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[144606] = {
["source"] = "Niuzao",
["event"] = "SPELL_CAST_START",
["npcID"] = 71954,
},
[137438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Beastcaller",
["npcID"] = 69521,
},
[144379] = {
["encounterName"] = "Sha of Pride",
["source"] = "Manifestation of Pride",
["encounterID"] = 1604,
["event"] = "SPELL_CAST_START",
["npcID"] = 71946,
},
[146595] = {
["encounterName"] = "Sha of Pride",
["source"] = "Norushen",
["encounterID"] = 1604,
["event"] = "SPELL_CAST_START",
["npcID"] = 71965,
},
[143491] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71480,
},
[128022] = {
["source"] = "Akkolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 66783,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[127834] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[382264] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chrono-Lord Deios",
["npcID"] = 191220,
},
[120667] = {
["source"] = "Shado-Pan Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 61968,
},
[141187] = {
["source"] = "Admiral Hagman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67426,
},
[396599] = {
["source"] = "Faunos",
["event"] = "SPELL_CAST_START",
["npcID"] = 200725,
},
[455984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidstone Behemoth",
["npcID"] = 221307,
},
[131034] = {
["source"] = "Vengeful Gurthani Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 65452,
},
[115587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 60069,
},
[453937] = {
["encounterName"] = "Zekvir",
["source"] = "Egg Cocoon",
["npcID"] = 224077,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[119888] = {
["encounterName"] = "Sha of Fear",
["source"] = "Cheng Kang",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 61042,
},
[306523] = {
["source"] = "Mistfang Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 162969,
},
[451890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Soot-Seer",
["npcID"] = 212876,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[130120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apparition of Terror",
["npcID"] = 66100,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[376218] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Monsoo, The Boiling Rage",
["npcID"] = 190718,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[133813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Serpent Ward",
["npcID"] = 67906,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["npcID"] = 186615,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2636,
},
[12470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gold Shaman",
["npcID"] = 32340,
},
[124849] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["encounterID"] = 1501,
["event"] = "SPELL_CAST_START",
["npcID"] = 62837,
},
[130395] = {
["encounterName"] = "The Stone Guard",
["source"] = "Jasper Guardian",
["encounterID"] = 1395,
["event"] = "SPELL_CAST_START",
["npcID"] = 59915,
},
[424315] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211086,
},
[270515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Azerite",
["npcID"] = 131311,
},
[81521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 69616,
},
[174769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steamscar Primalist",
["npcID"] = 81747,
},
[111570] = {
["encounterName"] = "Lilian Voss",
["source"] = "Lilian Voss",
["encounterID"] = 1429,
["event"] = "SPELL_CAST_START",
["npcID"] = 58722,
},
[402748] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[396605] = {
["source"] = "Faunos",
["event"] = "SPELL_CAST_START",
["npcID"] = 200725,
},
[455990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Talinhet",
["npcID"] = 221972,
},
[31707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[394558] = {
["source"] = "Unstable Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 198577,
},
[86881] = {
["encounterName"] = "Corborus",
["source"] = "Corborus",
["npcID"] = 43438,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1056,
},
[374081] = {
["source"] = "Godoloto",
["event"] = "SPELL_CAST_START",
["npcID"] = 190022,
},
[455022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ton'kei The Fierce",
["npcID"] = 223518,
},
[427323] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[138187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightning Guardian",
["npcID"] = 69834,
},
[118228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Veteran Archer",
["npcID"] = 61886,
},
[147552] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72353,
},
[123461] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["npcID"] = 62983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1506,
},
[137313] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["npcID"] = 69465,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1577,
},
[463206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chef Chewie",
["npcID"] = 214697,
},
[412012] = {
["isChanneled"] = true,
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205408,
},
[426345] = {
["source"] = "Void Touched Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 212400,
},
[12739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Soulbreaker",
["npcID"] = 68342,
},
[127947] = {
["source"] = "Azzix K'tai",
["event"] = "SPELL_CAST_START",
["npcID"] = 62843,
},
[121747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salyin Warmonger",
["npcID"] = 62351,
},
[124982] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Adjunct Suruz",
["npcID"] = 62075,
},
[453947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Ogli",
["npcID"] = 222725,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[120670] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[451900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonehead Koboldcrusher",
["npcID"] = 220792,
},
[113503] = {
["source"] = "Tomb Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 60912,
},
[382277] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[79850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Jailer",
["npcID"] = 68616,
},
[460092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinemaw Staghorn",
["npcID"] = 167111,
},
[448864] = {
["source"] = "Burly Contender",
["event"] = "SPELL_CAST_START",
["npcID"] = 217646,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[140476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mighty Devilsaur",
["npcID"] = 69406,
},
[144583] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71983,
},
[396613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Munchbeak Turtle",
["npcID"] = 195970,
},
[262515] = {
["isChanneled"] = true,
["source"] = "Venture Co. Skyscorcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133436,
},
[131940] = {
["source"] = "Giant Siftworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 67084,
},
[141391] = {
["source"] = "Lieutenant Boltblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 71329,
},
[453951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Ogli",
["npcID"] = 222725,
},
[137228] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[392519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[113504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pandriarch Windfur",
["npcID"] = 56206,
},
[406854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malgosa Spellbinder",
["npcID"] = 205620,
},
[30493] = {
["source"] = "Riverblade Flesh-hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 58274,
},
[402759] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[404807] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 205245,
},
[133820] = {
["source"] = "Team Leader Scooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 67810,
},
[450899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[144059] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Timeless Spirit",
["npcID"] = 71868,
},
[412999] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[128999] = {
["source"] = "Thundermaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 58456,
},
[144077] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sikari the Mistweaver",
["npcID"] = 71828,
},
[172728] = {
["source"] = "Creeping Vine",
["event"] = "SPELL_CAST_START",
["npcID"] = 80697,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189233,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[120672] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[169657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[125871] = {
["isChanneled"] = true,
["source"] = "Zar'thik Augurer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64454,
},
[460100] = {
["source"] = "Slatefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[372047] = {
["source"] = "Defier Draghar",
["event"] = "SPELL_CAST_START",
["npcID"] = 187897,
},
[431659] = {
["source"] = "Clotweave Widow",
["event"] = "SPELL_CAST_START",
["npcID"] = 216193,
},
[125343] = {
["isChanneled"] = true,
["source"] = "Sharpshell Wader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61971,
},
[395597] = {
["isChanneled"] = true,
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194402,
},
[194231] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["npcID"] = 96754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1823,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[460102] = {
["source"] = "Slatefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 228439,
},
[7992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfang Creeper",
["npcID"] = 4412,
},
[144400] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["encounterID"] = 1604,
["event"] = "SPELL_CAST_START",
["npcID"] = 71734,
},
[48054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[402766] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202260,
},
[413005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Additive",
["npcID"] = 205672,
},
[114272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Echo",
["npcID"] = 59417,
},
[143343] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["encounterID"] = 1599,
["event"] = "SPELL_CAST_START",
["npcID"] = 71529,
},
[451913] = {
["source"] = "Ascended Webfriar",
["event"] = "SPELL_CAST_START",
["npcID"] = 219022,
},
[265568] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[390481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[137203] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69132,
},
[427341] = {
["source"] = "Rydra Scalegorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 209048,
},
[396625] = {
["source"] = "Toxic Swogmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 197774,
},
[116319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Ling Heartfist",
["npcID"] = 56441,
},
[392530] = {
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 197799,
},
[427342] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[413008] = {
["source"] = "Highmountain Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201268,
},
[445935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222265,
},
[216759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ael'Yith",
["npcID"] = 90267,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[145553] = {
["source"] = "Mokvar the Treasurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72433,
},
[147510] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[458060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of Azshara",
["npcID"] = 222621,
},
[213688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Lord",
["npcID"] = 107024,
},
[445774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Predator",
["npcID"] = 216325,
},
[197785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Impling Pursuer",
["npcID"] = 97177,
},
[107938] = {
["source"] = "Wascally Wirmen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59655,
},
[402772] = {
["source"] = "Deepstrider Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 202312,
},
[396629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Prime Salamanther",
["npcID"] = 194062,
},
[392692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Quilboar",
["npcID"] = 221743,
},
[144485] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Iron Juggernaut",
["encounterID"] = 1600,
["event"] = "SPELL_CAST_START",
["npcID"] = 71466,
},
[427346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[453967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Ogli",
["npcID"] = 223896,
},
[272711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[269670] = {
["encounterName"] = "Avatar of Sethraliss",
["source"] = "Avatar of Sethraliss",
["npcID"] = 133392,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2127,
},
[125987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baolai the Immolator",
["npcID"] = 63695,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[15547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Shadowhunter",
["npcID"] = 7246,
},
[425300] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[402775] = {
["source"] = "Cavern Flayer Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 202309,
},
[273767] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "7th Legion Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 149446,
},
[128049] = {
["source"] = "Mygoness",
["event"] = "SPELL_CAST_START",
["npcID"] = 62766,
},
[146180] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Staff of Resonating Water",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 72810,
},
[389096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alia Sunsoar",
["npcID"] = 196737,
},
[273768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chadwick Paxton",
["npcID"] = 147628,
},
[126307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gochao the Ironfist",
["npcID"] = 62880,
},
[130436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Mender",
["npcID"] = 66286,
},
[257791] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[149187] = {
["source"] = "Dragonmaw Tidal Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 72367,
},
[439637] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Echoing Shade",
["npcID"] = 219675,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[392539] = {
["source"] = "Awakened Terrasentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 197801,
},
[446760] = {
["isChanneled"] = true,
["source"] = "Infesting Latcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222572,
},
[453972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Ogli",
["npcID"] = 223896,
},
[114021] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[458068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[450854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathscreamer Iken'tak",
["npcID"] = 211263,
},
[257827] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127484,
},
[423257] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[136228] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["encounterID"] = 1574,
["event"] = "SPELL_CAST_START",
["npcID"] = 69017,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["encounterID"] = 2888,
["event"] = "SPELL_CAST_START",
["npcID"] = 213217,
},
[437592] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189234,
},
[126820] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bulgeback Tortoise",
["npcID"] = 58431,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[125899] = {
["source"] = "Brewmaster Chani",
["event"] = "SPELL_CAST_START",
["npcID"] = 60996,
},
[32093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ik'thik Incubator",
["npcID"] = 59890,
},
[125997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battleworn Paratrooper",
["npcID"] = 63764,
},
[394591] = {
["source"] = "Tombcaller Ganzaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 188509,
},
[139319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 70236,
},
[114022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Treasurer",
["npcID"] = 59241,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[427356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["npcID"] = 196548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[116070] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormali Raider",
["npcID"] = 54702,
},
[25054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theramore Faithful",
["npcID"] = 59595,
},
[427357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[413023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[121282] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["encounterID"] = 1464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62205,
},
[445974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222281,
},
[413024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[456027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Talinhet",
["npcID"] = 221972,
},
[128869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qi'tar the Deathcaller",
["npcID"] = 62863,
},
[427359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[444698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riftwalker Nilara",
["npcID"] = 214644,
},
[275826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[114535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clovercatcher",
["npcID"] = 59576,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[149312] = {
["source"] = "War Master Kragg",
["event"] = "SPELL_CAST_START",
["npcID"] = 73775,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2786,
},
[406918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[393037] = {
["source"] = "Colossal Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186672,
},
[396645] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[125971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tankiss",
["npcID"] = 61006,
},
[126822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korune Sentinel",
["npcID"] = 68605,
},
[399086] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[396646] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[137079] = {
["isChanneled"] = true,
["source"] = "Zandalari Spear-Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69388,
},
[376169] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Thaumaturge Fural",
["npcID"] = 189905,
},
[201411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadfire Imp",
["npcID"] = 100527,
},
[270536] = {
["source"] = "Hexthralled Crossbowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 131529,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 198997,
},
[458080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Croakit",
["npcID"] = 214757,
},
[451937] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand Gluttony",
["npcID"] = 217747,
},
[15117] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Spitescale Siren",
["event"] = "SPELL_CAST_START",
["npcID"] = 38301,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["encounterID"] = 1500,
["event"] = "SPELL_CAST_START",
["npcID"] = 60410,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[125799] = {
["source"] = "Nasra Spothide",
["event"] = "SPELL_CAST_START",
["npcID"] = 50811,
},
[139178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goda",
["npcID"] = 69998,
},
[11443] = {
["source"] = "Doomlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 72564,
},
[451939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[21390] = {
["encounterName"] = "Lord Vyletongue",
["source"] = "Lord Vyletongue",
["npcID"] = 12236,
["event"] = "SPELL_CAST_START",
["encounterID"] = 424,
},
[15232] = {
["source"] = "Uruk",
["event"] = "SPELL_CAST_START",
["npcID"] = 62613,
},
[144076] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sikari the Mistweaver",
["npcID"] = 71828,
},
[135285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Water Elemental",
["npcID"] = 68678,
},
[374126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thousandmile",
["npcID"] = 193676,
},
[384365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Lancemaster",
["npcID"] = 192800,
},
[378222] = {
["source"] = "Invasive Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 200275,
},
[157387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Talon",
["npcID"] = 72232,
},
[275835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Invader",
["npcID"] = 137516,
},
[124776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Deep-Scout",
["npcID"] = 61374,
},
[435560] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[420102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Garrick",
["npcID"] = 209057,
},
[447955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Stormrook",
["npcID"] = 223031,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["encounterID"] = 2666,
["event"] = "SPELL_CAST_START",
["npcID"] = 198995,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["npcID"] = 96512,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1836,
},
[157388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Beastwrangler",
["npcID"] = 74160,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[128872] = {
["source"] = "Qi'tar the Deathcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 62863,
},
[394607] = {
["source"] = "Captain Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193198,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[195493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonespeaker Carver",
["npcID"] = 93070,
},
[196296] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["npcID"] = 91792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[432127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Vanguard Brute",
["npcID"] = 214901,
},
[448644] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[427616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[392561] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197831,
},
[125289] = {
["source"] = "Bataari Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63526,
},
[322938] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drust Harvester",
["npcID"] = 164921,
},
[324986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Stalker",
["npcID"] = 166301,
},
[458090] = {
["source"] = "Velo",
["event"] = "SPELL_CAST_START",
["npcID"] = 227514,
},
[147500] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[157390] = {
["source"] = "Thunderlord Packleader",
["event"] = "SPELL_CAST_START",
["npcID"] = 78960,
},
[166605] = {
["source"] = "Frenzied Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 83449,
},
[450393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[135889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Brent the Black",
["npcID"] = 67626,
},
[136913] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[456044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vil'vim the Mindtwister",
["npcID"] = 222626,
},
[408946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[427376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[453997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 223119,
},
[456045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Talinhet",
["npcID"] = 221972,
},
[392565] = {
["isChanneled"] = true,
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197831,
},
[125290] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Leechfingers",
["npcID"] = 63494,
},
[125802] = {
["source"] = "Nasra Spothide",
["event"] = "SPELL_CAST_START",
["npcID"] = 50811,
},
[432135] = {
["source"] = "Candlelit Pebblemaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 218658,
},
[450509] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[127338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Hatred",
["npcID"] = 62541,
},
[413044] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[374137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerdrool",
["npcID"] = 195968,
},
[257732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Enforcer",
["npcID"] = 129374,
},
[134920] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[429427] = {
["source"] = "Cursedforge Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214066,
},
[378835] = {
["source"] = "Brackenhide Rotflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186362,
},
[376186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[402807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glittering Shard Construct",
["npcID"] = 202326,
},
[82800] = {
["source"] = "Fel Queen's Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 207152,
},
[256709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riptide Shredder",
["npcID"] = 129371,
},
[392569] = {
["source"] = "Flamegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 197697,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[388474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Investi-gator",
["npcID"] = 201664,
},
[145547] = {
["source"] = "Kor'kron Dark Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 72451,
},
[456772] = {
["source"] = "Workmaster Nast",
["event"] = "SPELL_CAST_START",
["npcID"] = 213200,
},
[427382] = {
["source"] = "Engine Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212764,
},
[372093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Flame",
["npcID"] = 196540,
},
[133845] = {
["source"] = "Team Leader Scooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 67810,
},
[458099] = {
["source"] = "Velo",
["event"] = "SPELL_CAST_START",
["npcID"] = 227514,
},
[63527] = {
["encounterName"] = "Auriaya",
["source"] = "Storm Tempered Keeper",
["encounterID"] = 1131,
["event"] = "SPELL_CAST_START",
["npcID"] = 33699,
},
[445813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Test Subject",
["npcID"] = 216328,
},
[257785] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["encounterID"] = 2102,
["event"] = "SPELL_CAST_START",
["npcID"] = 127484,
},
[376190] = {
["isChanneled"] = true,
["source"] = "Brackenhide Rotflinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186362,
},
[123244] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["npcID"] = 62983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1506,
},
[82801] = {
["source"] = "Henry Zykes",
["event"] = "SPELL_CAST_START",
["npcID"] = 37165,
},
[147202] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dragonmaw Bonecrusher",
["npcID"] = 72354,
},
[456788] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Splash",
["npcID"] = 220275,
},
[125292] = {
["source"] = "Bataari Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63526,
},
[143356] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber Parasite",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71578,
},
[446430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Kelp",
["npcID"] = 215702,
},
[392574] = {
["source"] = "Tempest Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 198047,
},
[394622] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 197131,
},
[214001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Lancer",
["npcID"] = 102095,
},
[458634] = {
["source"] = "Awakened Flamecoil Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 225895,
},
[277901] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Lieutenant Williams",
["event"] = "SPELL_CAST_START",
["npcID"] = 131037,
},
[250569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tally Zapnabber",
["npcID"] = 133627,
},
[79913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthmender Norsala",
["npcID"] = 43503,
},
[65210] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Mimiron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33412,
},
[32735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steamwheedle Shark",
["npcID"] = 39354,
},
[139991] = {
["encounterName"] = "Megaera",
["source"] = "Arcane Head",
["npcID"] = 70248,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[82802] = {
["isChanneled"] = true,
["source"] = "Lashvine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 37093,
},
[406911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Champion",
["npcID"] = 201288,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[50364] = {
["source"] = "Nerub'ar Tunneler",
["event"] = "SPELL_CAST_START",
["npcID"] = 25622,
},
[445819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Stonestalker",
["npcID"] = 217624,
},
[463052] = {
["source"] = "Awakened Phalanx",
["event"] = "SPELL_CAST_START",
["npcID"] = 229782,
},
[302477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Haunt",
["npcID"] = 151754,
},
[132031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lyalia",
["npcID"] = 59849,
},
[396674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[390531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[392579] = {
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197831,
},
[370054] = {
["source"] = "Battleseared Magmatusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 196772,
},
[396675] = {
["source"] = "Sundered Flame Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 202247,
},
[187091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladesquall",
["npcID"] = 91874,
},
[130925] = {
["source"] = "Captain Doren",
["event"] = "SPELL_CAST_START",
["npcID"] = 66052,
},
[451965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[90994] = {
["source"] = "Defias Digger",
["event"] = "SPELL_CAST_START",
["npcID"] = 48420,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198997,
},
[146556] = {
["source"] = "Kor'thik Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72954,
},
[144089] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71859,
},
[413059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Canister",
["npcID"] = 206019,
},
[260811] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["encounterID"] = 2108,
["event"] = "SPELL_CAST_START",
["npcID"] = 129232,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Miner",
["npcID"] = 213565,
},
[411012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[413060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fire Canister",
["npcID"] = 206022,
},
[452567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[456351] = {
["source"] = "Boneseer Hookjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 213805,
},
[144090] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71859,
},
[270494] = {
["source"] = "Remembered Charlga Razorflank",
["event"] = "SPELL_CAST_START",
["npcID"] = 221749,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[122735] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["encounterID"] = 1463,
["event"] = "SPELL_CAST_START",
["npcID"] = 62164,
},
[41150] = {
["source"] = "Illidari Nightlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[74613] = {
["source"] = "Dark Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 48269,
},
[426145] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[277911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hrolskald the Fetid",
["npcID"] = 146886,
},
[428066] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[401370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[431493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Curseblade",
["npcID"] = 213894,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[451971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[132829] = {
["source"] = "Alliance Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69194,
},
[431494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Tactician",
["npcID"] = 213934,
},
[408969] = {
["source"] = "Monstrous Mud",
["event"] = "SPELL_CAST_START",
["npcID"] = 192519,
},
[450417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plaguehart",
["npcID"] = 219267,
},
[130060] = {
["source"] = "Monk Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 66101,
},
[154331] = {
["source"] = "Grove Cultivator Kados",
["event"] = "SPELL_CAST_START",
["npcID"] = 133104,
},
[408970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[374544] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[445830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mead-Mad Flayer",
["npcID"] = 222898,
},
[436360] = {
["source"] = "Glooming Darkweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 216868,
},
[448485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[15665] = {
["source"] = "Flamekin Torcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 9778,
},
[448111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[456653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[427402] = {
["source"] = "Cursed Rookguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 207197,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[191192] = {
["source"] = "Felskorn Runetwister",
["event"] = "SPELL_CAST_START",
["npcID"] = 96215,
},
[448155] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[263583] = {
["source"] = "Taskmaster Askari",
["event"] = "SPELL_CAST_START",
["npcID"] = 134012,
},
[322968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drust Spiteclaw",
["npcID"] = 165111,
},
[442277] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["encounterID"] = 2920,
["event"] = "SPELL_CAST_START",
["npcID"] = 217748,
},
[458120] = {
["source"] = "Velo",
["event"] = "SPELL_CAST_START",
["npcID"] = 227514,
},
[427404] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[462216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[143210] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71479,
},
[408975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Edgelord",
["npcID"] = 198873,
},
[345495] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Frothing Pustule",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 175519,
},
[396689] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[439692] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[138976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windweaver Akil'amon",
["npcID"] = 70080,
},
[110963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
},
[396690] = {
["source"] = "Kangalo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200738,
},
[131178] = {
["source"] = "Pandaren Scarecrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 66768,
},
[302494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grip of Horror",
["npcID"] = 151872,
},
[394643] = {
["isChanneled"] = true,
["source"] = "Baron Ashflow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192274,
},
[194266] = {
["encounterName"] = "Harbaron",
["source"] = "Shackled Servitor",
["npcID"] = 98693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1823,
},
[130417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Infantryman",
["npcID"] = 66285,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79545,
},
[119862] = {
["encounterName"] = "Sha of Fear",
["source"] = "Cheng Kang",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 61042,
},
[111668] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Raigonn",
["encounterID"] = 1406,
["event"] = "SPELL_CAST_START",
["npcID"] = 56877,
},
[446000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razormouth Devourer",
["npcID"] = 214081,
},
[114149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Gukgut",
["npcID"] = 54868,
},
[140316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kirin Tor Construct",
["npcID"] = 67934,
},
[177885] = {
["source"] = "Darkwing Adolescent",
["event"] = "SPELL_CAST_START",
["npcID"] = 85357,
},
[450697] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[272542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[458795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravageant",
["npcID"] = 207826,
},
[434252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Hauler",
["npcID"] = 217039,
},
[183005] = {
["source"] = "Black Rose Apothecary",
["event"] = "SPELL_CAST_START",
["npcID"] = 93496,
},
[431674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Ambusher",
["npcID"] = 217448,
},
[448599] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hevo'myk",
["npcID"] = 211591,
},
[194268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greywatch Saboteur",
["npcID"] = 94614,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["encounterID"] = 2668,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207639,
},
[449937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaw",
["npcID"] = 219264,
},
[41152] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Maiev Shadowsong",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 23197,
},
[433766] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[456081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temaya",
["npcID"] = 221973,
},
[441747] = {
["source"] = "Web Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 218320,
},
[450134] = {
["source"] = "Aspirant Kiipka",
["event"] = "SPELL_CAST_START",
["npcID"] = 220781,
},
[458228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ata",
["npcID"] = 219855,
},
[390554] = {
["isChanneled"] = true,
["source"] = "Inferna the Bound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186735,
},
[449939] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[448341] = {
["source"] = "Kobold Thwacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203877,
},
[119668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Treasure-Hider",
["npcID"] = 60357,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["npcID"] = 99200,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[449940] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[458256] = {
["source"] = "Lurker of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 220285,
},
[144471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[449941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[456748] = {
["source"] = "Crimson Deathweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[448162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormous Kelp-Snaggler",
["npcID"] = 221061,
},
[449942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[427417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[202462] = {
["encounterName"] = "Sael'orn",
["source"] = "Sael'orn",
["npcID"] = 102387,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1851,
},
[191401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valarjar Marksman",
["npcID"] = 96640,
},
[118645] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ken-Ken",
["npcID"] = 60979,
},
[437956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[193611] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[438025] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[423479] = {
["source"] = "Royal Wicklighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[390560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[456791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankoan Champion Utaari",
["npcID"] = 222637,
},
[419229] = {
["source"] = "Patches",
["event"] = "SPELL_CAST_START",
["npcID"] = 215147,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[146511] = {
["source"] = "Sra'thik Amber-Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 72929,
},
[448248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstained Webmage",
["npcID"] = 223253,
},
[144103] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sikari the Mistweaver",
["npcID"] = 71828,
},
[161509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mandragora Lifedrinker",
["npcID"] = 80699,
},
[144461] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[454519] = {
["source"] = "Shellbinder Kiku",
["event"] = "SPELL_CAST_START",
["npcID"] = 223857,
},
[432229] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[431935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burkhalt",
["npcID"] = 228671,
},
[440107] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[417184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator Kintara",
["npcID"] = 207596,
},
[451996] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[446268] = {
["isChanneled"] = true,
["source"] = "Congealed Mass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222461,
},
[439784] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["event"] = "SPELL_CAST_START",
["npcID"] = 214504,
},
[417185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator Kintara",
["npcID"] = 207596,
},
[394660] = {
["source"] = "Bluescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 188723,
},
[440134] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[458582] = {
["source"] = "Sureki Darkblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 222274,
},
[408995] = {
["isChanneled"] = true,
["source"] = "Monstrous Mud",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192519,
},
[131986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Succula",
["npcID"] = 67099,
},
[396709] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 197134,
},
[444000] = {
["source"] = "Woven Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 218317,
},
[118647] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Wrestler",
["npcID"] = 60997,
},
[110968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
},
[273845] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Honorbound Spiritcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 145008,
},
[458834] = {
["source"] = "Speaker Xanventh",
["event"] = "SPELL_CAST_START",
["npcID"] = 220130,
},
[425379] = {
["source"] = "Flamespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 210294,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["encounterID"] = 2668,
["event"] = "SPELL_CAST_START",
["npcID"] = 201788,
},
[450400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supervisor Radlock",
["npcID"] = 220897,
},
[81276] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Troggzor the Earthinator",
["event"] = "SPELL_CAST_START",
["npcID"] = 43456,
},
[343470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Marauder",
["npcID"] = 165919,
},
[427428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greedy Gessie",
["npcID"] = 209936,
},
[123767] = {
["source"] = "Sha-Infested Yaungol",
["event"] = "SPELL_CAST_START",
["npcID"] = 68241,
},
[460595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irritated Salvager",
["npcID"] = 220471,
},
[425381] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[458610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toadstomper",
["npcID"] = 207803,
},
[454384] = {
["source"] = "Toaka the Explorer",
["event"] = "SPELL_CAST_START",
["npcID"] = 222659,
},
[415356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarled Lasher",
["npcID"] = 207740,
},
[433845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[445860] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["encounterID"] = 2999,
["event"] = "SPELL_CAST_START",
["npcID"] = 219763,
},
[125985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baolai the Immolator",
["npcID"] = 63695,
},
[456295] = {
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[435622] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[450568] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[456100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temaya",
["npcID"] = 221973,
},
[204517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Guardian",
["npcID"] = 102335,
},
[115065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slingtail Mudseer",
["npcID"] = 55193,
},
[91004] = {
["source"] = "Defias Envoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 48418,
},
[456101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidstone Behemoth",
["npcID"] = 221307,
},
[458692] = {
["source"] = "Awakened Volcanic Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[440184] = {
["source"] = "Chitin Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 219725,
},
[396717] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[374192] = {
["source"] = "Mature Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191696,
},
[123936] = {
["source"] = "Jol'Grum",
["event"] = "SPELL_CAST_START",
["npcID"] = 63312,
},
[462686] = {
["source"] = "Reno Jackson",
["event"] = "SPELL_CAST_START",
["npcID"] = 228044,
},
[444363] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["encounterID"] = 2917,
["event"] = "SPELL_CAST_START",
["npcID"] = 214502,
},
[448057] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[449960] = {
["source"] = "Deepwater Kobyss",
["event"] = "SPELL_CAST_START",
["npcID"] = 215750,
},
[88445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Marksman",
["npcID"] = 8338,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[438200] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[425388] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[452009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthenwork Ironstrider",
["npcID"] = 213951,
},
[372147] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[444414] = {
["source"] = "Blight Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221669,
},
[124793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Wu Kao",
["npcID"] = 63846,
},
[442052] = {
["source"] = "Sureki Ironweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 220551,
},
[458675] = {
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[428086] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[441772] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[131071] = {
["source"] = "Strongarm Airman",
["event"] = "SPELL_CAST_START",
["npcID"] = 65840,
},
[195584] = {
["source"] = "Necromantic Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 98892,
},
[143339] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Rik'kal the Dissector",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71158,
},
[409009] = {
["source"] = "Summitshaper Lorac",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[450129] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217491,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[425392] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[452013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[372151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 186284,
},
[205660] = {
["source"] = "Felsoul Tormentor",
["event"] = "SPELL_CAST_START",
["npcID"] = 109697,
},
[187207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbreaker Reykir",
["npcID"] = 91517,
},
[452014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 223119,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[170734] = {
["source"] = "Darktide Bomb Bot",
["event"] = "SPELL_CAST_START",
["npcID"] = 78822,
},
[147185] = {
["source"] = "Aqueous Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 73191,
},
[137995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[86911] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1042,
},
[390583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norbett",
["npcID"] = 190968,
},
[140079] = {
["source"] = "Kresh the Ripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69474,
},
[450492] = {
["encounterName"] = "Zekvir",
["source"] = "Zekvir",
["npcID"] = 225204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2987,
},
[194284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greywatch Saboteur",
["npcID"] = 109635,
},
[447921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Guardian",
["npcID"] = 214594,
},
[49091] = {
["source"] = "Ymirjar Harpooner",
["event"] = "SPELL_CAST_START",
["npcID"] = 26692,
},
[427444] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["encounterID"] = 2562,
["event"] = "SPELL_CAST_START",
["npcID"] = 194181,
},
[124283] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["encounterID"] = 1447,
["event"] = "SPELL_CAST_START",
["npcID"] = 61485,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["npcID"] = 208459,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["npcID"] = 195821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2637,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60701,
},
[146163] = {
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72770,
},
[409016] = {
["source"] = "Summitshaper Lorac",
["event"] = "SPELL_CAST_START",
["npcID"] = 201522,
},
[446154] = {
["source"] = "Deepwater Gar",
["event"] = "SPELL_CAST_START",
["npcID"] = 219359,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["encounterID"] = 2565,
["event"] = "SPELL_CAST_START",
["npcID"] = 190609,
},
[456115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temaya",
["npcID"] = 221973,
},
[96127] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Troggzor the Earthinator",
["event"] = "SPELL_CAST_START",
["npcID"] = 43456,
},
[139309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckbat",
["npcID"] = 70232,
},
[388540] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[142139] = {
["source"] = "Earthborn Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 70822,
},
[409018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[123260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anduin Wrynn",
["npcID"] = 59608,
},
[458397] = {
["source"] = "Kas'dru",
["event"] = "SPELL_CAST_START",
["npcID"] = 227635,
},
[431544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Hauler",
["npcID"] = 214935,
},
[417210] = {
["source"] = "Great Glorious Alliance Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207581,
},
[388741] = {
["source"] = "Ukhel Gravestirrer",
["event"] = "SPELL_CAST_START",
["npcID"] = 189928,
},
[255824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[170738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undermage Kesalon",
["npcID"] = 85496,
},
[196335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oktel Dragonblood",
["npcID"] = 92920,
},
[142174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Small Illusionary Guardian",
["npcID"] = 71079,
},
[306633] = {
["source"] = "Spirit of Balance",
["event"] = "SPELL_CAST_START",
["npcID"] = 150411,
},
[398782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Hunter",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 191225,
},
[452024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Runed Protector",
["npcID"] = 214576,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[415568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gnarled Lasher",
["npcID"] = 207740,
},
[392640] = {
["source"] = "Thunderhead",
["event"] = "SPELL_CAST_START",
["npcID"] = 197698,
},
[423410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethka",
["npcID"] = 208740,
},
[445882] = {
["source"] = "Stonehoofed Hog",
["event"] = "SPELL_CAST_START",
["npcID"] = 214928,
},
[272422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Spotter",
["npcID"] = 138255,
},
[124797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Cloudrider",
["npcID"] = 63895,
},
[144119] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71407,
},
[456515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gong'tze the Riverhewer",
["npcID"] = 221974,
},
[431549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Venomspitter",
["npcID"] = 219661,
},
[417215] = {
["source"] = "Blood Horde Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207585,
},
[205811] = {
["source"] = "Lieutenant Gom'tok",
["event"] = "SPELL_CAST_START",
["npcID"] = 109800,
},
[396738] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blue Gulper",
["npcID"] = 195976,
},
[128381] = {
["source"] = "Kor'thik Resonator",
["event"] = "SPELL_CAST_START",
["npcID"] = 62755,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["encounterID"] = 2883,
["event"] = "SPELL_CAST_START",
["npcID"] = 213119,
},
[443837] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["encounterID"] = 2998,
["event"] = "SPELL_CAST_START",
["npcID"] = 218022,
},
[129917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Student of Chi-Ji",
["npcID"] = 60601,
},
[406978] = {
["source"] = "Contamination Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 205244,
},
[261866] = {
["source"] = "Hexthralled Crossbowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 131529,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[333479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotspew",
["npcID"] = 163620,
},
[456125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Scorpid",
["npcID"] = 215830,
},
[441791] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["encounterID"] = 2921,
["event"] = "SPELL_CAST_START",
["npcID"] = 217489,
},
[288210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necromancer Master",
["npcID"] = 146834,
},
[413123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[407245] = {
["source"] = "Shrinekeeper Qanosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199839,
},
[123833] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62980,
},
[443840] = {
["encounterName"] = "Speaker Halven",
["source"] = "Speaker Halven",
["encounterID"] = 3007,
["event"] = "SPELL_CAST_START",
["npcID"] = 217570,
},
[127870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckscale Flesh-Hunter",
["npcID"] = 64194,
},
[30853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[146170] = {
["isChanneled"] = true,
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72770,
},
[7162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Medic Tamberlyn",
["npcID"] = 5199,
},
[443842] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["encounterID"] = 2902,
["event"] = "SPELL_CAST_START",
["npcID"] = 215657,
},
[454596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tor'go",
["npcID"] = 222690,
},
[382410] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[449986] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_CAST_START",
["npcID"] = 218370,
},
[135932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Concentrated Sha",
["npcID"] = 68259,
},
[437700] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[187126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladesquall",
["npcID"] = 91874,
},
[327240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loyal Creation",
["npcID"] = 165911,
},
[452035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[423801] = {
["isChanneled"] = true,
["source"] = "Shadow-Blind Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206078,
},
[390834] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[400842] = {
["source"] = "Zaqali Blazestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[165875] = {
["source"] = "Keli'dan the Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 79702,
},
[442257] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["encounterID"] = 2919,
["event"] = "SPELL_CAST_START",
["npcID"] = 220626,
},
[462690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkened Husk",
["npcID"] = 220164,
},
[139187] = {
["source"] = "War-God Al'chukla",
["event"] = "SPELL_CAST_START",
["npcID"] = 69755,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-09-29 16:51:01 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Headcut",
"2024-09-29 16:25:21 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Riparium",
"2024-09-29 16:17:38 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Estuary",
"2024-09-29 16:05:12 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Headcut",
"2024-09-29 15:56:40 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Emptyrivers",
"2024-09-29 15:27:15 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Headcut",
"2024-09-29 15:01:50 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Headcut",
"2024-09-28 18:50:48 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Headcut",
"2024-09-28 18:49:19 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Sverdrup",
"2024-09-28 17:59:34 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Gelae",
"2024-09-28 16:16:10 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Benthos",
"2024-09-28 13:40:39 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Benthos",
"2024-09-28 13:36:21 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Benthos",
"2024-09-28 00:54:51 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Gelae",
"2024-09-28 00:04:53 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Emptyrivers",
"2024-09-27 23:51:58 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Esker",
"2024-09-27 20:27:31 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Esker",
"2024-09-27 20:00:49 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Benthos",
"2024-09-27 19:57:28 | INIT | Plater-v588-Retail | Framework v569 | 11.0.2 | enUS | Esker",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
