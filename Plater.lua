
PlaterDB = {
["captured_spells"] = {
[392959] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[383236] = {
["isChanneled"] = true,
["source"] = "Shimmerfin Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220249,
},
[443111] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glooming Disciple",
["npcID"] = 216867,
},
[14331] = {
["isChanneled"] = false,
["source"] = "Remembered King Mosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212128,
},
[448229] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[8222] = {
["isChanneled"] = false,
["source"] = "Beast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103254,
},
[457441] = {
["isChanneled"] = true,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[451812] = {
["isChanneled"] = false,
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212884,
},
[391426] = {
["source"] = "Ocean's Motion",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 197673,
},
[14443] = {
["isChanneled"] = false,
["source"] = "Dark Iron Marksman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 8338,
},
[455907] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[455908] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[289078] = {
["isChanneled"] = false,
["source"] = "Horde Rogue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214163,
},
[104318] = {
["isChanneled"] = false,
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 143622,
},
[118775] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sha-Infested Yaungol",
["npcID"] = 68241,
},
[56525] = {
["isChanneled"] = false,
["source"] = "Freed Crusader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224934,
},
[372495] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampaging Water",
["npcID"] = 187493,
},
[385289] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rebel Incinerator",
["npcID"] = 195062,
},
[449770] = {
["isChanneled"] = false,
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215770,
},
[117752] = {
["encounterName"] = "Gara'jal the Spiritbinder",
["source"] = "Gara'jal the Spiritbinder",
["encounterID"] = 1434,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60143,
},
[457447] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[457959] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[289082] = {
["isChanneled"] = false,
["source"] = "Horde Rogue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214163,
},
[10733] = {
["isChanneled"] = false,
["source"] = "Remembered Mechano-Tank",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213785,
},
[460519] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bytta",
["npcID"] = 222653,
},
[459496] = {
["isChanneled"] = false,
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224157,
},
[439538] = {
["source"] = "Mechanized Enforcer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214826,
},
[460520] = {
["isChanneled"] = false,
["source"] = "Bytta",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222653,
},
[440562] = {
["isChanneled"] = false,
["source"] = "Maintenance Machine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219587,
},
[455915] = {
["source"] = "Oozemodius",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220410,
},
[279362] = {
["isChanneled"] = false,
["source"] = "Lizard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[456940] = {
["isChanneled"] = false,
["source"] = "Manifested Protocol",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222946,
},
[118521] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Enraged Tideweaver",
["npcID"] = 59181,
},
[11021] = {
["isChanneled"] = false,
["source"] = "Searing Whelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4324,
},
[118905] = {
["isChanneled"] = false,
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61245,
},
[373526] = {
["isChanneled"] = false,
["source"] = "Jeweled Flutterwing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227202,
},
[427260] = {
["isChanneled"] = false,
["source"] = "Cursed Rooktender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207199,
},
[390926] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Big-Boomer",
["npcID"] = 211546,
},
[449266] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["type"] = "DEBUFF",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2878,
},
[60876] = {
["isChanneled"] = false,
["source"] = "Recalled Ghoul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221434,
},
[460525] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bytta",
["npcID"] = 222653,
},
[433403] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2831,
},
[424704] = {
["isChanneled"] = true,
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207454,
},
[443640] = {
["isChanneled"] = false,
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224798,
},
[423682] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207940,
},
[457458] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[435453] = {
["source"] = "Frightfilled Mineshroom",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217786,
},
[415495] = {
["encounterName"] = "Spinshroom",
["type"] = "DEBUFF",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2831,
},
[442618] = {
["isChanneled"] = false,
["source"] = "Bazaar Guard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220974,
},
[404749] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fyrakk",
["npcID"] = 200832,
},
[448248] = {
["isChanneled"] = false,
["source"] = "Bloodstained Webmage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223253,
},
[457460] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[421638] = {
["encounterName"] = "Blazikon",
["type"] = "DEBUFF",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2826,
},
[453879] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand Overspinner Antourix",
["npcID"] = 225263,
},
[456438] = {
["isChanneled"] = false,
["source"] = "Cursed Miner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213565,
},
[442621] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kaheti Ambusher",
["npcID"] = 217448,
},
[167385] = {
["source"] = "Normal Tank Dummy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225976,
},
[433410] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chittering Fearmonger",
["npcID"] = 216583,
},
[415499] = {
["encounterName"] = "Spinshroom",
["type"] = "BUFF",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2831,
},
[454904] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surek'Tak the Sundered",
["npcID"] = 222190,
},
[433411] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[392983] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[389401] = {
["isChanneled"] = false,
["source"] = "Shimmerfin Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220249,
},
[455929] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stolen Skiff",
["npcID"] = 226414,
},
[456441] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[459512] = {
["source"] = "Ruukk",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218214,
},
[454907] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Coalesced Iniquity",
["npcID"] = 226023,
},
[375587] = {
["source"] = "Master Tidesage",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216639,
},
[455932] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Heartfang",
["npcID"] = 216035,
},
[282449] = {
["isChanneled"] = false,
["source"] = "Akaari's Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144961,
},
[442627] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Skitterling Chemist",
["npcID"] = 219648,
},
[423693] = {
["encounterName"] = "Ol' Waxbeard",
["type"] = "DEBUFF",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2829,
},
[442628] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skitterling Chemist",
["npcID"] = 219648,
},
[199373] = {
["isChanneled"] = false,
["source"] = "Army of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24207,
},
[136428] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kirin Tor Perimeter Ward",
["npcID"] = 69186,
},
[212423] = {
["isChanneled"] = false,
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99541,
},
[435465] = {
["isChanneled"] = false,
["source"] = "Machinist Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217799,
},
[384291] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Stegodon",
["npcID"] = 221876,
},
[388897] = {
["isChanneled"] = false,
["source"] = "Angry Sandsnapper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225889,
},
[451843] = {
["isChanneled"] = false,
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[373034] = {
["isChanneled"] = false,
["source"] = "Pearlfin Sparkleseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214432,
},
[449285] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockgore",
["npcID"] = 220241,
},
[397087] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[445193] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2826,
},
[426771] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[384296] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Stegodon",
["npcID"] = 221876,
},
[456453] = {
["isChanneled"] = false,
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213566,
},
[444683] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moss-Draped Ramolith",
["npcID"] = 218191,
},
[50324] = {
["isChanneled"] = false,
["source"] = "Recalled Constructor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221435,
},
[54482] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Heretic",
["npcID"] = 221343,
},
[266083] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krolusk Sandhunter",
["npcID"] = 135582,
},
[426261] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[449290] = {
["isChanneled"] = false,
["source"] = "Rockgore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220241,
},
[42648] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Boomer",
["npcID"] = 213683,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2960,
},
[372529] = {
["isChanneled"] = false,
["source"] = "Remembered Hogger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213570,
},
[465] = {
["source"] = "Captain Garrick",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209057,
},
[457993] = {
["isChanneled"] = true,
["source"] = "Croakit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214757,
},
[397095] = {
["source"] = "Seaborne Colossus",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214437,
},
[398631] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Trapper",
["npcID"] = 212987,
},
[452877] = {
["source"] = "Oop'lajax",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222319,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2878,
},
[370998] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Distressed Marmoni",
["npcID"] = 184861,
},
[457484] = {
["isChanneled"] = false,
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224798,
},
[79892] = {
["isChanneled"] = false,
["source"] = "Murgha the Tempered",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96957,
},
[375605] = {
["isChanneled"] = false,
["source"] = "Charged Spirecrystal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217736,
},
[375094] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hornstrider Runner",
["npcID"] = 195905,
},
[449298] = {
["isChanneled"] = true,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[46551] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[448787] = {
["isChanneled"] = true,
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206710,
},
[445205] = {
["isChanneled"] = false,
["source"] = "Cinderbee Buzzer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215021,
},
[423200] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210149,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2829,
},
[445718] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stolen Loader",
["npcID"] = 223541,
},
[458512] = {
["isChanneled"] = false,
["source"] = "Parasidious",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206977,
},
[445207] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[306523] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistfang Howler",
["npcID"] = 162969,
},
[16567] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cursed Mage",
["npcID"] = 8524,
},
[432926] = {
["isChanneled"] = false,
["source"] = "Wormcaller Iz'tikrine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214153,
},
[458514] = {
["isChanneled"] = false,
["source"] = "Parasidious",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206977,
},
[448791] = {
["isChanneled"] = false,
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206704,
},
[16727] = {
["isChanneled"] = false,
["source"] = "Remembered King Gordok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221574,
},
[449815] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[456468] = {
["isChanneled"] = false,
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213566,
},
[426275] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[445210] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[464657] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Captured Kaheti",
["npcID"] = 217712,
},
[125056] = {
["isChanneled"] = false,
["source"] = "Gwenynen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[449817] = {
["isChanneled"] = true,
["source"] = "Vilewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216037,
},
[426277] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[396084] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203747,
},
[398643] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Opalooze Mollusc",
["npcID"] = 222040,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214263,
},
[397109] = {
["isChanneled"] = false,
["source"] = "Air Revenant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203743,
},
[389433] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qiraji Prophet",
["npcID"] = 195641,
},
[397110] = {
["isChanneled"] = false,
["source"] = "Air Revenant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203743,
},
[271220] = {
["isChanneled"] = false,
["source"] = "Qalashi Drakeflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192341,
},
[449821] = {
["isChanneled"] = false,
["source"] = "The Groundskeeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216038,
},
[401205] = {
["isChanneled"] = false,
["source"] = "Oblivious Shaleshell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217123,
},
[7992] = {
["isChanneled"] = false,
["source"] = "Darkfang Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4412,
},
[460057] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard An'Jak Shabtir",
["npcID"] = 219665,
},
[264057] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[461081] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormrook Tunnel Stalker",
["npcID"] = 228803,
},
[445217] = {
["isChanneled"] = false,
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215023,
},
[426283] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[445218] = {
["source"] = "Cinderbee Worker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215023,
},
[449824] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[452895] = {
["isChanneled"] = false,
["source"] = "Rabaan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228343,
},
[401209] = {
["isChanneled"] = false,
["source"] = "Oblivious Shaleshell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217123,
},
[383298] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Magma Fury",
["npcID"] = 214924,
},
[424750] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fungal Rotcaster",
["npcID"] = 207459,
},
[306536] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spirit of Fury",
["npcID"] = 150364,
},
[440615] = {
["isChanneled"] = false,
["source"] = "Ragefin Shadowcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213405,
},
[457503] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cogchewer",
["npcID"] = 212617,
},
[462621] = {
["source"] = "Deepwalking Ambusher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229605,
},
[381765] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ice Elemental",
["npcID"] = 203752,
},
[192226] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Liquid Magma Totem",
["npcID"] = 97369,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2787,
},
[16568] = {
["isChanneled"] = false,
["source"] = "Horde Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214154,
},
[449318] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[447272] = {
["encounterName"] = "Captain Dailcry",
["type"] = "DEBUFF",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2847,
},
[449831] = {
["isChanneled"] = true,
["source"] = "Kaheti Silk Hauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221327,
},
[431920] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ascended Webwarden",
["npcID"] = 215756,
},
[395586] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[16856] = {
["isChanneled"] = false,
["source"] = "Remembered King Gordok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221574,
},
[427315] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Rift",
["npcID"] = 213125,
},
[452903] = {
["source"] = "Rabaan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228343,
},
[449321] = {
["isChanneled"] = false,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[440622] = {
["isChanneled"] = false,
["source"] = "Ragefin Shadowcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213405,
},
[392006] = {
["isChanneled"] = false,
["source"] = "Particularly Bad Guy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220432,
},
[455975] = {
["isChanneled"] = false,
["source"] = "Rampaging Blight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220273,
},
[372560] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hyena Tender",
["npcID"] = 192506,
},
[452905] = {
["source"] = "Rabaan",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228343,
},
[457511] = {
["source"] = "Void Elf Riftwalker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224798,
},
[445741] = {
["isChanneled"] = false,
["source"] = "Darkwater Tidecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220621,
},
[91797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Batcrawler",
["npcID"] = 26125,
},
[53271] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hyena",
["npcID"] = 165189,
},
[423228] = {
["encounterName"] = "Skarmorak",
["type"] = "BUFF",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2880,
},
[89751] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[427323] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[460587] = {
["isChanneled"] = false,
["source"] = "Vindictive Technician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220472,
},
[368984] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Flameshatter",
["npcID"] = 191136,
},
[448818] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[224729] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dreadstrike Subjugator",
["npcID"] = 213129,
},
[427325] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[388944] = {
["source"] = "Primalist Flowbreaker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 203748,
},
[395597] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[455984] = {
["isChanneled"] = true,
["source"] = "Voidstone Behemoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221307,
},
[18328] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Horde Peacekeeper",
["npcID"] = 64587,
},
[448820] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[435516] = {
["source"] = "Intrusive Nothwing",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217038,
},
[431934] = {
["isChanneled"] = false,
["source"] = "Burkhalt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228671,
},
[444728] = {
["isChanneled"] = false,
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207949,
},
[429376] = {
["isChanneled"] = false,
["source"] = "Remembered Hogger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213570,
},
[431935] = {
["isChanneled"] = false,
["source"] = "Burkhalt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228671,
},
[446776] = {
["isChanneled"] = false,
["source"] = "War Lynx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206699,
},
[432959] = {
["isChanneled"] = false,
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212793,
},
[203750] = {
["isChanneled"] = false,
["source"] = "Duskwatch Warpcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 109652,
},
[91800] = {
["source"] = "Stoneleaper",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[428866] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[227291] = {
["isChanneled"] = false,
["source"] = "Niuzao",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 180743,
},
[426308] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[371551] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rebel Incinerator",
["npcID"] = 195062,
},
[117516] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Northwind Hawk",
["npcID"] = 59700,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204188,
},
[259277] = {
["source"] = "Shade",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[453946] = {
["encounterName"] = "Bogpiper",
["type"] = "BUFF",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2960,
},
[399701] = {
["isChanneled"] = false,
["source"] = "Territorial Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219902,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215405,
},
[451900] = {
["isChanneled"] = false,
["source"] = "Stonehead Koboldcrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220792,
},
[399702] = {
["isChanneled"] = false,
["source"] = "Territorial Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219902,
},
[23766] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[381280] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Uktulut Trainee",
["npcID"] = 193204,
},
[432967] = {
["isChanneled"] = false,
["source"] = "Sentry Stagshell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216340,
},
[197613] = {
["isChanneled"] = false,
["source"] = "Invisible Man",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 100463,
},
[382817] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[50267] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Winterfin Rider",
["npcID"] = 221671,
},
[445251] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scavenging Stormfang",
["npcID"] = 218401,
},
[423246] = {
["encounterName"] = "Skarmorak",
["type"] = "BUFF",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2880,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[444740] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Highlord Darion Mograine",
["npcID"] = 221632,
},
[445252] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Heartfang",
["npcID"] = 216035,
},
[161792] = {
["source"] = "Rallied Recruit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215137,
},
[444741] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Highlord Darion Mograine",
["npcID"] = 221632,
},
[427342] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[427854] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[455489] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gloomhound",
["npcID"] = 226268,
},
[440137] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Feral Sharpclaw",
["npcID"] = 221470,
},
[387427] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[428879] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[388963] = {
["source"] = "Leg Chewer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217743,
},
[450885] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[435533] = {
["source"] = "Glibb",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 211014,
},
[427346] = {
["isChanneled"] = false,
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206697,
},
[191732] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[440653] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[423766] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Aspiring Forgehand",
["npcID"] = 212405,
},
[451913] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ascended Webfriar",
["npcID"] = 219022,
},
[440143] = {
["source"] = "Arathi Warlynx",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217634,
},
[448843] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[457543] = {
["isChanneled"] = false,
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224798,
},
[138000] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Defense Crystal",
["npcID"] = 69759,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[445262] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[445774] = {
["isChanneled"] = true,
["source"] = "Crazed Predator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216325,
},
[428887] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[203761] = {
["source"] = "Chronarch Defender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 109670,
},
[23735] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[23767] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[384366] = {
["isChanneled"] = false,
["source"] = "Remembered Owl",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221946,
},
[427865] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[424795] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2854,
},
[460618] = {
["isChanneled"] = false,
["source"] = "Overworked Cook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220744,
},
[387950] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[388974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[213486] = {
["source"] = "Doomguard Executioner",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 113633,
},
[427356] = {
["isChanneled"] = false,
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206697,
},
[26262] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vanquished Tentacle",
["npcID"] = 223702,
},
[442709] = {
["source"] = "Mechanized Enforcer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220457,
},
[80676] = {
["source"] = "Blackrock Spy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 49874,
},
[427357] = {
["isChanneled"] = false,
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206697,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[370042] = {
["isChanneled"] = false,
["source"] = "Molten Slag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214722,
},
[388977] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[450899] = {
["isChanneled"] = false,
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222976,
},
[428894] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[216814] = {
["source"] = "Nar'thalas Nightwatcher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 88782,
},
[448341] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[438618] = {
["isChanneled"] = false,
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214840,
},
[424801] = {
["source"] = "Infected Beast",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210478,
},
[195321] = {
["source"] = "Earth Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[446807] = {
["isChanneled"] = false,
["source"] = "Bomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222787,
},
[6360] = {
["isChanneled"] = false,
["source"] = "Jhorneth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[427361] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Aspiring Forgehand",
["npcID"] = 212405,
},
[433919] = {
["isChanneled"] = false,
["source"] = "Shadowed Gloomrender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217063,
},
[458497] = {
["isChanneled"] = false,
["source"] = "Parasidious",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206977,
},
[453461] = {
["source"] = "Fervent Sharpshooter",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206694,
},
[15550] = {
["isChanneled"] = false,
["source"] = "Remembered King Mosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212128,
},
[450786] = {
["isChanneled"] = false,
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222976,
},
[16827] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[449368] = {
["isChanneled"] = false,
["source"] = "Wanderer Ida",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220953,
},
[458068] = {
["isChanneled"] = false,
["source"] = "Croakit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214757,
},
[431853] = {
["isChanneled"] = false,
["source"] = "Turn in Circle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215799,
},
[422246] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2829,
},
[453463] = {
["isChanneled"] = false,
["source"] = "Suppressed Worker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225436,
},
[373521] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cavern Basilisk",
["npcID"] = 219949,
},
[450393] = {
["isChanneled"] = false,
["source"] = "Obstorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217082,
},
[434921] = {
["source"] = "Oblivious Shaleshell",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217123,
},
[387960] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[370049] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Magma",
["npcID"] = 225390,
},
[448347] = {
["isChanneled"] = false,
["source"] = "Diu'mik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211564,
},
[448859] = {
["isChanneled"] = false,
["source"] = "Enraged Drunkard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218655,
},
[458001] = {
["source"] = "Croakit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214757,
},
[445781] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stolen Loader",
["npcID"] = 223541,
},
[452442] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Terror of the Forge",
["npcID"] = 220271,
},
[418155] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[130830] = {
["source"] = "Springtail Thumper",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 66229,
},
[449767] = {
["isChanneled"] = false,
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215770,
},
[23736] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[387452] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[443232] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowsilk Jailer",
["npcID"] = 224842,
},
[167381] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystalmaw",
["npcID"] = 225978,
},
[440162] = {
["isChanneled"] = false,
["source"] = "Scarlet Stinkcap",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212579,
},
[426345] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Touched Elemental",
["npcID"] = 212400,
},
[744] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Noxious Shredder",
["npcID"] = 4348,
},
[273844] = {
["isChanneled"] = false,
["source"] = "Horde Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214169,
},
[448351] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[448863] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[373636] = {
["isChanneled"] = false,
["source"] = "Remembered Deviate Raptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221516,
},
[273845] = {
["isChanneled"] = false,
["source"] = "Horde Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214169,
},
[457948] = {
["isChanneled"] = false,
["source"] = "Vek'kix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225425,
},
[448864] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[390416] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Flameshaper Lorak",
["npcID"] = 197260,
},
[427360] = {
["isChanneled"] = false,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[452918] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Avenger",
["npcID"] = 221980,
},
[448865] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[457565] = {
["isChanneled"] = false,
["source"] = "Riled Kelpcoil",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225901,
},
[451890] = {
["isChanneled"] = false,
["source"] = "Dogmatic Soot-Seer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212876,
},
[436072] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Webspinner",
["npcID"] = 212717,
},
[463576] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Candle",
["npcID"] = 222021,
},
[433002] = {
["isChanneled"] = false,
["source"] = "Bloodstained Assistant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216333,
},
[451937] = {
["isChanneled"] = true,
["source"] = "Grand Gluttony",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217747,
},
[427329] = {
["encounterName"] = "Void Speaker Eirich",
["type"] = "DEBUFF",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2883,
},
[440679] = {
["source"] = "Nerubian Ritualist",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219810,
},
[345495] = {
["isChanneled"] = false,
["source"] = "Frothing Pustule",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 175519,
},
[213971] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Felcaller Whitley",
["npcID"] = 107736,
},
[277298] = {
["isChanneled"] = false,
["source"] = "Horde Rogue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214163,
},
[462686] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[428910] = {
["isChanneled"] = false,
["source"] = "Auctioned Pages Past",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214069,
},
[458080] = {
["isChanneled"] = false,
["source"] = "Croakit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214757,
},
[436075] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Webspinner",
["npcID"] = 212717,
},
[372553] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scavenger Matriarch",
["npcID"] = 192812,
},
[428820] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[457465] = {
["encounterName"] = "Void Speaker Eirich",
["type"] = "DEBUFF",
["source"] = "Void Speaker Eirich",
["encounterID"] = 2883,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213119,
},
[452910] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zilthara",
["npcID"] = 220270,
},
[372557] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scavenger Matriarch",
["npcID"] = 192812,
},
[384252] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Elemental",
["npcID"] = 190780,
},
[432868] = {
["isChanneled"] = false,
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228015,
},
[3110] = {
["isChanneled"] = false,
["source"] = "Yaztuk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 416,
},
[62042] = {
["isChanneled"] = false,
["source"] = "Recalled Thorim",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221923,
},
[375599] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Herald of Frost",
["npcID"] = 191315,
},
[397108] = {
["isChanneled"] = false,
["source"] = "Seaborne Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214437,
},
[449896] = {
["source"] = "Shadow Vanguard Brute",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214901,
},
[283499] = {
["source"] = "Qyrix the Hatchet",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 150743,
},
[371584] = {
["isChanneled"] = false,
["source"] = "Living Water Fall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213698,
},
[12544] = {
["isChanneled"] = false,
["source"] = "Rogue Wizard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 474,
},
[431985] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Bloodworker",
["encounterID"] = 2901,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215826,
},
[430450] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stagnant Slime",
["npcID"] = 223473,
},
[67888] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Lord Jaraxxus",
["npcID"] = 221861,
},
[429427] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[1459] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[429428] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[426869] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Enforcer",
["npcID"] = 212548,
},
[458086] = {
["isChanneled"] = false,
["source"] = "Croakit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214757,
},
[440175] = {
["isChanneled"] = false,
["source"] = "Agaricus Festerbloom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215545,
},
[387465] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[429828] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shyalude",
["npcID"] = 223834,
},
[427382] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[427894] = {
["isChanneled"] = false,
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212831,
},
[89766] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[451435] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voidwraith",
["npcID"] = 224466,
},
[445806] = {
["isChanneled"] = false,
["source"] = "Waxen Bones",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229808,
},
[19483] = {
["isChanneled"] = false,
["source"] = "Infernal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 89,
},
[23768] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[103582] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Darkmoon Faire Mystic Mage",
["npcID"] = 55382,
},
[115098] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[427896] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightshade Ambusher",
["npcID"] = 224278,
},
[23737] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[23769] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[445808] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Heelripper",
["npcID"] = 216555,
},
[427897] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["encounterID"] = 2836,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213684,
},
[451811] = {
["isChanneled"] = false,
["source"] = "Pious Disciple",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217464,
},
[446682] = {
["isChanneled"] = false,
["source"] = "Warped Sapling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220655,
},
[118297] = {
["isChanneled"] = false,
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61029,
},
[452378] = {
["isChanneled"] = false,
["source"] = "Civilian Puppet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219495,
},
[87337] = {
["isChanneled"] = false,
["source"] = "Remembered Hogger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213570,
},
[108446] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[440181] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Boskroot Brute",
["npcID"] = 212736,
},
[389518] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sparklit Buttonmasher",
["npcID"] = 212596,
},
[451287] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[445811] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Waxen Bones",
["npcID"] = 229808,
},
[450417] = {
["isChanneled"] = false,
["source"] = "Plaguehart",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219267,
},
[428412] = {
["isChanneled"] = false,
["source"] = "Remembered Pummeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213789,
},
[193473] = {
["isChanneled"] = false,
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192337,
},
[377661] = {
["isChanneled"] = false,
["source"] = "Tranquil Vorquin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191624,
},
[386961] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unbound Windscourge",
["npcID"] = 195854,
},
[369050] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rebel Incinerator",
["npcID"] = 195062,
},
[377750] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Muckling",
["npcID"] = 192802,
},
[378143] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rebel Bruiser",
["npcID"] = 195059,
},
[446325] = {
["isChanneled"] = false,
["source"] = "Island Proudfeather",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227198,
},
[455380] = {
["isChanneled"] = false,
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218251,
},
[453392] = {
["isChanneled"] = false,
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225408,
},
[16468] = {
["source"] = "Remembered Mother Smolderweb",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221655,
},
[440185] = {
["isChanneled"] = false,
["source"] = "Rustul Titancap",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213115,
},
[199169] = {
["source"] = "Fel Lord Dakuur",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 102970,
},
[422648] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2787,
},
[419204] = {
["source"] = "Crenna Earth-Daughter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[458610] = {
["isChanneled"] = false,
["source"] = "Toadstomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207803,
},
[66228] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Recalled Lord Jaraxxus",
["npcID"] = 221861,
},
[186382] = {
["isChanneled"] = false,
["source"] = "Malgalor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92608,
},
[353703] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ice Wall",
["npcID"] = 178819,
},
[446328] = {
["isChanneled"] = false,
["source"] = "Fog Form",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213953,
},
[118555] = {
["isChanneled"] = false,
["source"] = "Springtail Littlewhisker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59515,
},
[198839] = {
["isChanneled"] = false,
["source"] = "Earthen Wall Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 100943,
},
[464240] = {
["isChanneled"] = false,
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212827,
},
[449277] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[372562] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hyena Tender",
["npcID"] = 192506,
},
[426883] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Taskworker",
["npcID"] = 212383,
},
[220926] = {
["isChanneled"] = false,
["source"] = "Eredar Enslaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97176,
},
[450424] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Wax-hulk",
["npcID"] = 223206,
},
[445236] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Agitated Eel",
["npcID"] = 227369,
},
[438622] = {
["isChanneled"] = true,
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214840,
},
[445819] = {
["isChanneled"] = false,
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217624,
},
[449765] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[446843] = {
["isChanneled"] = false,
["source"] = "Warped Sapling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220655,
},
[440187] = {
["source"] = "Encroaching Fungarian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216281,
},
[430812] = {
["isChanneled"] = true,
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214421,
},
[453894] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ren'khat",
["npcID"] = 222152,
},
[444705] = {
["isChanneled"] = false,
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207949,
},
[5568] = {
["isChanneled"] = false,
["source"] = "Remembered Pummeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213789,
},
[386458] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gorging Stagbeetle",
["npcID"] = 195709,
},
[442239] = {
["source"] = "Nerubian Ritualist",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219810,
},
[424328] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[457081] = {
["isChanneled"] = false,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[456910] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[458616] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[375201] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[445311] = {
["isChanneled"] = false,
["source"] = "Shallowshell the Clacker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219278,
},
[23738] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[454521] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sureki Sunderer",
["npcID"] = 227825,
},
[362920] = {
["isChanneled"] = false,
["source"] = "Zealous Ironguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223904,
},
[438599] = {
["isChanneled"] = false,
["source"] = "Jabbing Flyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216341,
},
[368983] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[440195] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wanton Shadow",
["npcID"] = 225338,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214348,
},
[383240] = {
["source"] = "Shimmerfin Oracle",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220249,
},
[11969] = {
["isChanneled"] = false,
["source"] = "Firemane Ash Tail",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4331,
},
[54049] = {
["isChanneled"] = false,
["source"] = "Khuufum",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[442224] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corridor Sleeper",
["npcID"] = 220616,
},
[453876] = {
["source"] = "Grand Overspinner Antourix",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225263,
},
[459479] = {
["isChanneled"] = true,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[457510] = {
["isChanneled"] = false,
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224798,
},
[264667] = {
["isChanneled"] = false,
["source"] = "Devilsaur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[426892] = {
["encounterName"] = "The Darkness",
["source"] = "Fleeing Candlebearer",
["npcID"] = 212821,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[427404] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[444722] = {
["isChanneled"] = false,
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207949,
},
[450766] = {
["isChanneled"] = false,
["source"] = "Coalesced Living Honey",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217833,
},
[426893] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[444743] = {
["isChanneled"] = false,
["source"] = "Risen Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221760,
},
[445830] = {
["isChanneled"] = false,
["source"] = "Mead-Mad Flayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222898,
},
[413488] = {
["isChanneled"] = false,
["source"] = "Drowned Arathi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218024,
},
[238332] = {
["isChanneled"] = false,
["source"] = "Rallied Recruit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215135,
},
[238331] = {
["isChanneled"] = false,
["source"] = "Rallied Recruit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215135,
},
[450435] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Y'tekhi",
["npcID"] = 215660,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207940,
},
[261616] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Katy Stampwhistle",
["npcID"] = 132969,
},
[118686] = {
["isChanneled"] = false,
["source"] = "Springtail Warren-Mother",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59516,
},
[414942] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gnarled Lasher",
["npcID"] = 207740,
},
[285141] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Talah Blightspewer",
["npcID"] = 150735,
},
[426896] = {
["encounterName"] = "The Darkness",
["source"] = "Fleeing Candlebearer",
["npcID"] = 212821,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[306635] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spirit of Balance",
["npcID"] = 150411,
},
[3606] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Searing Totem",
["npcID"] = 2523,
},
[433040] = {
["isChanneled"] = false,
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214343,
},
[451461] = {
["isChanneled"] = true,
["source"] = "Murgle-whurgle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214546,
},
[107428] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[315336] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tent",
["npcID"] = 161974,
},
[450764] = {
["isChanneled"] = false,
["source"] = "Siegehold Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216016,
},
[51875] = {
["isChanneled"] = false,
["source"] = "Tundra Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 27294,
},
[191186] = {
["isChanneled"] = false,
["source"] = "Swirling Storms",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96455,
},
[450439] = {
["source"] = "Congealed Wax-hulk",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223206,
},
[389541] = {
["isChanneled"] = false,
["source"] = "White Tiger Statue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196581,
},
[377771] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rebel Collier",
["npcID"] = 195608,
},
[369073] = {
["isChanneled"] = false,
["source"] = "Remembered Stitches",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213529,
},
[440205] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["npcID"] = 218034,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2998,
},
[446858] = {
["isChanneled"] = false,
["source"] = "Blackblood Coalescence",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215205,
},
[428947] = {
["source"] = "Skedgit Cinderbangs",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214076,
},
[386472] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gorging Stagbeetle",
["npcID"] = 195709,
},
[448854] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[446859] = {
["isChanneled"] = false,
["source"] = "Blackblood Coalescence",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215205,
},
[455413] = {
["isChanneled"] = false,
["source"] = "Recalled Silverbrook Lumberjack",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226197,
},
[453458] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[450442] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[369074] = {
["source"] = "Remembered Stitches",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213529,
},
[450955] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cinderbee Knight",
["npcID"] = 222820,
},
[205231] = {
["isChanneled"] = false,
["source"] = "Darkglare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103673,
},
[428916] = {
["isChanneled"] = false,
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206697,
},
[381357] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hunting Ottuk",
["npcID"] = 190267,
},
[343294] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[306642] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Essence of Rage",
["npcID"] = 150495,
},
[455879] = {
["source"] = "Fragmented Core",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223953,
},
[453003] = {
["source"] = "Pausing Pylon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225193,
},
[458634] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[376754] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Erupting Droplet",
["npcID"] = 191983,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2829,
},
[438675] = {
["source"] = "Engorged Crawler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214840,
},
[457423] = {
["isChanneled"] = false,
["source"] = "Riled Sandtwister",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225900,
},
[306644] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Essence of Rage",
["npcID"] = 150495,
},
[448399] = {
["isChanneled"] = false,
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204127,
},
[455052] = {
["isChanneled"] = false,
["source"] = "Supervisor Radlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220897,
},
[455564] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Roth the Earthwound",
["npcID"] = 226300,
},
[423324] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[317792] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[54680] = {
["isChanneled"] = false,
["source"] = "Devilsaur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[432994] = {
["source"] = "Brann Bronzebeard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210759,
},
[372503] = {
["source"] = "Loyalist Threadblade",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221190,
},
[462612] = {
["source"] = "Ermie",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229589,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[185096] = {
["isChanneled"] = false,
["source"] = "Zany Goblin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221982,
},
[449937] = {
["isChanneled"] = false,
["source"] = "Bloodmaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219264,
},
[432027] = {
["isChanneled"] = false,
["source"] = "Twice-Stinger the Wretched",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219271,
},
[423839] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213179,
},
[423327] = {
["encounterName"] = "Skarmorak",
["type"] = "BUFF",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2880,
},
[458638] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[377270] = {
["isChanneled"] = false,
["source"] = "Shimmerfin Mender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220246,
},
[443162] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[388529] = {
["isChanneled"] = false,
["source"] = "Seabreaker Skrog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192931,
},
[429422] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[159786] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165189,
},
[432030] = {
["isChanneled"] = false,
["source"] = "Sureki Screamer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215411,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Black Blood",
["encounterID"] = 2901,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[456593] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Lava Laden Crystal Construct",
["npcID"] = 226968,
},
[88445] = {
["isChanneled"] = false,
["source"] = "Dark Iron Marksman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 8338,
},
[433053] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Heartfang",
["npcID"] = 216035,
},
[449941] = {
["isChanneled"] = false,
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219265,
},
[456594] = {
["source"] = "Lava Laden Crystal Construct",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226968,
},
[434589] = {
["isChanneled"] = false,
["source"] = "Overfiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217429,
},
[433054] = {
["source"] = "Kobyss Necromancer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214625,
},
[449942] = {
["isChanneled"] = false,
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219265,
},
[442266] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[8221] = {
["isChanneled"] = false,
["source"] = "Elegon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[441129] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dark Bombardier",
["npcID"] = 217151,
},
[424721] = {
["source"] = "Candlelight Sanctuary",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 211750,
},
[444826] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Thoras Trollbane",
["npcID"] = 221635,
},
[443292] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[317898] = {
["source"] = "Onyxian Whelp",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228014,
},
[438174] = {
["isChanneled"] = false,
["source"] = "Waterworks Dynamo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223918,
},
[456523] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Clump O' Wax",
["npcID"] = 226809,
},
[459668] = {
["source"] = "Spirit Beast",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[100780] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[440222] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[456936] = {
["isChanneled"] = false,
["source"] = "Manifested Protocol",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222946,
},
[458646] = {
["isChanneled"] = false,
["source"] = "Voracious Fog Beast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219446,
},
[427402] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Rookguard",
["npcID"] = 207197,
},
[432035] = {
["source"] = "Hairless the Menace",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213550,
},
[428453] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[439200] = {
["encounterName"] = "Avanoxx",
["type"] = "DEBUFF",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213179,
},
[440007] = {
["isChanneled"] = true,
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214576,
},
[434083] = {
["isChanneled"] = false,
["source"] = "Ravenous Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216336,
},
[455065] = {
["isChanneled"] = true,
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217465,
},
[313311] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shady Thug",
["npcID"] = 156881,
},
[387487] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Portal",
["npcID"] = 196051,
},
[432037] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sparklit Buttonmasher",
["npcID"] = 212596,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2831,
},
[50262] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Winterfin Shorestriker",
["npcID"] = 221623,
},
[446261] = {
["isChanneled"] = false,
["source"] = "Emboldened Fog Wither",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219909,
},
[201754] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[374029] = {
["isChanneled"] = false,
["source"] = "Remembered Deviate Raptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221516,
},
[62305] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hyena",
["npcID"] = 165189,
},
[374158] = {
["isChanneled"] = false,
["source"] = "Remembered Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221664,
},
[451775] = {
["isChanneled"] = false,
["source"] = "Cogwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224527,
},
[389564] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[447392] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[11970] = {
["isChanneled"] = false,
["source"] = "Remembered Mechano-Tank",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213785,
},
[440228] = {
["source"] = "Orweyna",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215944,
},
[455069] = {
["isChanneled"] = false,
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217465,
},
[441252] = {
["isChanneled"] = false,
["source"] = "Underdrip Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223069,
},
[445858] = {
["isChanneled"] = false,
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216578,
},
[48168] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matron Ossela",
["npcID"] = 96955,
},
[361195] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Past Self",
["npcID"] = 185800,
},
[388975] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[447400] = {
["isChanneled"] = false,
["source"] = "Queen Rickiticka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215772,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[458657] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[395148] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mikrin of the Raging Winds",
["npcID"] = 193173,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2826,
},
[440231] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[453029] = {
["source"] = "Siege Marshal Tekhzok",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215987,
},
[388316] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[459449] = {
["isChanneled"] = false,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[427950] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[55973] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Recalled Vladof the Butcher",
["npcID"] = 221721,
},
[441256] = {
["isChanneled"] = false,
["source"] = "Underdrip Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223069,
},
[447909] = {
["isChanneled"] = false,
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217353,
},
[445866] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[455866] = {
["isChanneled"] = false,
["source"] = "Finclaw Bloodtide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207780,
},
[388035] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ifrit",
["npcID"] = 165189,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[61730] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Snowplain Disciple",
["npcID"] = 26705,
},
[11983] = {
["isChanneled"] = false,
["source"] = "Dark Iron Steamsmith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 5840,
},
[61858] = {
["source"] = "Wintergrasp Catapult",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27881,
},
[441770] = {
["source"] = "ZZ-01-47",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220459,
},
[391385] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Magma Fury",
["npcID"] = 214924,
},
[389572] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunless Slitherer",
["npcID"] = 219606,
},
[449447] = {
["isChanneled"] = false,
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221071,
},
[112042] = {
["isChanneled"] = false,
["source"] = "Barnos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[452009] = {
["isChanneled"] = false,
["source"] = "Slag Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212885,
},
[459171] = {
["isChanneled"] = false,
["source"] = "Val'kyr Shadowguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227940,
},
[390361] = {
["isChanneled"] = false,
["source"] = "Primalist Stormslinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203746,
},
[449960] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepwater Kobyss",
["npcID"] = 215750,
},
[427955] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[449451] = {
["isChanneled"] = false,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[441261] = {
["source"] = "Ballista",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230447,
},
[183081] = {
["source"] = "Kirin Tor Guardian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222476,
},
[67009] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Lord Jaraxxus",
["npcID"] = 221861,
},
[191726] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[189990] = {
["source"] = "Forsaken Warlock",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217236,
},
[390599] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Child of Ohn'ahra",
["npcID"] = 191869,
},
[458662] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[391948] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steam Coalescence",
["npcID"] = 190110,
},
[428981] = {
["isChanneled"] = false,
["source"] = "Auctioned Pages Past",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214069,
},
[429493] = {
["encounterName"] = "Skardyn Monstrosity",
["type"] = "DEBUFF",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207207,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2826,
},
[452014] = {
["isChanneled"] = false,
["source"] = "Faceless One",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223119,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2854,
},
[393430] = {
["source"] = "Forge-Keep Custodian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 192703,
},
[448429] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[51944] = {
["isChanneled"] = false,
["source"] = "Injured Mammoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26711,
},
[424889] = {
["encounterName"] = "E.D.N.A.",
["type"] = "DEBUFF",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2854,
},
[449965] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Raging Roots",
["npcID"] = 216250,
},
[100784] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[19647] = {
["isChanneled"] = false,
["source"] = "Thooghun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[449454] = {
["source"] = "Overseer Roskarrag",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221071,
},
[452013] = {
["isChanneled"] = false,
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222797,
},
[457398] = {
["isChanneled"] = false,
["source"] = "Beebiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222284,
},
[436661] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Armored Scuttler",
["npcID"] = 216194,
},
[449455] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[431544] = {
["isChanneled"] = false,
["source"] = "Stalwart Hauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214935,
},
[448432] = {
["isChanneled"] = false,
["source"] = "Generic - Empty Bunny",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223358,
},
[448944] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[432569] = {
["isChanneled"] = false,
["source"] = "Mother of Chaos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228576,
},
[447921] = {
["isChanneled"] = false,
["source"] = "Cascade Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214594,
},
[420125] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Roth the Earthwound",
["npcID"] = 226300,
},
[1126] = {
["source"] = "Crenna Earth-Daughter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[441269] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sparking Haulbot",
["npcID"] = 219497,
},
[87603] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Silver Covenant Ranger",
["npcID"] = 70262,
},
[458669] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[301562] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Plague Thrower",
["npcID"] = 152320,
},
[90361] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[377765] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mikrin of the Raging Winds",
["npcID"] = 193173,
},
[432059] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Hexthrower",
["npcID"] = 213685,
},
[441259] = {
["source"] = "Underdrip Crawler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223069,
},
[461741] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[431549] = {
["isChanneled"] = false,
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219661,
},
[55079] = {
["isChanneled"] = false,
["source"] = "Recalled Scourgebeak",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221447,
},
[447926] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Galvanized Lurker",
["npcID"] = 224779,
},
[461742] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[458160] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skulldunk",
["npcID"] = 221310,
},
[457085] = {
["isChanneled"] = false,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[385492] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wild Ohuna",
["npcID"] = 195217,
},
[445878] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[396751] = {
["isChanneled"] = false,
["source"] = "Remembered Gahz'rilla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221578,
},
[456626] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[288774] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[455348] = {
["source"] = "Icarus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226220,
},
[445882] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadow-Mad Sow",
["npcID"] = 214930,
},
[448897] = {
["isChanneled"] = false,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2877,
},
[33907] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 142294,
},
[431552] = {
["isChanneled"] = false,
["source"] = "Shadow Vanguard Magus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212435,
},
[458675] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[442553] = {
["isChanneled"] = false,
["source"] = "Shadowtide Bulwark",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220886,
},
[453558] = {
["isChanneled"] = false,
["source"] = "Disgruntled Dyefetcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229353,
},
[452023] = {
["source"] = "Iron-Runed Protector",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214576,
},
[448441] = {
["isChanneled"] = false,
["source"] = "Gorloc Springcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218650,
},
[160060] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "DonRonnie",
["npcID"] = 165189,
},
[383452] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Groffnar",
["npcID"] = 201537,
},
[452024] = {
["isChanneled"] = true,
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214576,
},
[451764] = {
["isChanneled"] = false,
["source"] = "Sir Braunpyke",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217658,
},
[63619] = {
["isChanneled"] = false,
["source"] = "Mindbender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62982,
},
[279565] = {
["source"] = "Lady Jaina Proudmoore",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214276,
},
[443837] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["npcID"] = 218022,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2998,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2877,
},
[456125] = {
["isChanneled"] = false,
["source"] = "Agitated Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215830,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2854,
},
[54185] = {
["isChanneled"] = false,
["source"] = "Recalled Ghoul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221434,
},
[313342] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechanized Lab Assistant",
["npcID"] = 156908,
},
[459191] = {
["isChanneled"] = true,
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224157,
},
[321538] = {
["source"] = "Spirit Beast",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[419790] = {
["source"] = "Night Elf Starcaller",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219919,
},
[452539] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Terror of the Forge",
["npcID"] = 220271,
},
[457149] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shipwright Isaebela",
["npcID"] = 219801,
},
[90171] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mottled Drywallow Crocolisk",
["npcID"] = 4344,
},
[392665] = {
["isChanneled"] = false,
["source"] = "Time-Lost Thunderhide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187258,
},
[134477] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[427469] = {
["isChanneled"] = false,
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206698,
},
[448691] = {
["isChanneled"] = false,
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218657,
},
[334713] = {
["isChanneled"] = false,
["source"] = "Dreadstalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98035,
},
[457902] = {
["isChanneled"] = true,
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207802,
},
[33395] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Water Elemental",
["npcID"] = 208441,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214348,
},
[11971] = {
["isChanneled"] = false,
["source"] = "Firemane Scalebane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4328,
},
[378850] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Elemental",
["npcID"] = 190780,
},
[452035] = {
["isChanneled"] = false,
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222797,
},
[453566] = {
["isChanneled"] = false,
["source"] = "Disgruntled Dyefetcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229353,
},
[396762] = {
["isChanneled"] = false,
["source"] = "Remembered Gahz'rilla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221578,
},
[382945] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sal Atwater",
["npcID"] = 194053,
},
[50283] = {
["source"] = "Recalled Underking",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226098,
},
[446409] = {
["isChanneled"] = false,
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215702,
},
[459495] = {
["source"] = "Remembered Lich King",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224157,
},
[456136] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Murkshade",
["npcID"] = 218452,
},
[422351] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gnarled Lasher",
["npcID"] = 207740,
},
[399045] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[431563] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakener Kobyss",
["npcID"] = 215683,
},
[452545] = {
["source"] = "Boulderbane",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224756,
},
[456138] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[461757] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[306697] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodeyes",
["npcID"] = 150721,
},
[452546] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Boulderbane",
["npcID"] = 224756,
},
[450509] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[448975] = {
["source"] = "Cursedforge Honor Guard",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214264,
},
[161601] = {
["isChanneled"] = false,
["source"] = "Feral Skardyn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212591,
},
[458688] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Volcanic Fury",
["npcID"] = 225896,
},
[456140] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimslice",
["npcID"] = 221551,
},
[435148] = {
["isChanneled"] = false,
["source"] = "Risen Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212835,
},
[414191] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Partially Teleported Murloc",
["npcID"] = 226666,
},
[440266] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Roaming Mongrel",
["npcID"] = 218330,
},
[427484] = {
["isChanneled"] = false,
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206698,
},
[439984] = {
["isChanneled"] = true,
["source"] = "Earthen-Ward Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216221,
},
[427473] = {
["isChanneled"] = false,
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206698,
},
[58729] = {
["source"] = "Dwarven Spirit Guide",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 31842,
},
[418262] = {
["isChanneled"] = true,
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[456143] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Funglour",
["npcID"] = 221767,
},
[448468] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cavernous Shrieker",
["npcID"] = 204109,
},
[419798] = {
["source"] = "Night Elf Starcaller",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219919,
},
[459229] = {
["isChanneled"] = true,
["source"] = "The Broken Queen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214368,
},
[449480] = {
["isChanneled"] = false,
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221071,
},
[419287] = {
["source"] = "Crenna Earth-Daughter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[228649] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[50284] = {
["isChanneled"] = false,
["source"] = "Recalled Underking",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226098,
},
[426964] = {
["isChanneled"] = false,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[433845] = {
["isChanneled"] = false,
["source"] = "Blood Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216364,
},
[446424] = {
["source"] = "Freed Honeywax",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222313,
},
[176458] = {
["source"] = "Blacksmithing Follower - Horde",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 88402,
},
[103079] = {
["isChanneled"] = false,
["source"] = "Training Bag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55183,
},
[452041] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ascended Webfriar",
["npcID"] = 219022,
},
[430036] = {
["isChanneled"] = false,
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214338,
},
[448173] = {
["source"] = "Enormous Kelp-Snaggler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221061,
},
[447412] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bloodmaw",
["npcID"] = 219264,
},
[452042] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Arcane Phoenix",
["npcID"] = 223453,
},
[430037] = {
["isChanneled"] = false,
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214338,
},
[91837] = {
["source"] = "Corpseravager",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[31707] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[396774] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Klozicc the Ascended",
["npcID"] = 187209,
},
[61353] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dagna Flintlock",
["npcID"] = 96779,
},
[360969] = {
["isChanneled"] = false,
["source"] = "Gwenynen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[435156] = {
["isChanneled"] = false,
["source"] = "Risen Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212835,
},
[396775] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Klozicc the Ascended",
["npcID"] = 187209,
},
[436180] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampant Air Elemental",
["npcID"] = 215048,
},
[228645] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[453580] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Charmonger",
["npcID"] = 220267,
},
[433622] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brann Bronzebeard",
["npcID"] = 210759,
},
[446416] = {
["isChanneled"] = false,
["source"] = "Honey-fused Droplet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213697,
},
[459210] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[191032] = {
["source"] = "Spectral Windshaper",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 94813,
},
[386542] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "齐兹里卡德",
["npcID"] = 17252,
},
[444370] = {
["source"] = "Lightning",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[91838] = {
["source"] = "Corpseravager",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[433843] = {
["source"] = "Blood Overseer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216364,
},
[331274] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Animated Goo",
["npcID"] = 218519,
},
[456653] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[11972] = {
["isChanneled"] = false,
["source"] = "Firemane Scalebane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4328,
},
[453583] = {
["isChanneled"] = false,
["source"] = "Bloodworker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216337,
},
[441813] = {
["source"] = "Dislodged Dynamite",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220426,
},
[385023] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Coastal Salamanther",
["npcID"] = 191653,
},
[453072] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Terror of the Forge",
["npcID"] = 220271,
},
[447443] = {
["encounterName"] = "Captain Dailcry",
["type"] = "DEBUFF",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207946,
},
[447955] = {
["isChanneled"] = false,
["source"] = "Elusive Stormrook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223031,
},
[444373] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[453073] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sweetspark the Oozeful",
["npcID"] = 220883,
},
[420847] = {
["source"] = "Amaya",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[440805] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2946,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219676,
},
[456656] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[457183] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowspinner Azarak",
["npcID"] = 222612,
},
[400066] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hallowlight Flitter",
["npcID"] = 215526,
},
[445910] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sporbit",
["npcID"] = 213434,
},
[445412] = {
["isChanneled"] = true,
["source"] = "Shallowshell the Clacker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219278,
},
[381430] = {
["isChanneled"] = false,
["source"] = "Quaking Rager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215359,
},
[461789] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Seacurse",
["npcID"] = 220762,
},
[458193] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lurker of the Deeps",
["npcID"] = 220285,
},
[418292] = {
["isChanneled"] = false,
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[245025] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Death Metal Knight",
["npcID"] = 122899,
},
[443353] = {
["isChanneled"] = false,
["source"] = "Bloated Cindermite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222295,
},
[456147] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Regal Plainshawk",
["npcID"] = 222329,
},
[444377] = {
["isChanneled"] = false,
["source"] = "Shadegrumble Bear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220059,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[458720] = {
["isChanneled"] = false,
["source"] = "Awakened Volcanic Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225896,
},
[10277] = {
["isChanneled"] = false,
["source"] = "Remembered Bloodscalp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214059,
},
[49966] = {
["isChanneled"] = false,
["source"] = "Scalehide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[424420] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
},
[3151] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Drakkari",
["npcID"] = 221319,
},
[392692] = {
["isChanneled"] = false,
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221743,
},
[452567] = {
["isChanneled"] = false,
["source"] = "Oath-Eater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206844,
},
[424421] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211289,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215407,
},
[331479] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Animated Goo",
["npcID"] = 218519,
},
[142421] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[9573] = {
["isChanneled"] = false,
["source"] = "Incendosaur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 9318,
},
[429028] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Awakened",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213741,
},
[453605] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Burning Candle",
["npcID"] = 225497,
},
[31516] = {
["isChanneled"] = false,
["source"] = "Horde Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214154,
},
[424423] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Sergeant Shaynemail",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211291,
},
[429029] = {
["encounterName"] = "Skardyn Monstrosity",
["type"] = "BUFF",
["source"] = "Voidstone Awakened",
["encounterID"] = 2836,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213741,
},
[432120] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overlord",
["npcID"] = 228575,
},
[440288] = {
["isChanneled"] = false,
["source"] = "Duskborn Darkhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229170,
},
[400575] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nokhud Scavenger",
["npcID"] = 185445,
},
[445406] = {
["isChanneled"] = false,
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214551,
},
[237352] = {
["source"] = "Kirin Tor Sky Ward",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 119540,
},
[446430] = {
["isChanneled"] = false,
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215702,
},
[381438] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steam Scaulder",
["npcID"] = 194937,
},
[445407] = {
["isChanneled"] = true,
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214551,
},
[415250] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[456666] = {
["isChanneled"] = false,
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214343,
},
[424426] = {
["encounterName"] = "Captain Dailcry",
["type"] = "DEBUFF",
["source"] = "Sergeant Shaynemail",
["encounterID"] = 2847,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 211291,
},
[418297] = {
["source"] = "Treasure Wraith",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 208728,
},
[392698] = {
["isChanneled"] = false,
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221743,
},
[432116] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brightrock Shellvalier",
["npcID"] = 225785,
},
[414192] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Partially Teleported Murloc",
["npcID"] = 226666,
},
[445409] = {
["encounterName"] = "Skarmorak",
["type"] = "BUFF",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2880,
},
[429545] = {
["isChanneled"] = false,
["source"] = "Voidtouched Speaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223469,
},
[37685] = {
["isChanneled"] = false,
["source"] = "Remembered Defias",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214261,
},
[134847] = {
["source"] = "Blingtron 4000",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43929,
},
[443363] = {
["isChanneled"] = false,
["source"] = "Riled Sandtwister",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225900,
},
[8067] = {
["isChanneled"] = false,
["source"] = "Elegon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[440293] = {
["source"] = "Master Tidesage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216639,
},
[422382] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[447458] = {
["isChanneled"] = false,
["source"] = "Queen Rickiticka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215772,
},
[392701] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormshroud Defender",
["npcID"] = 192536,
},
[412168] = {
["isChanneled"] = false,
["source"] = "Kobyss Shellbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220907,
},
[440806] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2946,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219676,
},
[192065] = {
["isChanneled"] = false,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[44530] = {
["isChanneled"] = false,
["source"] = "Remembered Boar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213456,
},
[456171] = {
["isChanneled"] = false,
["source"] = "Grimlurk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223091,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[283700] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tuwavo Ravenwing",
["npcID"] = 144555,
},
[208963] = {
["source"] = "Totem of Wrath",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 105427,
},
[440207] = {
["isChanneled"] = false,
["source"] = "Voidstone Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[204092] = {
["isChanneled"] = false,
["source"] = "Felguard Invader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97175,
},
[462842] = {
["isChanneled"] = false,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[454818] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anub'ilith",
["npcID"] = 222185,
},
[448485] = {
["isChanneled"] = false,
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212826,
},
[451044] = {
["isChanneled"] = false,
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222846,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[372235] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rebel Mender",
["npcID"] = 195064,
},
[464876] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[425998] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Candlelit Big-Boomer",
["npcID"] = 211546,
},
[191054] = {
["source"] = "Icebreaker Tombguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 94707,
},
[461814] = {
["isChanneled"] = false,
["source"] = "Daughter of Alizabal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214142,
},
[13860] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Heretic",
["npcID"] = 221343,
},
[428547] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Scrap Block",
["encounterID"] = 2888,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213694,
},
[8374] = {
["isChanneled"] = false,
["source"] = "Remembered Pummeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213789,
},
[458746] = {
["isChanneled"] = false,
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224157,
},
[12170] = {
["isChanneled"] = false,
["source"] = "Tarren Mill Deathguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212089,
},
[418295] = {
["isChanneled"] = true,
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[453606] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Burning Candle",
["npcID"] = 225497,
},
[441510] = {
["isChanneled"] = false,
["source"] = "Deadly Sprout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220316,
},
[432113] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overlord",
["npcID"] = 228575,
},
[449001] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[424949] = {
["source"] = "Magus of the Dead",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 163366,
},
[60802] = {
["isChanneled"] = false,
["source"] = "Recalled Underking",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226098,
},
[432114] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[428532] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
},
[455655] = {
["source"] = "Frenzied Blood",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223955,
},
[395284] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Groffnar",
["npcID"] = 201537,
},
[425974] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[444909] = {
["isChanneled"] = false,
["source"] = "Spreading Sporbit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220304,
},
[283708] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ku'tiri the Claw",
["npcID"] = 150733,
},
[448162] = {
["isChanneled"] = true,
["source"] = "Enormous Kelp-Snaggler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221061,
},
[448492] = {
["isChanneled"] = false,
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212826,
},
[422393] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Darkness",
["npcID"] = 208457,
},
[452252] = {
["isChanneled"] = false,
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217353,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2877,
},
[1604] = {
["source"] = "Firemane Ash Tail",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 4331,
},
[450043] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[453611] = {
["isChanneled"] = true,
["source"] = "Automaxor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220265,
},
[445935] = {
["isChanneled"] = false,
["source"] = "Bomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222265,
},
[440306] = {
["source"] = "Nerubian Ritualist",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219810,
},
[284401] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Diviner Taz'to",
["npcID"] = 150739,
},
[459753] = {
["isChanneled"] = false,
["source"] = "Fenryr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
[423419] = {
["source"] = "Brann Bronzebeard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210759,
},
[313393] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechanized Lab Assistant",
["npcID"] = 156908,
},
[459242] = {
["isChanneled"] = false,
["source"] = "Nix'k the Wicked",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219749,
},
[60076] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tempus Wyrm",
["npcID"] = 32180,
},
[448002] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Great Stormfang",
["npcID"] = 216017,
},
[313394] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mechanized Lab Assistant",
["npcID"] = 156908,
},
[377923] = {
["isChanneled"] = false,
["source"] = "Molten Slag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214722,
},
[444418] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[433656] = {
["source"] = "Winged Carrier",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216365,
},
[462826] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Explosive Bomberbot",
["npcID"] = 229706,
},
[444915] = {
["isChanneled"] = false,
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214343,
},
[441333] = {
["isChanneled"] = false,
["source"] = "Invasive Sporemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215538,
},
[448155] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[313396] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechanized Lab Assistant",
["npcID"] = 156908,
},
[444916] = {
["source"] = "Spreading Sporbit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220304,
},
[449522] = {
["isChanneled"] = false,
["source"] = "Drone Abductor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219655,
},
[447987] = {
["isChanneled"] = false,
["source"] = "Waste Flayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221017,
},
[450546] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[459246] = {
["isChanneled"] = true,
["source"] = "The Broken Queen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214368,
},
[246583] = {
["source"] = "Devlynn Styx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 121527,
},
[431612] = {
["isChanneled"] = true,
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219661,
},
[432124] = {
["isChanneled"] = false,
["source"] = "Kaheti Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217448,
},
[455153] = {
["isChanneled"] = false,
["source"] = "Abyssal Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216031,
},
[396302] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[68054] = {
["isChanneled"] = false,
["source"] = "Jeeves",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 35642,
},
[432125] = {
["isChanneled"] = false,
["source"] = "Kaheti Silk Hauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221327,
},
[459248] = {
["source"] = "The Broken Queen",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214368,
},
[452765] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowsilk Wallclimber",
["npcID"] = 224844,
},
[450037] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[444408] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["npcID"] = 218022,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2998,
},
[432638] = {
["isChanneled"] = false,
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212793,
},
[293954] = {
["isChanneled"] = true,
["source"] = "Eclipsing Grasp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218693,
},
[182096] = {
["isChanneled"] = false,
["source"] = "Chaos Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92447,
},
[432127] = {
["isChanneled"] = true,
["source"] = "Shadow Vanguard Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214901,
},
[428545] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[413207] = {
["isChanneled"] = false,
["source"] = "Threadling Egg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206083,
},
[378394] = {
["isChanneled"] = false,
["source"] = "Riled Kelpcoil",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225901,
},
[462844] = {
["source"] = "Stone Bulwark Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[453110] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ascended Webfriar",
["npcID"] = 219022,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[458228] = {
["isChanneled"] = false,
["source"] = "Anub'ata",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219855,
},
[430109] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Thunderer",
["npcID"] = 207198,
},
[451064] = {
["isChanneled"] = false,
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222846,
},
[461460] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Creaky Mine Cart",
["npcID"] = 209439,
},
[325174] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Link Totem",
["npcID"] = 53006,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215407,
},
[191821] = {
["source"] = "Icebreaker Tombguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 94707,
},
[424966] = {
["encounterName"] = "Stormguard Gorren",
["type"] = "DEBUFF",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207205,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2831,
},
[462836] = {
["isChanneled"] = false,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[444925] = {
["isChanneled"] = false,
["source"] = "Drifting Sporebloom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214961,
},
[17253] = {
["isChanneled"] = false,
["source"] = "Serpent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[447996] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rustcloud Runt",
["npcID"] = 222796,
},
[432132] = {
["encounterName"] = "Ki'katal the Harvester",
["type"] = "DEBUFF",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215407,
},
[191822] = {
["isChanneled"] = false,
["source"] = "Invisible Man",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64367,
},
[427015] = {
["encounterName"] = "The Darkness",
["type"] = "DEBUFF",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2788,
},
[383014] = {
["isChanneled"] = false,
["source"] = "Poison Cleansing Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 5923,
},
[444415] = {
["isChanneled"] = false,
["source"] = "Shadegrumble Bear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220059,
},
[449021] = {
["isChanneled"] = false,
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[432805] = {
["source"] = "Radiating Voidstone",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212739,
},
[275564] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[456198] = {
["isChanneled"] = false,
["source"] = "Smaragthr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220362,
},
[395824] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[181089] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[306768] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nathanos Blightcaller",
["npcID"] = 152329,
},
[432135] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Pebblemaker",
["npcID"] = 218658,
},
[452250] = {
["isChanneled"] = false,
["source"] = "Gutter Gorger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217718,
},
[461817] = {
["isChanneled"] = false,
["source"] = "Daughter of Alizabal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214142,
},
[452094] = {
["isChanneled"] = false,
["source"] = "Obstorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217082,
},
[464888] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "E.D.N.A",
["npcID"] = 210108,
},
[371238] = {
["source"] = "Streamside Scythid",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 191469,
},
[400943] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Somnikus",
["npcID"] = 201648,
},
[413216] = {
["isChanneled"] = false,
["source"] = "Weaver Egg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206095,
},
[14100] = {
["isChanneled"] = false,
["source"] = "Remembered King Mosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212128,
},
[15572] = {
["isChanneled"] = false,
["source"] = "Remembered King Gordok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221574,
},
[386745] = {
["isChanneled"] = false,
["source"] = "Primalist Galewarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203744,
},
[419344] = {
["source"] = "Crenna Earth-Daughter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[456702] = {
["isChanneled"] = true,
["source"] = "Rampaging Blight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220273,
},
[424462] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[396316] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nokhud Huntmaster",
["npcID"] = 185353,
},
[415251] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211290,
},
[438803] = {
["isChanneled"] = false,
["source"] = "Skardyn Metamorphosis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219148,
},
[400050] = {
["isChanneled"] = false,
["source"] = "Deepflayer Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221198,
},
[24450] = {
["isChanneled"] = false,
["source"] = "Tsavo'ka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[448528] = {
["isChanneled"] = false,
["source"] = "Spitfire Fusetender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211777,
},
[461310] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Clockwork Scrap Collector",
["npcID"] = 229034,
},
[192082] = {
["source"] = "Wind Rush Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 97285,
},
[415253] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[32064] = {
["isChanneled"] = false,
["source"] = "Dig-Boss Dinwhisker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47271,
},
[459264] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Magnetic Loader",
["npcID"] = 227984,
},
[427024] = {
["isChanneled"] = false,
["source"] = "Lampyrid Swarm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227169,
},
[205644] = {
["source"] = "Treant",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 103822,
},
[432142] = {
["isChanneled"] = false,
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222731,
},
[462859] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[458767] = {
["isChanneled"] = true,
["source"] = "Ravageant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207826,
},
[435239] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[449031] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[445974] = {
["isChanneled"] = false,
["source"] = "Bomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222281,
},
[443914] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Murkfin Sciomancer",
["npcID"] = 213619,
},
[462849] = {
["isChanneled"] = false,
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224157,
},
[292451] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nathanos Blightcaller",
["npcID"] = 152329,
},
[451606] = {
["encounterName"] = "Prioress Murrpray",
["type"] = "DEBUFF",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207940,
},
[197785] = {
["isChanneled"] = false,
["source"] = "Impling Pursuer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97177,
},
[395299] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[428563] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Flametender",
["npcID"] = 213913,
},
[427028] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nazgrim",
["npcID"] = 221634,
},
[246586] = {
["source"] = "Devlynn Styx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 121527,
},
[446475] = {
["isChanneled"] = false,
["source"] = "Deepsludger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216536,
},
[449034] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[275563] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[386601] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "齐兹里卡德",
["npcID"] = 17252,
},
[40505] = {
["isChanneled"] = false,
["source"] = "Recalled Forgotten Depths Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224932,
},
[117952] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[452118] = {
["isChanneled"] = false,
["source"] = "Kra'jhendo",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216546,
},
[306769] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nathanos Blightcaller",
["npcID"] = 152329,
},
[446477] = {
["isChanneled"] = false,
["source"] = "Deepsludger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216536,
},
[79571] = {
["source"] = "Kirin Tor Guardian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222476,
},
[129091] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Terracotta Warrior",
["npcID"] = 59758,
},
[456851] = {
["isChanneled"] = false,
["source"] = "Agitated Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226381,
},
[14868] = {
["isChanneled"] = false,
["source"] = "Horde Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214159,
},
[449037] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[439333] = {
["encounterName"] = "Avanoxx",
["type"] = "BUFF",
["source"] = "Starved Crawler",
["npcID"] = 218961,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2926,
},
[451608] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobyss Shadeshaper",
["npcID"] = 215653,
},
[440372] = {
["isChanneled"] = false,
["source"] = "Understalker Tunneler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216249,
},
[444944] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bounty Swiftlet",
["npcID"] = 221897,
},
[267367] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trade Prince Gallywix",
["npcID"] = 157456,
},
[431639] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Saboteur",
["npcID"] = 212715,
},
[462856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nullbot",
["npcID"] = 229729,
},
[32063] = {
["isChanneled"] = false,
["source"] = "Horde Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214159,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[12550] = {
["isChanneled"] = false,
["source"] = "Rampant Thunder Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222888,
},
[442387] = {
["isChanneled"] = false,
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222731,
},
[444946] = {
["isChanneled"] = false,
["source"] = "Stormtop Terralisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214581,
},
[450197] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[452111] = {
["source"] = "Threadmaestro Fothis",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216541,
},
[419871] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[449564] = {
["source"] = "Varric's Damaged Ironstrider",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223328,
},
[377908] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Grotto Creeper",
["npcID"] = 196426,
},
[378420] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Urthgrafr Riftcaller",
["npcID"] = 215233,
},
[446483] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepwater Sludger",
["npcID"] = 216515,
},
[428572] = {
["isChanneled"] = false,
["source"] = "Wild Razormouth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213922,
},
[461836] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Candleflyer",
["npcID"] = 219341,
},
[135029] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[395319] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[270453] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Thornweaver",
["npcID"] = 221745,
},
[444055] = {
["isChanneled"] = false,
["source"] = "Rampaging Threadling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222730,
},
[443926] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unseen Blade Kesi'zir",
["npcID"] = 225861,
},
[432156] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Outrider",
["npcID"] = 213095,
},
[458778] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[455313] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[458256] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lurker of the Deeps",
["npcID"] = 220285,
},
[17767] = {
["isChanneled"] = false,
["source"] = "Grak'moth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[455186] = {
["source"] = "Voidbringer Prophet",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223034,
},
[396346] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[306779] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nathanos Blightcaller",
["npcID"] = 152329,
},
[428064] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[163177] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Ox Statue",
["npcID"] = 61146,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207940,
},
[456211] = {
["isChanneled"] = false,
["source"] = "Smaragthr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220362,
},
[458770] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[398394] = {
["isChanneled"] = false,
["source"] = "Waste Krolusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221358,
},
[152175] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[456212] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Webbed Ore Deposit",
["npcID"] = 226716,
},
[458771] = {
["source"] = "Ravageant",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207826,
},
[453142] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Web Marauder",
["npcID"] = 219034,
},
[455312] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Icarus",
["npcID"] = 226220,
},
[396347] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[413348] = {
["source"] = "Nisa Cindersteel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206135,
},
[455190] = {
["isChanneled"] = false,
["source"] = "Deathspore Bud",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221518,
},
[429091] = {
["isChanneled"] = false,
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212827,
},
[452651] = {
["isChanneled"] = false,
["source"] = "Oath-Eater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206844,
},
[295034] = {
["source"] = "Livid Enforcer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 227355,
},
[54644] = {
["isChanneled"] = false,
["source"] = "Chimaera",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[387652] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[443933] = {
["source"] = "Twice-Stinger the Wretched",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219271,
},
[460821] = {
["source"] = "Enduring Gutterface",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216045,
},
[455192] = {
["source"] = "Deathspore Bud",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221518,
},
[66528] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Lord Jaraxxus",
["npcID"] = 221861,
},
[295028] = {
["isChanneled"] = false,
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227355,
},
[458775] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[449169] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[445470] = {
["isChanneled"] = false,
["source"] = "Ah'shalathala the Quenched",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224306,
},
[429616] = {
["isChanneled"] = false,
["source"] = "Remembered Hakkar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213579,
},
[464917] = {
["source"] = "Weave-Rat",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230889,
},
[205157] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fetid Slogger",
["npcID"] = 192500,
},
[429618] = {
["isChanneled"] = false,
["source"] = "Remembered Hakkar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213579,
},
[405043] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[436260] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["npcID"] = 218022,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2998,
},
[365127] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Chieftain Gillcarver",
["npcID"] = 219633,
},
[427049] = {
["isChanneled"] = false,
["source"] = "Dogmatic Soot-Seer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212876,
},
[445984] = {
["isChanneled"] = false,
["source"] = "Infested Jawgrub",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217379,
},
[423979] = {
["isChanneled"] = false,
["source"] = "Void Cursed Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214419,
},
[453149] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Web Marauder",
["npcID"] = 219034,
},
[449567] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[388669] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Garlic-Breathed Hydra",
["npcID"] = 224751,
},
[11990] = {
["isChanneled"] = false,
["source"] = "Firemane Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4334,
},
[455197] = {
["source"] = "Mind Slurp",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226125,
},
[461850] = {
["isChanneled"] = false,
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214162,
},
[458268] = {
["isChanneled"] = false,
["source"] = "Sakret'na",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215841,
},
[458780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[444972] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Saurolisk Ambusher",
["npcID"] = 224725,
},
[429099] = {
["source"] = "Arathi Footman",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206705,
},
[458793] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[446000] = {
["isChanneled"] = false,
["source"] = "Razormouth Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214081,
},
[438823] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Diabolic Imp",
["npcID"] = 219161,
},
[3716] = {
["isChanneled"] = false,
["source"] = "Barnos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[431659] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Clotweave Widow",
["npcID"] = 216193,
},
[456735] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aquellion",
["npcID"] = 220274,
},
[295032] = {
["isChanneled"] = false,
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227355,
},
[435242] = {
["source"] = "Algari Expedition Priest",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217676,
},
[458271] = {
["isChanneled"] = false,
["source"] = "Sakret'na",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215841,
},
[430125] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[455201] = {
["source"] = "Corrupted Blood",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223035,
},
[396350] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[434740] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfall Inquisitor",
["npcID"] = 217518,
},
[392874] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Agitated Swarmite",
["npcID"] = 227406,
},
[438826] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atik",
["npcID"] = 217533,
},
[429114] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[207707] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Skulking Mongrel",
["npcID"] = 225612,
},
[118345] = {
["isChanneled"] = false,
["source"] = "Primal Earth Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61056,
},
[438827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atik",
["npcID"] = 217533,
},
[433198] = {
["isChanneled"] = false,
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216527,
},
[452133] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skulldunk",
["npcID"] = 221310,
},
[263841] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Monjaro",
["npcID"] = 165189,
},
[50361] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Frigid Ghoul Attacker",
["npcID"] = 27685,
},
[425011] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Eternal Flame",
["encounterID"] = 2848,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210851,
},
[448050] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[95826] = {
["isChanneled"] = false,
["source"] = "Tarren Mill Deathguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212089,
},
[191844] = {
["isChanneled"] = false,
["source"] = "Spectral Windshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 94813,
},
[61684] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[290422] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Perek Tidesweeper",
["npcID"] = 150750,
},
[79962] = {
["isChanneled"] = false,
["source"] = "Nelur Lightsown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96954,
},
[387655] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[396355] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tarasek Marauder",
["npcID"] = 184461,
},
[445995] = {
["isChanneled"] = false,
["source"] = "Razormouth Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214081,
},
[436272] = {
["isChanneled"] = false,
["source"] = "Xesh Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219857,
},
[455207] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hunting Skyrazor",
["npcID"] = 226150,
},
[455220] = {
["encounterName"] = "Skardyn Monstrosity",
["type"] = "DEBUFF",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2836,
},
[462372] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[452235] = {
["isChanneled"] = false,
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217624,
},
[453161] = {
["isChanneled"] = false,
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216338,
},
[429109] = {
["isChanneled"] = false,
["source"] = "Forgebound Mender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213338,
},
[462373] = {
["encounterName"] = "Master Machinists",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[425027] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[383061] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Liquid Magma Totem",
["npcID"] = 97369,
},
[429110] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[270481] = {
["isChanneled"] = false,
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135002,
},
[456745] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crimson Deathweaver",
["npcID"] = 222692,
},
[412223] = {
["isChanneled"] = false,
["source"] = "\"Peevish\" Paeton Berncort",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205797,
},
[427601] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[306803] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lumbering Nightmare",
["npcID"] = 155051,
},
[456746] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Workmaster Earwax",
["npcID"] = 213195,
},
[433731] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2906,
},
[396360] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tarasek Marauder",
["npcID"] = 184461,
},
[10887] = {
["isChanneled"] = false,
["source"] = "Remembered Pummeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213789,
},
[428089] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[449071] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[452155] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cyclonecrier Alpha",
["npcID"] = 222959,
},
[452142] = {
["isChanneled"] = false,
["source"] = "Obstorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217082,
},
[456748] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crimson Deathweaver",
["npcID"] = 222692,
},
[449072] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2990,
},
[449584] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[6533] = {
["isChanneled"] = false,
["source"] = "Remembered Bloodscalp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214059,
},
[451128] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sparking Haulbot",
["npcID"] = 219497,
},
[376426] = {
["isChanneled"] = false,
["source"] = "Condensing Sprite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215362,
},
[449585] = {
["source"] = "Sunless Tidemarshal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219602,
},
[431674] = {
["isChanneled"] = false,
["source"] = "Kaheti Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217448,
},
[455815] = {
["isChanneled"] = false,
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206514,
},
[445504] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Highlord Darion Mograine",
["npcID"] = 221632,
},
[445492] = {
["isChanneled"] = false,
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214551,
},
[388688] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Garlic-Breathed Hydra",
["npcID"] = 224751,
},
[270474] = {
["isChanneled"] = false,
["source"] = "Remembered Thornweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221745,
},
[195181] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rune Weapon",
["npcID"] = 27893,
},
[461869] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "The Ringing Death",
["npcID"] = 214162,
},
[378454] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Urthgrafr Riftcaller",
["npcID"] = 215233,
},
[440376] = {
["isChanneled"] = false,
["source"] = "Encroaching Undercrawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215771,
},
[441412] = {
["isChanneled"] = false,
["source"] = "Deathpetal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206184,
},
[451133] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sparking Haulbot",
["npcID"] = 220191,
},
[427583] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211290,
},
[79965] = {
["source"] = "Alliance Paladin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214148,
},
[90328] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[378413] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[396879] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[446519] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shalehorn Impaler",
["npcID"] = 216970,
},
[455219] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[388706] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampaging Wind",
["npcID"] = 187494,
},
[15493] = {
["isChanneled"] = false,
["source"] = "Remembered Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214363,
},
[444473] = {
["isChanneled"] = false,
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214162,
},
[444985] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shacklefang Hornet",
["npcID"] = 223178,
},
[22886] = {
["isChanneled"] = false,
["source"] = "Remembered King Gordok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221574,
},
[427596] = {
["isChanneled"] = false,
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206704,
},
[444474] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Highlord Darion Mograine",
["npcID"] = 221632,
},
[387670] = {
["isChanneled"] = false,
["source"] = "Remembered Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221747,
},
[461884] = {
["isChanneled"] = false,
["source"] = "Spring Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215810,
},
[446533] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[462898] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[114893] = {
["source"] = "Stone Bulwark Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[270494] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Charlga Razorflank",
["npcID"] = 221749,
},
[454199] = {
["source"] = "Mycotic Jawcrawler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225488,
},
[444476] = {
["isChanneled"] = false,
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[450183] = {
["isChanneled"] = false,
["source"] = "Kronolith, Might of the Mountain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219270,
},
[31458] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Eradicator",
["npcID"] = 32185,
},
[388696] = {
["isChanneled"] = false,
["source"] = "Remembered Gahz'rilla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221578,
},
[186480] = {
["isChanneled"] = false,
["source"] = "Icebreaker Tombguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 94707,
},
[455812] = {
["isChanneled"] = false,
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206514,
},
[221573] = {
["source"] = "Chronarch Defender",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 109670,
},
[454201] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2960,
},
[452164] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[267999] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[157348] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[306818] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Ranger Thyala",
["npcID"] = 150498,
},
[8377] = {
["source"] = "Earthgrab Totem",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 137585,
},
[451132] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sparking Haulbot",
["npcID"] = 220191,
},
[461879] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxy Globule",
["npcID"] = 213873,
},
[452156] = {
["isChanneled"] = false,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2960,
},
[381535] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scornful Sandshoal",
["npcID"] = 214662,
},
[371812] = {
["isChanneled"] = false,
["source"] = "Qalashi Drakeflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192341,
},
[452157] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Cyclonecrier Alpha",
["npcID"] = 222959,
},
[14518] = {
["isChanneled"] = false,
["source"] = "Remembered Crusader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213564,
},
[456772] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[457787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[116174] = {
["encounterName"] = "Gara'jal the Spiritbinder",
["source"] = "Gara'jal the Spiritbinder",
["encounterID"] = 1434,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60143,
},
[377512] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Slagshell Slider",
["npcID"] = 225391,
},
[443981] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ascended Trafficker",
["npcID"] = 221055,
},
[457788] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[423501] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[79968] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dawnguard Bloodknight",
["npcID"] = 67333,
},
[455230] = {
["isChanneled"] = false,
["source"] = "Lashroom Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224607,
},
[445507] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Thoras Trollbane",
["npcID"] = 221635,
},
[443972] = {
["isChanneled"] = false,
["source"] = "Beast",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103254,
},
[313476] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hired Scoundrel",
["npcID"] = 157433,
},
[455231] = {
["source"] = "Lashroom Ambusher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224607,
},
[445508] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nazgrim",
["npcID"] = 221634,
},
[431691] = {
["isChanneled"] = false,
["source"] = "Sureki String Conductor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216554,
},
[452673] = {
["source"] = "Possibility Projector",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224878,
},
[441992] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Y'tekhi",
["npcID"] = 215659,
},
[279702] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Phantasmal Stalker",
["npcID"] = 150091,
},
[403034] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fyrakk",
["npcID"] = 200832,
},
[32674] = {
["isChanneled"] = false,
["source"] = "Recalled Reanimated Crusader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226096,
},
[444998] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fallowbarb",
["npcID"] = 216078,
},
[425040] = {
["encounterName"] = "Spinshroom",
["source"] = "Fungarian Flinger",
["npcID"] = 207460,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2831,
},
[433740] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215405,
},
[452675] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Possibility Projector",
["npcID"] = 224878,
},
[387683] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[437842] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maintenance Machine",
["npcID"] = 230643,
},
[263840] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lupos",
["npcID"] = 165189,
},
[446535] = {
["source"] = "Mycotic Shalehorn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212704,
},
[453188] = {
["isChanneled"] = false,
["source"] = "Cragmund",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220269,
},
[425042] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fungarian Flinger",
["npcID"] = 207460,
},
[456259] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[434254] = {
["source"] = "Nerubian Hauler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217039,
},
[431702] = {
["isChanneled"] = false,
["source"] = "Colormancer Nirethi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222150,
},
[441419] = {
["source"] = "Deathpetal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206184,
},
[443978] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unseen Blade Kesi'zir",
["npcID"] = 225861,
},
[374892] = {
["isChanneled"] = false,
["source"] = "Magmammoth Calf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191677,
},
[448644] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2989,
},
[452169] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[425556] = {
["encounterName"] = "Prioress Murrpray",
["type"] = "DEBUFF",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2848,
},
[369946] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Wingripper",
["npcID"] = 202439,
},
[24394] = {
["source"] = "Scalehide",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[457797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Battle Supplies",
["npcID"] = 227453,
},
[443980] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[423517] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Creaky Mine Cart",
["npcID"] = 212129,
},
[80610] = {
["source"] = "Catherine Leland",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 5494,
},
[456319] = {
["isChanneled"] = false,
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213208,
},
[456263] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[113746] = {
["source"] = "Fire Spirit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69791,
},
[450637] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[138130] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[391793] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[423566] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Darkness",
["npcID"] = 210797,
},
[440912] = {
["isChanneled"] = false,
["source"] = "Festering Sporemass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217963,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[452171] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[450636] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[223591] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Avenger",
["npcID"] = 221980,
},
[263852] = {
["isChanneled"] = false,
["source"] = "Castel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[425561] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pack Mole",
["npcID"] = 211977,
},
[374898] = {
["isChanneled"] = false,
["source"] = "Remembered Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221747,
},
[455294] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Icarus",
["npcID"] = 226220,
},
[459849] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard An'Jak Shabtir",
["npcID"] = 219665,
},
[427609] = {
["isChanneled"] = false,
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206696,
},
[263853] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Giggler",
["npcID"] = 165189,
},
[24423] = {
["isChanneled"] = false,
["source"] = "Carrion Bird",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[453709] = {
["isChanneled"] = false,
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220287,
},
[450127] = {
["isChanneled"] = false,
["source"] = "Siegehold Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216016,
},
[456780] = {
["isChanneled"] = true,
["source"] = "King Splash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220275,
},
[383600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Strunraan",
["npcID"] = 193534,
},
[457804] = {
["source"] = "Faceless Devotee",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219996,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214263,
},
[427616] = {
["isChanneled"] = false,
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207186,
},
[440917] = {
["isChanneled"] = false,
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214576,
},
[30151] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[236387] = {
["source"] = "Rallied Recruit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215135,
},
[456782] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[453200] = {
["isChanneled"] = false,
["source"] = "Cragmund",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220269,
},
[452734] = {
["isChanneled"] = false,
["source"] = "Recalled Webbed Crusader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224928,
},
[452177] = {
["isChanneled"] = false,
["source"] = "Arathi Reserve",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214429,
},
[190843] = {
["source"] = "Spectral Windshaper",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 94813,
},
[448600] = {
["isChanneled"] = false,
["source"] = "Spitfire Fusetender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211777,
},
[390256] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Proscenium Punk",
["npcID"] = 215791,
},
[452178] = {
["isChanneled"] = false,
["source"] = "Arathi Reserve",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214429,
},
[446549] = {
["source"] = "Underlight Moth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222832,
},
[445014] = {
["isChanneled"] = false,
["source"] = "Tulumun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217470,
},
[438877] = {
["isChanneled"] = true,
["source"] = "Nakt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218324,
},
[153485] = {
["isChanneled"] = false,
["source"] = "Shadow-Chasm Worm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217962,
},
[196728] = {
["isChanneled"] = false,
["source"] = "Niuzao",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 180743,
},
[440921] = {
["isChanneled"] = false,
["source"] = "Incensed Fungus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219074,
},
[369788] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Drakeflayer",
["npcID"] = 192341,
},
[263856] = {
["isChanneled"] = false,
["source"] = "Rodent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[313562] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trade Prince Gallywix",
["npcID"] = 157456,
},
[395378] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[449622] = {
["isChanneled"] = false,
["source"] = "Webspeaker Grik'ik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216041,
},
[263857] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sparkette",
["npcID"] = 165189,
},
[313497] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Street Thug",
["npcID"] = 157434,
},
[412265] = {
["source"] = "Kobyss Shellbreaker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220907,
},
[443482] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shipwright Bodyguard",
["npcID"] = 225218,
},
[263858] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gwenynen",
["npcID"] = 165189,
},
[456788] = {
["isChanneled"] = true,
["source"] = "King Splash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220275,
},
[375420] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Riverbend Chomper",
["npcID"] = 189338,
},
[157375] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[434786] = {
["isChanneled"] = false,
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216293,
},
[372862] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Churning Splash",
["npcID"] = 187318,
},
[460920] = {
["source"] = "Neferess",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 228736,
},
[64695] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Earthgrab Totem",
["npcID"] = 60561,
},
[431714] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Webspinner",
["npcID"] = 212717,
},
[385145] = {
["isChanneled"] = false,
["source"] = "Remembered Deviate Raptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221516,
},
[446079] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Leviathan Caller",
["npcID"] = 220738,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3002,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2835,
},
[427621] = {
["source"] = "Arathi Knight",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206696,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215407,
},
[399987] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[463956] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[430179] = {
["isChanneled"] = false,
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214439,
},
[436322] = {
["isChanneled"] = false,
["source"] = "Atik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217533,
},
[457818] = {
["source"] = "Faceless Devotee",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219996,
},
[134810] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kae Ti",
["npcID"] = 68402,
},
[263863] = {
["isChanneled"] = false,
["source"] = "Hidra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[452699] = {
["isChanneled"] = false,
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215813,
},
[389274] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Stormslinger",
["npcID"] = 203746,
},
[84837] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nathanos Blightcaller",
["npcID"] = 152329,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214263,
},
[455260] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[438883] = {
["source"] = "Nakt",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218324,
},
[435301] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fungal Infestor",
["npcID"] = 216077,
},
[263865] = {
["isChanneled"] = false,
["source"] = "Scalehide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[462936] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Medbot",
["npcID"] = 229769,
},
[440931] = {
["isChanneled"] = false,
["source"] = "Festering Sporemass",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217963,
},
[452730] = {
["isChanneled"] = false,
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215813,
},
[448640] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[450941] = {
["isChanneled"] = false,
["source"] = "Cinderbee Knight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222820,
},
[459355] = {
["isChanneled"] = true,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[455293] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Icarus",
["npcID"] = 226220,
},
[30213] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[317791] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[381570] = {
["isChanneled"] = false,
["source"] = "Quaking Rager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215359,
},
[386176] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[267964] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[434281] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["npcID"] = 218034,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2998,
},
[434793] = {
["isChanneled"] = true,
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216293,
},
[430013] = {
["isChanneled"] = false,
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207186,
},
[427629] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[456346] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anguishing Nightmare",
["npcID"] = 214415,
},
[449123] = {
["isChanneled"] = false,
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207940,
},
[275110] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[263892] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cat",
["npcID"] = 165189,
},
[157331] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[79849] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kirin Tor Guardian",
["npcID"] = 104091,
},
[430171] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[452195] = {
["source"] = "Cyclonecrier Alpha",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222959,
},
[116947] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Earthgrab Totem",
["npcID"] = 60561,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[389251] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Bloodpetal",
["npcID"] = 221880,
},
[178067] = {
["isChanneled"] = false,
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 88094,
},
[457266] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greenhorn Extra",
["npcID"] = 228307,
},
[53824] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Undertide Deepfisher",
["npcID"] = 226961,
},
[449153] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[434798] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[435310] = {
["source"] = "Murmuring Trapcap",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217719,
},
[456295] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[448616] = {
["isChanneled"] = false,
["source"] = "Hevo'myk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211591,
},
[377483] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepflayer",
["npcID"] = 221572,
},
[449640] = {
["isChanneled"] = false,
["source"] = "Maddened Siegebomber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216044,
},
[427635] = {
["isChanneled"] = false,
["source"] = "War Lynx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206699,
},
[449655] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maddened Siegebomber",
["npcID"] = 216044,
},
[449129] = {
["source"] = "Forge Loader",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213343,
},
[388231] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tuskarr Training Dummy",
["npcID"] = 196394,
},
[450153] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Raging Roots",
["npcID"] = 216250,
},
[455273] = {
["isChanneled"] = false,
["source"] = "Deepsludger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216536,
},
[449130] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[115804] = {
["source"] = "Fire Spirit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69791,
},
[50688] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Phantasmal Stalker",
["npcID"] = 150091,
},
[372369] = {
["isChanneled"] = false,
["source"] = "Ragefin Executioner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213408,
},
[434802] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ixin",
["npcID"] = 217531,
},
[431734] = {
["isChanneled"] = false,
["source"] = "Shadow Vanguard Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214901,
},
[388745] = {
["isChanneled"] = false,
["source"] = "Icy Blue Crab",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197862,
},
[428150] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[191878] = {
["isChanneled"] = false,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[191883] = {
["isChanneled"] = true,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[290490] = {
["source"] = "Taluha Sunbringer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 149714,
},
[379023] = {
["isChanneled"] = false,
["source"] = "Hillside Forager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191240,
},
[381582] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[448111] = {
["isChanneled"] = false,
["source"] = "Diu'mik",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211564,
},
[452204] = {
["source"] = "Phosphorescent Lampyrid",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217637,
},
[455310] = {
["isChanneled"] = false,
["source"] = "Blaze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[445559] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[369813] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[446064] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Slamming Tentacle",
["encounterID"] = 3002,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220741,
},
[8858] = {
["isChanneled"] = false,
["source"] = "Dark Iron Excavator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47276,
},
[449135] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[245102] = {
["source"] = "Devlynn Styx",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 121527,
},
[444018] = {
["isChanneled"] = false,
["source"] = "Civilian Puppet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219495,
},
[449136] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[426619] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[453742] = {
["source"] = "Colossal Titan Construct",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212213,
},
[198533] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jade Serpent Statue",
["npcID"] = 60849,
},
[196742] = {
["source"] = "Earth Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[117588] = {
["isChanneled"] = false,
["source"] = "Lesser Primal Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229799,
},
[382101] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[50433] = {
["isChanneled"] = false,
["source"] = "Bruce",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[220540] = {
["isChanneled"] = false,
["source"] = "Umbral Citizen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222061,
},
[442487] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[449650] = {
["isChanneled"] = false,
["source"] = "Maddened Siegebomber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216044,
},
[50689] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Duke Vallenhal",
["npcID"] = 26926,
},
[50494] = {
["source"] = "Grand Necrolord Antiok",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 28006,
},
[442998] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sureki Priestess",
["npcID"] = 222688,
},
[453745] = {
["source"] = "Kelp",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225540,
},
[443510] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfall Executor",
["npcID"] = 217516,
},
[313526] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dax Blitzblaster",
["npcID"] = 157455,
},
[455281] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tidelord Teethwretch",
["npcID"] = 216527,
},
[386195] = {
["source"] = "Dreadstalker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 98035,
},
[317109] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mistfang Alpha",
["npcID"] = 150108,
},
[385172] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[455277] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tidelord Teethwretch",
["npcID"] = 216527,
},
[382102] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[317110] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistfang Alpha",
["npcID"] = 150108,
},
[433781] = {
["encounterName"] = "Anub'zekt",
["type"] = "DEBUFF",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215405,
},
[443001] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Boltweaver Enforcer",
["npcID"] = 223362,
},
[445038] = {
["isChanneled"] = false,
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214343,
},
[186254] = {
["source"] = "spiky",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[379033] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Groffnar",
["npcID"] = 201537,
},
[428161] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[453749] = {
["isChanneled"] = false,
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220287,
},
[431744] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[448632] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2989,
},
[35079] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tantrum",
["npcID"] = 165189,
},
[188046] = {
["isChanneled"] = false,
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198489,
},
[456309] = {
["isChanneled"] = false,
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213208,
},
[389270] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Expedition Guarantor",
["npcID"] = 187061,
},
[13608] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Silverbrook Lumberjack",
["npcID"] = 226197,
},
[450177] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Raging Roots",
["npcID"] = 216250,
},
[224125] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2989,
},
[443494] = {
["encounterName"] = "Skarmorak",
["source"] = "Crystal Shard",
["npcID"] = 214443,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[458747] = {
["isChanneled"] = false,
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224157,
},
[455296] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Icarus",
["npcID"] = 226220,
},
[456823] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand-Heister Bokk",
["npcID"] = 213679,
},
[377502] = {
["isChanneled"] = false,
["source"] = "Shimmerfin Scrapper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220252,
},
[81262] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Efflorescence",
["npcID"] = 47649,
},
[224126] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[465012] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[453242] = {
["source"] = "Trungal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220268,
},
[443954] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[341118] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[393368] = {
["source"] = "Malfunctioning Protector",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 198343,
},
[1543] = {
["isChanneled"] = false,
["source"] = "Remembered Alarm-o-Bot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213768,
},
[439426] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Underground Spore",
["npcID"] = 215235,
},
[224127] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212489,
},
[424074] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Darkness",
["npcID"] = 208747,
},
[444490] = {
["source"] = "Ancestor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221177,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2835,
},
[186258] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mike",
["npcID"] = 165189,
},
[448599] = {
["isChanneled"] = true,
["source"] = "Hevo'myk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211591,
},
[443979] = {
["isChanneled"] = false,
["source"] = "Elegon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[450133] = {
["encounterName"] = "Waxface",
["type"] = "DEBUFF",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2894,
},
[444034] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[422541] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[263854] = {
["isChanneled"] = false,
["source"] = "Ristar the Rabid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[450176] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Slasher",
["npcID"] = 208243,
},
[454782] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Domesticated Candlefly",
["npcID"] = 213960,
},
[434824] = {
["isChanneled"] = false,
["source"] = "Ixin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217531,
},
[457853] = {
["isChanneled"] = false,
["source"] = "The Taskmaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218444,
},
[458365] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[436360] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glooming Darkweaver",
["npcID"] = 216868,
},
[449154] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[457854] = {
["isChanneled"] = false,
["source"] = "The Taskmaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218444,
},
[12169] = {
["isChanneled"] = false,
["source"] = "Tarren Mill Deathguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212089,
},
[443984] = {
["isChanneled"] = false,
["source"] = "Fenryr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
[166302] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blingtron 7000",
["npcID"] = 153897,
},
[439432] = {
["isChanneled"] = false,
["source"] = "Maintenance Machine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219587,
},
[386722] = {
["isChanneled"] = false,
["source"] = "Primalist Galewarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203744,
},
[210057] = {
["isChanneled"] = false,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[428120] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[431697] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Boltweaver Enforcer",
["npcID"] = 223362,
},
[456321] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[8219] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[432781] = {
["isChanneled"] = false,
["source"] = "Radiating Voidstone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212739,
},
[3600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthbind Totem",
["npcID"] = 2630,
},
[343737] = {
["source"] = "Yu'lon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165374,
},
[450180] = {
["isChanneled"] = false,
["source"] = "Coal Rager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219726,
},
[443977] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[457858] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[450182] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
[456835] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hungerer of the Deeps",
["npcID"] = 221199,
},
[57984] = {
["isChanneled"] = false,
["source"] = "Greater Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95061,
},
[441483] = {
["isChanneled"] = false,
["source"] = "Deathpetal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206184,
},
[372397] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fetid Slogger",
["npcID"] = 192500,
},
[450628] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[457348] = {
["isChanneled"] = false,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[398497] = {
["isChanneled"] = false,
["source"] = "Stormtop Shalemaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212364,
},
[452231] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[62581] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Recalled Lake Frog",
["npcID"] = 222048,
},
[455302] = {
["source"] = "Deathspore Lashroom",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221424,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207939,
},
[59638] = {
["isChanneled"] = false,
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 31216,
},
[450697] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[267997] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[427157] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[452233] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[190614] = {
["source"] = "Sleeping Version",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 104096,
},
[434252] = {
["isChanneled"] = false,
["source"] = "Nerubian Hauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217039,
},
[443461] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Barrel of Fireworks",
["npcID"] = 221183,
},
[395857] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[66532] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Recalled Lord Jaraxxus",
["npcID"] = 221861,
},
[461446] = {
["isChanneled"] = false,
["source"] = "Agaric Spreader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212578,
},
[425536] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[450188] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[445513] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 221633,
},
[462892] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[425113] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[51460] = {
["source"] = "Rune Weapon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[462983] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Automatic Ironstrider",
["npcID"] = 229778,
},
[457354] = {
["source"] = "ELIZA",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224060,
},
[442418] = {
["isChanneled"] = false,
["source"] = "Burkhalt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228671,
},
[456331] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[458890] = {
["source"] = "Ravageling",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 227808,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[453773] = {
["source"] = "King Thoras Trollbane",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221635,
},
[403021] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[423479] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[443027] = {
["isChanneled"] = false,
["source"] = "Siege Hopebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216019,
},
[445586] = {
["source"] = "Kel'an",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217295,
},
[458795] = {
["isChanneled"] = false,
["source"] = "Ravageant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207826,
},
[50245] = {
["isChanneled"] = false,
["source"] = "Crab",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[443028] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[455203] = {
["isChanneled"] = true,
["source"] = "XT-Minecrusher 8700",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216034,
},
[458782] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[58867] = {
["isChanneled"] = false,
["source"] = "Spirit Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 100820,
},
[374865] = {
["source"] = "Young Prowler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 187572,
},
[453152] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Web Marauder",
["npcID"] = 219034,
},
[396972] = {
["source"] = "Invisible Bunny, Controller - gameobject assist [DNT]",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 199568,
},
[456847] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand-Heister Bokk",
["npcID"] = 213679,
},
[457359] = {
["isChanneled"] = false,
["source"] = "Beebiter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222284,
},
[394833] = {
["isChanneled"] = false,
["source"] = "Magmammoth Bull",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191903,
},
[382644] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rebel Mender",
["npcID"] = 195060,
},
[17735] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[114404] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Void Tendril",
["npcID"] = 65282,
},
[457872] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[450196] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[430238] = {
["isChanneled"] = false,
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207202,
},
[428703] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[451732] = {
["isChanneled"] = false,
["source"] = "Swarming Cogwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 232871,
},
[433821] = {
["isChanneled"] = false,
["source"] = "Winged Carrier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216365,
},
[448662] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[432673] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Looter",
["npcID"] = 216303,
},
[432068] = {
["isChanneled"] = false,
["source"] = "Waterworks Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222979,
},
[274156] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rune Weapon",
["npcID"] = 27893,
},
[448663] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2989,
},
[428066] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[451734] = {
["isChanneled"] = false,
["source"] = "Persistent Honeyslime",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222843,
},
[423588] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207940,
},
[448664] = {
["isChanneled"] = false,
["source"] = "Captured Kaheti",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217728,
},
[436764] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Scout Wayshelm",
["npcID"] = 216873,
},
[395833] = {
["isChanneled"] = false,
["source"] = "Recalled Thorim",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221923,
},
[7814] = {
["isChanneled"] = false,
["source"] = "Jhorneth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[444449] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[430754] = {
["isChanneled"] = false,
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214439,
},
[451736] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[443924] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unseen Blade Kesi'zir",
["npcID"] = 225861,
},
[448666] = {
["source"] = "Spitfire Fusetender",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 211777,
},
[424614] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fungal Stabber",
["npcID"] = 207450,
},
[7870] = {
["isChanneled"] = false,
["source"] = "Jhorneth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[415403] = {
["isChanneled"] = false,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[450714] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[444431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211290,
},
[392375] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 29264,
},
[263926] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Astera",
["npcID"] = 165189,
},
[405681] = {
["isChanneled"] = false,
["source"] = "Orikmawl",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[446474] = {
["isChanneled"] = false,
["source"] = "Congealed Wax-hulk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223206,
},
[429222] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Treant",
["npcID"] = 54983,
},
[431645] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["npcID"] = 213008,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[290539] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Loqh'wa the Vengeful",
["npcID"] = 150723,
},
[442529] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Starblessed Glimmerfly",
["npcID"] = 220703,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[429224] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Treant",
["npcID"] = 54983,
},
[127801] = {
["source"] = "Turnip Punching Bag",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 65310,
},
[450718] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[453277] = {
["source"] = "Trungal",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220268,
},
[449038] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2990,
},
[458748] = {
["isChanneled"] = false,
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224157,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[16104] = {
["source"] = "Remembered Mother Smolderweb",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221655,
},
[450205] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[448161] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[456861] = {
["isChanneled"] = false,
["source"] = "Spore-infused Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221217,
},
[424621] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Sergeant Shaynemail",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211291,
},
[373279] = {
["isChanneled"] = false,
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189988,
},
[284402] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Inquisitor Draeleth",
["npcID"] = 144567,
},
[456862] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand-Heister Bokk",
["npcID"] = 213679,
},
[459421] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[369865] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nokhud Huntmaster",
["npcID"] = 185353,
},
[456351] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Boneseer Hookjaw",
["npcID"] = 213805,
},
[450041] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[459422] = {
["isChanneled"] = false,
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221585,
},
[3391] = {
["isChanneled"] = false,
["source"] = "Noxious Shredder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4348,
},
[429569] = {
["isChanneled"] = false,
["source"] = "Remembered Hogger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213570,
},
[433662] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Blood",
["npcID"] = 216856,
},
[447141] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[263423] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dolcè",
["npcID"] = 165189,
},
[59395] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lumbering Nightmare",
["npcID"] = 155051,
},
[426160] = {
["encounterName"] = "Stormguard Gorren",
["type"] = "DEBUFF",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207205,
},
[455330] = {
["isChanneled"] = false,
["source"] = "Recalled Silverbrook Lumberjack",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226197,
},
[441513] = {
["isChanneled"] = true,
["source"] = "Deathpetal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206184,
},
[432119] = {
["encounterName"] = "Ki'katal the Harvester",
["type"] = "DEBUFF",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215407,
},
[456866] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sureki Priestess",
["npcID"] = 222688,
},
[442372] = {
["isChanneled"] = false,
["source"] = "Invasive Fungal Pod",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217553,
},
[459937] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[452261] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Harvest Warden Izk'tilak",
["npcID"] = 220644,
},
[430256] = {
["isChanneled"] = false,
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212793,
},
[428019] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[459938] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[447994] = {
["isChanneled"] = false,
["source"] = "Waste Flayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221017,
},
[456868] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sureki Priestess",
["npcID"] = 222688,
},
[370013] = {
["isChanneled"] = false,
["source"] = "Molten Slag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214722,
},
[449017] = {
["isChanneled"] = true,
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[8220] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[450728] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[443052] = {
["isChanneled"] = false,
["source"] = "Siege Hopebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216019,
},
[453616] = {
["isChanneled"] = false,
["source"] = "Doomguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225493,
},
[433841] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Overseer",
["npcID"] = 216364,
},
[428212] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[426677] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[424430] = {
["source"] = "Ardent Paladin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206704,
},
[458406] = {
["isChanneled"] = false,
["source"] = "Droghung",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221316,
},
[385024] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dominant Salamanther",
["npcID"] = 225921,
},
[256390] = {
["isChanneled"] = false,
["source"] = "Shadow-Blind Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206096,
},
[455848] = {
["source"] = "Finclaw Bloodtide",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220492,
},
[201633] = {
["source"] = "Earthen Wall Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100943,
},
[461785] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seacurse",
["npcID"] = 220762,
},
[461781] = {
["isChanneled"] = false,
["source"] = "Sargassum Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212582,
},
[36213] = {
["isChanneled"] = false,
["source"] = "Greater Earth Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95072,
},
[458408] = {
["source"] = "Droghung",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221316,
},
[116841] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[462802] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corrupted Machinist",
["npcID"] = 229695,
},
[449709] = {
["isChanneled"] = false,
["source"] = "Purgle-lurgle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214544,
},
[458409] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[414695] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wildfire Mote",
["npcID"] = 207378,
},
[132951] = {
["source"] = "spiky",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[455851] = {
["isChanneled"] = false,
["source"] = "Finclaw Bloodtide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220492,
},
[424429] = {
["isChanneled"] = false,
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206704,
},
[270598] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rapacious Fathomjaw",
["npcID"] = 129305,
},
[441011] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nerubian Slasher",
["npcID"] = 208243,
},
[451758] = {
["isChanneled"] = false,
["source"] = "Hungering Shimmerfin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215243,
},
[416224] = {
["source"] = "Brann Bronzebeard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210759,
},
[401382] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Past Self",
["npcID"] = 185800,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[463303] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vanquished Tentacle",
["npcID"] = 223702,
},
[452044] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[443854] = {
["isChanneled"] = false,
["source"] = "Inflicted Civilian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219066,
},
[435165] = {
["isChanneled"] = false,
["source"] = "Sir Braunpyke",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217658,
},
[457166] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shipwright Isaebela",
["npcID"] = 219801,
},
[160067] = {
["isChanneled"] = false,
["source"] = "Spider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[199845] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Psyfiend",
["npcID"] = 101398,
},
[406215] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Diemetradon",
["npcID"] = 221883,
},
[449714] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[448179] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[124007] = {
["isChanneled"] = false,
["source"] = "Xuen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63508,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[369128] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Falania Nightsoul",
["npcID"] = 144566,
},
[427710] = {
["isChanneled"] = false,
["source"] = "Sporbit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213434,
},
[439749] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[436922] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[451763] = {
["isChanneled"] = false,
["source"] = "Sir Braunpyke",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217658,
},
[451008] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Knight",
["npcID"] = 222820,
},
[446646] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surek'Tak the Sundered",
["npcID"] = 222190,
},
[428735] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[449717] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[442041] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sunless Shadowblade",
["npcID"] = 219631,
},
[440506] = {
["isChanneled"] = false,
["source"] = "Stream Skipper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213700,
},
[453561] = {
["isChanneled"] = false,
["source"] = "Disgruntled Dyefetcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229353,
},
[457934] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[349927] = {
["source"] = "Blackrock Spy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 49874,
},
[427929] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Pack Mole",
["npcID"] = 211977,
},
[428737] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[89753] = {
["isChanneled"] = false,
["source"] = "Khil-barash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[18968] = {
["isChanneled"] = false,
["source"] = "Firemane Ash Tail",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4331,
},
[449973] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepwalking Ambusher",
["npcID"] = 229605,
},
[438973] = {
["isChanneled"] = false,
["source"] = "Pit Lord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228574,
},
[54216] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hyena",
["npcID"] = 165189,
},
[445746] = {
["isChanneled"] = false,
["source"] = "Darkwater Tidecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220621,
},
[313595] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Trade Prince Gallywix",
["npcID"] = 157456,
},
[125160] = {
["source"] = "Alliance Mage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214167,
},
[443105] = {
["isChanneled"] = false,
["source"] = "Awakener Kobyss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215683,
},
[452811] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[448698] = {
["isChanneled"] = false,
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218657,
},
[455351] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kx",
["npcID"] = 216582,
},
[122151] = {
["encounterName"] = "Gara'jal the Spiritbinder",
["type"] = "DEBUFF",
["source"] = "Gara'jal the Spiritbinder",
["encounterID"] = 1434,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 60143,
},
[449453] = {
["isChanneled"] = false,
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221071,
},
[124009] = {
["isChanneled"] = false,
["source"] = "Xuen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63508,
},
[439577] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[263446] = {
["isChanneled"] = false,
["source"] = "Venom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[55078] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[387290] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Remembered Bloodpetal",
["npcID"] = 221880,
},
[440239] = {
["isChanneled"] = false,
["source"] = "Xishirra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217209,
},
[449724] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Baelgrim",
["npcID"] = 229849,
},
[444095] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chieftain Gillcarver",
["npcID"] = 219633,
},
[313599] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Trade Prince Gallywix",
["npcID"] = 157456,
},
[456101] = {
["isChanneled"] = false,
["source"] = "Voidstone Behemoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221307,
},
[457913] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Wind-Wrangling Spire",
["npcID"] = 227482,
},
[422090] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[424650] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[435397] = {
["isChanneled"] = false,
["source"] = "Algari Expedition Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217676,
},
[35346] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Warp Stalker",
["npcID"] = 165189,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207940,
},
[7978] = {
["isChanneled"] = false,
["source"] = "Zany Goblin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221982,
},
[435398] = {
["isChanneled"] = false,
["source"] = "Algari Expedition Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217676,
},
[452514] = {
["source"] = "Boulderbane",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224756,
},
[429999] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Vent Stalker",
["encounterID"] = 2888,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214049,
},
[373477] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Bound Shoresnapper",
["npcID"] = 190193,
},
[398553] = {
["isChanneled"] = false,
["source"] = "Waste Krolusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221358,
},
[261886] = {
["source"] = "Remembered Scorpid",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221905,
},
[430282] = {
["isChanneled"] = false,
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207202,
},
[256401] = {
["isChanneled"] = false,
["source"] = "Shadow-Blind Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206096,
},
[458508] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mesmerized Flyer",
["npcID"] = 224663,
},
[324447] = {
["isChanneled"] = false,
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214338,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213179,
},
[445191] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[101546] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[458430] = {
["isChanneled"] = true,
["source"] = "Droghung",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221316,
},
[432036] = {
["source"] = "Hairless the Menace",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213550,
},
[445125] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cindersting",
["npcID"] = 220238,
},
[451778] = {
["isChanneled"] = false,
["source"] = "Dogmatic Machine Speaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212878,
},
[290577] = {
["isChanneled"] = false,
["source"] = "Abomination",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 149555,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213179,
},
[464641] = {
["isChanneled"] = false,
["source"] = "Umbral Citizen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222061,
},
[459155] = {
["isChanneled"] = true,
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224157,
},
[386787] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Gwenynen",
["npcID"] = 165189,
},
[116847] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[451268] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[369900] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Lava Trap",
["npcID"] = 187043,
},
[394976] = {
["isChanneled"] = false,
["source"] = "Void Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198757,
},
[450757] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[459457] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Saboteur",
["npcID"] = 228057,
},
[455875] = {
["isChanneled"] = false,
["source"] = "Glintwick",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219797,
},
[458434] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[430288] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[455364] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kx",
["npcID"] = 216582,
},
[426295] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[370104] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Metalshaper",
["npcID"] = 190767,
},
[428242] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Scrap Block",
["npcID"] = 213694,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[445130] = {
["isChanneled"] = false,
["source"] = "Cindersting",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220238,
},
[455877] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deepwater Abomination",
["npcID"] = 215654,
},
[446154] = {
["source"] = "Deepwater Gar",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219359,
},
[450760] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[82707] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[426260] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2787,
},
[2649] = {
["isChanneled"] = false,
["source"] = "Lightning",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[441038] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[429268] = {
["source"] = "Brood of Xeri'tac",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214375,
},
[7367] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistfang Alpha",
["npcID"] = 150108,
},
[167971] = {
["source"] = "Blingtron 6000",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 101527,
},
[126188] = {
["source"] = "Alani",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 64403,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[454417] = {
["encounterName"] = "Bogpiper",
["type"] = "DEBUFF",
["source"] = "Sporbit",
["npcID"] = 225708,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2960,
},
[432920] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Necrofang Reaper",
["npcID"] = 217784,
},
[430805] = {
["isChanneled"] = false,
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214421,
},
[455881] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glintwick",
["npcID"] = 219797,
},
[451464] = {
["source"] = "Murgle-whurgle",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214546,
},
[456905] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[451276] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2906,
},
[444296] = {
["isChanneled"] = false,
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206696,
},
[444692] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ramolith Curlhorn",
["npcID"] = 221672,
},
[161222] = {
["isChanneled"] = false,
["source"] = "Remembered Nightsaber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221947,
},
[434925] = {
["isChanneled"] = false,
["source"] = "Intrusive Nothwing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217038,
},
[423665] = {
["encounterName"] = "Prioress Murrpray",
["type"] = "BUFF",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207940,
},
[452813] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hunting Skyrazor",
["npcID"] = 226150,
},
[453889] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ren'khat",
["npcID"] = 222152,
},
[414944] = {
["isChanneled"] = false,
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207454,
},
[382704] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[454861] = {
["source"] = "Colossal Titan Construct",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226078,
},
[440655] = {
["isChanneled"] = false,
["source"] = "Nerl'athekk the Skulking",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219676,
},
[414945] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fungal Rotspreader",
["npcID"] = 207453,
},
[449834] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[198837] = {
["isChanneled"] = false,
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99541,
},
[451280] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2861,
},
[211887] = {
["source"] = "Elisande",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 106643,
},
[9053] = {
["isChanneled"] = false,
["source"] = "Firemane Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4334,
},
[377589] = {
["source"] = "Stoneripper",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[451793] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Al'haggro",
["npcID"] = 216560,
},
[452469] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brightstone",
["npcID"] = 224764,
},
[463052] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[162248] = {
["isChanneled"] = false,
["source"] = "Remembered Nightsaber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221947,
},
[463091] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[452306] = {
["source"] = "Hallowfall Lightblade",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217554,
},
[215754] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spawn of Serpentrix",
["npcID"] = 108655,
},
[128749] = {
["isChanneled"] = true,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[457497] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[419207] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[260249] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sabertusk Empress",
["npcID"] = 165189,
},
[430814] = {
["source"] = "Coalescing Void Diffuser",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214421,
},
[457937] = {
["isChanneled"] = false,
["source"] = "Geothermus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217416,
},
[5672] = {
["isChanneled"] = false,
["source"] = "Healing Stream Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3527,
},
[424739] = {
["encounterName"] = "Stormguard Gorren",
["type"] = "DEBUFF",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2861,
},
[460595] = {
["isChanneled"] = false,
["source"] = "Irritated Salvager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220471,
},
[457938] = {
["isChanneled"] = false,
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207802,
},
[448276] = {
["isChanneled"] = false,
["source"] = "Fungarian Sporeflinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218667,
},
[439600] = {
["encounterName"] = "Skarmorak",
["type"] = "BUFF",
["source"] = "Crystal Shard",
["npcID"] = 214443,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2880,
},
[422628] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Corridor Creeper",
["npcID"] = 210539,
},
[263494] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowblade Abductor",
["npcID"] = 223818,
},
[101260] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Darkmoon Faire Mystic Mage",
["npcID"] = 54334,
},
[452977] = {
["isChanneled"] = false,
["source"] = "Investigative Druid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223054,
},
[128750] = {
["isChanneled"] = true,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[457071] = {
["isChanneled"] = false,
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212088,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[438494] = {
["encounterName"] = "Avanoxx",
["type"] = "BUFF",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213179,
},
[449385] = {
["isChanneled"] = false,
["source"] = "Wanderer Ida",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220953,
},
[384249] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Elemental",
["npcID"] = 190780,
},
[454359] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unseen Blade Kesi'zir",
["npcID"] = 225861,
},
[197818] = {
["isChanneled"] = true,
["source"] = "Malgalor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92608,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2878,
},
[369921] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blazing Flamewing",
["npcID"] = 207337,
},
[9613] = {
["isChanneled"] = false,
["source"] = "Recalled Constructor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221435,
},
[393584] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gladehorn Armoredon",
["npcID"] = 196555,
},
[161791] = {
["source"] = "Rallied Recruit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215137,
},
[386866] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gorging Stagbeetle",
["npcID"] = 195709,
},
[23511] = {
["source"] = "Iceblood Warmaster",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14773,
},
[102292] = {
["isChanneled"] = false,
["source"] = "Darkmoon Steam Tonk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54588,
},
[161229] = {
["isChanneled"] = false,
["source"] = "Remembered Nightsaber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221947,
},
[431333] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[425704] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pack Mole",
["npcID"] = 211977,
},
[422122] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
},
[449245] = {
["isChanneled"] = false,
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[452912] = {
["source"] = "Zilthara",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220270,
},
[393056] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Spirit",
["npcID"] = 69792,
},
[450781] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Sticker",
["npcID"] = 212629,
},
[457434] = {
["isChanneled"] = false,
["source"] = "Riled Dirtdiver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225905,
},
[439523] = {
["source"] = "Shadowtide Corruptor",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220838,
},
[370054] = {
["isChanneled"] = false,
["source"] = "Magmammoth Bull",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191903,
},
[454876] = {
["source"] = "Khak'ik",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216032,
},
[432871] = {
["isChanneled"] = false,
["source"] = "Wormcaller Iz'tikrine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214153,
},
[388349] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunless Slitherer",
["npcID"] = 219606,
},
[451820] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gargantuan Honeyslime",
["npcID"] = 222960,
},
[387410] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Primal Earth Elemental",
["npcID"] = 187322,
},
[153310] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Race MiniZep",
["npcID"] = 76016,
},
[6016] = {
["isChanneled"] = false,
["source"] = "Drywallow Daggermaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4345,
},
[440652] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[440549] = {
["isChanneled"] = false,
["source"] = "Ragefin Executioner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213408,
},
[433448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gem Hoarder",
["npcID"] = 220148,
},
[306527] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mistfang Alpha",
["npcID"] = 150108,
},
[452320] = {
["source"] = "Kol Bruncrag",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 213658,
},
[440550] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kobyss Shellbreaker",
["npcID"] = 213598,
},
[449250] = {
["source"] = "Tij'allet",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215600,
},
[113671] = {
["source"] = "Soaring Hunter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 57216,
},
[113656] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[440551] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobyss Shellbreaker",
["npcID"] = 213598,
},
[449251] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Threadmancer",
["npcID"] = 208244,
},
[455904] = {
["isChanneled"] = false,
["source"] = "Oozemodius",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220410,
},
[449768] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Escaped Cutthroat",
["npcID"] = 219266,
},
},
["profileKeys"] = {
["Calestin - Sargeras"] = "Default",
["Strid - Kel'Thuzad"] = "Default",
["Sverdrup - Argent Dawn"] = "Default",
["Naturerivers - Korgath"] = "Default",
["Lotic - Argent Dawn"] = "Default",
["Mangrove - Argent Dawn"] = "Default",
["Inundito - Kel'Thuzad"] = "Default",
["Cataracts - Argent Dawn"] = "Default",
["Saellindris - Kel'Thuzad"] = "Default",
["Emptyrivers - Sargeras"] = "Default",
["Alluvium - Argent Dawn"] = "Default",
["Esker - Kel'Thuzad"] = "Default",
["Flumina - Argent Dawn"] = "Main",
["Asperos - Kel'Thuzad"] = "Default",
["Headcut - Argent Dawn"] = "Default",
["Confluence - Argent Dawn"] = "Default",
["Benthos - Argent Dawn"] = "Default",
["Gelae - Kel'Thuzad"] = "Default",
["Riparium - Argent Dawn"] = "Jundies - Season 3 M+ and Ra",
["Zimuures - Argent Dawn"] = "Default",
["Emptyrivers - Argent Dawn"] = "Default",
["Karst - Argent Dawn"] = "Default",
["Wildeadoriah - The Scryers"] = "Default",
["Stream - Argent Dawn"] = "Default",
["Estuary - Argent Dawn"] = "Default",
},
["captured_casts"] = {
[158459] = {
["source"] = "Adherent Squallbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75290,
},
[124800] = {
["source"] = "Sra'thik Warcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61502,
},
[419274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbound Captain",
["npcID"] = 207952,
},
[417227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[86405] = {
["source"] = "Rockshell Snapclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 63369,
},
[396751] = {
["source"] = "Luumak the Insatiable",
["event"] = "SPELL_CAST_START",
["npcID"] = 195971,
},
[195320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Rockcaller",
["npcID"] = 100433,
},
[49350] = {
["source"] = "Plague Eruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27611,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[316890] = {
["source"] = "Ogre Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 153239,
},
[257777] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[427469] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[413135] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[456138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[188154] = {
["source"] = "Azariah",
["event"] = "SPELL_CAST_START",
["npcID"] = 91737,
},
[394706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Frost",
["npcID"] = 198702,
},
[133889] = {
["event"] = "SPELL_CAST_START",
["source"] = "A.C.E. Medic",
["npcID"] = 69007,
},
[392659] = {
["source"] = "Crazed Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 194224,
},
[129921] = {
["isChanneled"] = true,
["source"] = "Maw of Despair",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59315,
},
[456140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimslice",
["npcID"] = 221551,
},
[122754] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["npcID"] = 62164,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1463,
},
[190203] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 94737,
},
[390613] = {
["source"] = "Snarglebone",
["event"] = "SPELL_CAST_START",
["npcID"] = 197344,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[62661] = {
["encounterName"] = "General Vezax",
["source"] = "General Vezax",
["npcID"] = 33271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1134,
},
[384471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Skitter",
["npcID"] = 196758,
},
[120195] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["npcID"] = 61445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[392663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crazed Alpha",
["npcID"] = 194224,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[392665] = {
["source"] = "Time-Lost Thunderhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 187258,
},
[125315] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bataari War Yeti",
["npcID"] = 64185,
},
[146179] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1624,
},
[419287] = {
["source"] = "Crenna Earth-Daughter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209072,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["encounterID"] = 1441,
["event"] = "SPELL_CAST_START",
["npcID"] = 61398,
},
[384476] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[122244] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Engineer",
["npcID"] = 62632,
},
[400859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reconstituted Magmental",
["npcID"] = 205565,
},
[437719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[386526] = {
["source"] = "Nullmagic Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 187246,
},
[251640] = {
["isChanneled"] = true,
["source"] = "Dark Iron Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 147595,
},
[54983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[417243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[392671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icebreaker",
["npcID"] = 199279,
},
[421340] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[390624] = {
["source"] = "Snarglebone",
["event"] = "SPELL_CAST_START",
["npcID"] = 197344,
},
[384481] = {
["isChanneled"] = true,
["source"] = "Tapionnuq",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194731,
},
[427484] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[425437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[382435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[148232] = {
["encounterName"] = "Galakras",
["source"] = "Lor'themar Theron",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72560,
},
[133898] = {
["isChanneled"] = true,
["source"] = "Vol'jin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67414,
},
[13748] = {
["source"] = "Scarshield Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 9098,
},
[118663] = {
["source"] = "Snagtooth Hooligan",
["event"] = "SPELL_CAST_START",
["npcID"] = 56462,
},
[396774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[372202] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[423396] = {
["source"] = "Lethka",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[255741] = {
["source"] = "Scaled Krolusk Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 134629,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["npcID"] = 82721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[186118] = {
["source"] = "Attack Mastiff",
["event"] = "SPELL_CAST_START",
["npcID"] = 92956,
},
[392682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[411112] = {
["source"] = "Calibrating Scent Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 203606,
},
[198405] = {
["source"] = "Helarjar Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 97097,
},
[384492] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[394731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth",
["npcID"] = 198709,
},
[384493] = {
["source"] = "Huntmaster Yrgena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201538,
},
[396780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Subjugator",
["npcID"] = 195837,
},
[392685] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Juggernaut",
["npcID"] = 198081,
},
[429545] = {
["source"] = "Voidtouched Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 223469,
},
[187144] = {
["source"] = "Bladesquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 91874,
},
[392686] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[421355] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[275966] = {
["source"] = "Acidic Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 140985,
},
[122761] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[282110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Archer",
["npcID"] = 210645,
},
[275967] = {
["source"] = "Darktunnel Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 140993,
},
[257793] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[386546] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[136976] = {
["source"] = "Defiant Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 67477,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206352,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[396786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 191654,
},
[199433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[425455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["npcID"] = 59051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[382454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Dragonspawn",
["npcID"] = 188802,
},
[76688] = {
["isChanneled"] = true,
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40019,
},
[316927] = {
["source"] = "Barrow Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 160394,
},
[118667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twitchheel Hoarder",
["npcID"] = 56538,
},
[119691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Boom Boom",
["npcID"] = 61013,
},
[158480] = {
["source"] = "Adherent Squallbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75290,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[392698] = {
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221743,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 83894,
},
[119692] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[417272] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[450037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[213772] = {
["source"] = "Chargore",
["event"] = "SPELL_CAST_START",
["npcID"] = 107096,
},
[372223] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[107918] = {
["source"] = "Cornan",
["event"] = "SPELL_CAST_START",
["npcID"] = 57213,
},
[392701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshroud Defender",
["npcID"] = 192536,
},
[394749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Storm",
["npcID"] = 198716,
},
[265741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[427514] = {
["source"] = "Raszageth's Last Breath",
["event"] = "SPELL_CAST_START",
["npcID"] = 209912,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[166675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Gunner",
["npcID"] = 80937,
},
[372226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["encounterID"] = 1427,
["event"] = "SPELL_CAST_START",
["npcID"] = 59184,
},
[188177] = {
["source"] = "Azariah",
["event"] = "SPELL_CAST_START",
["npcID"] = 91737,
},
[183058] = {
["source"] = "Vethir",
["event"] = "SPELL_CAST_START",
["npcID"] = 92302,
},
[450043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[427518] = {
["source"] = "Raszageth's Last Breath",
["event"] = "SPELL_CAST_START",
["npcID"] = 209912,
},
[86930] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[136985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshcrafter Hoku",
["npcID"] = 69435,
},
[122254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Spearscamp",
["npcID"] = 62474,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[115087] = {
["source"] = "Tigerfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 56283,
},
[124302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Go-Kan",
["npcID"] = 50331,
},
[46029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Blood Knight",
["npcID"] = 24684,
},
[452094] = {
["source"] = "Obstorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[396805] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[126350] = {
["source"] = "Ancient Mogu Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 58671,
},
[190228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Knight-Captain Brimley",
["npcID"] = 94809,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[396807] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[392712] = {
["source"] = "Stormshroud Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 192536,
},
[157465] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_CAST_START",
["npcID"] = 75839,
},
[382474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[194325] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["encounterID"] = 1823,
["event"] = "SPELL_CAST_START",
["npcID"] = 96754,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[419336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Watcher Mara",
["npcID"] = 206925,
},
[60876] = {
["source"] = "Recalled Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 221434,
},
[195350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Savage",
["npcID"] = 108283,
},
[419337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Watcher Mara",
["npcID"] = 206925,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[83861] = {
["source"] = "Stonescale Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 43971,
},
[394765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Stonemauler",
["npcID"] = 210043,
},
[186136] = {
["source"] = "Houndmaster Ely",
["event"] = "SPELL_CAST_START",
["npcID"] = 92951,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[278044] = {
["source"] = "Morlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 201549,
},
[396814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[135967] = {
["event"] = "SPELL_CAST_START",
["source"] = "A.C.E. Beamgunner",
["npcID"] = 69008,
},
[259856] = {
["encounterName"] = "Rixxa Fluxfume",
["source"] = "Rixxa Fluxflame",
["npcID"] = 129231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2107,
},
[275998] = {
["source"] = "Steelshred",
["event"] = "SPELL_CAST_START",
["npcID"] = 140988,
},
[265760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[407055] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[126353] = {
["source"] = "Gochao the Ironfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 62880,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[419344] = {
["source"] = "Crenna Earth-Daughter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209072,
},
[396819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[392724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[372247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Hidestitcher",
["npcID"] = 187941,
},
[415250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[126354] = {
["source"] = "Houndmaster Ely",
["event"] = "SPELL_CAST_START",
["npcID"] = 92951,
},
[198427] = {
["source"] = "Restless Ancestor",
["event"] = "SPELL_CAST_START",
["npcID"] = 93094,
},
[133923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Tel'vrak",
["npcID"] = 67879,
},
[443921] = {
["source"] = "Shadowguard Ethereal",
["event"] = "SPELL_CAST_START",
["npcID"] = 221305,
},
[396823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[122259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Engineer",
["npcID"] = 62632,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[98710] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[384538] = {
["source"] = "Tapionnuq",
["event"] = "SPELL_CAST_START",
["npcID"] = 194731,
},
[396825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[417303] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[419351] = {
["source"] = "Infinite Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["npcID"] = 194999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[456211] = {
["source"] = "Smaragthr",
["event"] = "SPELL_CAST_START",
["npcID"] = 220362,
},
[257814] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[378397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthenforged Invader",
["npcID"] = 190737,
},
[421400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Spear",
["npcID"] = 209973,
},
[81305] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Stone Trogg Rockmagus",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43652,
},
[82841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earth Elemental",
["npcID"] = 37553,
},
[392733] = {
["source"] = "Dewdrop Tortoise",
["event"] = "SPELL_CAST_START",
["npcID"] = 211145,
},
[421402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Pyremancer",
["npcID"] = 209963,
},
[392734] = {
["source"] = "Sundered Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 196927,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[192288] = {
["source"] = "Olmyr the Enlightened",
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[81306] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Stone Trogg Rockmagus",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43652,
},
[253721] = {
["isChanneled"] = true,
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127879,
},
[41169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[267824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Essence",
["npcID"] = 135240,
},
[417310] = {
["source"] = "Val'kyr Shadowguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208380,
},
[370212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Wallcrasher",
["npcID"] = 187813,
},
[431645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[392738] = {
["source"] = "Kargpaw the Fetid",
["event"] = "SPELL_CAST_START",
["npcID"] = 186660,
},
[190242] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Abigail the Huntress",
["npcID"] = 94822,
},
[183075] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Luddy Quicksnap",
["npcID"] = 193292,
},
[121238] = {
["isChanneled"] = true,
["source"] = "Gong Da",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62165,
},
[372262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[62415] = {
["source"] = "Jormungar Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 32882,
},
[445984] = {
["source"] = "Infested Jawgrub",
["event"] = "SPELL_CAST_START",
["npcID"] = 217379,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Refreshment Table",
["npcID"] = 209800,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2708,
},
[458271] = {
["source"] = "Sakret'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 215841,
},
[427556] = {
["isChanneled"] = true,
["source"] = "Shaded Glowdrop",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209912,
},
[41426] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[427557] = {
["source"] = "Raszageth's Last Breath",
["event"] = "SPELL_CAST_START",
["npcID"] = 209912,
},
[161577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lernaea Vilescale",
["npcID"] = 85693,
},
[69022] = {
["source"] = "Doc Zapnozzle",
["event"] = "SPELL_CAST_START",
["npcID"] = 36608,
},
[197413] = {
["source"] = "Ishkaneth",
["event"] = "SPELL_CAST_START",
["npcID"] = 90389,
},
[158506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffdiver Eagle",
["npcID"] = 107928,
},
[269882] = {
["source"] = "Gilnean Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 147275,
},
[378413] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
[197414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[165674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Gurran",
["npcID"] = 79585,
},
[458278] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurker of the Deeps",
["npcID"] = 220285,
},
[370225] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[134959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Scargash",
["npcID"] = 68474,
},
[146222] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Blade of the Hundred Steps",
["npcID"] = 72787,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[384561] = {
["source"] = "Tapionnuq",
["event"] = "SPELL_CAST_START",
["npcID"] = 194731,
},
[394800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Earthcaller",
["npcID"] = 198500,
},
[372276] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormfang Hexspiter",
["npcID"] = 187930,
},
[146223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellscream Annihilator",
["npcID"] = 72847,
},
[394802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Stormcaller",
["npcID"] = 198502,
},
[269890] = {
["source"] = "Irontide Ruffian",
["event"] = "SPELL_CAST_START",
["npcID"] = 126720,
},
[394803] = {
["source"] = "Corrupted Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 193658,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["encounterID"] = 1685,
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[405043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
["358320"] = {
["npcID"] = 180162,
},
[452142] = {
["source"] = "Obstorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[9591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burrowing Leyworm",
["npcID"] = 106630,
},
[77216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kharanos Rifleman",
["npcID"] = 41182,
},
[396854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Sentinel",
["npcID"] = 188173,
},
[133939] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[129946] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Weeping Widow",
["npcID"] = 65622,
},
[154417] = {
["encounterName"] = "Orebender Gor'ashan",
["source"] = "Orebender Gor'ashan",
["encounterID"] = 1761,
["event"] = "SPELL_CAST_START",
["npcID"] = 76413,
},
[396856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[107933] = {
["source"] = "Tricky Maizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 57223,
},
[327233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[138036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warbringer",
["npcID"] = 69841,
},
[407097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[400954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[121244] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malevolent Fury",
["npcID"] = 61333,
},
[396859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthshatter Elemental",
["npcID"] = 194524,
},
[388669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garlic-Breathed Hydra",
["npcID"] = 224751,
},
[215852] = {
["source"] = "Doomherald Taraar",
["event"] = "SPELL_CAST_START",
["npcID"] = 105094,
},
[417338] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[396861] = {
["source"] = "Unstable Arcanogolem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201554,
},
[269901] = {
["source"] = "Swampgas",
["event"] = "SPELL_CAST_START",
["npcID"] = 135839,
},
[131895] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wild Townlong Yak",
["npcID"] = 61635,
},
[78754] = {
["source"] = "Ashenvale Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 34177,
},
[174898] = {
["source"] = "Enraged Gembiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 81729,
},
[427579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Bristlebruin",
["npcID"] = 210507,
},
[81314] = {
["source"] = "Verlok Basilisk Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 42711,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[394816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shardwing",
["npcID"] = 201562,
},
[374339] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[427581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Bristlebruin",
["npcID"] = 210507,
},
[138040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warbringer",
["npcID"] = 69841,
},
[188210] = {
["source"] = "Azariah",
["event"] = "SPELL_CAST_START",
["npcID"] = 91737,
},
[165685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Gurran",
["npcID"] = 79585,
},
[120222] = {
["source"] = "Seething Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 61610,
},
[129437] = {
["source"] = "Krasari Hissing Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 65802,
},
[425536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[407107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthrender Ku'siva",
["npcID"] = 199840,
},
[392773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rymek",
["npcID"] = 188846,
},
[427585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Bristlebruin",
["npcID"] = 210507,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[196403] = {
["source"] = "Doom Commander Beliash",
["event"] = "SPELL_CAST_START",
["npcID"] = 93221,
},
[111008] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[159544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Torn Spirit",
["npcID"] = 82220,
},
[129438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Viseclaw",
["npcID"] = 61091,
},
[138043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warbringer",
["npcID"] = 69841,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[199476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sledge",
["npcID"] = 92990,
},
[296533] = {
["source"] = "A.T.O.M.I.K. Mk. II Turbo",
["event"] = "SPELL_CAST_START",
["npcID"] = 152714,
},
[93091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brother Paxton",
["npcID"] = 951,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["npcID"] = 77816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[415304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[269914] = {
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 135818,
},
[452164] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[187191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Zealot",
["npcID"] = 112481,
},
[400971] = {
["source"] = "Sulfuric Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 202622,
},
[99235] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[382542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Ice Slitherer",
["npcID"] = 186391,
},
[376399] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192188,
},
[394829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osseous Broodmother",
["npcID"] = 203348,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["encounterID"] = 1439,
["event"] = "SPELL_CAST_START",
["npcID"] = 56439,
},
[15799] = {
["source"] = "Stormcaller Mylra",
["event"] = "SPELL_CAST_START",
["npcID"] = 44956,
},
[111010] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[456263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[400974] = {
["source"] = "Obsidian Tormentor",
["event"] = "SPELL_CAST_START",
["npcID"] = 202481,
},
[386640] = {
["source"] = "Tarasek Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 187242,
},
[396879] = {
["source"] = "Geothermus",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[415309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[370259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthenforged Invader",
["npcID"] = 190737,
},
[99236] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[423501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[294493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeless Causality",
["npcID"] = 186464,
},
[394833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmammoth Breaker",
["npcID"] = 194912,
},
[413263] = {
["encounterName"] = "Asaad",
["source"] = "Skyfall Nova",
["encounterID"] = 1042,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 52019,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203799,
},
[400977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[452171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203857,
},
[193338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vethir",
["npcID"] = 98174,
},
[372310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadzigeth",
["npcID"] = 188447,
},
[407122] = {
["source"] = "Horde Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 203857,
},
[384597] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[378454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lumbering Boulder",
["npcID"] = 203594,
},
[372311] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[427601] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[407124] = {
["source"] = "Horde Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 207969,
},
[450127] = {
["source"] = "Siegehold Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 216016,
},
[394838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[388696] = {
["source"] = "Remembered Gahz'rilla",
["event"] = "SPELL_CAST_START",
["npcID"] = 221578,
},
[195388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slash Gutspill",
["npcID"] = 90747,
},
[409174] = {
["source"] = "Incarnation of Entropy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203811,
},
[452177] = {
["source"] = "Arathi Reserve",
["event"] = "SPELL_CAST_START",
["npcID"] = 215727,
},
[429652] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 214390,
},
[191293] = {
["isChanneled"] = true,
["source"] = "Dark Iron Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 147354,
},
[124835] = {
["source"] = "Coldbite Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 62008,
},
[258869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Flamecaster",
["npcID"] = 127488,
},
[382555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[409177] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[403034] = {
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200832,
},
[44504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[106918] = {
["source"] = "Orchard Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 56201,
},
[300648] = {
["isChanneled"] = true,
["source"] = "Vexiona",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 151798,
},
[425561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pack Mole",
["npcID"] = 211977,
},
[427609] = {
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[140102] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zeb'tula Raptor",
["npcID"] = 69658,
},
[382561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowhide Shaman",
["npcID"] = 189654,
},
[82858] = {
["source"] = "High Priestess Azil",
["event"] = "SPELL_CAST_START",
["npcID"] = 42333,
},
[386658] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[388706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Essence",
["npcID"] = 187819,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[197441] = {
["source"] = "Tyndrissen",
["event"] = "SPELL_CAST_START",
["npcID"] = 90390,
},
[142152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mouth of Terror",
["npcID"] = 70691,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[429663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[114087] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[106920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regenerating Sha",
["npcID"] = 56763,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2708,
},
[183108] = {
["source"] = "Larivi",
["event"] = "SPELL_CAST_START",
["npcID"] = 192747,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[136010] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[62935] = {
["encounterName"] = "Freya",
["source"] = "Ancient Water Spirit",
["npcID"] = 33202,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1133,
},
[38618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Warrior",
["npcID"] = 21852,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[423523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[145226] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1624,
},
[390760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[376426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Ripple",
["npcID"] = 187542,
},
[306803] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lumbering Nightmare",
["npcID"] = 155051,
},
[425573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[132941] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alliance Swashbuckler",
["npcID"] = 69196,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[22127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nordrassil Druid",
["npcID"] = 38952,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56762,
},
[382573] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[36827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scout Captain Elsia",
["npcID"] = 69485,
},
[132942] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alliance Swashbuckler",
["npcID"] = 69196,
},
[417386] = {
["source"] = "Valhalas Vargul",
["event"] = "SPELL_CAST_START",
["npcID"] = 207804,
},
[394861] = {
["source"] = "Henlare",
["event"] = "SPELL_CAST_START",
["npcID"] = 193229,
},
[179017] = {
["source"] = "Hatecoil Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 88084,
},
[384623] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[419435] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Soldier",
["npcID"] = 209191,
},
[429674] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 214390,
},
[382576] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[145230] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["npcID"] = 71393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1594,
},
[450153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Roots",
["npcID"] = 216250,
},
[16496] = {
["source"] = "Captured Mercenary Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 32885,
},
[382578] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[427629] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[76719] = {
["source"] = "Incendiary Spark",
["event"] = "SPELL_CAST_START",
["npcID"] = 40021,
},
[386675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[128937] = {
["source"] = "Hawkmaster Nurong",
["event"] = "SPELL_CAST_START",
["npcID"] = 64474,
},
[144208] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Automated Shredder",
["encounterID"] = 1601,
["event"] = "SPELL_CAST_START",
["npcID"] = 71591,
},
[9081] = {
["source"] = "Dark Ritualist Zakahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 49148,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[419441] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Soldier",
["npcID"] = 209191,
},
[46043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[394870] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Council Earthcaller",
["npcID"] = 198501,
},
[446064] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Slamming Tentacle",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220741,
},
[87471] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Drywallow Snapper",
["npcID"] = 4343,
},
[306818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger Thyala",
["npcID"] = 150498,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[140115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[126379] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Prophet Khar'zul",
["npcID"] = 61541,
},
[427638] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[255814] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[431734] = {
["source"] = "Shadow Vanguard Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 214901,
},
[72114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sylvanas Windrunner",
["npcID"] = 152437,
},
[186191] = {
["source"] = "Agnol",
["event"] = "SPELL_CAST_START",
["npcID"] = 105440,
},
[394876] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[46044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Imp",
["npcID"] = 24815,
},
[396925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 197149,
},
[394878] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flamescale Tarasek",
["npcID"] = 198500,
},
[198479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Servant of Skovald",
["npcID"] = 112480,
},
[215885] = {
["source"] = "Doomherald Saera",
["event"] = "SPELL_CAST_START",
["npcID"] = 105095,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[144214] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[382593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cruel Bonecrusher",
["npcID"] = 186206,
},
[171859] = {
["source"] = "Bloodmane Earthbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 80448,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[133976] = {
["source"] = "The Jade Warlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 68005,
},
[417406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[272016] = {
["source"] = "Fleshrot Cabalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 146894,
},
[409216] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[165717] = {
["source"] = "Alya",
["event"] = "SPELL_CAST_START",
["npcID"] = 82002,
},
[398978] = {
["source"] = "Memory of a Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 200030,
},
[409217] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[382597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frost Shackler",
["npcID"] = 190993,
},
[6685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kharanos Rifleman",
["npcID"] = 41182,
},
[265876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[458365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[386694] = {
["source"] = "Stormsurge Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 194897,
},
[446079] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Leviathan Caller",
["npcID"] = 220738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3002,
},
[398981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[163671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'thalas Nightwatcher",
["npcID"] = 88782,
},
[111024] = {
["source"] = "Spirit of Redemption",
["event"] = "SPELL_CAST_START",
["npcID"] = 58592,
},
[388743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Bakar",
["npcID"] = 188510,
},
[456319] = {
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[360075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magically Regulated Automa Core",
["npcID"] = 182210,
},
[80308] = {
["isChanneled"] = true,
["source"] = "Stonecore Rift Conjurer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42691,
},
[147290] = {
["source"] = "Imperial Python",
["event"] = "SPELL_CAST_START",
["npcID"] = 73163,
},
[388745] = {
["source"] = "Icy Blue Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 197862,
},
[456321] = {
["source"] = "Aelric Leid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213208,
},
[265881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[398985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[116] = {
["npcID"] = 188027,
},
[189270] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Genn Greymane",
["npcID"] = 95451,
},
[388747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Starving Bullfrog",
["npcID"] = 193422,
},
[256846] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[87988] = {
["source"] = "Obsidian Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 46646,
},
[394891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[130479] = {
["source"] = "Thunder Hold Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 66287,
},
[122800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yalia Sagewhisper",
["npcID"] = 62825,
},
[46046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Physician",
["npcID"] = 24687,
},
[427657] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[15801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Theurgist",
["npcID"] = 27963,
},
[450183] = {
["source"] = "Kronolith, Might of the Mountain",
["event"] = "SPELL_CAST_START",
["npcID"] = 219270,
},
[452231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Deadeye",
["npcID"] = 188542,
},
[39647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Nightlord",
["npcID"] = 22855,
},
[394895] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[89013] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pyramid Watcher",
["npcID"] = 47810,
},
[415373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Footman",
["npcID"] = 207578,
},
[172891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Gar",
["npcID"] = 85571,
},
[256849] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409231] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[163677] = {
["source"] = "Ghastly Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 82028,
},
[452235] = {
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[157534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormcaller",
["npcID"] = 88087,
},
[456331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[87990] = {
["source"] = "Obsidian Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 46646,
},
[227158] = {
["source"] = "Darkspear Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 113034,
},
[199514] = {
["isChanneled"] = true,
["source"] = "Seacursed Mistmender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97365,
},
[384663] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[190300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 95451,
},
[394903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[106421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guardian",
["npcID"] = 59741,
},
[41184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[274087] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Honorbound Spiritcaller",
["npcID"] = 145181,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99200,
},
[125363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scritch",
["npcID"] = 50831,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[382620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[321188] = {
["source"] = "Quilboar Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 150238,
},
[374430] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[171873] = {
["source"] = "Bloodmane Earthbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 80448,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[444055] = {
["source"] = "Rampaging Threadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 222730,
},
[202590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taldath the Destroyer",
["npcID"] = 94731,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[198495] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["encounterID"] = 1824,
["event"] = "SPELL_CAST_START",
["npcID"] = 96759,
},
[11962] = {
["source"] = "Rotbrain Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 49423,
},
[48096] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 2011,
["event"] = "SPELL_CAST_START",
["npcID"] = 26723,
},
[201567] = {
["source"] = "Seacursed Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97043,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[82362] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Evolved Twilight Zealot",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 50284,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[386722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galewarden",
["npcID"] = 203744,
},
[125877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Windblade",
["npcID"] = 64453,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[452252] = {
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[187235] = {
["source"] = "Stormbreaker Reykir",
["event"] = "SPELL_CAST_START",
["npcID"] = 91517,
},
[213856] = {
["source"] = "Brawlgoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 107127,
},
[396964] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Flow Control Unit",
["npcID"] = 198527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[124854] = {
["source"] = "Sele'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 50766,
},
[126390] = {
["source"] = "Gaohun the Soul-Severer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62881,
},
[27634] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Garaxxas",
["npcID"] = 24555,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[411300] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[407205] = {
["source"] = "Horde Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203861,
},
[120759] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1502,
},
[258908] = {
["source"] = "Shrouded Fang",
["event"] = "SPELL_CAST_START",
["npcID"] = 134602,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[211810] = {
["source"] = "Glimar Ironfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 91529,
},
[212834] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[41186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[265912] = {
["source"] = "Agitated Nimbus",
["event"] = "SPELL_CAST_START",
["npcID"] = 136076,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[162665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Bodyguard",
["npcID"] = 73954,
},
[126903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 65134,
},
[394922] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[372397] = {
["source"] = "Brackenhide Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 183956,
},
[120760] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1502,
},
[129975] = {
["source"] = "Incarnation of Despair",
["event"] = "SPELL_CAST_START",
["npcID"] = 65872,
},
[162666] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grom'kar Bodyguard",
["npcID"] = 73954,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[415403] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[452263] = {
["source"] = "Harvest Warden Izk'tilak",
["event"] = "SPELL_CAST_START",
["npcID"] = 220644,
},
[256864] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[396975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[162668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Bodyguard",
["npcID"] = 73954,
},
[147310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brilliant Windfeather",
["npcID"] = 72762,
},
[41187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[165740] = {
["source"] = "Tore",
["event"] = "SPELL_CAST_START",
["npcID"] = 82007,
},
[374451] = {
["source"] = "Burning Chain Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195919,
},
[458409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[17140] = {
["source"] = "Barbery the Crazy Cat Lady",
["event"] = "SPELL_CAST_START",
["npcID"] = 82009,
},
[399025] = {
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181775,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[165741] = {
["source"] = "Challe Tebrilinde",
["event"] = "SPELL_CAST_START",
["npcID"] = 82005,
},
[142192] = {
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 61783,
},
[128953] = {
["source"] = "Hawkmaster Nurong",
["event"] = "SPELL_CAST_START",
["npcID"] = 64474,
},
[106428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[190315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathanos Blightcaller",
["npcID"] = 94420,
},
[116155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yeasty Brew Alemental",
["npcID"] = 66413,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[439984] = {
["isChanneled"] = true,
["source"] = "Earthen-Ward Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216221,
},
[433841] = {
["source"] = "Blood Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[63713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Horror",
["npcID"] = 33772,
},
[134003] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Priest",
["npcID"] = 67892,
},
[270022] = {
["source"] = "Silverback Thumpknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 130543,
},
[452272] = {
["source"] = "Kol Bruncrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 213658,
},
[274118] = {
["source"] = "Tally Zapnabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 133627,
},
[155505] = {
["source"] = "Black Iron Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 76101,
},
[41188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Primalist",
["npcID"] = 22847,
},
[134004] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Priest",
["npcID"] = 67892,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[258917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Priest",
["npcID"] = 130028,
},
[169840] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[399033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manipulator",
["npcID"] = 188172,
},
[188270] = {
["source"] = "Black Rook Falcon",
["event"] = "SPELL_CAST_START",
["npcID"] = 93064,
},
[135029] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[169841] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[188271] = {
["source"] = "Bloodbeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 91657,
},
[106942] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Destroying Sha",
["npcID"] = 56765,
},
[274123] = {
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_START",
["npcID"] = 133556,
},
[116157] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1390,
},
[124860] = {
["source"] = "Sele'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 50766,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[126908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 58927,
},
[11899] = {
["source"] = "Sandfury Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 5650,
},
[270030] = {
["source"] = "Swampgas",
["event"] = "SPELL_CAST_START",
["npcID"] = 135839,
},
[419516] = {
["source"] = "Chronaxie",
["event"] = "SPELL_CAST_START",
["npcID"] = 206070,
},
[396991] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[228204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Stalker",
["npcID"] = 90241,
},
[122813] = {
["source"] = "Snow Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 63907,
},
[388801] = {
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 195855,
},
[125373] = {
["source"] = "Torik-Ethis",
["event"] = "SPELL_CAST_START",
["npcID"] = 50388,
},
[171892] = {
["source"] = "Blackfang Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 89747,
},
[411328] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[195442] = {
["source"] = "Rythas the Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 92918,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[61923] = {
["encounterName"] = "Hodir",
["source"] = "Field Medic Penny",
["npcID"] = 32897,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1135,
},
[142201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Y'Shaarj",
["npcID"] = 71123,
},
[143225] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71479,
},
[444095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chieftain Gillcarver",
["npcID"] = 219633,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[407236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[458430] = {
["source"] = "Droghung",
["event"] = "SPELL_CAST_START",
["npcID"] = 221316,
},
[419524] = {
["source"] = "Loose Time",
["event"] = "SPELL_CAST_START",
["npcID"] = 209170,
},
[186229] = {
["source"] = "Orbyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 91155,
},
[252781] = {
["source"] = "Zanchuli Witch-Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122969,
},
[145275] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Embodied Doubt",
["npcID"] = 72236,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[126911] = {
["source"] = "Shao-Tien Fist",
["event"] = "SPELL_CAST_START",
["npcID"] = 65134,
},
[145276] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Embodied Despair",
["npcID"] = 72238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[130495] = {
["source"] = "Thunder Hold Sharp-Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66288,
},
[106434] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["encounterID"] = 1304,
["event"] = "SPELL_CAST_START",
["npcID"] = 56541,
},
[61924] = {
["encounterName"] = "Hodir",
["source"] = "Elementalist Mahfuun",
["npcID"] = 33328,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1135,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[413387] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[415435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[215925] = {
["source"] = "Gorgonnash",
["event"] = "SPELL_CAST_START",
["npcID"] = 99046,
},
[394959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[331479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Goo",
["npcID"] = 218519,
},
[415437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Leech",
["npcID"] = 206066,
},
[131968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Battle-Mender",
["npcID"] = 67093,
},
[115650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[116162] = {
["source"] = "Fizzy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59520,
},
[17142] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63909,
},
[126913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 58927,
},
[397010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[256882] = {
["source"] = "Monzumi",
["event"] = "SPELL_CAST_START",
["npcID"] = 129552,
},
[120770] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Summit Sprite",
["npcID"] = 68026,
},
[272098] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Brute",
["npcID"] = 131307,
},
[397011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Honor Guard",
["npcID"] = 197147,
},
[205689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathanos Blightcaller",
["npcID"] = 94420,
},
[190331] = {
["source"] = "Dark Iron Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 147355,
},
[9532] = {
["source"] = "Grimtotem Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 23714,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[401109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[372441] = {
["source"] = "Feral Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211401,
},
[399062] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[128962] = {
["source"] = "Krasari Runekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 65598,
},
[419540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[263912] = {
["encounterName"] = "Merektha",
["source"] = "Merektha",
["encounterID"] = 2125,
["event"] = "SPELL_CAST_START",
["npcID"] = 133384,
},
[115652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Brew Alemental",
["npcID"] = 59519,
},
[399065] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[263914] = {
["encounterName"] = "Merektha",
["source"] = "Merektha",
["encounterID"] = 2125,
["event"] = "SPELL_CAST_START",
["npcID"] = 133384,
},
[128963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkhide",
["npcID"] = 58435,
},
[411353] = {
["source"] = "Empowered Protector Lynaera",
["event"] = "SPELL_CAST_START",
["npcID"] = 204419,
},
[114117] = {
["isChanneled"] = true,
["source"] = "Chief Gukgut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54868,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[394972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 197148,
},
[409307] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 202262,
},
[258935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Priest",
["npcID"] = 130028,
},
[372448] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[417499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Robotic Cauldron",
["npcID"] = 207111,
},
[372449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormfang Bonecaster",
["npcID"] = 187931,
},
[128964] = {
["isChanneled"] = true,
["source"] = "Krasari Tormentor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65598,
},
[121285] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Knucklethump Smasher",
["npcID"] = 59410,
},
[145286] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["npcID"] = 71405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[106439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragrant Lotus",
["npcID"] = 56472,
},
[394976] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Lasher",
["npcID"] = 198757,
},
[265968] = {
["source"] = "Charged Dust Devil",
["event"] = "SPELL_CAST_START",
["npcID"] = 134990,
},
[394977] = {
["source"] = "Frigidpelt Den Mother",
["event"] = "SPELL_CAST_START",
["npcID"] = 193698,
},
[117702] = {
["source"] = "Widow Greenpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55368,
},
[51432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Necromancer",
["npcID"] = 28368,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[145288] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["npcID"] = 71395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[288497] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[382696] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[137099] = {
["source"] = "Zandalari Water-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69455,
},
[40938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[124359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Den Mother Moof",
["npcID"] = 63518,
},
[200580] = {
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 95779,
},
[372460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Stalker",
["npcID"] = 187523,
},
[198533] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jade Serpent Statue",
["npcID"] = 60849,
},
[135053] = {
["source"] = "Aenea",
["event"] = "SPELL_CAST_START",
["npcID"] = 68391,
},
[15228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[125384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adolescent Mushan",
["npcID"] = 56239,
},
[382704] = {
["source"] = "Grand Artificer Zeerak",
["event"] = "SPELL_CAST_START",
["npcID"] = 201553,
},
[386800] = {
["source"] = "Boolk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191450,
},
[153485] = {
["source"] = "Shadow-Chasm Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 217962,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[417517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[386801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragsworn Stoneshaper",
["npcID"] = 191661,
},
[141199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[390897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalepiercer",
["npcID"] = 186632,
},
[427758] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[78799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzy Yellow Alemental",
["npcID"] = 58017,
},
[382708] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[128969] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[397043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[147344] = {
["source"] = "Zesqua",
["event"] = "SPELL_CAST_START",
["npcID"] = 72245,
},
[172941] = {
["source"] = "Sor the Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 80691,
},
[460525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bytta",
["npcID"] = 222653,
},
[413427] = {
["source"] = "Pendule",
["event"] = "SPELL_CAST_START",
["npcID"] = 206074,
},
[147345] = {
["source"] = "Skunky Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 71908,
},
[407285] = {
["source"] = "Djaradin Skullcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202258,
},
[128970] = {
["isChanneled"] = true,
["source"] = "Crypt Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61783,
},
[263943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Runeweaver",
["npcID"] = 131677,
},
[372474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Marauder",
["npcID"] = 186299,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[148370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windreaver Tar'rath",
["npcID"] = 73667,
},
[397048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbreath Arachnid",
["npcID"] = 199333,
},
[194445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Eyir",
["npcID"] = 94856,
},
[147347] = {
["isChanneled"] = true,
["source"] = "Zhu-Gon the Sour",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71919,
},
[78801] = {
["encounterName"] = "Hydromancer Velratha",
["source"] = "Hydromancer Velratha",
["encounterID"] = 593,
["event"] = "SPELL_CAST_START",
["npcID"] = 7795,
},
[79825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Starcaller",
["npcID"] = 183994,
},
[397051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[392957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Herdmare",
["npcID"] = 194283,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[407292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[63722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Horror",
["npcID"] = 33772,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 101028,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Lasher",
["npcID"] = 197219,
},
[106447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[178067] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[179091] = {
["source"] = "Nar'thalas Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 88783,
},
[147351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Pool Tender",
["npcID"] = 73342,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[411393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[372486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waste Water Elemental",
["npcID"] = 187497,
},
[390916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salkii",
["npcID"] = 193885,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[115663] = {
["isChanneled"] = true,
["source"] = "Greenstone Gorger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56404,
},
[150424] = {
["source"] = "Amani Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215675,
},
[62443] = {
["encounterName"] = "Thorim",
["source"] = "Dark Rune Acolyte",
["npcID"] = 33110,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1141,
},
[125902] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'thik Warsinger",
["npcID"] = 64458,
},
[118223] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torjar's Bane",
["npcID"] = 58439,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[263959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[147354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironfur Herdling",
["npcID"] = 72842,
},
[458497] = {
["source"] = "Parasidious",
["event"] = "SPELL_CAST_START",
["npcID"] = 206977,
},
[263961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[409352] = {
["source"] = "Blazing Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 202262,
},
[115153] = {
["source"] = "Riverstride Jinyu",
["event"] = "SPELL_CAST_START",
["npcID"] = 56289,
},
[372495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Seakelp",
["npcID"] = 194375,
},
[456453] = {
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[125392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warbringer Qobi",
["npcID"] = 63528,
},
[390926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barker",
["npcID"] = 194515,
},
[411404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Skytalon",
["npcID"] = 204430,
},
[198551] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["encounterID"] = 1823,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96754,
},
[395023] = {
["source"] = "Innumerable Ruination",
["event"] = "SPELL_CAST_START",
["npcID"] = 193126,
},
[131024] = {
["source"] = "Thunder Hold Sharp-Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66288,
},
[41455] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[116178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199659,
},
[411407] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[388882] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[411408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Skytalon",
["npcID"] = 204430,
},
[198553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Cleaver",
["npcID"] = 97825,
},
[79831] = {
["source"] = "Pearlfin Watershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 56725,
},
[44271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garaxxas",
["npcID"] = 24555,
},
[154527] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[256915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Sister",
["npcID"] = 131538,
},
[62445] = {
["encounterName"] = "Thorim",
["source"] = "Dark Rune Evoker",
["npcID"] = 32878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1141,
},
[395029] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melidrussa Chillworn",
["npcID"] = 195119,
},
[388886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[390934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salkii",
["npcID"] = 193885,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[112084] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[120787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Antiquator",
["npcID"] = 61641,
},
[80344] = {
["source"] = "Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 43014,
},
[401175] = {
["source"] = "Ebyssian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201707,
},
[272167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilescourge",
["npcID"] = 136404,
},
[286502] = {
["isChanneled"] = true,
["source"] = "Night Elf Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 147600,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggravated Skitterfly",
["npcID"] = 197406,
},
[198557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Cleaver",
["npcID"] = 97825,
},
[448276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungarian Sporeflinger",
["npcID"] = 218667,
},
[176032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Cinderseer",
["npcID"] = 88163,
},
[395035] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[382749] = {
["source"] = "Charred Hornspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 191479,
},
[37361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[126420] = {
["source"] = "Gaohun the Soul-Severer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62881,
},
[31865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Succubus",
["npcID"] = 22860,
},
[198559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muorg",
["npcID"] = 97944,
},
[120789] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["npcID"] = 61634,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1502,
},
[114646] = {
["source"] = "Haunting Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 59555,
},
[386849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[374563] = {
["source"] = "Dazzling Dragonfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 190362,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[452378] = {
["source"] = "Civilian Puppet",
["event"] = "SPELL_CAST_START",
["npcID"] = 219495,
},
[148391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gate-Crasher Sav'ah",
["npcID"] = 73670,
},
[413473] = {
["source"] = "Temporal Deviation",
["event"] = "SPELL_CAST_START",
["npcID"] = 206063,
},
[36594] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhawk Cloudscraper",
["npcID"] = 37557,
},
[147368] = {
["source"] = "Ironfur Great Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 72844,
},
[266036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[272180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[407332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Dustmoth",
["npcID"] = 202316,
},
[196515] = {
["source"] = "Binder Ashioi",
["event"] = "SPELL_CAST_START",
["npcID"] = 100250,
},
[140202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Warrior",
["npcID"] = 67473,
},
[397094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[374569] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186339,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[202659] = {
["encounterName"] = "Blood-Princess Thal'ena",
["source"] = "Blood-Princess Thal'ena",
["encounterID"] = 1855,
["event"] = "SPELL_CAST_START",
["npcID"] = 102431,
},
[390952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Flame",
["npcID"] = 188009,
},
[196516] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[272183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Deathspeaker",
["npcID"] = 134284,
},
[397096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[401192] = {
["source"] = "Quicksmack Magk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204651,
},
[321330] = {
["isChanneled"] = true,
["source"] = "Darkmaul Channeler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157328,
},
[117720] = {
["source"] = "Gormali Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 54703,
},
[423718] = {
["source"] = "Balboan",
["event"] = "SPELL_CAST_START",
["npcID"] = 210559,
},
[59376] = {
["encounterName"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["source"] = "Mage-Lord Urom",
["npcID"] = 27655,
},
[199589] = {
["source"] = "Helarjar Mistcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 99033,
},
[419624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whispering Behemoth",
["npcID"] = 207171,
},
[421672] = {
["source"] = "Volcoross",
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[115161] = {
["source"] = "Muck Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 56447,
},
[397100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[22907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Witch",
["npcID"] = 24696,
},
[218020] = {
["source"] = "Agitated Stonewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 108856,
},
[413483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apiazhus",
["npcID"] = 200981,
},
[47346] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
},
[372529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scav Notail",
["npcID"] = 193136,
},
[39667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Assassin",
["npcID"] = 23403,
},
[200615] = {
["source"] = "Eredar Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102726,
},
[411437] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[423725] = {
["source"] = "Balboan",
["event"] = "SPELL_CAST_START",
["npcID"] = 210559,
},
[411439] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[413487] = {
["source"] = "Temporal Fusion",
["event"] = "SPELL_CAST_START",
["npcID"] = 206068,
},
[59377] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[395058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pirdan the Blinder",
["npcID"] = 186512,
},
[143280] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["npcID"] = 71152,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[419632] = {
["isChanneled"] = true,
["source"] = "Spiteful Shade",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208945,
},
[130521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Doren",
["npcID"] = 66052,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[397108] = {
["source"] = "Seaborne Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 214437,
},
[150448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Flinger",
["npcID"] = 76465,
},
[319294] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_START",
["npcID"] = 162817,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[397110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Colossus",
["npcID"] = 187843,
},
[270150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feathered Viper",
["npcID"] = 132409,
},
[372538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Flare",
["npcID"] = 189470,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[409398] = {
["source"] = "Crystalline Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 203831,
},
[397112] = {
["source"] = "Thornmu the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196382,
},
[319298] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_START",
["npcID"] = 162817,
},
[84448] = {
["source"] = "Aeosera",
["event"] = "SPELL_CAST_START",
["npcID"] = 43641,
},
[137140] = {
["source"] = "Spirit of Warlord Teng",
["event"] = "SPELL_CAST_START",
["npcID"] = 69471,
},
[423734] = {
["encounterName"] = "Rezan",
["source"] = "Doomfiend",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 210910,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196482,
},
[129499] = {
["source"] = "Manifestation of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 59874,
},
[113629] = {
["source"] = "Boneweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 59193,
},
[407354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Leadspike",
["npcID"] = 210064,
},
[388925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[401212] = {
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_START",
["npcID"] = 209909,
},
[137142] = {
["source"] = "Itoka",
["event"] = "SPELL_CAST_START",
["npcID"] = 69461,
},
[382783] = {
["source"] = "Obsidian Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[118749] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzyhop",
["npcID"] = 56514,
},
[111582] = {
["isChanneled"] = true,
["source"] = "Starving Hound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58876,
},
[401214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Honeypelt",
["npcID"] = 202451,
},
[260008] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Zeth'jir Seacaller",
["npcID"] = 130824,
},
[130524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Doren",
["npcID"] = 66052,
},
[147382] = {
["source"] = "Ironfur Grazer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72843,
},
[66532] = {
["encounterName"] = "Lord Jaraxxus",
["source"] = "Lord Jaraxxus",
["npcID"] = 34780,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1087,
},
[407359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slaghide Shalewing",
["npcID"] = 202303,
},
[401216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll",
["npcID"] = 203039,
},
[382787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Slasher",
["npcID"] = 194467,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[198577] = {
["source"] = "Tideskorn Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 108526,
},
[390979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 185168,
},
[194482] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Eyir",
["npcID"] = 94856,
},
[114143] = {
["isChanneled"] = true,
["source"] = "Chief Gukgut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54868,
},
[319310] = {
["isChanneled"] = true,
["source"] = "Hrun the Exiled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156900,
},
[382791] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[147385] = {
["source"] = "Ironfur Great Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 72844,
},
[372553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktooth Howler",
["npcID"] = 195273,
},
[390983] = {
["source"] = "Turboris",
["event"] = "SPELL_CAST_START",
["npcID"] = 187886,
},
[393031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Causality",
["npcID"] = 186672,
},
[193460] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["encounterID"] = 1822,
["event"] = "SPELL_CAST_START",
["npcID"] = 96756,
},
[390984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Magmacrafter",
["npcID"] = 187867,
},
[425796] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[264024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[199604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sledge",
["npcID"] = 92990,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[202676] = {
["encounterName"] = "Blood-Princess Thal'ena",
["source"] = "Blood-Princess Thal'ena",
["encounterID"] = 1855,
["event"] = "SPELL_CAST_START",
["npcID"] = 102431,
},
[382795] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[140220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Colossus",
["npcID"] = 69405,
},
[372557] = {
["source"] = "Darktooth Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195273,
},
[390987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberspark",
["npcID"] = 208664,
},
[143292] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["npcID"] = 71479,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1598,
},
[390988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 185168,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[388941] = {
["source"] = "Water Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 201718,
},
[200630] = {
["source"] = "Mindshattered Screecher",
["event"] = "SPELL_CAST_START",
["npcID"] = 95769,
},
[38391] = {
["source"] = "Wild Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 105137,
},
[419659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Runebear",
["npcID"] = 207101,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[39671] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[129504] = {
["source"] = "Manifestation of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 59874,
},
[388944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waterpots",
["npcID"] = 201556,
},
[195512] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felskorn Raider",
["npcID"] = 108306,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[382802] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[168892] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mother Araneae",
["npcID"] = 76473,
},
[137152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hidden Fog",
["npcID"] = 69375,
},
[268129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refreshment Vendor",
["npcID"] = 136470,
},
[59381] = {
["encounterName"] = "Ley-Guardian Eregos",
["source"] = "Ley-Guardian Eregos",
["encounterID"] = 2013,
["event"] = "SPELL_CAST_START",
["npcID"] = 27656,
},
[460618] = {
["source"] = "Overworked Cook",
["event"] = "SPELL_CAST_START",
["npcID"] = 220744,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temporal Deviation",
["npcID"] = 188067,
},
[456523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clump O' Wax",
["npcID"] = 226809,
},
[114147] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Fearmaster",
["npcID"] = 59656,
},
[388949] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Legionnaire",
["npcID"] = 196679,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2614,
},
[225207] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greela \"The Grunt\" Crankchain",
["npcID"] = 101146,
},
[54518] = {
["isChanneled"] = true,
["source"] = "Ik'thik Infestor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59831,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temporal Deviation",
["npcID"] = 188067,
},
[417619] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[264038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Thornshaper",
["npcID"] = 131666,
},
[87527] = {
["source"] = "Dustbelcher Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 46695,
},
[71657] = {
["source"] = "Mechachicken",
["event"] = "SPELL_CAST_START",
["npcID"] = 38224,
},
[388952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echoed Lurker",
["npcID"] = 202636,
},
[210875] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[59638] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 31216,
},
[391003] = {
["source"] = "High Shaman Rotknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 197356,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[413529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[155587] = {
["source"] = "Black Iron Dreadweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 77035,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[319334] = {
["source"] = "Jugnug",
["event"] = "SPELL_CAST_START",
["npcID"] = 153583,
},
[388958] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[244665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember of Azzinoth",
["npcID"] = 122712,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[409437] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[204735] = {
["source"] = "Magus Bonechill",
["event"] = "SPELL_CAST_START",
["npcID"] = 103757,
},
[124389] = {
["source"] = "Bloodthirsty Saurok",
["event"] = "SPELL_CAST_START",
["npcID"] = 63279,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[193473] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Tendril",
["npcID"] = 192337,
},
[186306] = {
["source"] = "Daggerbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 90057,
},
[126437] = {
["source"] = "Krik'thik Locust-Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 63974,
},
[155590] = {
["source"] = "Black Iron Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 77036,
},
[264050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[78827] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mankrik",
["npcID"] = 37847,
},
[423775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Scaleguard",
["npcID"] = 211384,
},
[384868] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[144328] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[114663] = {
["source"] = "Brewmaster Blanche",
["event"] = "SPELL_CAST_START",
["npcID"] = 58740,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["npcID"] = 56747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[413538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Myrmidon Solek'vosh",
["npcID"] = 200864,
},
[256955] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2103,
},
[200642] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[448351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[198595] = {
["source"] = "Valarjar Thundercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 95842,
},
[39674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[409445] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[144330] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[194500] = {
["source"] = "Ancient Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 110896,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[378731] = {
["source"] = "Fimbol",
["event"] = "SPELL_CAST_START",
["npcID"] = 200739,
},
[127463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Antiquator",
["npcID"] = 58928,
},
[266106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Bloodswarmer",
["npcID"] = 133835,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[395115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smogswog the Firebreather",
["npcID"] = 193120,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84400,
},
[417641] = {
["source"] = "Felbolg",
["event"] = "SPELL_CAST_START",
["npcID"] = 206189,
},
[256959] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[143309] = {
["encounterName"] = "Immerseus",
["source"] = "Immerseus",
["npcID"] = 71543,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1602,
},
[388974] = {
["isChanneled"] = true,
["source"] = "Territorial Coastling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193163,
},
[388975] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[200647] = {
["source"] = "Felguard Butcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 96494,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[195528] = {
["source"] = "Animated Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 95920,
},
[140239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Colossus",
["npcID"] = 69405,
},
[41467] = {
["encounterName"] = "The Illidari Council",
["source"] = "Gathios the Shatterer",
["npcID"] = 22949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[395121] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baron Crustcore",
["npcID"] = 192266,
},
[117738] = {
["isChanneled"] = true,
["source"] = "Longfang Patriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58889,
},
[391026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[413552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ducks Devil",
["npcID"] = 200751,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[120810] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Spirit",
["npcID"] = 60825,
},
[36604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[440175] = {
["source"] = "Agaricus Festerbloom",
["event"] = "SPELL_CAST_START",
["npcID"] = 215545,
},
[117227] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[421746] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Stonewarmer",
["npcID"] = 210235,
},
[127466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Antiquator",
["npcID"] = 58928,
},
[393079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koroleth",
["npcID"] = 188180,
},
[187341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Commander Igrius",
["npcID"] = 95285,
},
[327552] = {
["source"] = "Doom Shroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 168573,
},
[138196] = {
["source"] = "Lightning Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 69834,
},
[126955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[427894] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[207820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 95451,
},
[79857] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Cryptomancer",
["npcID"] = 44855,
},
[186319] = {
["source"] = "Daggerbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 90057,
},
[140245] = {
["source"] = "Ancient Stone Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 69238,
},
[142293] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whale Shark",
["npcID"] = 71303,
},
[427897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[407420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Runestone",
["npcID"] = 204001,
},
[157652] = {
["source"] = "Auchenai Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 77694,
},
[11969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Elemental",
["npcID"] = 38896,
},
[79858] = {
["source"] = "Challe Tebrilinde",
["event"] = "SPELL_CAST_START",
["npcID"] = 82005,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82682,
},
[376706] = {
["source"] = "Nokhud Stormcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[194513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valkyra Aspirant",
["npcID"] = 92764,
},
[12737] = {
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26727,
},
[384899] = {
["source"] = "Rotbow Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[140248] = {
["source"] = "Ancient Stone Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 69238,
},
[111599] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[256970] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2103,
},
[409473] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[185299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Supplicant",
["npcID"] = 90661,
},
[202705] = {
["source"] = "Forsaken Rector",
["event"] = "SPELL_CAST_START",
["npcID"] = 103453,
},
[138201] = {
["source"] = "Thunder Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 69821,
},
[147416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Candlekeeper",
["npcID"] = 72875,
},
[115183] = {
["isChanneled"] = true,
["source"] = "Ik'thik Bloodrager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59887,
},
[200658] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[136154] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Crimson Fog",
["npcID"] = 69050,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[126958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[111600] = {
["encounterName"] = "Raigonn",
["source"] = "Krik'thik Swarm Bringer",
["npcID"] = 56930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[142298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embercore",
["npcID"] = 70663,
},
[409477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeisethal",
["npcID"] = 203411,
},
[113136] = {
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[7105] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Private Hallan",
["npcID"] = 5045,
},
[195540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtotem Skirmisher",
["npcID"] = 108289,
},
[262092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Thug",
["npcID"] = 130435,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irritated Shadow",
["npcID"] = 226052,
},
[137180] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["encounterID"] = 1577,
["event"] = "SPELL_CAST_START",
["npcID"] = 69465,
},
[268185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refreshment Vendor",
["npcID"] = 136470,
},
[139228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari High Priest",
["npcID"] = 69906,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[186327] = {
["source"] = "Kvaldir Mistcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 93377,
},
[395148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mikrin of the Raging Winds",
["npcID"] = 193173,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["encounterID"] = 1052,
["event"] = "SPELL_CAST_START",
["npcID"] = 44577,
},
[84469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironforge Cabalist",
["npcID"] = 67762,
},
[417675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[140254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Colossus",
["npcID"] = 69405,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[48894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Shaman",
["npcID"] = 26639,
},
[147422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Candlekeeper",
["npcID"] = 72875,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[110579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Golden Hatchling",
["npcID"] = 58386,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["event"] = "SPELL_CAST_START",
["npcID"] = 42333,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["npcID"] = 190294,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[423825] = {
["isChanneled"] = true,
["source"] = "Cracking Sediment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210999,
},
[425873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Torment",
["npcID"] = 209564,
},
[186332] = {
["source"] = "Daggerbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 90057,
},
[448399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[409492] = {
["source"] = "Afflicted Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 204773,
},
[142306] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Shaman Xorenth",
["npcID"] = 70683,
},
[270246] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Adhara White",
["npcID"] = 138279,
},
[48895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Shaman",
["npcID"] = 26639,
},
[41472] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[395161] = {
["source"] = "Treasure-Mad Trambladd",
["event"] = "SPELL_CAST_START",
["npcID"] = 193146,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[436117] = {
["source"] = "Eratus, the Unwoven Paradox",
["event"] = "SPELL_CAST_START",
["npcID"] = 217190,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["npcID"] = 135552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[88056] = {
["isChanneled"] = true,
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45915,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["encounterID"] = 1430,
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[421785] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[116725] = {
["source"] = "Husshun",
["event"] = "SPELL_CAST_START",
["npcID"] = 54925,
},
[417691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[111606] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[11970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Firestarter",
["npcID"] = 46838,
},
[395167] = {
["source"] = "O'nank Shorescour",
["event"] = "SPELL_CAST_START",
["npcID"] = 193118,
},
[432027] = {
["source"] = "Twice-Stinger the Wretched",
["event"] = "SPELL_CAST_START",
["npcID"] = 219271,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[382883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 187224,
},
[25602] = {
["source"] = "Maelgwyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81995,
},
[432030] = {
["source"] = "Sureki Screamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215411,
},
[129013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windward Matriarch",
["npcID"] = 58213,
},
[113143] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["encounterID"] = 1430,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59080,
},
[211936] = {
["source"] = "Glimar Ironfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 91529,
},
[384933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200918,
},
[79868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brainwashed Noble",
["npcID"] = 596,
},
[64767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thorim",
["npcID"] = 32865,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[199652] = {
["source"] = "King Haldor",
["event"] = "SPELL_CAST_START",
["npcID"] = 95843,
},
[41986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angered Soul Fragment",
["npcID"] = 23398,
},
[395177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Massive Magmashell",
["npcID"] = 193152,
},
[413607] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[432037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparklit Buttonmasher",
["npcID"] = 212596,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[79869] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcanist Rathaella",
["npcID"] = 68049,
},
[61184] = {
["source"] = "Krasari Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 58070,
},
[116217] = {
["source"] = "Mist Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 56304,
},
[117241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[68607] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Hummel",
["npcID"] = 36296,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[203750] = {
["source"] = "Duskwatch Warpcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 109652,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[386991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Proto-Drake",
["npcID"] = 194146,
},
[111610] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[88061] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[80382] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Explorer's League Digger",
["event"] = "SPELL_CAST_START",
["npcID"] = 38998,
},
[389040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[374706] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[376754] = {
["isChanneled"] = true,
["source"] = "Erupting Droplet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191983,
},
[395184] = {
["source"] = "Blazing Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 185883,
},
[75775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Scavenger",
["npcID"] = 41146,
},
[168940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'gall",
["npcID"] = 77020,
},
[50690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Inquisitor",
["npcID"] = 27633,
},
[147439] = {
["source"] = "Zesqua",
["event"] = "SPELL_CAST_START",
["npcID"] = 72245,
},
[427950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[129017] = {
["source"] = "Dojani Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 65626,
},
[218087] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cove Raven",
["npcID"] = 110846,
},
[44547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sister of Torment",
["npcID"] = 24697,
},
[448429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[114683] = {
["source"] = "Theramore Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 59596,
},
[395188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontree",
["npcID"] = 188124,
},
[123898] = {
["source"] = "Brewmaster Bo",
["event"] = "SPELL_CAST_START",
["npcID"] = 62491,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44704,
},
[458669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[101885] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Abominable Greench",
["npcID"] = 54499,
},
[69633] = {
["source"] = "Furious Specter",
["event"] = "SPELL_CAST_START",
["npcID"] = 47220,
},
[165871] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Keli'dan the Breaker",
["npcID"] = 79702,
},
[79872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Defender",
["npcID"] = 191112,
},
[427955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[413621] = {
["source"] = "Infinite Watchkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 207177,
},
[413622] = {
["source"] = "Infinite Watchkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 207177,
},
[168944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'gall",
["npcID"] = 77020,
},
[436149] = {
["isChanneled"] = true,
["source"] = "Eratus, the Unwoven Paradox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217190,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["npcID"] = 136541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[401338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sawscale Viper",
["npcID"] = 208691,
},
[129531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo Mo",
["npcID"] = 59805,
},
[393148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[395196] = {
["source"] = "Blazing Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 185883,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[374719] = {
["source"] = "Stonejaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 188128,
},
[387006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Treant",
["npcID"] = 186361,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Forager",
["npcID"] = 196694,
},
[317383] = {
["source"] = "Quilboar Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 150237,
},
[118781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aiyu the Skillet",
["npcID"] = 56520,
},
[140278] = {
["source"] = "Shan'ze Animator",
["event"] = "SPELL_CAST_START",
["npcID"] = 70069,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[199663] = {
["source"] = "Ghostly Councilor",
["event"] = "SPELL_CAST_START",
["npcID"] = 98370,
},
[401342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Oldblood",
["npcID"] = 201054,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Hexthrower",
["npcID"] = 213685,
},
[417725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[427964] = {
["source"] = "Blazing Incarnation",
["event"] = "SPELL_CAST_START",
["npcID"] = 213559,
},
[49668] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Crystal Handler",
["npcID"] = 26627,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1976,
},
[161781] = {
["source"] = "Frostfire Gronnling",
["event"] = "SPELL_CAST_START",
["npcID"] = 79529,
},
[374724] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[59395] = {
["source"] = "Memory of a Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200823,
},
[452539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terror of the Forge",
["npcID"] = 220271,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98965,
},
[51972] = {
["isChanneled"] = true,
["source"] = "Crystalline Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28231,
},
[200689] = {
["source"] = "Vile Soulmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102724,
},
[147448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreboding Flame",
["npcID"] = 73162,
},
[37638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harala the Firespeaker",
["npcID"] = 60030,
},
[194547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yalia Sagewhisper",
["npcID"] = 62825,
},
[264150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornguard",
["npcID"] = 131858,
},
[458688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Volcanic Fury",
["npcID"] = 225896,
},
[427972] = {
["encounterName"] = "Volcoross",
["source"] = "Lieutenant Lunker",
["npcID"] = 211272,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[372683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Whelp",
["npcID"] = 187894,
},
[432068] = {
["source"] = "Waterworks Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 222979,
},
[384970] = {
["isChanneled"] = true,
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186284,
},
[378827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Plunderer",
["npcID"] = 192786,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[214003] = {
["source"] = "Risen Swordsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 102094,
},
[15043] = {
["source"] = "Gold Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 32341,
},
[96259] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shox'tik",
["npcID"] = 66784,
},
[136189] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214348,
},
[417737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whispering Behemoth",
["npcID"] = 207171,
},
[387021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Essence",
["npcID"] = 192238,
},
[53765] = {
["source"] = "Lady Alistra",
["event"] = "SPELL_CAST_START",
["npcID"] = 29195,
},
[374735] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[38663] = {
["source"] = "Valiyaka the Stormbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 89650,
},
[401357] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overloading Defense Matrix",
["npcID"] = 201550,
},
[378832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulking Bruiser",
["npcID"] = 196384,
},
[446409] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[195576] = {
["isChanneled"] = true,
["source"] = "Helarjar Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 115753,
},
[147454] = {
["source"] = "Spirit of Jadefire",
["event"] = "SPELL_CAST_START",
["npcID"] = 72769,
},
[116226] = {
["source"] = "Slingtail Stickypaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 55110,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[419790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[266209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Deathspeaker",
["npcID"] = 134284,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[401361] = {
["source"] = "Dreadful Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 203842,
},
[401362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Heatbinder",
["npcID"] = 200452,
},
[154623] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 77131,
},
[147456] = {
["source"] = "Spirit of Jadefire",
["event"] = "SPELL_CAST_START",
["npcID"] = 72769,
},
[207865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 95451,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[118275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ale-Addled Hozen",
["npcID"] = 57672,
},
[197627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[446416] = {
["source"] = "Honey-fused Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 213697,
},
[142338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 71245,
},
[417748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[186365] = {
["source"] = "The Nameless King",
["event"] = "SPELL_CAST_START",
["npcID"] = 92763,
},
[456656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rabaan",
["npcID"] = 228343,
},
[401368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepstrider Matriarch",
["npcID"] = 203727,
},
[419798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[430037] = {
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[417751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vernon Whitlock",
["npcID"] = 212812,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[417752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[427992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[135174] = {
["source"] = "Sorin Magehand",
["event"] = "SPELL_CAST_START",
["npcID"] = 68587,
},
[378847] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Qalashi Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192787,
},
[389086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Bakar",
["npcID"] = 193741,
},
[401373] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[387039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Goliath",
["npcID"] = 187842,
},
[141318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Headhunter",
["npcID"] = 70473,
},
[39945] = {
["encounterName"] = "Shade of Akama",
["source"] = "Akama",
["npcID"] = 23191,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[444377] = {
["source"] = "Highland Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 226179,
},
[421852] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoreline Gladehart",
["npcID"] = 210283,
},
[391136] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[384993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Filcher",
["npcID"] = 194702,
},
[378850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Destabilized Elemental",
["npcID"] = 181536,
},
[41481] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[135176] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 68609,
},
[84490] = {
["source"] = "Pebble",
["event"] = "SPELL_CAST_START",
["npcID"] = 43116,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[79883] = {
["source"] = "Kavem the Callous",
["event"] = "SPELL_CAST_START",
["npcID"] = 47567,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2824,
},
[252923] = {
["source"] = "Zanchuli Witch-Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122969,
},
[387045] = {
["source"] = "Overseer Xymra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200186,
},
[372711] = {
["isChanneled"] = true,
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186220,
},
[142345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Bolt Totem",
["npcID"] = 71334,
},
[84491] = {
["source"] = "Pebble",
["event"] = "SPELL_CAST_START",
["npcID"] = 43116,
},
[137226] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[440288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roaming Mongrel",
["npcID"] = 218330,
},
[417763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[401382] = {
["source"] = "Past Self",
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214608,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[387049] = {
["source"] = "Memory of a Loyalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 200869,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[395241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Voltweaver",
["npcID"] = 198868,
},
[389098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alia Sunsoar",
["npcID"] = 196737,
},
[401385] = {
["source"] = "Crystal Wormling",
["event"] = "SPELL_CAST_START",
["npcID"] = 205613,
},
[374765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prowling Vulture",
["npcID"] = 193430,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[137229] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[423912] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Stonewarmer",
["npcID"] = 210235,
},
[385005] = {
["source"] = "Primalsworn Furbolg",
["event"] = "SPELL_CAST_START",
["npcID"] = 190738,
},
[389101] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[15620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orc Scout",
["npcID"] = 35894,
},
[387054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soggymaw Crabtrapper",
["npcID"] = 187971,
},
[137230] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[257024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Ceridwen",
["npcID"] = 133307,
},
[409581] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[64776] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arachnopod Destroyer",
["npcID"] = 34183,
},
[121865] = {
["source"] = "Captain Ook",
["event"] = "SPELL_CAST_START",
["npcID"] = 62465,
},
[131088] = {
["source"] = "Mistblade Scale-Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 63179,
},
[41483] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["npcID"] = 22950,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[407535] = {
["source"] = "Horde Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203861,
},
[262145] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Tauren Earthshaker",
["npcID"] = 147173,
},
[139280] = {
["source"] = "Palace Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69510,
},
[462826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Explosive Bomberbot",
["npcID"] = 229706,
},
[448492] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[192522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash'golm",
["npcID"] = 96681,
},
[136209] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["npcID"] = 69017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1574,
},
[313342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Lab Assistant",
["npcID"] = 156908,
},
[405491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Buried Wealth",
["npcID"] = 205330,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[195595] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 99300,
},
[425970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Boughwalker",
["npcID"] = 213576,
},
[395254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Tempestmaker",
["npcID"] = 198878,
},
[257028] = {
["encounterName"] = "Knight Captain Valyri",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2103,
},
[417780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Mekgineer Hologram",
["npcID"] = 207539,
},
[428019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[417781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Mechagon",
["npcID"] = 205309,
},
[66066] = {
["encounterName"] = "Faction Champions",
["event"] = "SPELL_CAST_START",
["source"] = "Melador Valestrider",
["npcID"] = 34469,
},
[134164] = {
["source"] = "Alliance Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 67900,
},
[225289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger Kalira",
["npcID"] = 113084,
},
[288774] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[186382] = {
["source"] = "Malgalor",
["event"] = "SPELL_CAST_START",
["npcID"] = 92608,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[34829] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 86663,
},
[387067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Creation",
["npcID"] = 193214,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[428023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[432120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[411644] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[165907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stribit",
["npcID"] = 79728,
},
[385024] = {
["source"] = "Crystal Snapper Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 205078,
},
[89105] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[41229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Blood Prophet",
["npcID"] = 23237,
},
[165908] = {
["source"] = "Borogahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81043,
},
[200720] = {
["source"] = "Soul Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 101753,
},
[136216] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["encounterID"] = 1574,
["event"] = "SPELL_CAST_START",
["npcID"] = 69017,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[131097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Doren",
["npcID"] = 66052,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[258058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silt Crab",
["npcID"] = 127381,
},
[121870] = {
["source"] = "Ba-Bam",
["event"] = "SPELL_CAST_START",
["npcID"] = 62466,
},
[146456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goro'dan",
["npcID"] = 72964,
},
[385029] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 186246,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[143385] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[444415] = {
["source"] = "Shadegrumble Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 220059,
},
[456702] = {
["source"] = "Rampaging Blight",
["event"] = "SPELL_CAST_START",
["npcID"] = 220273,
},
[164887] = {
["source"] = "Everbloom Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81820,
},
[191508] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[65035] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Vanquished Corruptor Tentacle",
["encounterID"] = 2879,
["event"] = "SPELL_CAST_START",
["npcID"] = 34265,
},
[140315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit Mask",
["npcID"] = 69476,
},
[395273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Stormsentry",
["npcID"] = 196856,
},
[7395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undead Dynamiter",
["npcID"] = 625,
},
[387083] = {
["source"] = "Time-Lost Briarback",
["event"] = "SPELL_CAST_START",
["npcID"] = 187264,
},
[413704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ducks Devil",
["npcID"] = 200751,
},
[374797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Divebeak Ohuna",
["npcID"] = 189373,
},
[385036] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[171033] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blackrock Flamecaster",
["npcID"] = 85644,
},
[61964] = {
["source"] = "Dark Rune Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 32886,
},
[124944] = {
["source"] = "Adjunct Ikkess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62074,
},
[168986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tol'ressa",
["npcID"] = 77902,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[101907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Snowman",
["npcID"] = 54523,
},
[409612] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[141342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Newt",
["npcID"] = 70606,
},
[425995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[218133] = {
["isChanneled"] = true,
["source"] = "Uldgar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 105443,
},
[194584] = {
["source"] = "Tideskorn Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 100446,
},
[139295] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69618,
},
[446474] = {
["source"] = "Congealed Wax-hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223206,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[17162] = {
["source"] = "Sunreaver Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 68760,
},
[17290] = {
["source"] = "Warmage Yurias",
["event"] = "SPELL_CAST_START",
["npcID"] = 67994,
},
[139296] = {
["encounterName"] = "Ji-Kun",
["source"] = "Hatchling",
["npcID"] = 68192,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[387091] = {
["source"] = "Time-Lost Sunseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187239,
},
[133153] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cordfellow Hack",
["npcID"] = 67420,
},
[432142] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[417808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haywire Harvester",
["npcID"] = 205889,
},
[428047] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[446477] = {
["source"] = "Deepsludger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216536,
},
[189467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malace Shade",
["npcID"] = 97090,
},
[61965] = {
["source"] = "Dark Rune Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 32886,
},
[124946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morgrinn Crackfang",
["npcID"] = 50350,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[9734] = {
["source"] = "Barbery the Crazy Cat Lady",
["event"] = "SPELL_CAST_START",
["npcID"] = 82009,
},
[148513] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Kun-Da",
["npcID"] = 71408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[448528] = {
["source"] = "Spitfire Fusetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 211777,
},
[458767] = {
["isChanneled"] = true,
["source"] = "Ravageant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207826,
},
[250901] = {
["source"] = "Night Elf Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 147274,
},
[189469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malace Shade",
["npcID"] = 97090,
},
[134180] = {
["source"] = "Sam the Wise",
["event"] = "SPELL_CAST_START",
["npcID"] = 68128,
},
[442387] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[264233] = {
["encounterName"] = "Merektha",
["source"] = "Egg",
["encounterID"] = 2125,
["event"] = "SPELL_CAST_START",
["npcID"] = 134516,
},
[117780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Longfang Howler",
["npcID"] = 56524,
},
[458770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[121876] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["npcID"] = 62405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[415769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[131110] = {
["source"] = "Doom Bloom",
["event"] = "SPELL_CAST_START",
["npcID"] = 61414,
},
[140325] = {
["source"] = "Creeping Moor Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 67772,
},
[415770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[124948] = {
["source"] = "Adjunct Ikkess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62074,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[63758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Frost Mage",
["npcID"] = 33819,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[264239] = {
["encounterName"] = "Merektha",
["source"] = "Egg",
["encounterID"] = 2125,
["event"] = "SPELL_CAST_START",
["npcID"] = 134517,
},
[65038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vanquished Crusher Tentacle",
["npcID"] = 34264,
},
[415773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interval",
["npcID"] = 206065,
},
[140327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcanital Tula'chek",
["npcID"] = 69475,
},
[432156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Outrider",
["npcID"] = 213095,
},
[124949] = {
["source"] = "Adjunct Ikkess",
["event"] = "SPELL_CAST_START",
["npcID"] = 62074,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[430109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Thunderer",
["npcID"] = 207198,
},
[171044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Cannon",
["npcID"] = 85587,
},
[59663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thexal Deathchill",
["npcID"] = 31775,
},
[393251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Grovetalon",
["npcID"] = 187507,
},
[395299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[458780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[395300] = {
["source"] = "Azure Pathfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 194210,
},
[374823] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[127510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Bird-Haver",
["npcID"] = 62475,
},
[389159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[456735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquellion",
["npcID"] = 220274,
},
[444449] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[121879] = {
["source"] = "Ba-Bam",
["event"] = "SPELL_CAST_START",
["npcID"] = 62466,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[148522] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72958,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[225313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger Velonara",
["npcID"] = 113086,
},
[153642] = {
["source"] = "Black Iron Warcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 76151,
},
[128023] = {
["source"] = "Dread Remora",
["event"] = "SPELL_CAST_START",
["npcID"] = 63353,
},
[393259] = {
["source"] = "Blazing Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 189043,
},
[169001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tol'ressa",
["npcID"] = 77902,
},
[130583] = {
["source"] = "Thunder Hold Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 66395,
},
[139309] = {
["source"] = "Muckbat",
["event"] = "SPELL_CAST_START",
["npcID"] = 70232,
},
[61968] = {
["encounterName"] = "Hodir",
["source"] = "Hodir",
["npcID"] = 32845,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1135,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[442408] = {
["source"] = "Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214649,
},
[214053] = {
["source"] = "Crimson Rockshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 107667,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[423979] = {
["source"] = "Void Cursed Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[71711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calder Gray",
["npcID"] = 37908,
},
[186409] = {
["source"] = "Agnol",
["event"] = "SPELL_CAST_START",
["npcID"] = 105440,
},
[139311] = {
["source"] = "Rotting Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 70224,
},
[456745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Deathweaver",
["npcID"] = 222692,
},
[393265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Ganzaya",
["npcID"] = 188509,
},
[387122] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 186740,
},
[146479] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Goro'dan",
["npcID"] = 72964,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[452651] = {
["source"] = "Oath-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 206844,
},
[79903] = {
["source"] = "Turkina",
["event"] = "SPELL_CAST_START",
["npcID"] = 81996,
},
[113691] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[81439] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[387125] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[462892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[54290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ar Webspinner",
["npcID"] = 29335,
},
[417843] = {
["source"] = "Listless Nae'dra",
["event"] = "SPELL_CAST_START",
["npcID"] = 211164,
},
[387127] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[372793] = {
["isChanneled"] = true,
["source"] = "Flashfrost Tarasek",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188244,
},
[64529] = {
["encounterName"] = "Mimiron",
["source"] = "Leviathan Mk II",
["npcID"] = 34071,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[395319] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[81440] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[442418] = {
["source"] = "Burkhalt",
["event"] = "SPELL_CAST_START",
["npcID"] = 228671,
},
[140339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scout Captain Elsia",
["npcID"] = 69485,
},
[123931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jol'Grum",
["npcID"] = 63312,
},
[124955] = {
["source"] = "Adjunct Ek'vem",
["event"] = "SPELL_CAST_START",
["npcID"] = 62073,
},
[440372] = {
["source"] = "Understalker Tunneler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216249,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["npcID"] = 131383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2112,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[256039] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[199726] = {
["source"] = "King Ranulf",
["event"] = "SPELL_CAST_START",
["npcID"] = 97083,
},
[428089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[372800] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187125,
},
[440376] = {
["source"] = "Scary Skitterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216944,
},
[387135] = {
["source"] = "Primalist Arcblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[32011] = {
["source"] = "Vile Spray",
["event"] = "SPELL_CAST_START",
["npcID"] = 32928,
},
[183345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aranasi Maiden",
["npcID"] = 100244,
},
[193584] = {
["source"] = "Deepbrine Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 97445,
},
[81442] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[196656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malace Shade",
["npcID"] = 97090,
},
[193585] = {
["source"] = "Rockbound Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 102232,
},
[194610] = {
["source"] = "Seacursed Mistmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 97365,
},
[122398] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Mutated Construct",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 62701,
},
[147512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eroded Cliffdweller",
["npcID"] = 72809,
},
[123934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jol'Grum",
["npcID"] = 63312,
},
[192563] = {
["source"] = "Valarjar Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 97197,
},
[444479] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["npcID"] = 218034,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[272469] = {
["source"] = "Abyssal Reach",
["event"] = "SPELL_CAST_START",
["npcID"] = 138538,
},
[417860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoreline Gladehart",
["npcID"] = 210283,
},
[129566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Fire-Warrior",
["npcID"] = 59083,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[41238] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bonechewer Blood Prophet",
["npcID"] = 23237,
},
[370764] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[188470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Noxious Seedling",
["npcID"] = 211410,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199703,
},
[166969] = {
["source"] = "Olin Umberhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 79315,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[370766] = {
["source"] = "Crystal Thrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196117,
},
[446533] = {
["source"] = "Warphorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 219263,
},
[36631] = {
["source"] = "Twilight Pyremaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 42824,
},
[147516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eroded Cliffdweller",
["npcID"] = 72809,
},
[123936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jol'Grum",
["npcID"] = 63312,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[165947] = {
["source"] = "Watch Commander Branson",
["event"] = "SPELL_CAST_START",
["npcID"] = 82136,
},
[374865] = {
["source"] = "Manifested Dreamsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 210320,
},
[417868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[139327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unblinking Eye",
["npcID"] = 70238,
},
[50198] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Mage Hunter Initiate",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26728,
},
[125985] = {
["source"] = "Baolai the Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 63695,
},
[393298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[173116] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 80700,
},
[417872] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[456780] = {
["source"] = "King Splash",
["event"] = "SPELL_CAST_START",
["npcID"] = 220275,
},
[450637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[411730] = {
["source"] = "Molten Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 205611,
},
[123938] = {
["source"] = "Bloodthirsty Saurok",
["event"] = "SPELL_CAST_START",
["npcID"] = 63279,
},
[383062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[9672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Conclave Scorncrow",
["npcID"] = 21385,
},
[118819] = {
["source"] = "Belligerent Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 61183,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[395351] = {
["source"] = "Azure Pathfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 194210,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[141379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[393305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthwarden",
["npcID"] = 193709,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[372828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[110117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Sha",
["npcID"] = 65414,
},
[393306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthwarden",
["npcID"] = 193709,
},
[238648] = {
["source"] = "Doomflame Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 121045,
},
[141380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[393307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[193598] = {
["isChanneled"] = true,
["source"] = "Soulthirster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97630,
},
[22414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 78553,
},
[393308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Flamecaller",
["npcID"] = 201560,
},
[411738] = {
["source"] = "Rashok",
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[389213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[166978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exarch Maladaar",
["npcID"] = 79537,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[84521] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45259,
},
[413787] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[146501] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sra'thik Amber-Master",
["npcID"] = 72929,
},
[411740] = {
["isChanneled"] = true,
["source"] = "Rashok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201320,
},
[142406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Emberguard",
["npcID"] = 70798,
},
[241722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ok'rok Icetouch",
["npcID"] = 121200,
},
[430171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98696,
},
[462936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Medbot",
["npcID"] = 229769,
},
[200768] = {
["source"] = "Crazed Razorbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 95766,
},
[317547] = {
["source"] = "Grunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 153581,
},
[434269] = {
["source"] = "Daetan Swiftplume",
["event"] = "SPELL_CAST_START",
["npcID"] = 218738,
},
[452699] = {
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[374885] = {
["source"] = "Astral Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[122406] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["npcID"] = 62397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[372839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Spearman",
["npcID"] = 191227,
},
[411747] = {
["source"] = "Twisted Elementium",
["event"] = "SPELL_CAST_START",
["npcID"] = 205628,
},
[270453] = {
["source"] = "Geolord Grek'og",
["event"] = "SPELL_CAST_START",
["npcID"] = 151091,
},
[428130] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[198723] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[64535] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["npcID"] = 33670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[436322] = {
["source"] = "Atik",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[186437] = {
["source"] = "The Nameless King",
["event"] = "SPELL_CAST_START",
["npcID"] = 92763,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[180294] = {
["isChanneled"] = true,
["source"] = "Runas the Shamed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90372,
},
[197700] = {
["source"] = "Temple Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 100450,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1500,
},
[374892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mossy Armoredon",
["npcID"] = 193723,
},
[409704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeisethal",
["npcID"] = 203411,
},
[86572] = {
["isChanneled"] = true,
["source"] = "Crimson Shale Spider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44425,
},
[383084] = {
["source"] = "Water Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 190066,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[129575] = {
["source"] = "Korjan Slavemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65638,
},
[121896] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["npcID"] = 62397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[122408] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 62711,
},
[262268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Alchemist",
["npcID"] = 133432,
},
[411754] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[415850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roiling Deathstalker",
["npcID"] = 211242,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[411755] = {
["source"] = "Conduit Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 205478,
},
[413803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Mooncaller",
["npcID"] = 205851,
},
[317559] = {
["source"] = "Bloodbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 153964,
},
[417899] = {
["source"] = "Risen Adventurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205992,
},
[413804] = {
["source"] = "Cenrrrn Cirrgl Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205852,
},
[448616] = {
["source"] = "Hevo'myk",
["event"] = "SPELL_CAST_START",
["npcID"] = 211591,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[413805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Tideshifter",
["npcID"] = 204516,
},
[374898] = {
["source"] = "Time-Lost Chieftain",
["event"] = "SPELL_CAST_START",
["npcID"] = 187266,
},
[255041] = {
["source"] = "Feasting Skyscreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 128434,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[395377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[146511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Amber-Master",
["npcID"] = 72929,
},
[147535] = {
["source"] = "Gu'chi the Swarmbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72909,
},
[395378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[142416] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["npcID"] = 71160,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[249923] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[129577] = {
["isChanneled"] = true,
["source"] = "Captive Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65638,
},
[138321] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["encounterID"] = 1580,
["event"] = "SPELL_CAST_START",
["npcID"] = 69473,
},
[387189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reclaimer Makko",
["npcID"] = 191536,
},
[434288] = {
["source"] = "Daetan Swiftplume",
["event"] = "SPELL_CAST_START",
["npcID"] = 218738,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[145489] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Jun-Wei",
["npcID"] = 73723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[257092] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[64537] = {
["encounterName"] = "Mimiron",
["source"] = "VX-001",
["npcID"] = 33651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[387192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Hammer",
["npcID"] = 209831,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[385145] = {
["source"] = "Time-Lost Raptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 187256,
},
[140371] = {
["source"] = "Sunreaver Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 67661,
},
[389242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormed Blackpaw",
["npcID"] = 193827,
},
[415863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time Slime Prime",
["npcID"] = 202453,
},
[204876] = {
["isChanneled"] = true,
["source"] = "Portal Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102302,
},
[140372] = {
["isChanneled"] = true,
["source"] = "Slateshell Ancient",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67763,
},
[409721] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 202610,
},
[144468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[372862] = {
["source"] = "Primal Waterspout",
["event"] = "SPELL_CAST_START",
["npcID"] = 194219,
},
[244808] = {
["source"] = "Sandclaw Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 145337,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[199758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Immolanth",
["npcID"] = 96682,
},
[200782] = {
["isChanneled"] = true,
["source"] = "Fiendish Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99759,
},
[409724] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[173138] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 80700,
},
[389247] = {
["source"] = "Blacktalon Avenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 187187,
},
[456823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand-Heister Bokk",
["npcID"] = 213679,
},
[79922] = {
["source"] = "Stonecore Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 42808,
},
[144470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[323720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[122413] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Monstrosity",
["encounterID"] = 1499,
["event"] = "SPELL_CAST_START",
["npcID"] = 62711,
},
[288909] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Voidmaster Evenshade",
["npcID"] = 147998,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[200784] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[144471] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[186450] = {
["source"] = "Rotting Jailer",
["event"] = "SPELL_CAST_START",
["npcID"] = 93005,
},
[391298] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maldra Flametongue",
["npcID"] = 196608,
},
[270481] = {
["encounterName"] = "Rezan",
["source"] = "Demonic Tyrant",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[389251] = {
["source"] = "Overgrown Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208626,
},
[81459] = {
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 43537,
},
[385157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pudgy Riverbeast",
["npcID"] = 196017,
},
[387205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Isles Gryphon",
["npcID"] = 199192,
},
[144473] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[140378] = {
["source"] = "Zandalari Firespear",
["event"] = "SPELL_CAST_START",
["npcID"] = 70421,
},
[128046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct G'kkal",
["npcID"] = 63103,
},
[87603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Ranger",
["npcID"] = 70262,
},
[413829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Myrmidon Solek'vosh",
["npcID"] = 200864,
},
[147546] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[417926] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[389258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[139356] = {
["isChanneled"] = true,
["source"] = "Archritualist Kelada",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70243,
},
[403593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[422023] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2820,
},
[456835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungerer of the Deeps",
["npcID"] = 221199,
},
[417928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Amberpaw",
["npcID"] = 207144,
},
[391308] = {
["source"] = "Boolk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191450,
},
[106546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloated Brew Alemental",
["npcID"] = 59518,
},
[148572] = {
["source"] = "Thresher Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 73742,
},
[15497] = {
["source"] = "Athissa",
["event"] = "SPELL_CAST_START",
["npcID"] = 88091,
},
[379023] = {
["source"] = "Grove Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 186380,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[197719] = {
["source"] = "Stonehide Buck",
["event"] = "SPELL_CAST_START",
["npcID"] = 145975,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207800,
},
[176218] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[313497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Street Thug",
["npcID"] = 157434,
},
[462983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automatic Ironstrider",
["npcID"] = 229778,
},
[212054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightglaive the Traitor",
["npcID"] = 90621,
},
[106547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Novice",
["npcID"] = 56395,
},
[66104] = {
["encounterName"] = "Faction Champions",
["event"] = "SPELL_CAST_START",
["source"] = "Anthar Forgemender",
["npcID"] = 34466,
},
[393361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightrot",
["npcID"] = 188707,
},
[144479] = {
["encounterName"] = "Norushen",
["source"] = "Essence of Corruption",
["npcID"] = 71976,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[187482] = {
["source"] = "Rampaging Squallhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 107469,
},
[409744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeisethal",
["npcID"] = 203411,
},
[86582] = {
["source"] = "Scalesworn Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 44221,
},
[78903] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["event"] = "SPELL_CAST_START",
["npcID"] = 42188,
},
[409745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadeisethal",
["npcID"] = 203411,
},
[389268] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187135,
},
[81463] = {
["isChanneled"] = true,
["source"] = "Force of Earth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43537,
},
[262308] = {
["isChanneled"] = true,
["source"] = "Whispering Lurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207175,
},
[256083] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[125490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Searsting",
["npcID"] = 63569,
},
[389270] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187123,
},
[138338] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["encounterID"] = 1580,
["event"] = "SPELL_CAST_START",
["npcID"] = 69473,
},
[147553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Y'Shaarj",
["npcID"] = 73452,
},
[119347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Vanguard",
["npcID"] = 61434,
},
[389271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Munchbeak Turtle",
["npcID"] = 195970,
},
[407701] = {
["isChanneled"] = true,
["source"] = "Pendule",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204030,
},
[387224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Mender",
["npcID"] = 199942,
},
[138339] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["encounterID"] = 1580,
["event"] = "SPELL_CAST_START",
["npcID"] = 69473,
},
[417941] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[411798] = {
["source"] = "Oozing Sludge",
["event"] = "SPELL_CAST_START",
["npcID"] = 205644,
},
[389273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[199772] = {
["source"] = "Valarjar Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 97087,
},
[144483] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Iron Juggernaut",
["npcID"] = 71466,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1600,
},
[389274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prozela Galeshot",
["npcID"] = 193669,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[424087] = {
["source"] = "Zaqali Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[417944] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[383133] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ruby Whelpling",
["npcID"] = 186771,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[238681] = {
["isChanneled"] = true,
["source"] = "Equine Sunrunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 120528,
},
[141413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ice Spike",
["npcID"] = 70988,
},
[124980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morgrinn Crackfang",
["npcID"] = 50350,
},
[136294] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[448663] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[409756] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[86585] = {
["source"] = "Twilight Scalesister",
["event"] = "SPELL_CAST_START",
["npcID"] = 43967,
},
[111670] = {
["source"] = "Scarlet Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 58590,
},
[120373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reclaimer Zuan",
["npcID"] = 61305,
},
[409757] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[387232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Preserver",
["npcID"] = 209202,
},
[389280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crusher",
["npcID"] = 185814,
},
[383137] = {
["isChanneled"] = true,
["source"] = "Ruby Whelpling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186771,
},
[140391] = {
["source"] = "Captain Halu'kal",
["event"] = "SPELL_CAST_START",
["npcID"] = 69482,
},
[198752] = {
["source"] = "Seacursed Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97043,
},
[167012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saberon Ambusher",
["npcID"] = 88813,
},
[450714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[193633] = {
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98275,
},
[194657] = {
["source"] = "Waterlogged Soul Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 99188,
},
[126517] = {
["source"] = "Ravenous Kunchong",
["event"] = "SPELL_CAST_START",
["npcID"] = 63696,
},
[204896] = {
["isChanneled"] = true,
["source"] = "Bloodscent Felhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98813,
},
[164965] = {
["source"] = "Everbloom Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81819,
},
[78907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Starcaller",
["npcID"] = 183994,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[411809] = {
["source"] = "Pahi'rys",
["event"] = "SPELL_CAST_START",
["npcID"] = 205540,
},
[121910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookie",
["npcID"] = 62468,
},
[146536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Honor Guard",
["npcID"] = 72954,
},
[417953] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 206460,
},
[148584] = {
["source"] = "Skunky Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 71908,
},
[123958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Little Liuyang",
["npcID"] = 63313,
},
[456861] = {
["source"] = "Spore-infused Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[159847] = {
["source"] = "Ironmarch Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 76556,
},
[411811] = {
["source"] = "Bubbling Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 205651,
},
[405668] = {
["source"] = "Sundered Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201753,
},
[383143] = {
["source"] = "Blightpaw the Depraved",
["event"] = "SPELL_CAST_START",
["npcID"] = 193128,
},
[417955] = {
["isChanneled"] = true,
["source"] = "Freya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205304,
},
[63775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Pyromancer",
["npcID"] = 33820,
},
[389287] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[147562] = {
["source"] = "Ashleaf Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 72877,
},
[173159] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Botani Roottender",
["npcID"] = 86581,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["npcID"] = 210231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[393385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chalsec of the Earth",
["npcID"] = 193847,
},
[395433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frost Tomb",
["npcID"] = 198878,
},
[454818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anub'ilith",
["npcID"] = 222185,
},
[456866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Priestess",
["npcID"] = 222688,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[200805] = {
["isChanneled"] = true,
["source"] = "Queen's Centurion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96277,
},
[144492] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Iron Juggernaut",
["npcID"] = 71466,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1600,
},
[456868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Priestess",
["npcID"] = 222688,
},
[204901] = {
["source"] = "Portal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 102336,
},
[140397] = {
["source"] = "Mighty Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 69406,
},
[15498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Diviner",
["npcID"] = 66700,
},
[140398] = {
["source"] = "Captain Halu'kal",
["event"] = "SPELL_CAST_START",
["npcID"] = 69482,
},
[128056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mygoness",
["npcID"] = 62766,
},
[120377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakk'rakas",
["npcID"] = 60572,
},
[450728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[170091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorebound Vessel",
["npcID"] = 79125,
},
[66112] = {
["encounterName"] = "Faction Champions",
["event"] = "SPELL_CAST_START",
["source"] = "Velanaa",
["npcID"] = 34465,
},
[141423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Witch Doctor",
["npcID"] = 70464,
},
[192617] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[185450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Sailor",
["npcID"] = 91563,
},
[194665] = {
["isChanneled"] = true,
["source"] = "Ymiron, the Fallen King",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96756,
},
[164973] = {
["source"] = "Everbloom Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81819,
},
[413872] = {
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_START",
["npcID"] = 209059,
},
[129081] = {
["source"] = "Child of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60616,
},
[226406] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102287,
},
[147568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Turtle Hatchling",
["npcID"] = 220524,
},
[115259] = {
["source"] = "Ik'thik Incubator",
["event"] = "SPELL_CAST_START",
["npcID"] = 59890,
},
[37924] = {
["source"] = "7th Fleet Squallshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 58939,
},
[186476] = {
["source"] = "Voldgar",
["event"] = "SPELL_CAST_START",
["npcID"] = 105436,
},
[9739] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[264390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[139379] = {
["source"] = "Palace Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69510,
},
[141427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteleaf Squirt",
["npcID"] = 84655,
},
[303300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infuser",
["npcID"] = 186112,
},
[145523] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Stone Statue",
["npcID"] = 72535,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[448691] = {
["source"] = "Rampaging Deepflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 218657,
},
[147571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Turtle",
["npcID"] = 72764,
},
[141428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechiller Barafu",
["npcID"] = 70468,
},
[456883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gramwharl",
["npcID"] = 220308,
},
[258150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Seaspeaker",
["npcID"] = 130026,
},
[201837] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[383165] = {
["source"] = "Blightpaw the Depraved",
["event"] = "SPELL_CAST_START",
["npcID"] = 193128,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[446646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surek'Tak the Sundered",
["npcID"] = 222190,
},
[117309] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[407740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurantia",
["npcID"] = 203047,
},
[147573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Great Turtle",
["npcID"] = 72765,
},
[134263] = {
["source"] = "Sam the Wise",
["event"] = "SPELL_CAST_START",
["npcID"] = 68128,
},
[79938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cabalist Doombrow",
["npcID"] = 70708,
},
[201839] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[170099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorebound Vessel",
["npcID"] = 79125,
},
[440506] = {
["source"] = "Stream Skipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 213700,
},
[270543] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 145769,
},
[197744] = {
["source"] = "Ashtongue Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 96501,
},
[231532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrestar Demolisher",
["npcID"] = 114845,
},
[258153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Seaspeaker",
["npcID"] = 130026,
},
[272592] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[12747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdant Emerald Lasher",
["npcID"] = 208750,
},
[163957] = {
["source"] = "Fungus Covered Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 80721,
},
[197745] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 96884,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[393411] = {
["source"] = "Chalsec of the Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193847,
},
[144504] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Desperation",
["npcID"] = 71482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[274642] = {
["source"] = "Hoodoo Hexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 136250,
},
[13323] = {
["source"] = "Theramore Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 59596,
},
[123966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Little Liuyang",
["npcID"] = 63313,
},
[175221] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worgen Tracker",
["npcID"] = 93961,
},
[126014] = {
["source"] = "Aetha",
["event"] = "SPELL_CAST_START",
["npcID"] = 58778,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[377033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[66118] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["npcID"] = 34564,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1085,
},
[83012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Filthmonger",
["npcID"] = 69228,
},
[126015] = {
["source"] = "Aetha",
["event"] = "SPELL_CAST_START",
["npcID"] = 58778,
},
[187510] = {
["source"] = "Raging Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 91565,
},
[197749] = {
["source"] = "General Volroth",
["event"] = "SPELL_CAST_START",
["npcID"] = 97370,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[393419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Penumbrus",
["npcID"] = 189289,
},
[80453] = {
["source"] = "Agitated Tunneler",
["event"] = "SPELL_CAST_START",
["npcID"] = 43031,
},
[146556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Honor Guard",
["npcID"] = 72954,
},
[450757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[387277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torch Revenant",
["npcID"] = 201472,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[192631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash'golm",
["npcID"] = 96681,
},
[422090] = {
["source"] = "Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[39207] = {
["source"] = "Vile Spray",
["event"] = "SPELL_CAST_START",
["npcID"] = 32928,
},
[141438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Parker",
["npcID"] = 71326,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[313562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trade Prince Gallywix",
["npcID"] = 157456,
},
[456905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[33832] = {
["isChanneled"] = true,
["source"] = "Crazed Mana-Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26746,
},
[17174] = {
["source"] = "Lingering Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 82029,
},
[171132] = {
["source"] = "Blackfang Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 89747,
},
[272609] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[190586] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "God-King Skovald",
["npcID"] = 92307,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[258162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lago the Drowned",
["npcID"] = 193025,
},
[391380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Windlord",
["npcID"] = 200390,
},
[163966] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimrail Technician",
["npcID"] = 81236,
},
[430288] = {
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[450766] = {
["source"] = "Coalesced Living Honey",
["event"] = "SPELL_CAST_START",
["npcID"] = 217833,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[235638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roottender Treant",
["npcID"] = 209280,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 197671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[393430] = {
["isChanneled"] = true,
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192703,
},
[119875] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["npcID"] = 61485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1447,
},
[137347] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[393432] = {
["isChanneled"] = true,
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190340,
},
[411862] = {
["source"] = "Animation Fluid",
["event"] = "SPELL_CAST_START",
["npcID"] = 203939,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Blaze",
["npcID"] = 207413,
},
[262377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawler Mine",
["npcID"] = 133482,
},
[387290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giant Lasher",
["npcID"] = 194588,
},
[212091] = {
["source"] = "Athissa",
["event"] = "SPELL_CAST_START",
["npcID"] = 88091,
},
[393434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Supplyhand",
["npcID"] = 193790,
},
[199805] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[130115] = {
["source"] = "Apparition of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 66100,
},
[122436] = {
["source"] = "Unstable Keg",
["event"] = "SPELL_CAST_START",
["npcID"] = 62713,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206352,
},
[83017] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[116293] = {
["source"] = "Tortured Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 56444,
},
[272620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Striker",
["npcID"] = 131112,
},
[137350] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[147589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Great Turtle",
["npcID"] = 72765,
},
[119365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorcerer Mogu",
["npcID"] = 61250,
},
[393439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Supplyhand",
["npcID"] = 193790,
},
[130116] = {
["source"] = "Cornan",
["event"] = "SPELL_CAST_START",
["npcID"] = 57213,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[147590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Great Turtle",
["npcID"] = 72765,
},
[387297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Runebinder",
["npcID"] = 186354,
},
[83018] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Magmatooth",
["npcID"] = 45099,
},
[375011] = {
["source"] = "Seismic Force",
["event"] = "SPELL_CAST_START",
["npcID"] = 192745,
},
[258169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[117830] = {
["source"] = "Xiao",
["event"] = "SPELL_CAST_START",
["npcID"] = 54926,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[393443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veshrak of the North",
["npcID"] = 188713,
},
[26262] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Void Tendril",
["npcID"] = 65282,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[450781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Sticker",
["npcID"] = 212629,
},
[428256] = {
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_START",
["npcID"] = 209059,
},
[123974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chagan Firehoof",
["npcID"] = 63318,
},
[116295] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[143497] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[313583] = {
["isChanneled"] = true,
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 156943,
},
[162951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffscar Ravager",
["npcID"] = 85516,
},
[63527] = {
["encounterName"] = "Auriaya",
["source"] = "Storm Tempered Keeper",
["npcID"] = 33699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1131,
},
[418020] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[130630] = {
["isChanneled"] = true,
["source"] = "Gyrocopter Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66299,
},
[272631] = {
["source"] = "Reanimated Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127757,
},
[372971] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[450786] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[145547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 72451,
},
[391402] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2607,
},
[163977] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lernaea Vilescale",
["npcID"] = 85693,
},
[440549] = {
["source"] = "Ragefin Executioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 213408,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[170121] = {
["source"] = "Black Iron Leadbelcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 85188,
},
[114249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Tosser",
["npcID"] = 59416,
},
[440551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Shellbreaker",
["npcID"] = 213598,
},
[393453] = {
["source"] = "Brimstone Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 203215,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["npcID"] = 60708,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[63272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mangrove Ent",
["npcID"] = 33525,
},
[393454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Hauler",
["npcID"] = 201341,
},
[444648] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[128072] = {
["source"] = "Dread Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 63587,
},
[143502] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71515,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[161932] = {
["source"] = "Gangamesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 89653,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[395504] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["npcID"] = 23524,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["encounterID"] = 2836,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213684,
},
[145551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shadowmage",
["npcID"] = 72150,
},
[393458] = {
["source"] = "Sundered Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 199941,
},
[387315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistyvale Firestarter",
["npcID"] = 193969,
},
[120394] = {
["encounterName"] = "Sha of Fear",
["source"] = "Dread Spawn",
["npcID"] = 61003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[129097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norvakess",
["npcID"] = 62324,
},
[389364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[424176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Protector",
["npcID"] = 210637,
},
[270595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rapacious Fathomjaw",
["npcID"] = 129305,
},
[387317] = {
["source"] = "Ruby Culler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190093,
},
[136338] = {
["source"] = "Nalak",
["event"] = "SPELL_CAST_START",
["npcID"] = 69099,
},
[9613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrophyte",
["npcID"] = 73320,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[64041] = {
["source"] = "Shatterspear Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 34309,
},
[144530] = {
["source"] = "Yu'lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 71955,
},
[166032] = {
["source"] = "Ogron Warcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 80775,
},
[393465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[136340] = {
["source"] = "Nalak",
["event"] = "SPELL_CAST_START",
["npcID"] = 69099,
},
[145555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Warshaman",
["npcID"] = 71773,
},
[51243] = {
["source"] = "Greater Ley-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 28276,
},
[128075] = {
["source"] = "Dreadmaw Grouper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63375,
},
[11021] = {
["source"] = "Searing Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 4324,
},
[262412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[379134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonebreath Summoner",
["npcID"] = 201467,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[145557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Healing Tide Totem",
["npcID"] = 72563,
},
[383231] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[139414] = {
["isChanneled"] = true,
["source"] = "Zandalari Soultwister",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69296,
},
[79442] = {
["source"] = "Thundergill",
["event"] = "SPELL_CAST_START",
["npcID"] = 67125,
},
[272654] = {
["source"] = "Mature Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 134686,
},
[454904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surek'Tak the Sundered",
["npcID"] = 222190,
},
[442618] = {
["source"] = "Siege Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 215601,
},
[272655] = {
["source"] = "Mature Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 134686,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[411903] = {
["source"] = "Sundered Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 205656,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[272657] = {
["source"] = "Scaled Krolusk Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 134629,
},
[256138] = {
["source"] = "Dazar'ai Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 127799,
},
[79443] = {
["source"] = "Duneclaw Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 44587,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[383237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Provoking Flame",
["npcID"] = 188697,
},
[426240] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[411906] = {
["source"] = "Sundered Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 205656,
},
[212113] = {
["source"] = "Athissa",
["event"] = "SPELL_CAST_START",
["npcID"] = 88091,
},
[128078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjunct Pivvika",
["npcID"] = 63104,
},
[95826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orgrimmar Wind Rider",
["npcID"] = 51346,
},
[139419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Speaker",
["npcID"] = 69136,
},
[387337] = {
["source"] = "Primalist Earthrazer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203739,
},
[199828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Immolanth",
["npcID"] = 96682,
},
[420102] = {
["source"] = "Captain Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 209057,
},
[145563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Arcweaver",
["npcID"] = 71771,
},
[411912] = {
["source"] = "Sundered Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205673,
},
[128079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadspinner Tender",
["npcID"] = 61981,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[145564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Arcweaver",
["npcID"] = 71771,
},
[126032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracklefang",
["npcID"] = 58768,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203679,
},
[387343] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molded Boulder",
["npcID"] = 190213,
},
[32024] = {
["isChanneled"] = true,
["source"] = "Zandalari Spiritbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69225,
},
[377105] = {
["source"] = "Vault Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 190510,
},
[272670] = {
["source"] = "Sandswept Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 134600,
},
[121937] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Monkey Island Totem",
["npcID"] = 62493,
},
[375058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Arbhog",
["npcID"] = 196897,
},
[204951] = {
["source"] = "Portal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 102336,
},
[156829] = {
["source"] = "Gul'kosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 78437,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[444683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moss-Draped Ramolith",
["npcID"] = 218191,
},
[140448] = {
["isChanneled"] = true,
["source"] = "Slateshell Wanderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69795,
},
[169117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'gall",
["npcID"] = 77020,
},
[145568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Runthak",
["npcID"] = 72191,
},
[175261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icejaw Rockbiter",
["npcID"] = 72297,
},
[125010] = {
["source"] = "Adjunct Tzikzi",
["event"] = "SPELL_CAST_START",
["npcID"] = 62076,
},
[411923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[145569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellscream Demolisher",
["npcID"] = 72194,
},
[63789] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Pyromancer",
["npcID"] = 33820,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[188573] = {
["source"] = "Felskorn Subduer",
["event"] = "SPELL_CAST_START",
["npcID"] = 91759,
},
[389401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beguiled Aquamancer",
["npcID"] = 195960,
},
[426261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[405784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Boarder",
["npcID"] = 203307,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 190630,
},
[102998] = {
["source"] = "Xiao",
["event"] = "SPELL_CAST_START",
["npcID"] = 54926,
},
[35377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugated Firestarter",
["npcID"] = 46838,
},
[145572] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thunderlord Grappler",
["npcID"] = 72273,
},
[172193] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Sharpshooter",
["npcID"] = 149129,
},
[424217] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Sparring Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 216676,
},
[385310] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[373024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[448791] = {
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[409885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201646,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[114262] = {
["encounterName"] = "Lilian Voss",
["source"] = "Darkmaster Gandling",
["npcID"] = 58875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1429,
},
[385313] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[444698] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[432414] = {
["source"] = "Wormcaller Iz'tikrine",
["event"] = "SPELL_CAST_START",
["npcID"] = 214153,
},
[418081] = {
["source"] = "Felhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 206090,
},
[375079] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[426273] = {
["source"] = "Strange Winged Goblin",
["event"] = "SPELL_CAST_START",
["npcID"] = 212517,
},
[128086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kz'Kzik",
["npcID"] = 62832,
},
[424227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of the Moon",
["npcID"] = 211076,
},
[444705] = {
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[373034] = {
["source"] = "Time-Lost Mudskipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187540,
},
[204963] = {
["source"] = "Lord Malgath",
["event"] = "SPELL_CAST_START",
["npcID"] = 102282,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 100486,
},
[79965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lion's Vindicator",
["npcID"] = 69006,
},
[272698] = {
["source"] = "Crazed Incubator",
["event"] = "SPELL_CAST_START",
["npcID"] = 139425,
},
[272699] = {
["source"] = "Crazed Incubator",
["event"] = "SPELL_CAST_START",
["npcID"] = 139425,
},
[440615] = {
["source"] = "Ragefin Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 213405,
},
[125016] = {
["source"] = "Dog",
["event"] = "SPELL_CAST_START",
["npcID"] = 63955,
},
[272700] = {
["source"] = "Faithless Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 134364,
},
[391470] = {
["source"] = "Brimstone Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203948,
},
[139438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Ancestor",
["npcID"] = 69237,
},
[264510] = {
["source"] = "Crazed Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 131849,
},
[389423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieving Conjurer",
["npcID"] = 196388,
},
[262463] = {
["isChanneled"] = true,
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133556,
},
[395567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gravlion",
["npcID"] = 193654,
},
[146606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[393520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[33844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rapidly Grown Treant",
["npcID"] = 209218,
},
[146607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Skullsplitter",
["npcID"] = 72983,
},
[385331] = {
["encounterName"] = "Umbrelskul",
["source"] = "Detonating Crystal",
["npcID"] = 195138,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[411952] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[141488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[327995] = {
["source"] = "Titanic Fungus",
["event"] = "SPELL_CAST_START",
["npcID"] = 202658,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swift Hornstrider",
["npcID"] = 190029,
},
[411954] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Epoch Ripper",
["npcID"] = 205384,
},
[274755] = {
["source"] = "Zian-Ti Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 138969,
},
[424241] = {
["source"] = "Amirdrassil Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207782,
},
[393525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Grom'kar Gunner",
["npcID"] = 77483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[393527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracktooth",
["npcID"] = 187528,
},
[264520] = {
["source"] = "Maddened Survivalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 131850,
},
[389433] = {
["source"] = "Anub'ar Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 206007,
},
[448818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[144563] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["npcID"] = 71734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[197805] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["encounterID"] = 1824,
["event"] = "SPELL_CAST_START",
["npcID"] = 96759,
},
[389435] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[448820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[426295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[387388] = {
["source"] = "Brimstone Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 200178,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[414010] = {
["source"] = "Goblin Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200964,
},
[217260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[264525] = {
["source"] = "Maddened Survivalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 131850,
},
[138422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Brute",
["npcID"] = 69338,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[399678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Shadowflame",
["npcID"] = 203698,
},
[193712] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[137399] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["encounterID"] = 1577,
["event"] = "SPELL_CAST_START",
["npcID"] = 69465,
},
[89697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Cannon",
["npcID"] = 48266,
},
[377154] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Blaze",
["npcID"] = 207413,
},
[116830] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Konk",
["npcID"] = 55509,
},
[395586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[391491] = {
["source"] = "Sootscale the Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 190307,
},
[393539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Choruk",
["npcID"] = 186592,
},
[393540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zhurtan the Riverboiler",
["npcID"] = 188687,
},
[116319] = {
["source"] = "Shade of Ling Heartfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 56441,
},
[176309] = {
["source"] = "Twisted Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 88279,
},
[452926] = {
["source"] = "Zilthara",
["event"] = "SPELL_CAST_START",
["npcID"] = 220270,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[385351] = {
["source"] = "Unstable Arcanogolem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201554,
},
[113760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragrant Lotus",
["npcID"] = 56472,
},
[114272] = {
["source"] = "Sha Echo",
["event"] = "SPELL_CAST_START",
["npcID"] = 59417,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[195765] = {
["source"] = "Yotnar",
["event"] = "SPELL_CAST_START",
["npcID"] = 96175,
},
[418119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Destroyer",
["npcID"] = 207912,
},
[395594] = {
["source"] = "Zurgaz Corebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193680,
},
[120416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[418121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Monstrosity",
["npcID"] = 207923,
},
[428360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firelands Destroyer",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Kagani Nightstrike",
["npcID"] = 24557,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[409931] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[395597] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Destroyer",
["npcID"] = 194402,
},
[31516] = {
["source"] = "Twilight Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 42885,
},
[146621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[128096] = {
["source"] = "Vor'thik Dreadsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 62813,
},
[120929] = {
["source"] = "Abomination of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 61707,
},
[186553] = {
["source"] = "Kvaldir Soulflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 91575,
},
[418125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[197816] = {
["source"] = "Algromon",
["event"] = "SPELL_CAST_START",
["npcID"] = 107593,
},
[387410] = {
["source"] = "Drakonid Poacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200173,
},
[448843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[385363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[387411] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[166077] = {
["source"] = "Blackrock Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 80468,
},
[138433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Brute",
["npcID"] = 69338,
},
[368983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderstep Melter",
["npcID"] = 201465,
},
[123490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enslaved Bonesmasher",
["npcID"] = 63030,
},
[407891] = {
["source"] = "Horde Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204206,
},
[368984] = {
["source"] = "Zaqali Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[63541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Tempered Keeper",
["npcID"] = 33722,
},
[128098] = {
["source"] = "Vor'thik Fear-Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 62814,
},
[317792] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Magus of the Dead",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[113764] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["encounterID"] = 1424,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59223,
},
[147650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[181438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashwyrm",
["npcID"] = 107098,
},
[414038] = {
["source"] = "Aquifon",
["event"] = "SPELL_CAST_START",
["npcID"] = 203468,
},
[418134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zal'kir the Chosen",
["npcID"] = 205865,
},
[169152] = {
["source"] = "Electrified Stingtail",
["event"] = "SPELL_CAST_START",
["npcID"] = 83444,
},
[373084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[138436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Seadragon",
["npcID"] = 69226,
},
[270697] = {
["source"] = "Ashvane Prisoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 147349,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[166081] = {
["source"] = "Blackrock Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81063,
},
[368990] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[414041] = {
["source"] = "Goblin Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200964,
},
[138437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Seadragon",
["npcID"] = 69226,
},
[418137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[411994] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[448854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Drunkard",
["npcID"] = 218655,
},
[446807] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222787,
},
[147653] = {
["source"] = "Tsavo'ka",
["event"] = "SPELL_CAST_START",
["npcID"] = 72808,
},
[381280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uktulut Trainee",
["npcID"] = 193203,
},
[129636] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60603,
},
[260280] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["npcID"] = 129232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[407902] = {
["source"] = "Horde Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204206,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156501,
},
[115814] = {
["source"] = "Greenwood Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 54987,
},
[393569] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[169156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Warlock",
["npcID"] = 77517,
},
[389474] = {
["source"] = "Primalist Flowbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203748,
},
[448859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Drunkard",
["npcID"] = 218655,
},
[387427] = {
["source"] = "Amalgam of Desperation",
["event"] = "SPELL_CAST_START",
["npcID"] = 199423,
},
[166085] = {
["source"] = "Burning Blade Saberguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 81129,
},
[262515] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Skyscorcher",
["npcID"] = 133436,
},
[144584] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["npcID"] = 71983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[438622] = {
["isChanneled"] = true,
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214840,
},
[139465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Ancestor",
["npcID"] = 69237,
},
[389477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezralor",
["npcID"] = 188755,
},
[224447] = {
["isChanneled"] = true,
["source"] = "Acolyte of Sael'orn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 112742,
},
[389478] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[385383] = {
["source"] = "Forge-Keep Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192699,
},
[173254] = {
["source"] = "Watch Commander Branson",
["event"] = "SPELL_CAST_START",
["npcID"] = 82136,
},
[175302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Char the Burning",
["npcID"] = 82311,
},
[130150] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Master Cheng",
["npcID"] = 66180,
},
[387433] = {
["source"] = "Zaphil the Defiant",
["event"] = "SPELL_CAST_START",
["npcID"] = 192223,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[142539] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["npcID"] = 71397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[385386] = {
["source"] = "Menial Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 192702,
},
[399721] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[262522] = {
["source"] = "Dizzy Dina",
["event"] = "SPELL_CAST_START",
["npcID"] = 133585,
},
[200901] = {
["source"] = "Solsten",
["event"] = "SPELL_CAST_START",
["npcID"] = 97219,
},
[130151] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Master Cheng",
["npcID"] = 66180,
},
[418153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderclaw Stalker",
["npcID"] = 207084,
},
[385390] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[68207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Spitter",
["npcID"] = 35896,
},
[405868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowflame Primalist",
["npcID"] = 201218,
},
[154828] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 81769,
},
[393582] = {
["source"] = "Cindershard Igniter",
["event"] = "SPELL_CAST_START",
["npcID"] = 198382,
},
[264574] = {
["source"] = "Sandswept Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 134600,
},
[389487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Heatbinder",
["npcID"] = 200452,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[387440] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[405870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcantrix",
["npcID"] = 200737,
},
[393584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gladehorn Armoredon",
["npcID"] = 196555,
},
[224453] = {
["source"] = "Acolyte of Sael'orn",
["event"] = "SPELL_CAST_START",
["npcID"] = 112738,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[68208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Spitter",
["npcID"] = 35896,
},
[137424] = {
["source"] = "Beastmaster Horaki",
["event"] = "SPELL_CAST_START",
["npcID"] = 69559,
},
[418159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[140496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Haruspex",
["npcID"] = 69297,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[89710] = {
["source"] = "Salhet",
["event"] = "SPELL_CAST_START",
["npcID"] = 48022,
},
[393588] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[260291] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Captain Jalazko",
["npcID"] = 131053,
},
[276868] = {
["source"] = "Zara'thik Mantid",
["event"] = "SPELL_CAST_START",
["npcID"] = 138838,
},
[385399] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192955,
},
[215241] = {
["source"] = "Duskwatch Warpcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 111523,
},
[167119] = {
["source"] = "Swarmleaf Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 85532,
},
[395639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[389496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[395640] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[389497] = {
["source"] = "Eternal Sand",
["event"] = "SPELL_CAST_START",
["npcID"] = 187475,
},
[224457] = {
["source"] = "Acolyte of Sael'orn",
["event"] = "SPELL_CAST_START",
["npcID"] = 112738,
},
[409975] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[395642] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[256198] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[387452] = {
["isChanneled"] = true,
["source"] = "Attentive Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181775,
},
[114285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hateful Ko Ko",
["npcID"] = 59430,
},
[262540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expert Technician",
["npcID"] = 133593,
},
[387453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[256199] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[224459] = {
["source"] = "Acolyte of Sael'orn",
["event"] = "SPELL_CAST_START",
["npcID"] = 112738,
},
[116845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dook Ookem",
["npcID"] = 55622,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 205212,
},
[147669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Elite Grunt",
["npcID"] = 72350,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[424315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 211086,
},
[129132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogujia Soul-Caller",
["npcID"] = 59797,
},
[405886] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["encounterID"] = 2689,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203230,
},
[395648] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[389505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vernon Whitlock",
["npcID"] = 212812,
},
[399744] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[126061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torjar's Bane",
["npcID"] = 58439,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[399746] = {
["source"] = "Warp Crystal",
["event"] = "SPELL_CAST_START",
["npcID"] = 201082,
},
[200913] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[450941] = {
["source"] = "Cinderbee Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[395652] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[457085] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[424322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fiend",
["npcID"] = 223777,
},
[111216] = {
["encounterName"] = "Armsmaster Harlan",
["source"] = "Armsmaster Harlan",
["npcID"] = 58632,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1421,
},
[405893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidesmith Zarviss",
["npcID"] = 200730,
},
[14033] = {
["source"] = "Lorekeeper Vaeldrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 58975,
},
[137435] = {
["source"] = "Beastmaster Horaki",
["event"] = "SPELL_CAST_START",
["npcID"] = 69559,
},
[122479] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 63554,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[147674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Oathguard",
["npcID"] = 72892,
},
[387465] = {
["isChanneled"] = true,
["source"] = "Attentive Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181775,
},
[207059] = {
["source"] = "Hatecoil Harpooner",
["event"] = "SPELL_CAST_START",
["npcID"] = 107447,
},
[224465] = {
["source"] = "Venomhide Shadowspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 112733,
},
[393609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krojek The Shoreprowler",
["npcID"] = 187645,
},
[210131] = {
["source"] = "Killclaw the Terrible",
["event"] = "SPELL_CAST_START",
["npcID"] = 153266,
},
[385419] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[129135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Lory",
["npcID"] = 60198,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[424328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[134366] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[200918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrath-Lord Lekos",
["npcID"] = 97069,
},
[389518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koroleth",
["npcID"] = 188180,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[268702] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Stonefury",
["npcID"] = 130635,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[393615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[89205] = {
["source"] = "Dominance Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 67362,
},
[268703] = {
["source"] = "Charged Dust Devil",
["event"] = "SPELL_CAST_START",
["npcID"] = 134990,
},
[403855] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[446859] = {
["source"] = "Blackblood Coalescence",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[268705] = {
["source"] = "Sand-Crusted Striker",
["event"] = "SPELL_CAST_START",
["npcID"] = 135846,
},
[127601] = {
["source"] = "Kri'chon",
["event"] = "SPELL_CAST_START",
["npcID"] = 63978,
},
[405905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Experiment",
["npcID"] = 203007,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[144608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[455052] = {
["source"] = "Supervisor Radlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[399763] = {
["isChanneled"] = true,
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201089,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156501,
},
[124018] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1507,
},
[448910] = {
["source"] = "Darklost Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 216260,
},
[268709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
},
[369049] = {
["encounterName"] = "Emberon",
["source"] = "Vault Keeper",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 186107,
},
[395670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[128114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greatback Mushan",
["npcID"] = 62029,
},
[448912] = {
["source"] = "Shadowguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 216263,
},
[369050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Initiate",
["npcID"] = 187817,
},
[144610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[383385] = {
["source"] = "Filth Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185656,
},
[164064] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Sparring Death Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 216725,
},
[387481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Bruiser",
["npcID"] = 187285,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[50495] = {
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[444820] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[418200] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[395675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embar Firepath",
["npcID"] = 187767,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[369055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Crustshaper",
["npcID"] = 186638,
},
[399086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[458795] = {
["source"] = "Ravageant",
["event"] = "SPELL_CAST_START",
["npcID"] = 207826,
},
[386555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
},
[418202] = {
["source"] = "Infinite Riftmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 208698,
},
[427567] = {
["isChanneled"] = true,
["source"] = "Raszageth's Last Breath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209912,
},
[389534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[448155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[423479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[458228] = {
["source"] = "Anub'ata",
["event"] = "SPELL_CAST_START",
["npcID"] = 219855,
},
[397726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 188100,
},
[375201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bright Gustfeather",
["npcID"] = 195002,
},
[388688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garlic-Breathed Hydra",
["npcID"] = 224751,
},
[32417] = {
["isChanneled"] = true,
["source"] = "Zan'thik Manipulator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65274,
},
[295028] = {
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 227355,
},
[81530] = {
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 43537,
},
[401205] = {
["source"] = "Oblivious Shaleshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 217123,
},
[140519] = {
["isChanneled"] = true,
["source"] = "Sentry Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70581,
},
[83066] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[460595] = {
["source"] = "Irritated Salvager",
["event"] = "SPELL_CAST_START",
["npcID"] = 220471,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[50496] = {
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[135932] = {
["source"] = "Concentrated Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 68259,
},
[456171] = {
["source"] = "Grimlurk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223091,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[119414] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1431,
},
[444408] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["npcID"] = 218022,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[431935] = {
["source"] = "Burkhalt",
["event"] = "SPELL_CAST_START",
["npcID"] = 228671,
},
[418208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Prophet",
["npcID"] = 206474,
},
[144616] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Siege Engineer",
["npcID"] = 71984,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1623,
},
[448441] = {
["source"] = "Gorloc Springcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 218650,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[114807] = {
["encounterName"] = "Brother Korloff",
["source"] = "Brother Korloff",
["encounterID"] = 1424,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59223,
},
[7162] = {
["source"] = "Medic Tamberlyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 5199,
},
[455069] = {
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[116343] = {
["source"] = "Nahassa",
["event"] = "SPELL_CAST_START",
["npcID"] = 60203,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200913,
},
[272820] = {
["source"] = "Imbued Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 134599,
},
[405924] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[458692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Volcanic Fury",
["npcID"] = 225896,
},
[118903] = {
["source"] = "Glintrok Hexxer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61216,
},
[181477] = {
["isChanneled"] = true,
["source"] = "Nightfallen Construct",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 109229,
},
[446328] = {
["source"] = "Fog Form",
["event"] = "SPELL_CAST_START",
["npcID"] = 213953,
},
[14034] = {
["source"] = "Fireguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 8909,
},
[135403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Joan Lorraine",
["npcID"] = 67530,
},
[456653] = {
["source"] = "Rabaan",
["event"] = "SPELL_CAST_START",
["npcID"] = 228343,
},
[306697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodeyes",
["npcID"] = 150721,
},
[143423] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[127870] = {
["source"] = "Muckscale Flesh-Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 64194,
},
[387497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Destroyer",
["npcID"] = 187244,
},
[452910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zilthara",
["npcID"] = 220270,
},
[134380] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[135404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Joan Lorraine",
["npcID"] = 67530,
},
[460587] = {
["source"] = "Vindictive Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 220472,
},
[452985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Marshal Tekhzok",
["npcID"] = 215987,
},
[413123] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[440137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Sharpclaw",
["npcID"] = 221470,
},
[456292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harvester Qixt",
["npcID"] = 216050,
},
[381356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Luddy Quicksnap",
["npcID"] = 193292,
},
[399786] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hunting Rock Viper",
["npcID"] = 201117,
},
[459171] = {
["source"] = "Val'kyr Shadowguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 227940,
},
[456125] = {
["source"] = "Agitated Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 215830,
},
[430503] = {
["source"] = "Doomshadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 208029,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["npcID"] = 201792,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 99868,
},
[387501] = {
["isChanneled"] = true,
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 181775,
},
[157931] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[458720] = {
["source"] = "Awakened Volcanic Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 225896,
},
[401209] = {
["source"] = "Oblivious Shaleshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 217123,
},
[456862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand-Heister Bokk",
["npcID"] = 213679,
},
[444145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Siege Artillery",
["npcID"] = 224521,
},
[129917] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60601,
},
[369073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlehorn Pyrhus",
["npcID"] = 190986,
},
[395694] = {
["source"] = "Primalist Shocktrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199037,
},
[458775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Sulfuric Devastator",
["npcID"] = 225894,
},
[458657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[440222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[201959] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102295,
},
[456847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand-Heister Bokk",
["npcID"] = 213679,
},
[32674] = {
["source"] = "Recalled Reanimated Crusader",
["event"] = "SPELL_CAST_START",
["npcID"] = 226096,
},
[131178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pandaren Scarecrow",
["npcID"] = 66768,
},
[197864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skyfire Gryphon Rider",
["npcID"] = 91414,
},
[198888] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 99891,
},
[417215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[33860] = {
["source"] = "Theramore Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 59596,
},
[446000] = {
["source"] = "Razormouth Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214081,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["npcID"] = 33136,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[276928] = {
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_START",
["npcID"] = 133556,
},
[118906] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dojani Reclaimer",
["npcID"] = 58117,
},
[313526] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dax Blitzblaster",
["npcID"] = 157455,
},
[124797] = {
["source"] = "Shan'ze Cloudrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 63895,
},
[142576] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["npcID"] = 71152,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[129145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Lory",
["npcID"] = 60200,
},
[412081] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[260322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nol'ixwan",
["npcID"] = 130741,
},
[138481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skumblade Saur-Priest",
["npcID"] = 69229,
},
[377270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffdrip Wavemender",
["npcID"] = 189814,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[450182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
[445882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonehoofed Hog",
["npcID"] = 214928,
},
[385462] = {
["source"] = "Rellen, The Learned",
["event"] = "SPELL_CAST_START",
["npcID"] = 190949,
},
[458638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["npcID"] = 29307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[138044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warbringer",
["npcID"] = 69769,
},
[73097] = {
["source"] = "Volcanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 38855,
},
[140530] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Haruspex",
["npcID"] = 69297,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[448944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[463052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[456748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Deathweaver",
["npcID"] = 222692,
},
[340414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Research",
["npcID"] = 202446,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[450435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Y'tekhi",
["npcID"] = 215660,
},
[428468] = {
["source"] = "Shuja Grimaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 214390,
},
[198892] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 99891,
},
[150770] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Subjugated Gronn",
["npcID"] = 85653,
},
[462802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Machinist",
["npcID"] = 229695,
},
[117372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viseclaw Fisher",
["npcID"] = 58880,
},
[143210] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["npcID"] = 71479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[187630] = {
["source"] = "Felskorn Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 91244,
},
[170738] = {
["source"] = "Undermage Kesalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 85496,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[51779] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 94737,
},
[257254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Splintered Servitor",
["npcID"] = 131547,
},
[377277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volethi",
["npcID"] = 200727,
},
[395707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[430519] = {
["isChanneled"] = true,
["source"] = "Doomshadow",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208029,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[444743] = {
["source"] = "Risen Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 221760,
},
[428472] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Molten Scorpid",
["npcID"] = 210295,
},
[124028] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[431544] = {
["source"] = "Stalwart Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214935,
},
[433766] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[125564] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maki Waterblade",
["npcID"] = 64280,
},
[373184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Luddy Quicksnap",
["npcID"] = 193292,
},
[123260] = {
["source"] = "Anduin Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 59608,
},
[63554] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mangrove Ent",
["npcID"] = 33525,
},
[456351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneseer Hookjaw",
["npcID"] = 213805,
},
[389567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavering Snapdragon",
["npcID"] = 195668,
},
[120445] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shek'zeer Bladesworn",
["npcID"] = 62563,
},
[459191] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[448787] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[137463] = {
["source"] = "Guardian Tak'u",
["event"] = "SPELL_CAST_START",
["npcID"] = 69336,
},
[458193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurker of the Deeps",
["npcID"] = 220285,
},
[418237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[143356] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber Parasite",
["npcID"] = 71578,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[96127] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Troggzor the Earthinator",
["npcID"] = 43456,
},
[458634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2901,
},
[144631] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[458434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[88170] = {
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 45924,
},
[147703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[374544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[156854] = {
["isChanneled"] = true,
["source"] = "Gul'kosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78437,
},
[375237] = {
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 190776,
},
[88194] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[186420] = {
["source"] = "The Nameless King",
["event"] = "SPELL_CAST_START",
["npcID"] = 92763,
},
[414145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ducks Devil",
["npcID"] = 200751,
},
[146680] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blackfuse Sellsword",
["npcID"] = 72986,
},
[418241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[420289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Conqueror",
["npcID"] = 207040,
},
[124030] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[457149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shipwright Isaebela",
["npcID"] = 219801,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[440231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[137466] = {
["source"] = "Guardian Tak'u",
["event"] = "SPELL_CAST_START",
["npcID"] = 69336,
},
[138490] = {
["source"] = "Skumblade Saur-Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 69229,
},
[148730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Brewmaster",
["npcID"] = 73018,
},
[148729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Windwalker",
["npcID"] = 73021,
},
[427444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[191732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[451008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Knight",
["npcID"] = 222820,
},
[420292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Conqueror",
["npcID"] = 207040,
},
[145658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomlord",
["npcID"] = 72564,
},
[383433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Smoldering Colossus",
["npcID"] = 194147,
},
[49091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Harpooner",
["npcID"] = 26692,
},
[420293] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tempest Conqueror",
["npcID"] = 207040,
},
[183135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Questioner Arev'naal",
["npcID"] = 89673,
},
[194284] = {
["source"] = "Greywatch Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 109635,
},
[448599] = {
["isChanneled"] = true,
["source"] = "Hevo'myk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211591,
},
[144635] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[434281] = {
["encounterName"] = "Reformed Fury",
["source"] = "Reformed Fury",
["npcID"] = 218034,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2563,
},
[86911] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[448485] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[174328] = {
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[147185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Defender",
["npcID"] = 73191,
},
[448864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[130060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monk Trainee",
["npcID"] = 66101,
},
[405962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronogg the Bully",
["npcID"] = 203386,
},
[122496] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 63554,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[140541] = {
["source"] = "Arcanital Ra'kul",
["event"] = "SPELL_CAST_START",
["npcID"] = 69300,
},
[452014] = {
["source"] = "Faceless One",
["event"] = "SPELL_CAST_START",
["npcID"] = 223119,
},
[98705] = {
["source"] = "Magister Brasael",
["event"] = "SPELL_CAST_START",
["npcID"] = 68751,
},
[279003] = {
["source"] = "Horde Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 142082,
},
[125568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maki Waterblade",
["npcID"] = 64280,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[426145] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[63556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mangrove Ent",
["npcID"] = 33525,
},
[7978] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Goblin Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 35333,
},
[389583] = {
["source"] = "Militant Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 199739,
},
[375249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nubagh",
["npcID"] = 195514,
},
[452013] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[425392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[139498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Spider",
["npcID"] = 68248,
},
[122497] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 63554,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[197880] = {
["source"] = "Bonespeaker Runeaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 93066,
},
[198904] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[33840] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Landquaker Bull",
["npcID"] = 37556,
},
[409009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[448897] = {
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_START",
["npcID"] = 211582,
},
[391634] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[118914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guard",
["npcID"] = 61252,
},
[456198] = {
["source"] = "Smaragthr",
["event"] = "SPELL_CAST_START",
["npcID"] = 220362,
},
[438618] = {
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214840,
},
[458406] = {
["source"] = "Droghung",
["event"] = "SPELL_CAST_START",
["npcID"] = 221316,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[440205] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Creeping Shadow",
["npcID"] = 226062,
},
[455065] = {
["source"] = "Arax'ne",
["event"] = "SPELL_CAST_START",
["npcID"] = 217465,
},
[146688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Cannoneer",
["npcID"] = 72365,
},
[73864] = {
["source"] = "Pygmy Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 48041,
},
[181500] = {
["source"] = "Withered Exile",
["event"] = "SPELL_CAST_START",
["npcID"] = 90379,
},
[81521] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 69616,
},
[45895] = {
["source"] = "Urgev the Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 93401,
},
[135426] = {
["source"] = "Kor'kron Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 68368,
},
[420306] = {
["source"] = "Primalist Chainmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 211058,
},
[427583] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[214001] = {
["source"] = "Risen Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102095,
},
[393686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turboris",
["npcID"] = 187886,
},
[388529] = {
["source"] = "Seabreaker Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 192931,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210149,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[175358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Wolf",
["npcID"] = 73325,
},
[425388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[144642] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[452567] = {
["source"] = "Oath-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 206844,
},
[444473] = {
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[453073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sweetspark the Oozeful",
["npcID"] = 220883,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[175359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Wolf",
["npcID"] = 73325,
},
[418262] = {
["isChanneled"] = true,
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208728,
},
[456851] = {
["source"] = "Spore-infused Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 221217,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[204028] = {
["source"] = "Portal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 102337,
},
[440266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roaming Mongrel",
["npcID"] = 218330,
},
[440622] = {
["source"] = "Ragefin Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 213405,
},
[456136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkshade",
["npcID"] = 218452,
},
[383452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rugren",
["npcID"] = 201563,
},
[80009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aarko",
["npcID"] = 77664,
},
[452156] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[444296] = {
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[424408] = {
["source"] = "Bodwin",
["event"] = "SPELL_CAST_START",
["npcID"] = 209153,
},
[444722] = {
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[98951] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[446776] = {
["source"] = "War Lynx",
["event"] = "SPELL_CAST_START",
["npcID"] = 206699,
},
[83593] = {
["source"] = "High Priestess Lorthuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 43837,
},
[456101] = {
["source"] = "Voidstone Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 221307,
},
[456438] = {
["source"] = "Cursed Miner",
["event"] = "SPELL_CAST_START",
["npcID"] = 213565,
},
[115065] = {
["source"] = "Slingtail Mudseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 55193,
},
[126596] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blade",
["npcID"] = 61010,
},
[69771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Dragon",
["npcID"] = 27608,
},
[181505] = {
["source"] = "Withered Leyhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 108197,
},
[381408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crawler",
["npcID"] = 185810,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["npcID"] = 201790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[138467] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Appraising Eye",
["npcID"] = 67858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[432125] = {
["source"] = "Kaheti Silk Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 221327,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[456910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[73867] = {
["isChanneled"] = true,
["source"] = "KTC Oil Bot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39376,
},
[98952] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[129656] = {
["source"] = "Kracor",
["event"] = "SPELL_CAST_START",
["npcID"] = 67128,
},
[257785] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[374699] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[147202] = {
["isChanneled"] = true,
["source"] = "Dragonmaw Bonecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72354,
},
[140400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[412129] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[119360] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1500,
},
[103560] = {
["isChanneled"] = true,
["source"] = "An Windfur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55369,
},
[431714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[425381] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Firelands Flameguard",
["npcID"] = 210290,
},
[453084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sweetspark the Oozeful",
["npcID"] = 220883,
},
[456346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguishing Nightmare",
["npcID"] = 214415,
},
[123767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Infested Yaungol",
["npcID"] = 68241,
},
[164102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Laborer",
["npcID"] = 81235,
},
[98953] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["npcID"] = 52409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1203,
},
[427428] = {
["source"] = "Greedy Gessie",
["event"] = "SPELL_CAST_START",
["npcID"] = 209936,
},
[452730] = {
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[459229] = {
["source"] = "The Broken Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 214368,
},
[210177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Isel the Hammer",
["npcID"] = 94413,
},
[448644] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[452314] = {
["source"] = "Kol Bruncrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 213658,
},
[369129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Modak Flamespit",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[111752] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[120455] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[200963] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fel Shocktrooper",
["npcID"] = 92776,
},
[462859] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[123833] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1507,
},
[424420] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[450509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[197892] = {
["source"] = "Bonespeaker Runeaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 93066,
},
[440207] = {
["source"] = "Voidstone Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[424421] = {
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[110968] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[420326] = {
["source"] = "Flamebound Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 206900,
},
[260349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ten'gor",
["npcID"] = 130713,
},
[444692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramolith Curlhorn",
["npcID"] = 221672,
},
[147723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Fire-Watcher",
["npcID"] = 72894,
},
[412136] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[424423] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Sergeant Shaynemail",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[451044] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[387564] = {
["source"] = "Conjured Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[440806] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2946,
["event"] = "SPELL_CAST_START",
["npcID"] = 219676,
},
[385517] = {
["source"] = "Rotbow Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 187021,
},
[395756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Wingscorcher",
["npcID"] = 197798,
},
[81317] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Troggzor the Earthinator",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43456,
},
[83597] = {
["source"] = "High Priestess Lorthuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 43837,
},
[396709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[136462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Squallshaper",
["npcID"] = 71367,
},
[456788] = {
["isChanneled"] = true,
["source"] = "King Splash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220275,
},
[268797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Alchemist",
["npcID"] = 133432,
},
[121468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 61177,
},
[111242] = {
["isChanneled"] = true,
["source"] = "Groundbreaker Brojai",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58224,
},
[278961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Lasher",
["npcID"] = 133870,
},
[440185] = {
["source"] = "Rustul Titancap",
["event"] = "SPELL_CAST_START",
["npcID"] = 213115,
},
[446430] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Touched Elemental",
["npcID"] = 212400,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[140526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshcrafter Hoku",
["npcID"] = 69435,
},
[391050] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[120458] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[134920] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[276991] = {
["source"] = "Ogre Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156676,
},
[446483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Sludger",
["npcID"] = 216515,
},
[420334] = {
["source"] = "Keeper Adranas",
["event"] = "SPELL_CAST_START",
["npcID"] = 209931,
},
[145679] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72276,
},
[59209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Inquisitor",
["npcID"] = 27633,
},
[459242] = {
["source"] = "Nix'k the Wicked",
["event"] = "SPELL_CAST_START",
["npcID"] = 219749,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[414192] = {
["source"] = "Krrrn Trr Cryomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 204451,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[279041] = {
["source"] = "High Tinker Mekkatorque",
["event"] = "SPELL_CAST_START",
["npcID"] = 146589,
},
[395763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Flameslinger",
["npcID"] = 196336,
},
[121994] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[459246] = {
["source"] = "The Broken Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 214368,
},
[144606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Niuzao",
["npcID"] = 71954,
},
[181516] = {
["source"] = "Withered Outcast",
["event"] = "SPELL_CAST_START",
["npcID"] = 91157,
},
[381430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sedentary Sediment",
["npcID"] = 194284,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[377335] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[144657] = {
["encounterName"] = "Norushen",
["source"] = "Titanic Corruption",
["npcID"] = 72051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[161509] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[204042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo'arg Crusher",
["npcID"] = 103176,
},
[393718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster Amaa",
["npcID"] = 188715,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[50476] = {
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[126842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Regenerator",
["npcID"] = 63681,
},
[418292] = {
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 208728,
},
[432116] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleclaw Knight",
["npcID"] = 213833,
},
[137491] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Suen",
["encounterID"] = 1560,
["event"] = "SPELL_CAST_START",
["npcID"] = 68904,
},
[132031] = {
["source"] = "Lyalia",
["event"] = "SPELL_CAST_START",
["npcID"] = 59849,
},
[377338] = {
["source"] = "Aqualing",
["event"] = "SPELL_CAST_START",
["npcID"] = 190406,
},
[419229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Patches",
["npcID"] = 215147,
},
[455153] = {
["source"] = "Abyssal Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216031,
},
[116364] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1390,
},
[124284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Urang",
["npcID"] = 60725,
},
[390560] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[456746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Earwax",
["npcID"] = 213195,
},
[59210] = {
["source"] = "Azure Ley-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 27636,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[140564] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Possessed Blood",
["npcID"] = 69436,
},
[147500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eroded Cliffdweller",
["npcID"] = 72809,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[377341] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[121484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hozen Groundpounder",
["npcID"] = 55470,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[427616] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[381438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tormented Steam",
["npcID"] = 188696,
},
[383236] = {
["source"] = "Shimmerfin Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 220249,
},
[392955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korthrox the Destroyer",
["npcID"] = 183422,
},
[453110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascended Webfriar",
["npcID"] = 219022,
},
[385536] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[375296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulking Bruiser",
["npcID"] = 196384,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Eagle",
["npcID"] = 192329,
},
[420347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Archdruid",
["npcID"] = 211066,
},
[143420] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Ironblade",
["npcID"] = 71516,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[447955] = {
["source"] = "Elusive Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 223031,
},
[451064] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["npcID"] = 204918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[113806] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Treant",
["npcID"] = 63467,
},
[449017] = {
["isChanneled"] = true,
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215600,
},
[136473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hodgson",
["npcID"] = 71327,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[431552] = {
["source"] = "Shadow Vanguard Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 212435,
},
[158997] = {
["source"] = "Enraged Gembiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 81729,
},
[258313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Jailer",
["npcID"] = 135699,
},
[449941] = {
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clotweave Widow",
["npcID"] = 216193,
},
[59211] = {
["source"] = "Azure Ring Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 27638,
},
[369157] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venomsprout Shootling",
["npcID"] = 188948,
},
[428542] = {
["source"] = "Naz'jar Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 40577,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[432638] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[393731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flayfist",
["npcID"] = 187505,
},
[444925] = {
["source"] = "Drifting Sporebloom",
["event"] = "SPELL_CAST_START",
["npcID"] = 214961,
},
[165985] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 81240,
},
[449021] = {
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[450546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[257827] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2102,
},
[220926] = {
["source"] = "Eredar Enslaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97176,
},
[277011] = {
["isChanneled"] = true,
["source"] = "Moon Priestess Liara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 152729,
},
[119668] = {
["source"] = "Unga Treasure-Hider",
["event"] = "SPELL_CAST_START",
["npcID"] = 60357,
},
[446325] = {
["source"] = "Island Proudfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 227198,
},
[434589] = {
["source"] = "Overfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[390554] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferna the Bound",
["npcID"] = 186735,
},
[196883] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[415253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[198931] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[285204] = {
["source"] = "A.F.M.O.D.",
["event"] = "SPELL_CAST_START",
["npcID"] = 148769,
},
[393735] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Champion Choruk",
["npcID"] = 186592,
},
[31598] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pao-kun the Pyromancer",
["npcID"] = 60031,
},
[450393] = {
["source"] = "Obstorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 217082,
},
[448384] = {
["source"] = "Flamekeeper Graz",
["event"] = "SPELL_CAST_START",
["npcID"] = 219279,
},
[426500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[395784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[389096] = {
["source"] = "Alia Sunsoar",
["event"] = "SPELL_CAST_START",
["npcID"] = 196737,
},
[432127] = {
["source"] = "Shadow Vanguard Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 214901,
},
[449937] = {
["source"] = "Bloodmaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 219264,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 207639,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[274968] = {
["source"] = "Zian-Ti Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 138969,
},
[59212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Spellbinder",
["npcID"] = 27635,
},
[196885] = {
["source"] = "Skjal",
["event"] = "SPELL_CAST_START",
["npcID"] = 99307,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[274969] = {
["source"] = "Zian-Ti Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 126185,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[427710] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[387596] = {
["source"] = "Risen Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[162074] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodtotem Flameheart",
["npcID"] = 100435,
},
[431612] = {
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[183005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Rose Apothecary",
["npcID"] = 93496,
},
[379406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 189472,
},
[198934] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[125365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scritch",
["npcID"] = 50831,
},
[148582] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Xiang-Lin",
["npcID"] = 73725,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[136478] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[274972] = {
["source"] = "Zian-Ti Cloudbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 138972,
},
[449031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[395284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rugren",
["npcID"] = 201563,
},
[111762] = {
["source"] = "Scholomance Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58823,
},
[136374] = {
["source"] = "Zandalari Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 69136,
},
[450197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[449034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[431639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Saboteur",
["npcID"] = 212715,
},
[391696] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2605,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["npcID"] = 194990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[392692] = {
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221743,
},
[445935] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222265,
},
[142623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hekima the Wise",
["npcID"] = 70544,
},
[418318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 206463,
},
[420125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roth the Earthwound",
["npcID"] = 226300,
},
[372147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[424462] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[130417] = {
["source"] = "Thunder Hold Infantryman",
["event"] = "SPELL_CAST_START",
["npcID"] = 66285,
},
[98393] = {
["source"] = "Enlisted Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67633,
},
[450176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slasher",
["npcID"] = 208243,
},
[270474] = {
["source"] = "Remembered Thornweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 221745,
},
[458746] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[430013] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[162078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Blademaster",
["npcID"] = 85457,
},
[110963] = {
["source"] = "Scarlet Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[205081] = {
["source"] = "Wrathlord Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 102397,
},
[138976] = {
["source"] = "Windweaver Akil'amon",
["event"] = "SPELL_CAST_START",
["npcID"] = 70080,
},
[459155] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[142625] = {
["source"] = "Wily Woodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 61155,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[395797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Frostsculptor",
["npcID"] = 198424,
},
[396689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[345495] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Frothing Pustule",
["npcID"] = 175519,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2879,
},
[393750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taresh",
["npcID"] = 188711,
},
[15493] = {
["source"] = "Remembered Crusader",
["event"] = "SPELL_CAST_START",
["npcID"] = 213564,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["encounterID"] = 1836,
["event"] = "SPELL_CAST_START",
["npcID"] = 96512,
},
[128658] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironforge Cabalist",
["npcID"] = 67762,
},
[387608] = {
["isChanneled"] = true,
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195842,
},
[428563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Flametender",
["npcID"] = 213913,
},
[260372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Skyscorcher",
["npcID"] = 133436,
},
[456772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[125995] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 58771,
},
[428564] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ancient Core Hound",
["npcID"] = 210290,
},
[125971] = {
["source"] = "Tankiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 61006,
},
[121282] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["npcID"] = 62205,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1464,
},
[139010] = {
["source"] = "Mumta",
["event"] = "SPELL_CAST_START",
["npcID"] = 69664,
},
[61730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowplain Disciple",
["npcID"] = 26705,
},
[191192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Runetwister",
["npcID"] = 96215,
},
[140531] = {
["source"] = "Hu'seng the Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69483,
},
[129496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lupello",
["npcID"] = 56357,
},
[181535] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[107938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wascally Wirmen",
["npcID"] = 59655,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[73605] = {
["source"] = "Assistant Greely",
["event"] = "SPELL_CAST_START",
["npcID"] = 39199,
},
[15665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekin Torcher",
["npcID"] = 9778,
},
[143445] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["npcID"] = 71529,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1599,
},
[106646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flying Snow",
["npcID"] = 56473,
},
[387613] = {
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[373279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thing From Beyond",
["npcID"] = 189988,
},
[129427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Viseclaw",
["npcID"] = 61091,
},
[445830] = {
["source"] = "Mead-Mad Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 222898,
},
[453142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Marauder",
["npcID"] = 219034,
},
[446519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shalehorn Impaler",
["npcID"] = 216970,
},
[139205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[154331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grove Cultivator Kados",
["npcID"] = 133104,
},
[125997] = {
["source"] = "Battleworn Paratrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63764,
},
[47696] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[268846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weapons Tester",
["npcID"] = 136934,
},
[209182] = {
["isChanneled"] = true,
["source"] = "Runeseer Faljar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 93093,
},
[15232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uruk",
["npcID"] = 62613,
},
[145702] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["npcID"] = 71385,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[450424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealed Wax-hulk",
["npcID"] = 223206,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[115350] = {
["encounterName"] = "Lilian Voss",
["source"] = "Lilian's Soul",
["npcID"] = 58791,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1429,
},
[198944] = {
["source"] = "Enslaved Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 102104,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[200992] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Savage Felstalker",
["npcID"] = 92782,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 196043,
},
[191726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[59215] = {
["source"] = "Greater Ley-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 28276,
},
[205088] = {
["isChanneled"] = true,
["source"] = "Blazing Infernal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102398,
},
[136228] = {
["encounterName"] = "Primordius",
["source"] = "Primordius",
["npcID"] = 69017,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1574,
},
[147544] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[432113] = {
["source"] = "Overlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228575,
},
[12470] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[395811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonebreaker",
["npcID"] = 187599,
},
[145653] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Gloom",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71477,
},
[277042] = {
["source"] = "Fleshrot Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 146893,
},
[205089] = {
["isChanneled"] = true,
["source"] = "Blazing Infernal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102398,
},
[453149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Marauder",
["npcID"] = 219034,
},
[140390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Beast Handler",
["npcID"] = 69312,
},
[159015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glowgullet Devourer",
["npcID"] = 79190,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[144611] = {
["source"] = "Niuzao",
["event"] = "SPELL_CAST_START",
["npcID"] = 71954,
},
[432673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Looter",
["npcID"] = 216303,
},
[377384] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[74613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger",
["npcID"] = 48269,
},
[137458] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 68476,
},
[140377] = {
["source"] = "Zandalari Frostspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 70419,
},
[442913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[130198] = {
["source"] = "Heavy Mook",
["event"] = "SPELL_CAST_START",
["npcID"] = 67399,
},
[406918] = {
["source"] = "Djaradin Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202256,
},
[442914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[3606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Totem",
["npcID"] = 2523,
},
[15547] = {
["source"] = "Sandfury Shadowhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 7246,
},
[159017] = {
["source"] = "Zipteq",
["event"] = "SPELL_CAST_START",
["npcID"] = 78734,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[395817] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Frostsculptor",
["npcID"] = 198424,
},
[133321] = {
["source"] = "Shieldwall Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67297,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[369197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Firebinder",
["npcID"] = 186605,
},
[412200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[141612] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fiery Anger",
["npcID"] = 70824,
},
[391723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[138341] = {
["encounterName"] = "Ra-den",
["source"] = "Sanguine Horror",
["encounterID"] = 1580,
["event"] = "SPELL_CAST_START",
["npcID"] = 69871,
},
[393772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hihveer",
["npcID"] = 188717,
},
[387629] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[438823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diabolic Imp",
["npcID"] = 219161,
},
[411012] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[442919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Blademaster",
["npcID"] = 72131,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[125988] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 58771,
},
[391726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[63568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nature's Blade",
["npcID"] = 33527,
},
[55633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit-Bound Sentry",
["npcID"] = 69335,
},
[197785] = {
["source"] = "Impling Pursuer",
["event"] = "SPELL_CAST_START",
["npcID"] = 97177,
},
[75934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yongqi Scout",
["npcID"] = 59385,
},
[444972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saurolisk Ambusher",
["npcID"] = 224725,
},
[185641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Knight-Captain Brimley",
["npcID"] = 94809,
},
[438826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atik",
["npcID"] = 217533,
},
[89757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Cannon",
["npcID"] = 48266,
},
[123033] = {
["source"] = "Lao-Chin the Iron Belly",
["event"] = "SPELL_CAST_START",
["npcID"] = 62804,
},
[453161] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[277055] = {
["source"] = "Moon Priestess Liara",
["event"] = "SPELL_CAST_START",
["npcID"] = 152729,
},
[426541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[90994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Digger",
["npcID"] = 48420,
},
[37054] = {
["source"] = "Pearlfin Watershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59361,
},
[268865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weapons Tester",
["npcID"] = 136934,
},
[205096] = {
["source"] = "Infiltrator Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 102395,
},
[140592] = {
["source"] = "Tideskorn Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 100446,
},
[270536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hexthralled Crossbowman",
["npcID"] = 131529,
},
[187091] = {
["source"] = "Bladesquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 91874,
},
[139231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Storm-Caller",
["npcID"] = 69390,
},
[395827] = {
["source"] = "Angerdrool",
["event"] = "SPELL_CAST_START",
["npcID"] = 195968,
},
[145712] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["npcID"] = 71385,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[145553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mokvar the Treasurer",
["npcID"] = 72433,
},
[393780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[420403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decaymonger Rotpaw",
["npcID"] = 205995,
},
[387528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborne Charger",
["npcID"] = 201471,
},
[375351] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[393781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Guardian",
["npcID"] = 192764,
},
[144689] = {
["source"] = "Ordos",
["event"] = "SPELL_CAST_START",
["npcID"] = 72057,
},
[389686] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[449071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[131940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giant Siftworm",
["npcID"] = 67084,
},
[148785] = {
["source"] = "War Master Kragg",
["event"] = "SPELL_CAST_START",
["npcID"] = 73775,
},
[397878] = {
["encounterName"] = "Wise Mari",
["source"] = "Corrupt Living Water",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56511,
},
[449072] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[393783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[130436] = {
["source"] = "Thunder Hold Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 66286,
},
[302477] = {
["source"] = "Void Haunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 151754,
},
[81568] = {
["isChanneled"] = true,
["source"] = "Stonecore Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43430,
},
[377402] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[420405] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[141619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[139413] = {
["source"] = "Zandalari Spiritweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 69285,
},
[434740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Inquisitor",
["npcID"] = 217518,
},
[412215] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[397881] = {
["encounterName"] = "Wise Mari",
["source"] = "Corrupt Living Water",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56511,
},
[457266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenhorn Extra",
["npcID"] = 228307,
},
[118940] = {
["encounterName"] = "Gekkan",
["source"] = "Glintrok Oracle",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61339,
},
[395834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 197121,
},
[141620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechiller Barafu",
["npcID"] = 70468,
},
[445819] = {
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[393787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iskakx",
["npcID"] = 192761,
},
[144692] = {
["source"] = "Ordos",
["event"] = "SPELL_CAST_START",
["npcID"] = 72057,
},
[126601] = {
["source"] = "The Blade",
["event"] = "SPELL_CAST_START",
["npcID"] = 61010,
},
[129617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duyi Edgewater",
["npcID"] = 65745,
},
[125980] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 58771,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[141621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frost Totem",
["npcID"] = 70982,
},
[41471] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["npcID"] = 22951,
["event"] = "SPELL_CAST_START",
["encounterID"] = 608,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[139991] = {
["encounterName"] = "Megaera",
["source"] = "Arcane Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70248,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[125987] = {
["source"] = "Baolai the Immolator",
["event"] = "SPELL_CAST_START",
["npcID"] = 63695,
},
[205102] = {
["source"] = "Eredar Shadow Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 102400,
},
[138328] = {
["encounterName"] = "Ra-den",
["source"] = "Unraveling Sands",
["npcID"] = 69870,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1580,
},
[198959] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[123499] = {
["source"] = "Set'thik Fanatic",
["event"] = "SPELL_CAST_START",
["npcID"] = 63031,
},
[451128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparking Haulbot",
["npcID"] = 219497,
},
[444985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shacklefang Hornet",
["npcID"] = 223178,
},
[147647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Y'Shaarj",
["npcID"] = 73452,
},
[225562] = {
["source"] = "Bloodtainted Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[205103] = {
["source"] = "Eredar Shadow Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 102400,
},
[115358] = {
["source"] = "Puckish Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 56349,
},
[397888] = {
["source"] = "Fallen Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200126,
},
[138427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurubashi Berserker",
["npcID"] = 69905,
},
[136986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[144695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordos",
["npcID"] = 72057,
},
[137528] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1573,
},
[392574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[131385] = {
["source"] = "Felstorm Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 66270,
},
[140600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[166197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Bonecrusher",
["npcID"] = 77995,
},
[258864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Marine",
["npcID"] = 130027,
},
[451132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparking Haulbot",
["npcID"] = 219497,
},
[387652] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frost Shackler",
["npcID"] = 195141,
},
[128099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestation of Pride",
["npcID"] = 72280,
},
[128124] = {
["source"] = "Mire Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 63731,
},
[131386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Akkolon",
["npcID"] = 66783,
},
[140277] = {
["isChanneled"] = true,
["source"] = "Shan'ze Animator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70069,
},
[198962] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[142649] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["npcID"] = 71420,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1593,
},
[49987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defendo-tank 66D",
["npcID"] = 25758,
},
[193364] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["encounterID"] = 1822,
["event"] = "SPELL_CAST_START",
["npcID"] = 96756,
},
[63059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forest Swarmer",
["npcID"] = 33431,
},
[204082] = {
["source"] = "Wrathblade Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 107551,
},
[147769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damp Shambler",
["npcID"] = 72771,
},
[420419] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[142650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Whelp",
["npcID"] = 71401,
},
[123244] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[121503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Norvakess",
["npcID"] = 62324,
},
[144485] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Iron Juggernaut",
["npcID"] = 71466,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1600,
},
[140481] = {
["isChanneled"] = true,
["source"] = "Spiritbinder Tu'chek",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69301,
},
[196916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[387657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborne Charger",
["npcID"] = 201471,
},
[141187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hagman",
["npcID"] = 67426,
},
[159033] = {
["isChanneled"] = true,
["source"] = "Shaadum",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 78728,
},
[137457] = {
["source"] = "Oondasta",
["event"] = "SPELL_CAST_START",
["npcID"] = 69161,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[412233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[140476] = {
["source"] = "Mighty Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 69406,
},
[136509] = {
["source"] = "Zandalari Spirit-Twister",
["event"] = "SPELL_CAST_START",
["npcID"] = 69195,
},
[137505] = {
["source"] = "Oondasta",
["event"] = "SPELL_CAST_START",
["npcID"] = 69161,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[187207] = {
["source"] = "Stormbreaker Reykir",
["event"] = "SPELL_CAST_START",
["npcID"] = 91517,
},
[377421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amberfur Prowler",
["npcID"] = 187455,
},
[453188] = {
["source"] = "Cragmund",
["event"] = "SPELL_CAST_START",
["npcID"] = 220269,
},
[397899] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[118162] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["encounterID"] = 1436,
["event"] = "SPELL_CAST_START",
["npcID"] = 60710,
},
[393804] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[444998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallowbarb",
["npcID"] = 216078,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["npcID"] = 187593,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[159035] = {
["source"] = "Shaadum",
["event"] = "SPELL_CAST_START",
["npcID"] = 78728,
},
[388474] = {
["source"] = "Temporal Investi-gator",
["event"] = "SPELL_CAST_START",
["npcID"] = 201664,
},
[144583] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Farseer Wolf Rider",
["npcID"] = 71983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[381519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathion",
["npcID"] = 201412,
},
[139319] = {
["source"] = "Zandalari Storm-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70236,
},
[464240] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[82800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Queen's Guard",
["npcID"] = 207152,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[80038] = {
["isChanneled"] = true,
["source"] = "Stonecore Magmalord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42789,
},
[395855] = {
["source"] = "The Black Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195975,
},
[381521] = {
["source"] = "Encroaching Downpour",
["event"] = "SPELL_CAST_START",
["npcID"] = 191324,
},
[135271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Ingoo Ingoo XVII",
["npcID"] = 68545,
},
[121747] = {
["source"] = "Salyin Warmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 62351,
},
[41303] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Suffering",
["npcID"] = 23418,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[397904] = {
["source"] = "Sha-Touched Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 200131,
},
[33624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undercity Mage",
["npcID"] = 18971,
},
[147510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eroded Cliffdweller",
["npcID"] = 72809,
},
[395857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[145461] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["npcID"] = 71393,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[187706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Torturer",
["npcID"] = 96121,
},
[393810] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Queen",
["npcID"] = 186064,
},
[147447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[166205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Bonecrusher",
["npcID"] = 77995,
},
[135177] = {
["source"] = "Sorin Magehand",
["event"] = "SPELL_CAST_START",
["npcID"] = 68587,
},
[143666] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["npcID"] = 71160,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[413044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grotesque Horror",
["npcID"] = 138187,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[136098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lion's Faithful",
["npcID"] = 69004,
},
[426576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dream Seedling",
["npcID"] = 211339,
},
[395860] = {
["source"] = "Spiked Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 192430,
},
[129926] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60601,
},
[143503] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71515,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[222491] = {
["source"] = "Kvaldir Soulflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 91575,
},
[387670] = {
["source"] = "Time-Lost Chieftain",
["event"] = "SPELL_CAST_START",
["npcID"] = 187266,
},
[137344] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[440912] = {
["source"] = "Festering Sporemass",
["event"] = "SPELL_CAST_START",
["npcID"] = 217963,
},
[369241] = {
["source"] = "Zaqali Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 200058,
},
[142655] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["npcID"] = 71420,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[131896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Angry, Stabby Townlong Yak",
["npcID"] = 61635,
},
[375385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalbound Water Spirit",
["npcID"] = 190739,
},
[453997] = {
["source"] = "Faceless One",
["event"] = "SPELL_CAST_START",
["npcID"] = 223119,
},
[453200] = {
["source"] = "Cragmund",
["event"] = "SPELL_CAST_START",
["npcID"] = 220269,
},
[40536] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Akama",
["npcID"] = 23089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[81576] = {
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 43537,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["encounterID"] = 2087,
["event"] = "SPELL_CAST_START",
["npcID"] = 122968,
},
[146534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggron",
["npcID"] = 72981,
},
[125865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zar'thik Augurer",
["npcID"] = 64454,
},
[136913] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[377435] = {
["source"] = "Time-Lost Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187265,
},
[135889] = {
["source"] = "Captain Brent the Black",
["event"] = "SPELL_CAST_START",
["npcID"] = 67626,
},
[117924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orbiss",
["npcID"] = 60857,
},
[375388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Watercaller",
["npcID"] = 190995,
},
[51287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Y'kish the Deceiver",
["npcID"] = 81266,
},
[144396] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["npcID"] = 71475,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[397914] = {
["source"] = "Depraved Mistweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200137,
},
[128022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Akkolon",
["npcID"] = 66783,
},
[157390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Packleader",
["npcID"] = 78960,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["npcID"] = 77816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[140279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Animator",
["npcID"] = 70069,
},
[253239] = {
["source"] = "Dazar'ai Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 122971,
},
[144400] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["npcID"] = 71734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[387677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathling Destroyer",
["npcID"] = 190214,
},
[148518] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["npcID"] = 73724,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[285290] = {
["source"] = "Airyn Swiftfeet",
["event"] = "SPELL_CAST_START",
["npcID"] = 144776,
},
[143431] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Arcweaver",
["npcID"] = 71517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[127552] = {
["source"] = "Shao-Tien Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 65133,
},
[381535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sedentary Sediment",
["npcID"] = 194284,
},
[126628] = {
["source"] = "Spirit of Violence",
["event"] = "SPELL_CAST_START",
["npcID"] = 64656,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[56326] = {
["source"] = "Muckscale Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 64008,
},
[396739] = {
["source"] = "Elder Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 191621,
},
[160068] = {
["source"] = "Ironmarch Warsmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 77653,
},
[129700] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Master Kistane",
["npcID"] = 65899,
},
[381537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icebreaker",
["npcID"] = 199279,
},
[171331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Pillager",
["npcID"] = 88039,
},
[135425] = {
["source"] = "Horde Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 68334,
},
[107175] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sodden Hozen Brawler",
["npcID"] = 56867,
},
[115878] = {
["source"] = "Silkwood Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 56070,
},
[257337] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[146537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggron",
["npcID"] = 72981,
},
[145548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Bolt Totem",
["npcID"] = 72562,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[127947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azzix K'tai",
["npcID"] = 62843,
},
[387683] = {
["source"] = "Primalist Arlin",
["event"] = "SPELL_CAST_START",
["npcID"] = 190719,
},
[438877] = {
["source"] = "Nakt",
["event"] = "SPELL_CAST_START",
["npcID"] = 218324,
},
[144649] = {
["encounterName"] = "Norushen",
["source"] = "Titanic Corruption",
["npcID"] = 72051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[459355] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[136521] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[455260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[138569] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["npcID"] = 69699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[114855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Initiate",
["npcID"] = 58783,
},
[143491] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[142315] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[393830] = {
["source"] = "Gragza the Dragon-Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 191507,
},
[134470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bow Fly Swarm",
["npcID"] = 68222,
},
[194488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tideskorn Shieldmaiden",
["npcID"] = 93584,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[130515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Doren",
["npcID"] = 66052,
},
[139594] = {
["source"] = "Arcweaver Jor'guva",
["event"] = "SPELL_CAST_START",
["npcID"] = 69665,
},
[86699] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Golgarok",
["npcID"] = 50059,
},
[144077] = {
["isChanneled"] = true,
["source"] = "Sikari the Mistweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71828,
},
[124776] = {
["source"] = "Krik'thik Deep-Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 61374,
},
[434786] = {
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 216293,
},
[371306] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[128105] = {
["source"] = "Oracle Hiss'ir",
["event"] = "SPELL_CAST_START",
["npcID"] = 63998,
},
[126631] = {
["source"] = "Spirit of Anger",
["event"] = "SPELL_CAST_START",
["npcID"] = 64684,
},
[164168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Overseer",
["npcID"] = 81212,
},
[412262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[275063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vugthuth",
["npcID"] = 128584,
},
[142667] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["npcID"] = 71420,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[163973] = {
["isChanneled"] = true,
["source"] = "Varashian Vilefang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 85429,
},
[146595] = {
["encounterName"] = "Sha of Pride",
["source"] = "Norushen",
["npcID"] = 71965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[101546] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Spirit",
["npcID"] = 69792,
},
[449123] = {
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[140346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Spellblade",
["npcID"] = 67970,
},
[165193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stele",
["npcID"] = 72627,
},
[21807] = {
["source"] = "Wily Woodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 61155,
},
[142668] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[393835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Cloaker",
["npcID"] = 195397,
},
[143265] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["npcID"] = 71504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1601,
},
[397931] = {
["source"] = "Minion of Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57109,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[143436] = {
["encounterName"] = "Immerseus",
["source"] = "Immerseus",
["npcID"] = 71543,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1602,
},
[135251] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[124072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Gustwing",
["npcID"] = 63592,
},
[131986] = {
["source"] = "Succula",
["event"] = "SPELL_CAST_START",
["npcID"] = 67099,
},
[37979] = {
["source"] = "Dominance Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 67805,
},
[143199] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["npcID"] = 71454,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1595,
},
[143638] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71515,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[147552] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["npcID"] = 72353,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[434793] = {
["isChanneled"] = true,
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216293,
},
[371313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Excited Ember",
["npcID"] = 203330,
},
[125900] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'thik Warsinger",
["npcID"] = 64458,
},
[200007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bastillax",
["npcID"] = 96783,
},
[162622] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[144718] = {
["encounterName"] = "Iron Juggernaut",
["source"] = "Crawler Mine",
["npcID"] = 72050,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1600,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[130728] = {
["isChanneled"] = true,
["source"] = "Rankbite Ancient",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66462,
},
[194674] = {
["source"] = "Seacursed Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97043,
},
[148762] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Na'kaz",
["npcID"] = 73949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[455273] = {
["source"] = "Deepsludger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216536,
},
[391793] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[143343] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["npcID"] = 71529,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1599,
},
[145566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Ironblade",
["npcID"] = 71770,
},
[126633] = {
["source"] = "Spirit of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 64744,
},
[131409] = {
["source"] = "Twinspire Demolitionist",
["event"] = "SPELL_CAST_START",
["npcID"] = 66273,
},
[458080] = {
["source"] = "Croakit",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[123928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scar-Shell",
["npcID"] = 63311,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[137228] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[376169] = {
["source"] = "High Thaumaturge Fural",
["event"] = "SPELL_CAST_START",
["npcID"] = 189905,
},
[146768] = {
["encounterName"] = "Galakras",
["source"] = "Vereesa Windrunner",
["npcID"] = 73910,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[114859] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[445038] = {
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[455277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidelord Teethwretch",
["npcID"] = 216527,
},
[139378] = {
["source"] = "Palace Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69510,
},
[146605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kovok",
["npcID"] = 72927,
},
[62809] = {
["source"] = "Battle-Priest Eliza",
["event"] = "SPELL_CAST_START",
["npcID"] = 32948,
},
[162127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimfrost Drudge",
["npcID"] = 72955,
},
[449135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[140626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[136099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lion's Faithful",
["npcID"] = 69004,
},
[126822] = {
["source"] = "Korune Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 68605,
},
[434802] = {
["source"] = "Ixin",
["event"] = "SPELL_CAST_START",
["npcID"] = 217531,
},
[417678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[145216] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[442998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Priestess",
["npcID"] = 222688,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[420469] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[455281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidelord Teethwretch",
["npcID"] = 216527,
},
[75441] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Sadist",
["encounterID"] = 1040,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40447,
},
[135508] = {
["source"] = "Alliance Rootshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 68821,
},
[180293] = {
["isChanneled"] = true,
["source"] = "Runas the Shamed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90372,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[375420] = {
["source"] = "Riverbend Chomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190886,
},
[262794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Mastermind",
["npcID"] = 133430,
},
[140628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[442997] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215597,
},
[395899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Chillblaster",
["npcID"] = 199124,
},
[114535] = {
["source"] = "Clovercatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 59576,
},
[375422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Im'bunata",
["npcID"] = 196199,
},
[131414] = {
["source"] = "Twinspire Demolitionist",
["event"] = "SPELL_CAST_START",
["npcID"] = 66273,
},
[140629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["npcID"] = 204449,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2669,
},
[100015] = {
["source"] = "Void-Twisted Spellweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 152135,
},
[201038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kethrazor",
["npcID"] = 96997,
},
[412283] = {
["source"] = "Dreadful Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 203842,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[146773] = {
["encounterName"] = "Galakras",
["source"] = "Master Cannoneer Dagryn",
["npcID"] = 72356,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203678,
},
[412284] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[275085] = {
["source"] = "Grizzlefur Mauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 140059,
},
[183633] = {
["source"] = "Rockbound Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 102232,
},
[443001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boltweaver Enforcer",
["npcID"] = 223362,
},
[420476] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[275086] = {
["source"] = "Smashmaw the Man-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 140063,
},
[179538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Spitespeaker",
["npcID"] = 89025,
},
[41053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Champion",
["npcID"] = 22880,
},
[157013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Eagle-Eye",
["npcID"] = 78962,
},
[381570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sedentary Sediment",
["npcID"] = 194284,
},
[140620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Growth",
["npcID"] = 70153,
},
[140630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternal Guardian",
["npcID"] = 70586,
},
[124982] = {
["isChanneled"] = true,
["source"] = "Adjunct Suruz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62075,
},
[260425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muddy Riverbeast",
["npcID"] = 130757,
},
[199361] = {
["source"] = "Valarjar Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[118958] = {
["isChanneled"] = true,
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61242,
},
[146776] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Proto-Drake",
["npcID"] = 72943,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[135095] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[159062] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kigli'ak",
["npcID"] = 79727,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[143427] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Ironblade",
["npcID"] = 71516,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[145752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spike Mine",
["npcID"] = 72656,
},
[122542] = {
["source"] = "Hawkmaster Nurong",
["event"] = "SPELL_CAST_START",
["npcID"] = 62574,
},
[262804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Mastermind",
["npcID"] = 133430,
},
[395908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Icebulk",
["npcID"] = 192767,
},
[134370] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[413023] = {
["source"] = "Lerai, Timesworn Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 205152,
},
[427357] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[185684] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Paratrooper",
["npcID"] = 94812,
},
[275092] = {
["source"] = "Grizzlefur Cub",
["event"] = "SPELL_CAST_START",
["npcID"] = 132849,
},
[204114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsoul Fleshcarver",
["npcID"] = 95329,
},
[196947] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["encounterID"] = 1824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96759,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[207064] = {
["source"] = "Hatecoil Harpooner",
["event"] = "SPELL_CAST_START",
["npcID"] = 107447,
},
[120495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[143339] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Rik'kal the Dissector",
["npcID"] = 71158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["encounterID"] = 2563,
["event"] = "SPELL_CAST_START",
["npcID"] = 196548,
},
[105504] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[393864] = {
["source"] = "Trap-Layer Kerwal",
["event"] = "SPELL_CAST_START",
["npcID"] = 186516,
},
[114022] = {
["source"] = "Scarlet Treasurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59241,
},
[123429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broketooth Sneaker",
["npcID"] = 60195,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[377483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer",
["npcID"] = 221572,
},
[394591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tombcaller Ganzaya",
["npcID"] = 188509,
},
[136990] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[32093] = {
["source"] = "Ik'thik Incubator",
["event"] = "SPELL_CAST_START",
["npcID"] = 59890,
},
[434824] = {
["source"] = "Ixin",
["event"] = "SPELL_CAST_START",
["npcID"] = 217531,
},
[144522] = {
["encounterName"] = "Norushen",
["source"] = "Sun Tenderheart",
["npcID"] = 72000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[126820] = {
["isChanneled"] = true,
["source"] = "Bulgeback Tortoise",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58431,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["npcID"] = 189234,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[135517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Vindicator",
["npcID"] = 67296,
},
[129711] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["npcID"] = 60793,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[377488] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[457348] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[377486] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 100485,
},
[275099] = {
["source"] = "Smashmaw the Man-Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 140063,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[143709] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["npcID"] = 71154,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[420490] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[373392] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[146781] = {
["encounterName"] = "Galakras",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 72302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[164187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Bombardier",
["npcID"] = 81407,
},
[140619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Burrower",
["npcID"] = 70589,
},
[260072] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Pa'kura Priest",
["npcID"] = 131834,
},
[373395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[129085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Guard",
["npcID"] = 60826,
},
[395924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maeleera",
["npcID"] = 193677,
},
[381585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Sentinel",
["npcID"] = 188173,
},
[146782] = {
["encounterName"] = "Galakras",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 72302,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[131424] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 66274,
},
[387729] = {
["source"] = "Primordial Infused Rock Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 203239,
},
[141663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[391825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Watercaller",
["npcID"] = 190995,
},
[128026] = {
["source"] = "Dread Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 62751,
},
[114021] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[273770] = {
["source"] = "Chadwick Paxton",
["event"] = "SPELL_CAST_START",
["npcID"] = 147628,
},
[432781] = {
["source"] = "Radiating Voidstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[426645] = {
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 212673,
},
[165213] = {
["source"] = "Everbloom Cultivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 81985,
},
[8858] = {
["source"] = "Schnottz Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 47067,
},
[392539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Terrasentry",
["npcID"] = 197801,
},
[143712] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71697,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[387732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Brute",
["npcID"] = 185168,
},
[122034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Shadow",
["npcID"] = 62307,
},
[375446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Elder Armoredon",
["npcID"] = 194105,
},
[393876] = {
["source"] = "Isaqa",
["event"] = "SPELL_CAST_START",
["npcID"] = 209919,
},
[82615] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Jaguar Warrior",
["npcID"] = 69171,
},
[377500] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[83639] = {
["isChanneled"] = true,
["source"] = "Captain Dreadbeard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 38749,
},
[160095] = {
["source"] = "Ironmarch Gundriver",
["event"] = "SPELL_CAST_START",
["npcID"] = 78193,
},
[149187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72367,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["npcID"] = 29573,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[118963] = {
["source"] = "Glintrok Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61240,
},
[31664] = {
["source"] = "Frenzied Gargoyle",
["event"] = "SPELL_CAST_START",
["npcID"] = 27691,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[457359] = {
["source"] = "Beebiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 222284,
},
[426643] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Abominable Greench",
["npcID"] = 54499,
},
[122547] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[381593] = {
["source"] = "Ebonstone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 184300,
},
[146786] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 73909,
},
[164192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Technician",
["npcID"] = 81236,
},
[82616] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Jaguar Warrior",
["npcID"] = 69171,
},
[455313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[391833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sherath",
["npcID"] = 188710,
},
[443027] = {
["source"] = "Siege Hopebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 216019,
},
[136548] = {
["encounterName"] = "Lei Shen",
["source"] = "Ball Lightning",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 69232,
},
[275112] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[125343] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sharpshell Wader",
["npcID"] = 61971,
},
[131429] = {
["source"] = "Dalgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 66274,
},
[126973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Arcanist",
["npcID"] = 64063,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[201672] = {
["encounterName"] = "Shivermaw",
["source"] = "Shivermaw",
["encounterID"] = 1845,
["event"] = "SPELL_CAST_START",
["npcID"] = 101951,
},
[120926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mo Mo",
["npcID"] = 59805,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[37985] = {
["isChanneled"] = true,
["source"] = "Sunreaver Dragonhawk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68762,
},
[273767] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Sentinel",
["npcID"] = 149446,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enthralled Shellcracker",
["npcID"] = 195918,
},
[402775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Flayer Matriarch",
["npcID"] = 202309,
},
[425300] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Flamemancer",
["npcID"] = 210170,
},
[391837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Warden",
["npcID"] = 191252,
},
[377503] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[146728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72367,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[110262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eddy",
["npcID"] = 58014,
},
[79850] = {
["source"] = "Silver Covenant Jailer",
["event"] = "SPELL_CAST_START",
["npcID"] = 68616,
},
[395934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 197119,
},
[122409] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Kor'thik Elite Blademaster",
["npcID"] = 62402,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[12058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Dwarf Magus",
["npcID"] = 29979,
},
[33634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmage",
["npcID"] = 19258,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[131991] = {
["source"] = "Hawkmaster Nurong",
["event"] = "SPELL_CAST_START",
["npcID"] = 64474,
},
[422541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[420509] = {
["isChanneled"] = true,
["source"] = "Lethka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210503,
},
[124085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Zephyrian",
["npcID"] = 63593,
},
[375459] = {
["source"] = "Elusive Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 193859,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[185698] = {
["source"] = "Thane Wildsky",
["event"] = "SPELL_CAST_START",
["npcID"] = 91571,
},
[396629] = {
["source"] = "Elusive Prime Salamanther",
["event"] = "SPELL_CAST_START",
["npcID"] = 194062,
},
[383651] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[147815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 73483,
},
[402772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepstrider Alpha",
["npcID"] = 202312,
},
[117187] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[17843] = {
["source"] = "Green Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 32343,
},
[459422] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[387748] = {
["source"] = "Overseer Zambul",
["event"] = "SPELL_CAST_START",
["npcID"] = 191145,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[445774] = {
["source"] = "Crazed Predator",
["event"] = "SPELL_CAST_START",
["npcID"] = 216325,
},
[121263] = {
["source"] = "Gai-Cho Boltshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 62589,
},
[125398] = {
["source"] = "Torik-Ethis",
["event"] = "SPELL_CAST_START",
["npcID"] = 50388,
},
[143446] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[131390] = {
["source"] = "Bellandra Felstorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 66275,
},
[459421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[395941] = {
["source"] = "Hungry Hungry Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195969,
},
[145769] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["npcID"] = 72276,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1624,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[147817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonscale Firestorm",
["npcID"] = 72876,
},
[142139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[430754] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[131381] = {
["source"] = "Gatrul'lon Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 66268,
},
[114872] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[147818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonscale Firestorm",
["npcID"] = 72876,
},
[427342] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[392530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[41058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whirling Blade",
["npcID"] = 23369,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[406183] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[301748] = {
["source"] = "Ulmath",
["event"] = "SPELL_CAST_START",
["npcID"] = 152697,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[185702] = {
["source"] = "Beagan",
["event"] = "SPELL_CAST_START",
["npcID"] = 91954,
},
[119888] = {
["encounterName"] = "Sha of Fear",
["source"] = "Cheng Kang",
["npcID"] = 61042,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[424614] = {
["source"] = "Fungal Stabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 207450,
},
[117945] = {
["encounterName"] = "Elegon",
["source"] = "Celestial Protector",
["npcID"] = 60793,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[395946] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[111801] = {
["source"] = "Risen Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[424615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Cassaphine",
["npcID"] = 206818,
},
[426663] = {
["isChanneled"] = true,
["source"] = "Vicious Snap Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212681,
},
[395947] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197124,
},
[389804] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[390481] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[114873] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[412330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malrogg",
["npcID"] = 202606,
},
[265568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Befouled Spirit",
["npcID"] = 133685,
},
[15578] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Guard Gro'tash",
["npcID"] = 67927,
},
[369328] = {
["isChanneled"] = true,
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184107,
},
[213686] = {
["source"] = "Cinderweb Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 105049,
},
[68799] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2879,
},
[148515] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Jun-Wei",
["npcID"] = 73723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[116711] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1390,
},
[86717] = {
["source"] = "Zoltrik Drakebane",
["event"] = "SPELL_CAST_START",
["npcID"] = 44135,
},
[413005] = {
["source"] = "Flame Additive",
["event"] = "SPELL_CAST_START",
["npcID"] = 205672,
},
[191848] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91808,
},
[418476] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[402766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Sentinel",
["npcID"] = 202260,
},
[48054] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[195944] = {
["source"] = "Skrog Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91796,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["encounterID"] = 2611,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192464,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["npcID"] = 208363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[143330] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["npcID"] = 71479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[418478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[7992] = {
["source"] = "Darkfang Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 4412,
},
[157375] = {
["encounterName"] = "The Stone Guard",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1395,
},
[123791] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[443052] = {
["source"] = "Siege Hopebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 216019,
},
[407125] = {
["source"] = "Horde Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 207969,
},
[194231] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["encounterID"] = 1823,
["event"] = "SPELL_CAST_START",
["npcID"] = 96754,
},
[400050] = {
["source"] = "Deepflayer Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 221198,
},
[393907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[159969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorebound Vessel",
["npcID"] = 79125,
},
[138607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani'shi Flame Chanter",
["npcID"] = 69909,
},
[138609] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["npcID"] = 69699,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[369335] = {
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 184107,
},
[371383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowhide Shaman",
["npcID"] = 189654,
},
[82844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shox'tik",
["npcID"] = 66784,
},
[400052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[123918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scar-Shell",
["npcID"] = 63311,
},
[395957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellforged Horror",
["npcID"] = 194401,
},
[140112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeb'tula Beastcaller",
["npcID"] = 69657,
},
[147688] = {
["encounterName"] = "Galakras",
["source"] = "Lieutenant Krugruk",
["npcID"] = 72357,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[139187] = {
["event"] = "SPELL_CAST_START",
["source"] = "War-God Al'chukla",
["npcID"] = 69755,
},
[148849] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 73909,
},
[32103] = {
["source"] = "Fordragon Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 27540,
},
[277189] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Voidmaster Evenshade",
["npcID"] = 147998,
},
[140401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silver Covenant Ranger",
["npcID"] = 70262,
},
[120672] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61445,
},
[400055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 203384,
},
[147826] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[140659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Stoneshield",
["npcID"] = 69865,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["npcID"] = 189233,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[172728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Creeping Vine",
["npcID"] = 80697,
},
[426677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[124297] = {
["source"] = "Blackhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 51059,
},
[126139] = {
["source"] = "Sha Harbinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 66426,
},
[79881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Vanquisher",
["npcID"] = 38913,
},
[377532] = {
["source"] = "Thunderspine Crasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191057,
},
[115147] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1423,
},
[144059] = {
["isChanneled"] = true,
["source"] = "Timeless Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71868,
},
[52067] = {
["isChanneled"] = true,
["source"] = "Crystalline Frayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26793,
},
[419166] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[121532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Shadow",
["npcID"] = 62307,
},
[124849] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["npcID"] = 62837,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1501,
},
[404807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Investigator",
["npcID"] = 205245,
},
[147828] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[157043] = {
["source"] = "Sargerei Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 77130,
},
[414394] = {
["source"] = "Nixke Voltscroll",
["event"] = "SPELL_CAST_START",
["npcID"] = 200965,
},
[138480] = {
["encounterName"] = "Dark Animus",
["source"] = "Large Anima Golem",
["npcID"] = 69700,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[395878] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[95729] = {
["source"] = "Therazane",
["event"] = "SPELL_CAST_START",
["npcID"] = 43792,
},
[113504] = {
["source"] = "Pandriarch Windfur",
["event"] = "SPELL_CAST_START",
["npcID"] = 56206,
},
[457398] = {
["source"] = "Beebiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 222284,
},
[391871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Tendontearer",
["npcID"] = 197820,
},
[140079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kresh the Ripper",
["npcID"] = 69474,
},
[455351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kx",
["npcID"] = 216582,
},
[79554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Provisioner",
["npcID"] = 72411,
},
[459449] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[395967] = {
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 197123,
},
[63760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Adherent",
["npcID"] = 33818,
},
[400063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underlight Queen",
["npcID"] = 203593,
},
[426684] = {
["source"] = "Naz'jar Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 212673,
},
[22938] = {
["source"] = "Arcanist Rathaella",
["event"] = "SPELL_CAST_START",
["npcID"] = 68049,
},
[133496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldwall Rifleman",
["npcID"] = 67297,
},
[131085] = {
["isChanneled"] = true,
["source"] = "Ik'thik Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63206,
},
[209263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravathes",
["npcID"] = 97942,
},
[135300] = {
["source"] = "Korune Mutilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 68401,
},
[153974] = {
["source"] = "Black Iron Leadbelcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 76157,
},
[301773] = {
["source"] = "Ulmath",
["event"] = "SPELL_CAST_START",
["npcID"] = 152697,
},
[147652] = {
["source"] = "Primal Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72805,
},
[147805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damp Shambler",
["npcID"] = 72771,
},
[438973] = {
["source"] = "Pit Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[301774] = {
["source"] = "Moon Priestess Liara",
["event"] = "SPELL_CAST_START",
["npcID"] = 152729,
},
[135545] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'kron Gunship",
["npcID"] = 67275,
},
[185715] = {
["source"] = "Guthrie",
["event"] = "SPELL_CAST_START",
["npcID"] = 91956,
},
[406210] = {
["source"] = "Sundered Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201746,
},
[122874] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[128954] = {
["source"] = "Krasari Tormentor",
["event"] = "SPELL_CAST_START",
["npcID"] = 58377,
},
[148728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Mistweaver",
["npcID"] = 73025,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[46181] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Apoko",
["npcID"] = 24553,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[80996] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Akonu the Embercaller",
["npcID"] = 60032,
},
[119843] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[125349] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sharpshell Wader",
["npcID"] = 61971,
},
[451900] = {
["source"] = "Stonehead Koboldcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 220792,
},
[387783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windseeker Avash",
["npcID"] = 192045,
},
[147649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[124820] = {
["source"] = "Sra'thik Wound-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 61517,
},
[131376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifestation of Terror",
["npcID"] = 66785,
},
[145786] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["npcID"] = 71397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[130062] = {
["source"] = "Adjunct Zet'uk",
["event"] = "SPELL_CAST_START",
["npcID"] = 65478,
},
[264153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[157049] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[406215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Diemetradon",
["npcID"] = 221883,
},
[119487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[116838] = {
["source"] = "Subjugator Gormal",
["event"] = "SPELL_CAST_START",
["npcID"] = 55016,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_CAST_START",
["npcID"] = 75839,
},
[117952] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aiws",
["npcID"] = 69792,
},
[424646] = {
["source"] = "Flametouched Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[143432] = {
["encounterName"] = "General Nazgrim",
["source"] = "Kor'kron Arcweaver",
["npcID"] = 71517,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[120788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Antiquator",
["npcID"] = 61641,
},
[128951] = {
["source"] = "Hawkmaster Nurong",
["event"] = "SPELL_CAST_START",
["npcID"] = 64474,
},
[120512] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[451268] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[455364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kx",
["npcID"] = 216582,
},
[383693] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[369359] = {
["source"] = "Maddened Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 190032,
},
[157051] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[332500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathomless Lurker",
["npcID"] = 209580,
},
[393217] = {
["source"] = "Blazing Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 189043,
},
[128192] = {
["source"] = "Vengeful Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 68345,
},
[140117] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zeb'tula Stoneshield",
["npcID"] = 69517,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[115809] = {
["source"] = "Greenwood Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 54987,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[86725] = {
["source"] = "Defaced Earthrager",
["event"] = "SPELL_CAST_START",
["npcID"] = 44076,
},
[120001] = {
["encounterName"] = "Vizier Jin'bak",
["source"] = "Vizier Jin'bak",
["npcID"] = 61567,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1465,
},
[115394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit Darter",
["npcID"] = 59788,
},
[135551] = {
["source"] = "Skyglaive Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 68470,
},
[374081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Godoloto",
["npcID"] = 190022,
},
[381649] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[412366] = {
["source"] = "Subterrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203662,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[445130] = {
["source"] = "Cindersting",
["event"] = "SPELL_CAST_START",
["npcID"] = 220238,
},
[129963] = {
["source"] = "Rothek",
["event"] = "SPELL_CAST_START",
["npcID"] = 62581,
},
[131071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strongarm Airman",
["npcID"] = 65840,
},
[393937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[147682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Oathguard",
["npcID"] = 72892,
},
[422606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[146815] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Unstable Spark",
["npcID"] = 73104,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[369365] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[122485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ookie",
["npcID"] = 62468,
},
[140427] = {
["source"] = "Mighty Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 69406,
},
[451276] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[395987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jumping Spiderling",
["npcID"] = 199182,
},
[120431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Needlebottom",
["npcID"] = 61818,
},
[118657] = {
["source"] = "Snagtooth Hooligan",
["event"] = "SPELL_CAST_START",
["npcID"] = 56462,
},
[199481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusher",
["npcID"] = 97632,
},
[214392] = {
["source"] = "Fjara Rockjaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 109867,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[125432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Pool-Tender",
["npcID"] = 63570,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[451280] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[171390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Fire Spirit",
["npcID"] = 80380,
},
[138627] = {
["source"] = "Slavemaster Shiaxu",
["event"] = "SPELL_CAST_START",
["npcID"] = 69923,
},
[133813] = {
["source"] = "Serpent Ward",
["event"] = "SPELL_CAST_START",
["npcID"] = 67906,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[105519] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[143746] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Despair",
["npcID"] = 71474,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[395991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[170367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Guardian",
["npcID"] = 77973,
},
[391896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Lifetender",
["npcID"] = 196647,
},
[131022] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66398,
},
[100842] = {
["source"] = "Bulgeback Tortoise",
["event"] = "SPELL_CAST_START",
["npcID"] = 58431,
},
[406231] = {
["source"] = "Lingering Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 201758,
},
[122784] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[140676] = {
["source"] = "Rocky Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 70430,
},
[430805] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[142699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Captain",
["npcID"] = 71445,
},
[387473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Bruiser",
["npcID"] = 187285,
},
[86728] = {
["source"] = "Twilight Soulreaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 42916,
},
[111813] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[445746] = {
["source"] = "Darkwater Tidecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 220621,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40633,
},
[412378] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[105513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Miss Fanny",
["npcID"] = 56192,
},
[385757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mender Eskros",
["npcID"] = 195303,
},
[140677] = {
["source"] = "Rocky Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 70430,
},
[87753] = {
["isChanneled"] = true,
["source"] = "Titanic Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47032,
},
[142725] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[146707] = {
["encounterName"] = "Norushen",
["source"] = "Greater Corruption",
["npcID"] = 72001,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[80015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackmane Tracker",
["npcID"] = 60434,
},
[381663] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[171394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tumultuous Water Spirit",
["npcID"] = 80379,
},
[382264] = {
["isChanneled"] = true,
["source"] = "Chrono-Lord Deios",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191220,
},
[428762] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Hunter",
["npcID"] = 39437,
},
[79050] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["event"] = "SPELL_CAST_START",
["npcID"] = 42333,
},
[142726] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[459479] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[144774] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["npcID"] = 71734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[142727] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[126149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Final Doubt",
["npcID"] = 57330,
},
[14030] = {
["source"] = "Riverblade Bloodletter",
["event"] = "SPELL_CAST_START",
["npcID"] = 58981,
},
[122852] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[430812] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[37367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurubashi Worshipper",
["npcID"] = 64642,
},
[428765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tindral Sageswift",
["npcID"] = 209090,
},
[17207] = {
["isChanneled"] = true,
["source"] = "Pandriarch Bramblestaff",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56209,
},
[457434] = {
["source"] = "Riled Dirtdiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 225905,
},
[146823] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["npcID"] = 71734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[124289] = {
["source"] = "Blackhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 51059,
},
[373477] = {
["source"] = "Bound Shoresnapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190193,
},
[142728] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["npcID"] = 71157,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[35946] = {
["event"] = "SPELL_CAST_START",
["source"] = "A.C.E. Saboteur",
["npcID"] = 69009,
},
[136585] = {
["source"] = "Zandalari Beastlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 71298,
},
[129082] = {
["source"] = "Ruqin Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 59826,
},
[449245] = {
["source"] = "Tij'allet",
["event"] = "SPELL_CAST_START",
["npcID"] = 215600,
},
[265540] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Fetid Maggot",
["npcID"] = 130909,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[125001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zan'thik Ambermancer",
["npcID"] = 62838,
},
[115139] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59789,
},
[449246] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[382261] = {
["source"] = "Amalgam of Desperation",
["event"] = "SPELL_CAST_START",
["npcID"] = 199423,
},
[396005] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 198424,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[147446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreboding Flame",
["npcID"] = 73162,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[140682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mist Lurker",
["npcID"] = 70594,
},
[182661] = {
["isChanneled"] = true,
["source"] = "Savage Cursespitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 147055,
},
[120519] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[457441] = {
["source"] = "Remembered Firelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 212088,
},
[136587] = {
["encounterName"] = "Horridon",
["source"] = "Gurubashi Venom Priest",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 69164,
},
[124839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Fleshripper",
["npcID"] = 61299,
},
[120215] = {
["isChanneled"] = true,
["source"] = "Abomination of Anger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61707,
},
[79884] = {
["source"] = "Tawn Winterbluff",
["event"] = "SPELL_CAST_START",
["npcID"] = 45393,
},
[66254] = {
["source"] = "Malaka'jin Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 34807,
},
[373483] = {
["source"] = "Soggymaw Wavebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187263,
},
[391913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[426725] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[218498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azurewing Scalewarden",
["npcID"] = 89940,
},
[126151] = {
["source"] = "Final Doubt",
["event"] = "SPELL_CAST_START",
["npcID"] = 57330,
},
[449251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Threadmancer",
["npcID"] = 208244,
},
[82625] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Explorer's League Digger",
["event"] = "SPELL_CAST_START",
["npcID"] = 38998,
},
[140684] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mist Lurker",
["npcID"] = 70594,
},
[256382] = {
["source"] = "Lowlands Doe",
["event"] = "SPELL_CAST_START",
["npcID"] = 128385,
},
[391915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragsworn Stoneshaper",
["npcID"] = 195838,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["encounterID"] = 1423,
["event"] = "SPELL_CAST_START",
["npcID"] = 59789,
},
[64740] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Clockwork Sapper",
["npcID"] = 34193,
},
[394948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbinder Tornecha",
["npcID"] = 192344,
},
[91997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Spiritbinder",
["npcID"] = 69225,
},
[134059] = {
["source"] = "Bilgewater Blastgineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67884,
},
[127412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Scallywag",
["npcID"] = 62590,
},
[147289] = {
["source"] = "Death Adder",
["event"] = "SPELL_CAST_START",
["npcID"] = 72841,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[443111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glooming Disciple",
["npcID"] = 216867,
},
[128952] = {
["source"] = "Hawkmaster Nurong",
["event"] = "SPELL_CAST_START",
["npcID"] = 64474,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[459496] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[404207] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[305913] = {
["source"] = "Grunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 153581,
},
[283388] = {
["source"] = "G.M.O.D",
["event"] = "SPELL_CAST_START",
["npcID"] = 148640,
},
[457447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[426731] = {
["source"] = "Naz'jar Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[143759] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["npcID"] = 71154,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1593,
},
[381681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[167092] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[114890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Yaungol",
["npcID"] = 58961,
},
[16568] = {
["isChanneled"] = true,
["source"] = "Horde Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68333,
},
[411700] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[129030] = {
["source"] = "Gorge Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58432,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[387826] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[381683] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[85710] = {
["source"] = "Viletongue Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 58738,
},
[142296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Shaman Xorenth",
["npcID"] = 70683,
},
[86734] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Rockslice Flayer",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42606,
},
[389875] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[117954] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[83151] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[9053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seasoned Magister",
["npcID"] = 22863,
},
[123914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Treant",
["npcID"] = 63467,
},
[121871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookie",
["npcID"] = 62468,
},
[369399] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[396020] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[199050] = {
["source"] = "Valarjar Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 95832,
},
[191883] = {
["isChanneled"] = true,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[369400] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[167594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slithershock Eel",
["npcID"] = 83742,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[157355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Prophet",
["npcID"] = 80787,
},
[120429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[115678] = {
["source"] = "Greenwood Thief",
["event"] = "SPELL_CAST_START",
["npcID"] = 54930,
},
[47723] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26928,
},
[141327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Fizzboil",
["npcID"] = 71330,
},
[62823] = {
["encounterName"] = "Hodir",
["source"] = "Missy Flamecuffs",
["npcID"] = 32893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1135,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[87698] = {
["isChanneled"] = true,
["source"] = "Titanic Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47032,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[389572] = {
["source"] = "Time-Lost Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 187262,
},
[124107] = {
["source"] = "Ban Bearheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 61819,
},
[375547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Eruption",
["npcID"] = 191286,
},
[426741] = {
["source"] = "Naz'jar Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 40577,
},
[404216] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[386866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mischievous Stagnose",
["npcID"] = 204432,
},
[457458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61243,
},
[412408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Field Despair Bot K156",
["npcID"] = 205612,
},
[147563] = {
["source"] = "Ashleaf Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 72877,
},
[120524] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[31281] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Living Blood",
["npcID"] = 43123,
},
[126005] = {
["source"] = "Jack Arrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 63809,
},
[145812] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["npcID"] = 71405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[457460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[143765] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["npcID"] = 71156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[57825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 70979,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[142252] = {
["source"] = "Forgotten King",
["event"] = "SPELL_CAST_START",
["npcID"] = 67081,
},
[31287] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[404220] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[278444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[369409] = {
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184130,
},
[126128] = {
["isChanneled"] = true,
["source"] = "Ivory Starling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 57396,
},
[394536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Dead Eye",
["npcID"] = 195337,
},
[87761] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[76813] = {
["source"] = "Naz'jar Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[382249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[114849] = {
["isChanneled"] = true,
["source"] = "Sha of Despair",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59651,
},
[129669] = {
["source"] = "Kracor",
["event"] = "SPELL_CAST_START",
["npcID"] = 67128,
},
[369411] = {
["source"] = "Cavern Seeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184301,
},
[384296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Storm Lizard",
["npcID"] = 194082,
},
[174758] = {
["source"] = "Khaano",
["event"] = "SPELL_CAST_START",
["npcID"] = 86282,
},
[188818] = {
["source"] = "Felskorn Subduer",
["event"] = "SPELL_CAST_START",
["npcID"] = 91759,
},
[41276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Behemoth",
["npcID"] = 23196,
},
[63551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian of Life",
["npcID"] = 33528,
},
[414463] = {
["source"] = "MR-7 Tangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 205824,
},
[81363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xiong the Brawler",
["npcID"] = 57325,
},
[118990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mortbreath Skulker",
["npcID"] = 60202,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[12742] = {
["source"] = "Kor'kron Soulbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 68342,
},
[87762] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[142745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Hound",
["npcID"] = 70702,
},
[134826] = {
["source"] = "Korune Sha-weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 68410,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[449277] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[190115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abigail the Huntress",
["npcID"] = 94822,
},
[148888] = {
["source"] = "Kor'kron Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 73767,
},
[414466] = {
["source"] = "MR-7 Gutcutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204515,
},
[301840] = {
["source"] = "Ulmath",
["event"] = "SPELL_CAST_START",
["npcID"] = 152697,
},
[268061] = {
["source"] = "Plague Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 139949,
},
[449821] = {
["source"] = "The Groundskeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 216038,
},
[68821] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["npcID"] = 36565,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2879,
},
[130389] = {
["source"] = "Osul Spitfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 66289,
},
[377608] = {
["source"] = "Fimbol",
["event"] = "SPELL_CAST_START",
["npcID"] = 200739,
},
[265523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[231823] = {
["isChanneled"] = true,
["source"] = "Exploited Crown Intern",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 114279,
},
[116886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dook Ookem",
["npcID"] = 55622,
},
[377609] = {
["source"] = "Drakonid Poacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200173,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["npcID"] = 194647,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[63274] = {
["encounterName"] = "Mimiron",
["source"] = "VX-001",
["npcID"] = 33651,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1138,
},
[391944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Splintershield",
["npcID"] = 197847,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 122963,
},
[142329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Shaman",
["npcID"] = 71245,
},
[200084] = {
["source"] = "Ghostly Retainer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98366,
},
[418566] = {
["source"] = "Time Slime Prime",
["event"] = "SPELL_CAST_START",
["npcID"] = 202453,
},
[382712] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[391948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steam Coalescence",
["npcID"] = 190110,
},
[138652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani'shi Flame Chanter",
["npcID"] = 69909,
},
[131485] = {
["source"] = "Succubus",
["event"] = "SPELL_CAST_START",
["npcID"] = 66901,
},
[130767] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Sage Snow-Ting",
["npcID"] = 57323,
},
[199061] = {
["source"] = "Enslaved Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 102104,
},
[144039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Juvenile Skyscreamer",
["npcID"] = 69162,
},
[406282] = {
["source"] = "Sundered Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 201746,
},
[147868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[194966] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[449285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shyalude",
["npcID"] = 223834,
},
[131486] = {
["source"] = "Succubus",
["event"] = "SPELL_CAST_START",
["npcID"] = 66901,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[165875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keli'dan the Breaker",
["npcID"] = 79702,
},
[83669] = {
["source"] = "Aquementas the Unchained",
["event"] = "SPELL_CAST_START",
["npcID"] = 44761,
},
[115761] = {
["source"] = "Tian Pupil",
["event"] = "SPELL_CAST_START",
["npcID"] = 54944,
},
[445191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[449817] = {
["isChanneled"] = true,
["source"] = "Vilewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216037,
},
[372561] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[393998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[407039] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Beast",
["encounterID"] = 2684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203812,
},
[131488] = {
["source"] = "Fixxul Lonelyheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 66281,
},
[400144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[215709] = {
["source"] = "Doomherald Ak'vesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 98975,
},
[388383] = {
["source"] = "Iskaara Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186431,
},
[427290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galok Wingslicer",
["npcID"] = 209047,
},
[135584] = {
["source"] = "Skyglaive Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 68471,
},
[90325] = {
["source"] = "Naga Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 91459,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[256401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilefang Hunter",
["npcID"] = 132317,
},
[449290] = {
["source"] = "Rockgore",
["event"] = "SPELL_CAST_START",
["npcID"] = 220241,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["encounterID"] = 2085,
["event"] = "SPELL_CAST_START",
["npcID"] = 122965,
},
[130488] = {
["source"] = "Thunder Hold Lieutenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 66287,
},
[60781] = {
["source"] = "Forgotten Depths Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 30205,
},
[146848] = {
["encounterName"] = "Galakras",
["source"] = "High Enforcer Thranok",
["npcID"] = 72355,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[395872] = {
["source"] = "The Talking Fish",
["event"] = "SPELL_CAST_START",
["npcID"] = 59546,
},
[273185] = {
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_START",
["npcID"] = 127879,
},
[67289] = {
["source"] = "Kaz'tik the Manipulator",
["event"] = "SPELL_CAST_START",
["npcID"] = 64013,
},
[269090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordnance Specialist",
["npcID"] = 137029,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["npcID"] = 192934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[144800] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["npcID"] = 71734,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1604,
},
[373526] = {
["source"] = "Dizzying Flutterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211020,
},
[130769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Shaghorn",
["npcID"] = 59139,
},
[426768] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[418578] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[453392] = {
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[41072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Blood Mage",
["npcID"] = 22945,
},
[391958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloying Gale",
["npcID"] = 198126,
},
[421616] = {
["source"] = "Volcoross",
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[131067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strongarm Medic",
["npcID"] = 65842,
},
[128339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Sha",
["npcID"] = 65414,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[113364] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[381721] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197120,
},
[130770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade",
["npcID"] = 62653,
},
[139683] = {
["source"] = "Arcweaver Jor'guva",
["event"] = "SPELL_CAST_START",
["npcID"] = 69665,
},
[65026] = {
["encounterName"] = "Mimiron",
["source"] = "Leviathan Mk II",
["npcID"] = 34071,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[172704] = {
["source"] = "Infested Vinewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 80698,
},
[449298] = {
["isChanneled"] = true,
["source"] = "Mi'thk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211582,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186644,
},
[413806] = {
["source"] = "Cenrrrn Cirrgl Tideshifter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204516,
},
[124378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Den Mother Moof",
["npcID"] = 63518,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[61909] = {
["encounterName"] = "Hodir",
["source"] = "Sissy Flamecuffs",
["npcID"] = 33327,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1135,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[455443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxx",
["npcID"] = 226267,
},
[87768] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[51963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Ebon Gargoyle",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 27829,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[72922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tolliver Houndstooth",
["npcID"] = 38804,
},
[277290] = {
["source"] = "Proudmoore Infantry",
["event"] = "SPELL_CAST_START",
["npcID"] = 147891,
},
[82137] = {
["source"] = "Rom'ogg Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[418000] = {
["source"] = "Fel-Corrupted Kaldorei",
["event"] = "SPELL_CAST_START",
["npcID"] = 206146,
},
[133542] = {
["source"] = "Vol'jin",
["event"] = "SPELL_CAST_START",
["npcID"] = 67414,
},
[62318] = {
["source"] = "Captured Mercenary Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 32885,
},
[388377] = {
["source"] = "Ravenous Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191831,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[147878] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[378420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lumbering Boulder",
["npcID"] = 203594,
},
[137891] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["encounterID"] = 1570,
["event"] = "SPELL_CAST_START",
["npcID"] = 69132,
},
[371489] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infused Whelp",
["npcID"] = 188067,
},
[105301] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[135843] = {
["source"] = "Varatus the Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 68907,
},
[385824] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[164261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonemaul Slaver",
["npcID"] = 75835,
},
[191132] = {
["event"] = "SPELL_CAST_START",
["source"] = "God-King Skovald",
["npcID"] = 92307,
},
[147879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderfall",
["npcID"] = 73175,
},
[443162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[445210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[142760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dire Soldier",
["npcID"] = 70665,
},
[216478] = {
["source"] = "Orbyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 91155,
},
[395541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emblazion",
["npcID"] = 193650,
},
[176127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Boomer",
["npcID"] = 80935,
},
[406304] = {
["source"] = "Memory of a Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200816,
},
[277296] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Pillager",
["npcID"] = 131302,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[412448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmatron",
["npcID"] = 200115,
},
[388374] = {
["source"] = "Ravenous Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 191831,
},
[277297] = {
["source"] = "Venture Inspector",
["event"] = "SPELL_CAST_START",
["npcID"] = 139804,
},
[426783] = {
["source"] = "Faceless Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212775,
},
[387186] = {
["source"] = "Infinite Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 217557,
},
[110781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hemet Nesingwary",
["npcID"] = 58462,
},
[396018] = {
["source"] = "The Crybaby Hozen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59552,
},
[147880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Guardian",
["npcID"] = 72888,
},
[65033] = {
["encounterName"] = "Ragnaros",
["source"] = "Vanquished Constrictor Tentacle",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 34266,
},
[33395] = {
["isChanneled"] = true,
["source"] = "Elemental de agua",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[375591] = {
["source"] = "Bubbling Sapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 191313,
},
[386992] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192636,
},
[396069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthshatter Elemental",
["npcID"] = 194524,
},
[117975] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["npcID"] = 60583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[400165] = {
["source"] = "Infinite Twilight Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 201223,
},
[147881] = {
["source"] = "Molten Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 72888,
},
[119511] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tak Tak",
["npcID"] = 59958,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["npcID"] = 200927,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[457503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cogchewer",
["npcID"] = 212617,
},
[385832] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[396071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 197142,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[88080] = {
["source"] = "Whipping Wind",
["event"] = "SPELL_CAST_START",
["npcID"] = 47238,
},
[265016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[133548] = {
["isChanneled"] = true,
["source"] = "Darkhatched Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67748,
},
[138668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Frost Warden",
["npcID"] = 69910,
},
[267067] = {
["source"] = "Shadeweaver Zarra",
["event"] = "SPELL_CAST_START",
["npcID"] = 134216,
},
[396073] = {
["source"] = "The Nodding Tiger",
["event"] = "SPELL_CAST_START",
["npcID"] = 59544,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[375596] = {
["isChanneled"] = true,
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196115,
},
[417683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[420647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashendir Hartwood",
["npcID"] = 211258,
},
[373549] = {
["source"] = "Oasis Damselfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 189368,
},
[274254] = {
["source"] = "Proudmoore Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 147893,
},
[171385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth Spirit",
["npcID"] = 80382,
},
[396075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[422696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avius Flamebeak",
["npcID"] = 210305,
},
[245152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devlynn Styx",
["npcID"] = 121527,
},
[147884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcweaver Reinforcements",
["npcID"] = 73153,
},
[115417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Spiritbinder",
["npcID"] = 55279,
},
[414506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Emberwing",
["npcID"] = 209098,
},
[269116] = {
["source"] = "Imbued Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 134599,
},
[124048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Sharphorn",
["npcID"] = 60647,
},
[203163] = {
["source"] = "Felspite Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102788,
},
[173479] = {
["source"] = "Cannon Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 86690,
},
[391982] = {
["source"] = "Magmatalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189538,
},
[457993] = {
["source"] = "Croakit",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[396078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inflammable Wall",
["npcID"] = 201413,
},
[411503] = {
["source"] = "Diganthor",
["event"] = "SPELL_CAST_START",
["npcID"] = 204434,
},
[118865] = {
["source"] = "Jade Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62619,
},
[200099] = {
["isChanneled"] = true,
["source"] = "Ghostly Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98368,
},
[427947] = {
["source"] = "Crenna Earth-Daughter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209072,
},
[267551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
},
[245154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devlynn Styx",
["npcID"] = 121527,
},
[418605] = {
["encounterName"] = "Rezan",
["source"] = "Future Self",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[115418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["npcID"] = 197145,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[424750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotcaster",
["npcID"] = 207459,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[20716] = {
["source"] = "Bronze Shrine Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 26277,
},
[200105] = {
["source"] = "Ghostly Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 98368,
},
[400177] = {
["isChanneled"] = true,
["source"] = "Zaqali Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199971,
},
[435465] = {
["source"] = "Machinist Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 217799,
},
[289599] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Scout",
["npcID"] = 147239,
},
[78542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fizzy Yellow Alemental",
["npcID"] = 58017,
},
[375605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian Rager",
["npcID"] = 200321,
},
[123610] = {
["source"] = "Corrupted Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 63275,
},
[145053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vestige of Pride",
["npcID"] = 72279,
},
[130265] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66291,
},
[427333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[183202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread-Rider Malwick",
["npcID"] = 95307,
},
[396084] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 203747,
},
[48698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Seer",
["npcID"] = 26554,
},
[79886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mangletooth",
["npcID"] = 37940,
},
[394037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian Colossus",
["npcID"] = 200319,
},
[158128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Brak",
["npcID"] = 81254,
},
[64528] = {
["encounterName"] = "Hodir",
["source"] = "Sissy Flamecuffs",
["npcID"] = 33327,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1135,
},
[129643] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corporal Jackson Silver",
["npcID"] = 65881,
},
[369465] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[141746] = {
["source"] = "Viletongue Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 58738,
},
[384961] = {
["source"] = "Rotbow Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[271174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pallid Gorger",
["npcID"] = 137830,
},
[262802] = {
["source"] = "Duskrunner Lorinas",
["event"] = "SPELL_CAST_START",
["npcID"] = 134215,
},
[130266] = {
["source"] = "Thunder Hold Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 66200,
},
[417784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Mekgineer Hologram",
["npcID"] = 207539,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[195577] = {
["isChanneled"] = true,
["source"] = "Helarjar Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 115753,
},
[199034] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[142771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Elaglo",
["npcID"] = 71030,
},
[384473] = {
["source"] = "Displaced Tick",
["event"] = "SPELL_CAST_START",
["npcID"] = 217558,
},
[130900] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[137884] = {
["source"] = "Electromancer Ju'le",
["event"] = "SPELL_CAST_START",
["npcID"] = 69339,
},
[387037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torch Revenant",
["npcID"] = 201472,
},
[400877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Hound",
["npcID"] = 199823,
},
[445236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Eel",
["npcID"] = 227369,
},
[389947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ronsak the Decimator",
["npcID"] = 193227,
},
[116560] = {
["source"] = "Mist Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 56310,
},
[377661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Herdmare",
["npcID"] = 194283,
},
[389951] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[396552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[146868] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Ebon Stalker",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72352,
},
[387740] = {
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[115421] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[133558] = {
["source"] = "Korune Spellweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 67752,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 45259,
},
[209325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightglaive the Traitor",
["npcID"] = 90621,
},
[144821] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[138678] = {
["isChanneled"] = true,
["source"] = "Zandalari High Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70047,
},
[131512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordo Raider",
["npcID"] = 65928,
},
[189872] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Voidcaster",
["npcID"] = 146294,
},
[141750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster S'thoc",
["npcID"] = 71259,
},
[391999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Scavenger",
["npcID"] = 185445,
},
[198715] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Val'kyr Battlemaiden",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 100876,
},
[258128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Thug",
["npcID"] = 130025,
},
[455480] = {
["source"] = "Take",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[245162] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Death Metal Knight",
["npcID"] = 122899,
},
[418621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Fanatic",
["npcID"] = 207896,
},
[412275] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[324425] = {
["source"] = "Elite Queensguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 158555,
},
[3396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battle Creeper",
["npcID"] = 48268,
},
[418622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Scarab",
["npcID"] = 207910,
},
[412479] = {
["source"] = "Warchanter Ronvath",
["event"] = "SPELL_CAST_START",
["npcID"] = 200128,
},
[50804] = {
["encounterName"] = "Ley-Guardian Eregos",
["source"] = "Ley-Guardian Eregos",
["encounterID"] = 2013,
["event"] = "SPELL_CAST_START",
["npcID"] = 27656,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[122078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadling",
["npcID"] = 62306,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[373573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sprite Dreamer",
["npcID"] = 207617,
},
[115423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Spiritbinder",
["npcID"] = 55279,
},
[391081] = {
["source"] = "Tserasor the Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190598,
},
[63147] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[381765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 191654,
},
[130781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kunzen Ravager",
["npcID"] = 59119,
},
[106720] = {
["source"] = "Waveguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 56673,
},
[214448] = {
["isChanneled"] = true,
["source"] = "Highlands Runehorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108538,
},
[199090] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[378453] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferna the Bound",
["npcID"] = 186735,
},
[385862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Hopper",
["npcID"] = 195218,
},
[396101] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 197128,
},
[50403] = {
["source"] = "Wastes Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 28005,
},
[392006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scav Notail",
["npcID"] = 193136,
},
[119007] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60602,
},
[432959] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[87779] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[201139] = {
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 98810,
},
[157543] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frozen Fury",
["npcID"] = 78963,
},
[162232] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 81240,
},
[265019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[41078] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 192481,
},
[131972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Battle-Mender",
["npcID"] = 67093,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[445251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Stormfang",
["npcID"] = 218401,
},
[406344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[42870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Invader",
["npcID"] = 24051,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[412488] = {
["source"] = "Crawling Goo",
["event"] = "SPELL_CAST_START",
["npcID"] = 205820,
},
[406345] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[73958] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Drowned Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 39464,
},
[201141] = {
["isChanneled"] = true,
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98810,
},
[207861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 95451,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[432967] = {
["source"] = "Sentry Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 216340,
},
[394060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Productive Pollinator",
["npcID"] = 193809,
},
[42526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore",
["npcID"] = 23876,
},
[43291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Berserker",
["npcID"] = 24216,
},
[392013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viridian Colossus",
["npcID"] = 200319,
},
[143805] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["npcID"] = 71454,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1595,
},
[86713] = {
["source"] = "Boldrich Stonerender",
["event"] = "SPELL_CAST_START",
["npcID"] = 42923,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[383823] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[68948] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["npcID"] = 36565,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[107044] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gripping Hatred",
["npcID"] = 56865,
},
[131520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Dervish",
["npcID"] = 66169,
},
[392449] = {
["source"] = "Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 190173,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[424771] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[201123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilethorn Blossom",
["npcID"] = 99360,
},
[392007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Underboss",
["npcID"] = 187503,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[369193] = {
["source"] = "Cravat",
["event"] = "SPELL_CAST_START",
["npcID"] = 194516,
},
[136855] = {
["source"] = "Drakkari God-Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 69200,
},
[22272] = {
["isChanneled"] = true,
["source"] = "Theramore Arcanist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59596,
},
[157053] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[193977] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["encounterID"] = 1822,
["event"] = "SPELL_CAST_START",
["npcID"] = 96756,
},
[394620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Withering Writhebark",
["npcID"] = 197366,
},
[273677] = {
["encounterName"] = "Avatar of Sethraliss",
["source"] = "Hoodoo Hexer",
["encounterID"] = 2127,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 137204,
},
[164499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nagrand Skirmisher",
["npcID"] = 86398,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[427960] = {
["source"] = "Firebrand Fystia",
["event"] = "SPELL_CAST_START",
["npcID"] = 209893,
},
[76508] = {
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 39982,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["source"] = "Teron Gorefiend",
["npcID"] = 22871,
["event"] = "SPELL_CAST_START",
["encounterID"] = 604,
},
[144832] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["npcID"] = 71734,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[398012] = {
["source"] = "Primalist Earthrazer",
["event"] = "SPELL_CAST_START",
["npcID"] = 203739,
},
[417018] = {
["source"] = "Alliance Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206351,
},
[86574] = {
["source"] = "Fungal Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 42475,
},
[157331] = {
["encounterName"] = "Gnarlroot",
["source"] = "Greater Storm Elemental",
["npcID"] = 77936,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[394817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windscale the Stormborn",
["npcID"] = 192364,
},
[406357] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[428077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[68841] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Frye",
["npcID"] = 36272,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2879,
},
[196027] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[138691] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[148929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonemaul Slaver",
["npcID"] = 75835,
},
[324447] = {
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[424787] = {
["isChanneled"] = true,
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209909,
},
[79854] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Cryptomancer",
["npcID"] = 44855,
},
[372296] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[196028] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[180670] = {
["event"] = "SPELL_CAST_START",
["source"] = "K'ute",
["npcID"] = 90215,
},
[173502] = {
["isChanneled"] = true,
["source"] = "Gun Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86691,
},
[131733] = {
["isChanneled"] = true,
["source"] = "Hozen Diver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66148,
},
[424789] = {
["isChanneled"] = true,
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209909,
},
[135620] = {
["source"] = "Zeb'tula Stoneshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 69517,
},
[10733] = {
["source"] = "Remembered Mechano-Tank",
["event"] = "SPELL_CAST_START",
["npcID"] = 213785,
},
[126283] = {
["source"] = "Shadowmaster Sydow",
["event"] = "SPELL_CAST_START",
["npcID"] = 63240,
},
[424790] = {
["isChanneled"] = true,
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209909,
},
[385883] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[88055] = {
["isChanneled"] = true,
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45915,
},
[119524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu Archer",
["npcID"] = 61345,
},
[378886] = {
["source"] = "Turi Flickerflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199740,
},
[412505] = {
["source"] = "Tyr's Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 205151,
},
[145860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Talon",
["npcID"] = 72232,
},
[20824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deadwind Ogre Mage",
["npcID"] = 7379,
},
[443222] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[371551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Incinerator",
["npcID"] = 195062,
},
[159021] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[23102] = {
["source"] = "Snow Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 63907,
},
[193983] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95675,
},
[145861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeal",
["npcID"] = 72661,
},
[196031] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[193611] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98949,
},
[183132] = {
["event"] = "SPELL_CAST_START",
["source"] = "Questioner Arev'naal",
["npcID"] = 89673,
},
[449368] = {
["source"] = "Wanderer Ida",
["event"] = "SPELL_CAST_START",
["npcID"] = 220953,
},
[195234] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[144839] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["npcID"] = 71153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[406366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[81642] = {
["encounterName"] = "Lockmaw",
["source"] = "Lockmaw",
["encounterID"] = 1054,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43614,
},
[126937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Ambercaller",
["npcID"] = 64917,
},
[47729] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26930,
},
[424798] = {
["source"] = "Infected Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 210478,
},
[55811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Sentinel",
["npcID"] = 29984,
},
[426845] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[185794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Hellion",
["npcID"] = 90660,
},
[166341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Far Seer",
["npcID"] = 82579,
},
[375652] = {
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 196115,
},
[301933] = {
["source"] = "Guardian Tannin",
["event"] = "SPELL_CAST_START",
["npcID"] = 152736,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[406369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[213851] = {
["source"] = "Brawlgoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 107127,
},
[161222] = {
["source"] = "Remembered Nightsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 221947,
},
[269900] = {
["source"] = "Titanic Fungus",
["event"] = "SPELL_CAST_START",
["npcID"] = 202658,
},
[302336] = {
["source"] = "Void-Twisted Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 151742,
},
[390389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taranthiza",
["npcID"] = 196970,
},
[205231] = {
["source"] = "Darkglare",
["event"] = "SPELL_CAST_START",
["npcID"] = 103673,
},
[270334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Breacher",
["npcID"] = 209821,
},
[383846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inflammable Wall",
["npcID"] = 201413,
},
[271220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Djaradin",
["npcID"] = 195032,
},
[169414] = {
["source"] = "Ironmarch Warcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 78670,
},
[266153] = {
["source"] = "Flamescale Strider",
["event"] = "SPELL_CAST_START",
["npcID"] = 132742,
},
[394746] = {
["source"] = "Liskron the Dazzling",
["event"] = "SPELL_CAST_START",
["npcID"] = 193273,
},
[443232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowsilk Jailer",
["npcID"] = 224842,
},
[388340] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[198442] = {
["source"] = "Restless Ancestor",
["event"] = "SPELL_CAST_START",
["npcID"] = 93094,
},
[277365] = {
["source"] = "Kao-Tien Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 136551,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122963,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[162248] = {
["source"] = "Remote-Controlled Mechanotiger",
["event"] = "SPELL_CAST_START",
["npcID"] = 145791,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[131532] = {
["source"] = "Sha Shooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 66928,
},
[82668] = {
["source"] = "Zoltrik Drakebane",
["event"] = "SPELL_CAST_START",
["npcID"] = 44135,
},
[141771] = {
["source"] = "Viletongue Decimator",
["event"] = "SPELL_CAST_START",
["npcID"] = 71353,
},
[157001] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[377707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustlily",
["npcID"] = 195223,
},
[265081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
[177460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Wind Spirit",
["npcID"] = 80381,
},
[196870] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[212415] = {
["source"] = "Urgev the Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 93401,
},
[371565] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Windscourge",
["npcID"] = 195854,
},
[79085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Mist-Shaman",
["npcID"] = 60697,
},
[273664] = {
["source"] = "Soul-Bringer Togan",
["event"] = "SPELL_CAST_START",
["npcID"] = 139438,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[169417] = {
["source"] = "Ironmarch Warcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 78670,
},
[406378] = {
["source"] = "Remnants of Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201089,
},
[130791] = {
["source"] = "Garrosh'ar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66398,
},
[131534] = {
["source"] = "Rothek",
["event"] = "SPELL_CAST_START",
["npcID"] = 62581,
},
[82669] = {
["source"] = "Zoltrik Drakebane",
["event"] = "SPELL_CAST_START",
["npcID"] = 44135,
},
[159087] = {
["source"] = "Grom'kar Leadslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 89777,
},
[254959] = {
["source"] = "Dazar'ai Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 122984,
},
[125160] = {
["source"] = "Snow Blossom",
["event"] = "SPELL_CAST_START",
["npcID"] = 63907,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[393348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[118505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kang Bramblestaff",
["npcID"] = 60978,
},
[181536] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[156301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Boomer",
["npcID"] = 80935,
},
[128232] = {
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58685,
},
[433002] = {
["source"] = "Bloodstained Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 216333,
},
[225732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[268415] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azerite Extractor",
["npcID"] = 136643,
},
[111775] = {
["source"] = "Lilian Voss",
["event"] = "SPELL_CAST_START",
["npcID"] = 58722,
},
[449385] = {
["source"] = "Wanderer Ida",
["event"] = "SPELL_CAST_START",
["npcID"] = 220953,
},
[428004] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fyrakk",
["npcID"] = 210423,
},
[428908] = {
["source"] = "Meredy Huntswell",
["event"] = "SPELL_CAST_START",
["npcID"] = 209059,
},
[267136] = {
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_START",
["npcID"] = 133557,
},
[419052] = {
["encounterName"] = "Rezan",
["source"] = "Future Self",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[457959] = {
["source"] = "Geothermus",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[265089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[428910] = {
["source"] = "Auctioned Pages Past",
["event"] = "SPELL_CAST_START",
["npcID"] = 214069,
},
[212423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[451435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidwraith",
["npcID"] = 224466,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Restorer",
["npcID"] = 196203,
},
[128233] = {
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58685,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[388335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manipulator Tharohn",
["npcID"] = 188171,
},
[384648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Withering Writhebark",
["npcID"] = 197366,
},
[134609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wakened Mogu",
["npcID"] = 68102,
},
[80549] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Raging Firestorm",
["npcID"] = 39939,
},
[259711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Block Warden",
["npcID"] = 131445,
},
[423410] = {
["source"] = "Lethka",
["event"] = "SPELL_CAST_START",
["npcID"] = 208740,
},
[166350] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Assault Cannon",
["npcID"] = 82590,
},
[375671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Watercaller",
["npcID"] = 190995,
},
[443247] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[408811] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[414579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fuzani Sprite",
["npcID"] = 205858,
},
[367481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[111668] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1406,
},
[390788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[428915] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Manifested Monarch",
["npcID"] = 214020,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[383864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Magma",
["npcID"] = 191917,
},
[385912] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azure Herdmare",
["npcID"] = 192591,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[186488] = {
["source"] = "Tideskorn Longaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 91204,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[41084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[428916] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[124139] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[383866] = {
["source"] = "Incarnated Wick",
["event"] = "SPELL_CAST_START",
["npcID"] = 205407,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Enforcer",
["npcID"] = 212548,
},
[388332] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[85232] = {
["source"] = "Ramkahen Field Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 47699,
},
[146899] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Bonecrusher",
["npcID"] = 72945,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1622,
},
[72014] = {
["source"] = "Earthcaller Torunscar",
["event"] = "SPELL_CAST_START",
["npcID"] = 42730,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[324483] = {
["source"] = "Elite Queensguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 158555,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[190086] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felsoul Crusher",
["npcID"] = 95452,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[451811] = {
["source"] = "Pious Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 217464,
},
[197070] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Rockcaller",
["npcID"] = 100433,
},
[387965] = {
["source"] = "Time-Lost Bladewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 187232,
},
[124140] = {
["source"] = "Shado-Pan Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 63564,
},
[424825] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[371584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinetooth Wavecrasher",
["npcID"] = 188115,
},
[117485] = {
["encounterName"] = "Will of the Emperor",
["source"] = "Emperor's Courage",
["npcID"] = 60398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1407,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[138710] = {
["source"] = "Taran Zhu",
["event"] = "SPELL_CAST_START",
["npcID"] = 69501,
},
[217382] = {
["isChanneled"] = true,
["source"] = "Webmistress Shinaris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 108027,
},
[5137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undead Excavator",
["npcID"] = 624,
},
[111854] = {
["source"] = "Instructor Chillheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[83877] = {
["source"] = "Oathsworn Pathfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 44932,
},
[418684] = {
["source"] = "Alliance Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208208,
},
[396159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[172816] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 155197,
},
[270513] = {
["source"] = "Geoactive Azershard",
["event"] = "SPELL_CAST_START",
["npcID"] = 147933,
},
[415556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dr. Boom",
["npcID"] = 215146,
},
[32063] = {
["source"] = "Twilight Heretic",
["event"] = "SPELL_CAST_START",
["npcID"] = 44681,
},
[406399] = {
["source"] = "Malgosa Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205620,
},
[6257] = {
["source"] = "Hired Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 35234,
},
[401193] = {
["source"] = "Quicksmack Magk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204651,
},
[455904] = {
["source"] = "Oozemodius",
["event"] = "SPELL_CAST_START",
["npcID"] = 220410,
},
[373636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Flayer",
["npcID"] = 200113,
},
[118510] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torjar's Bane",
["npcID"] = 58439,
},
[131545] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Osul Mist-Shaman",
["npcID"] = 66940,
},
[428926] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[182739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Legion Skyterror",
["npcID"] = 90659,
},
[128749] = {
["isChanneled"] = true,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[82837] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Wildhammer Mercenary",
["npcID"] = 37977,
},
[130163] = {
["isChanneled"] = true,
["source"] = "Gunship Turret",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 66183,
},
[408805] = {
["source"] = "Incorporeal Being",
["event"] = "SPELL_CAST_START",
["npcID"] = 204560,
},
[277394] = {
["source"] = "Coven Hexcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 137131,
},
[395936] = {
["source"] = "Hungry Hungry Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195969,
},
[420737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Cassaphine",
["npcID"] = 206818,
},
[377732] = {
["source"] = "Refti Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184319,
},
[375687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Totem",
["npcID"] = 190426,
},
[139914] = {
["source"] = "Arcweaver Jor'guva",
["event"] = "SPELL_CAST_START",
["npcID"] = 69665,
},
[387974] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[412046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Magmaclaw Snapper",
["npcID"] = 204214,
},
[262152] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Veteran Berserker",
["npcID"] = 147189,
},
[204243] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[214481] = {
["isChanneled"] = true,
["source"] = "Rampaging Squallhunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 107469,
},
[182359] = {
["source"] = "Naga Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 91459,
},
[128750] = {
["isChanneled"] = true,
["source"] = "Magnar Icebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96034,
},
[426883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskworker",
["npcID"] = 212383,
},
[86766] = {
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 43158,
},
[164218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Bombardier",
["npcID"] = 81407,
},
[424836] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[11985] = {
["source"] = "Searing Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 4323,
},
[115440] = {
["source"] = "Warden of Zhu",
["event"] = "SPELL_CAST_START",
["npcID"] = 59845,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[29120] = {
["source"] = "Silvermoon Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 18147,
},
[185468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spymaster Illandris",
["npcID"] = 91468,
},
[186446] = {
["source"] = "Rotting Jailer",
["event"] = "SPELL_CAST_START",
["npcID"] = 93005,
},
[445311] = {
["source"] = "Shallowshell the Clacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 219278,
},
[263066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feckless Assistant",
["npcID"] = 133345,
},
[197077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Rockcaller",
["npcID"] = 100433,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[167385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boulderfist",
["npcID"] = 189617,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["encounterID"] = 1041,
["event"] = "SPELL_CAST_START",
["npcID"] = 43873,
},
[15664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekin Spitter",
["npcID"] = 9776,
},
[367503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[146908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brute Reinforcements",
["npcID"] = 73155,
},
[451461] = {
["source"] = "Murgle-whurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214546,
},
[410848] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[51112] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[406752] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[116977] = {
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_START",
["npcID"] = 60576,
},
[420746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[195031] = {
["source"] = "Seacursed Soulkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 97200,
},
[286840] = {
["source"] = "Crystalized Azerite",
["event"] = "SPELL_CAST_START",
["npcID"] = 152835,
},
[86581] = {
["source"] = "Jadecrest Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 43981,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[79094] = {
["isChanneled"] = true,
["source"] = "Faceless Soulclaimer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45395,
},
[397109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Colossus",
["npcID"] = 187843,
},
[121073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malevolent Fury",
["npcID"] = 61333,
},
[426893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[174555] = {
["source"] = "Haunted Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 82143,
},
[123121] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[175314] = {
["source"] = "Vindicator Maraad",
["event"] = "SPELL_CAST_START",
["npcID"] = 78554,
},
[166364] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grom'kar Gunner",
["npcID"] = 82579,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[11642] = {
["source"] = "Shatterspear Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 32855,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[43135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Swamp Ooze",
["npcID"] = 4394,
},
[139744] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 70370,
},
[387987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keen Skywatcher",
["npcID"] = 190778,
},
[143840] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["npcID"] = 71478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1598,
},
[79607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venomtail Scorpid",
["npcID"] = 3127,
},
[8994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gul'tar the Subjugator",
["npcID"] = 68048,
},
[418449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Claw",
["npcID"] = 210684,
},
[408466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Crystal-collector",
["npcID"] = 204407,
},
[114419] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ancient Spirit",
["npcID"] = 56595,
},
[106740] = {
["source"] = "Pearlfin Watershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59361,
},
[396180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[114864] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[433040] = {
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[391006] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[440131] = {
["source"] = "Alleria Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 215014,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 199659,
},
[388741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ukhel Gravestirrer",
["npcID"] = 189928,
},
[141794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion Sithiss",
["npcID"] = 59632,
},
[392087] = {
["source"] = "Charred Hornspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 191479,
},
[209370] = {
["source"] = "Ancient Boneservant",
["event"] = "SPELL_CAST_START",
["npcID"] = 108940,
},
[172673] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 155197,
},
[195036] = {
["source"] = "Seacursed Soulkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 97200,
},
[400279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Summoner",
["npcID"] = 204826,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[392635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[324513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[142819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summit Guster",
["npcID"] = 71277,
},
[116980] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["encounterID"] = 1428,
["event"] = "SPELL_CAST_START",
["npcID"] = 59153,
},
[195037] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[129859] = {
["source"] = "Student of Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 60603,
},
[155961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavemaster Ok'mok",
["npcID"] = 75864,
},
[400283] = {
["source"] = "Zaqali Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[120052] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Adolescent Mushan",
["npcID"] = 56239,
},
[275366] = {
["source"] = "Remote-Controlled Mechanogorilla",
["event"] = "SPELL_CAST_START",
["npcID"] = 145790,
},
[426905] = {
["source"] = "Minion of Ghur'sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 212778,
},
[83796] = {
["source"] = "Verlok Shroomtender",
["event"] = "SPELL_CAST_START",
["npcID"] = 43368,
},
[373662] = {
["isChanneled"] = true,
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[130803] = {
["source"] = "Hozen Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 57119,
},
[412922] = {
["source"] = "Spurlok, Timesworn Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 205158,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[275371] = {
["source"] = "Remote-Controlled Mechanogorilla",
["event"] = "SPELL_CAST_START",
["npcID"] = 145790,
},
[62334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Acolyte",
["npcID"] = 32886,
},
[385950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathwingurlugull",
["npcID"] = 195314,
},
[395427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[371618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moltenbinder",
["npcID"] = 206477,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["npcID"] = 202824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[131559] = {
["source"] = "Drakkari Frostweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 66707,
},
[124071] = {
["isChanneled"] = true,
["source"] = "Osul Marauder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60692,
},
[404171] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[155524] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 77131,
},
[65866] = {
["encounterName"] = "Faction Champions",
["event"] = "SPELL_CAST_START",
["source"] = "Alyssia Moonstalker",
["npcID"] = 34467,
},
[388000] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[196220] = {
["source"] = "Oktel Dragonblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 92920,
},
[89415] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Ghost Iron Dragonling",
["encounterID"] = 1405,
["event"] = "SPELL_CAST_START",
["npcID"] = 57783,
},
[385955] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[388001] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[379033] = {
["source"] = "Cliffside Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 194786,
},
[400288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Pain",
["npcID"] = 201290,
},
[116982] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Quilen",
["npcID"] = 60576,
},
[388002] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[41056] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Battleready Champion",
["npcID"] = 147207,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["npcID"] = 191206,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[39592] = {
["source"] = "Summoned Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 22895,
},
[231901] = {
["source"] = "Overspritzed Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 116285,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[377765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mikrin of the Raging Winds",
["npcID"] = 193173,
},
[169445] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[81147] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Avalanchion",
["npcID"] = 44372,
},
[138729] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[114935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grummle Trail Guide",
["npcID"] = 59593,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[375719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalbound Water Spirit",
["npcID"] = 190739,
},
[408483] = {
["source"] = "Zaqali Lavatongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 208661,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[412486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warchanter Ronvath",
["npcID"] = 200128,
},
[419327] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[118519] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mutated Silkmoth",
["npcID"] = 57422,
},
[385959] = {
["source"] = "Defense Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 195184,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[40946] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[187656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Warmonger",
["npcID"] = 96135,
},
[40066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[400296] = {
["source"] = "Zaqali Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 199972,
},
[11986] = {
["source"] = "Grimtotem Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 23714,
},
[385172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[267195] = {
["source"] = "Duskrunner Lorinas",
["event"] = "SPELL_CAST_START",
["npcID"] = 134215,
},
[57984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Fire Elemental",
["npcID"] = 95061,
},
[116472] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Angry Monkey Totem",
["npcID"] = 60370,
},
[108793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ook-Ook",
["npcID"] = 57628,
},
[410537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[121154] = {
["source"] = "Shado-Pan Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 62220,
},
[441252] = {
["source"] = "Underdrip Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 223069,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[79175] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azure Prickly Crawler",
["npcID"] = 60437,
},
[387243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captivated Shellwarden",
["npcID"] = 195962,
},
[411837] = {
["source"] = "Fragment of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 205971,
},
[201189] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vampiric Felbat",
["npcID"] = 97228,
},
[256865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Sister",
["npcID"] = 131538,
},
[195046] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[201902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[409921] = {
["source"] = "Djaradin Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 202109,
},
[400066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Preying Dustmoth",
["npcID"] = 201068,
},
[381582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Sentinel",
["npcID"] = 188173,
},
[15586] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[40508] = {
["encounterName"] = "Gurtogg Bloodboil",
["source"] = "Gurtogg Bloodboil",
["npcID"] = 22948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 605,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[449447] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[139903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbringer Draz'kil",
["npcID"] = 70445,
},
[396208] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197126,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[408495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Magma Serpent",
["npcID"] = 203846,
},
[263103] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feckless Assistant",
["npcID"] = 133345,
},
[157797] = {
["source"] = "Sargerei Arbiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 77080,
},
[277009] = {
["source"] = "Moon Priestess Liara",
["event"] = "SPELL_CAST_START",
["npcID"] = 152729,
},
[41277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Behemoth",
["npcID"] = 23196,
},
[41091] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[157165] = {
["source"] = "Sargerei Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 77132,
},
[166380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Captain",
["npcID"] = 82597,
},
[285630] = {
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_START",
["npcID"] = 133556,
},
[135664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironforge Cabalist",
["npcID"] = 67762,
},
[420782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Lavatongue",
["npcID"] = 208661,
},
[50092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Needler",
["npcID"] = 64714,
},
[375732] = {
["isChanneled"] = true,
["source"] = "Bubbling Sapling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191164,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[131570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skullcrusher Gundu",
["npcID"] = 70787,
},
[128249] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58756,
},
[129785] = {
["source"] = "Mistblade Scale-Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 63179,
},
[23381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taunka Windfury",
["npcID"] = 27571,
},
[36228] = {
["source"] = "Rental Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 38650,
},
[451501] = {
["source"] = "Burgle-gurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214545,
},
[449453] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[36996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mercurial Guardian",
["npcID"] = 67833,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[175847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Y'kish the Deceiver",
["npcID"] = 81266,
},
[385108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Podling",
["npcID"] = 209630,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[461741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[126202] = {
["source"] = "Shao-Tien Soul-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63611,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[20797] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Novice Darkspear Mage",
["npcID"] = 38279,
},
[270987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disciple of Nalorakk",
["npcID"] = 120949,
},
[47747] = {
["encounterName"] = "Anomalus",
["source"] = "Anomalus",
["encounterID"] = 2009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26763,
},
[271579] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[394167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[144882] = {
["source"] = "Zhu-Gon the Sour",
["event"] = "SPELL_CAST_START",
["npcID"] = 71919,
},
[166335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Far Seer",
["npcID"] = 82579,
},
[138739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand Conjurer",
["npcID"] = 69899,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[385170] = {
["source"] = "Wind Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 191645,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[435398] = {
["source"] = "Algari Expedition Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 217676,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["npcID"] = 213806,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[428981] = {
["source"] = "Auctioned Pages Past",
["event"] = "SPELL_CAST_START",
["npcID"] = 214069,
},
[145907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Skullsplitter",
["npcID"] = 72744,
},
[393859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thaldraszian Hoverbug",
["npcID"] = 195380,
},
[84837] = {
["source"] = "Oostan Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 38811,
},
[157170] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[112893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zouchin Archer",
["npcID"] = 62247,
},
[428983] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dream Bench",
["npcID"] = 210518,
},
[130299] = {
["source"] = "Springtail Thumper",
["event"] = "SPELL_CAST_START",
["npcID"] = 66229,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[153764] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 75927,
},
[413133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[44503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[86785] = {
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 43158,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Hardshell",
["npcID"] = 193605,
},
[14443] = {
["source"] = "Gai-Cho Boltshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 62589,
},
[138742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand Conjurer",
["npcID"] = 69899,
},
[131575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monk Trainee",
["npcID"] = 66947,
},
[157172] = {
["isChanneled"] = true,
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77812,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalkeeper Cimbra",
["npcID"] = 202613,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184580,
},
[136695] = {
["isChanneled"] = true,
["source"] = "Shan'ze Slaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67466,
},
[373698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[41093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Houndmaster",
["npcID"] = 23018,
},
[157173] = {
["source"] = "Felguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 79507,
},
[41183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Stormcaller",
["npcID"] = 22846,
},
[42024] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Elementalist",
["npcID"] = 23523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 603,
},
[116990] = {
["isChanneled"] = true,
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60576,
},
[78807] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["event"] = "SPELL_CAST_START",
["npcID"] = 42188,
},
[394439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[392130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[197105] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[373201] = {
["source"] = "Windyfin Skybasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187431,
},
[64163] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Yogg-Saron",
["npcID"] = 33288,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1143,
},
[142840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Y'Shaarj",
["npcID"] = 71123,
},
[412868] = {
["source"] = "Karokta",
["event"] = "SPELL_CAST_START",
["npcID"] = 203625,
},
[451775] = {
["source"] = "Cogwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224527,
},
[262465] = {
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_START",
["npcID"] = 133556,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[369442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempestrian",
["npcID"] = 193258,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[375751] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Bakar",
["npcID"] = 188509,
},
[39794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightsworn Vindicator",
["npcID"] = 22861,
},
[461757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[427760] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[179996] = {
["isChanneled"] = true,
["source"] = "Nightfallen Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 90377,
},
[262524] = {
["source"] = "Automatic Explosive Ejector",
["event"] = "SPELL_CAST_START",
["npcID"] = 133588,
},
[142842] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["npcID"] = 71454,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1595,
},
[112896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Flesh-Eater",
["npcID"] = 70746,
},
[139771] = {
["source"] = "Shan'ze Celestial Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 70240,
},
[130302] = {
["source"] = "Springtail Thumper",
["event"] = "SPELL_CAST_START",
["npcID"] = 66229,
},
[261612] = {
["source"] = "Sethrak Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 136546,
},
[32903] = {
["source"] = "Jungle Skitterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 58067,
},
[227376] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Crown Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 114275,
},
[41173] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[48191] = {
["isChanneled"] = true,
["source"] = "Alliance Ranger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26802,
},
[375599] = {
["isChanneled"] = true,
["source"] = "Enraged Cliff",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191315,
},
[73212] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Shaman",
["npcID"] = 38326,
},
[455866] = {
["source"] = "Finclaw Bloodtide",
["event"] = "SPELL_CAST_START",
["npcID"] = 207780,
},
[185970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lykill",
["npcID"] = 86535,
},
[139772] = {
["isChanneled"] = true,
["source"] = "Shan'ze Celestial Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70240,
},
[119552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[372562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Deadeye",
["npcID"] = 188542,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[425149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Juggernaut",
["npcID"] = 210172,
},
[411433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Panicked Cliffhorn",
["npcID"] = 205384,
},
[414665] = {
["source"] = "Murloc Gillbeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 205823,
},
[394881] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Council Earthcaller",
["npcID"] = 198502,
},
[115006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hozen Groundpounder",
["npcID"] = 55470,
},
[123648] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[417481] = {
["source"] = "Timeline Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 199748,
},
[15587] = {
["source"] = "Zan'do",
["event"] = "SPELL_CAST_START",
["npcID"] = 214870,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[388046] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[118529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[400333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffkeeper Bouldani",
["npcID"] = 202612,
},
[406798] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sawscale Viper",
["npcID"] = 208691,
},
[119553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2116,
},
[320465] = {
["source"] = "Memory of a Torturer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200823,
},
[449481] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[121601] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[394430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Wrath",
["npcID"] = 190579,
},
[400335] = {
["source"] = "Overseer Xymra",
["event"] = "SPELL_CAST_START",
["npcID"] = 200186,
},
[123137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jungle Brewstealer",
["npcID"] = 67027,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 86684,
},
[123649] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[134656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roaming Fog",
["npcID"] = 68313,
},
[435148] = {
["source"] = "Risen Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212835,
},
[382143] = {
["source"] = "Turi Flickerflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 199740,
},
[126209] = {
["source"] = "Shao-Tien Soul-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 63611,
},
[166397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimrail Scout",
["npcID"] = 82590,
},
[195801] = {
["isChanneled"] = true,
["source"] = "Skrog Tidestomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95939,
},
[140800] = {
["source"] = "Zandalari Arcanital",
["event"] = "SPELL_CAST_START",
["npcID"] = 69281,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[389953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskanoth",
["npcID"] = 193533,
},
[137729] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["npcID"] = 70212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[267237] = {
["isChanneled"] = true,
["source"] = "Faithless Tender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 134364,
},
[139777] = {
["source"] = "Stone Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 70324,
},
[66313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snobold Vassal",
["npcID"] = 34800,
},
[82753] = {
["isChanneled"] = true,
["source"] = "Neferset Theurgist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44980,
},
[216763] = {
["source"] = "Ael'Yith",
["event"] = "SPELL_CAST_START",
["npcID"] = 90267,
},
[195590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Torturer",
["npcID"] = 96121,
},
[22121] = {
["source"] = "Timberstep Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194041,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[388284] = {
["isChanneled"] = true,
["source"] = "Arcane Commander",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190776,
},
[263371] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["encounterID"] = 2124,
["event"] = "SPELL_CAST_START",
["npcID"] = 133944,
},
[7951] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Darkfang Venomspitter",
["npcID"] = 4414,
},
[398296] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[394426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Flamecaller",
["npcID"] = 198503,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["encounterID"] = 2085,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122965,
},
[400569] = {
["source"] = "Haleh",
["event"] = "SPELL_CAST_START",
["npcID"] = 199370,
},
[375770] = {
["source"] = "Monsoo, The Boiling Rage",
["event"] = "SPELL_CAST_START",
["npcID"] = 190718,
},
[426964] = {
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[123651] = {
["isChanneled"] = true,
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61947,
},
[33417] = {
["source"] = "Night Elf Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 35154,
},
[277479] = {
["source"] = "Fleshrot Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 146892,
},
[49084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Witch Doctor",
["npcID"] = 26691,
},
[136708] = {
["encounterName"] = "Horridon",
["source"] = "Sul'lithuz Stonegazer",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 69172,
},
[394893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lookout Mordren",
["npcID"] = 193668,
},
[275013] = {
["source"] = "Direprowl the Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 140072,
},
[197117] = {
["encounterName"] = "Helya",
["source"] = "Piercing Tentacle",
["encounterID"] = 1824,
["event"] = "SPELL_CAST_START",
["npcID"] = 100188,
},
[119556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weeping Horror",
["npcID"] = 57649,
},
[340412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Research",
["npcID"] = 202446,
},
[277481] = {
["source"] = "Fleshrot Vandal",
["event"] = "SPELL_CAST_START",
["npcID"] = 146895,
},
[386012] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[388060] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[373947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amberpelt Hunter",
["npcID"] = 195906,
},
[20692] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 68609,
},
[188927] = {
["source"] = "Darkfiend Dreamtwister",
["event"] = "SPELL_CAST_START",
["npcID"] = 92788,
},
[123652] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[398300] = {
["source"] = "Shambling Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 200387,
},
[127236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu Effigy",
["npcID"] = 59156,
},
[20801] = {
["source"] = "Imp Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 12922,
},
[461781] = {
["source"] = "Sargassum Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[386700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hailbringer Marauder",
["npcID"] = 189228,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["encounterID"] = 2325,
["event"] = "SPELL_CAST_START",
["npcID"] = 157300,
},
[386015] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[392159] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[406493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Flayer Matriarch",
["npcID"] = 202309,
},
[32197] = {
["source"] = "Gatrul'lon Curseweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 66267,
},
[443353] = {
["source"] = "Bloated Cindermite",
["event"] = "SPELL_CAST_START",
["npcID"] = 222295,
},
[185857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Soldier",
["npcID"] = 101026,
},
[192706] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[461785] = {
["source"] = "Sargassum Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[41097] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Weapon Master",
["npcID"] = 23049,
},
[435165] = {
["source"] = "Sir Braunpyke",
["event"] = "SPELL_CAST_START",
["npcID"] = 217658,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 81522,
},
[91032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mine Bunny",
["npcID"] = 48338,
},
[3110] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Gargup",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[429021] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[93449] = {
["source"] = "Schnottz Air Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 46993,
},
[210537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garzareth",
["npcID"] = 97822,
},
[426974] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[451758] = {
["source"] = "Hungering Shimmerfin",
["event"] = "SPELL_CAST_START",
["npcID"] = 215243,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[389269] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187123,
},
[116027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hopper",
["npcID"] = 59464,
},
[265911] = {
["source"] = "Agitated Nimbus",
["event"] = "SPELL_CAST_START",
["npcID"] = 136076,
},
[122118] = {
["encounterName"] = "Gara'jal the Spiritbinder",
["source"] = "Shadowy Minion",
["npcID"] = 60184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1434,
},
[82878] = {
["source"] = "Abyssion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44289,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[373051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Salamancer",
["npcID"] = 186669,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97259,
},
[395017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Massive Magmashell",
["npcID"] = 193152,
},
[445407] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[443363] = {
["source"] = "Riled Sandtwister",
["event"] = "SPELL_CAST_START",
["npcID"] = 225900,
},
[383975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mikrin of the Raging Winds",
["npcID"] = 193173,
},
[13860] = {
["source"] = "Phantasmal Seeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 16323,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[269302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Assassin",
["npcID"] = 134232,
},
[386024] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[389848] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Taranthiza",
["npcID"] = 196970,
},
[130310] = {
["source"] = "Springtail Digger",
["event"] = "SPELL_CAST_START",
["npcID"] = 66264,
},
[138763] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[41098] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadowmoon Weapon Master",
["npcID"] = 23049,
},
[218006] = {
["source"] = "Bonespeaker Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 108939,
},
[447458] = {
["source"] = "Queen Rickiticka",
["event"] = "SPELL_CAST_START",
["npcID"] = 215772,
},
[408551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[386026] = {
["source"] = "Unstable Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[136716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Kros",
["npcID"] = 69341,
},
[163337] = {
["source"] = "Viletongue Rylak",
["event"] = "SPELL_CAST_START",
["npcID"] = 88643,
},
[416743] = {
["source"] = "Hungering Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206016,
},
[381357] = {
["source"] = "Giant Ottuk Whomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 189490,
},
[445412] = {
["source"] = "Shallowshell the Clacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 219278,
},
[136816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fetish-Binder",
["npcID"] = 69155,
},
[386028] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[135693] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 68059,
},
[392369] = {
["source"] = "Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 190173,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[383981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rising Tempest",
["npcID"] = 194575,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 190381,
},
[265759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[122120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadling",
["npcID"] = 62306,
},
[417937] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[81008] = {
["source"] = "Crystalspawn Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 42810,
},
[109322] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Serpent",
["npcID"] = 57927,
},
[275452] = {
["source"] = "Fleshrot Blighthound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146911,
},
[138766] = {
["source"] = "Primal Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 70008,
},
[411916] = {
["source"] = "Sundered Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205673,
},
[81320] = {
["source"] = "Fungalmancer Glop",
["event"] = "SPELL_CAST_START",
["npcID"] = 43372,
},
[441513] = {
["source"] = "Deathpetal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 134419,
},
[138768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Battlebeast",
["npcID"] = 69142,
},
[136719] = {
["encounterName"] = "Horridon",
["source"] = "Farraki Wastewalker",
["npcID"] = 69175,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[56969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[49034] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1976,
},
[16100] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 91158,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[392366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Juggernaut",
["npcID"] = 197793,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[23601] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 86663,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[86798] = {
["isChanneled"] = true,
["source"] = "Elemental Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45084,
},
[118538] = {
["source"] = "Ik'thik Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 65684,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2570,
},
[453611] = {
["source"] = "Automaxor",
["event"] = "SPELL_CAST_START",
["npcID"] = 220265,
},
[395060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Im'bunata",
["npcID"] = 196199,
},
[371471] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[197924] = {
["source"] = "Bonespeaker Carver",
["event"] = "SPELL_CAST_START",
["npcID"] = 93070,
},
[409041] = {
["source"] = "Failed Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 203927,
},
[441510] = {
["source"] = "Deadly Sprout",
["event"] = "SPELL_CAST_START",
["npcID"] = 220316,
},
[138769] = {
["source"] = "Primal Direhorn Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 70013,
},
[74000] = {
["isChanneled"] = true,
["source"] = "Trade Prince Gallywix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39582,
},
[273411] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["encounterID"] = 2124,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 133944,
},
[420853] = {
["source"] = "Temporal Investi-gator",
["event"] = "SPELL_CAST_START",
["npcID"] = 201664,
},
[134674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wakened Mogu",
["npcID"] = 68102,
},
[201226] = {
["source"] = "Bloodtainted Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 100531,
},
[9573] = {
["source"] = "Incendosaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 9318,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[138770] = {
["source"] = "Zandalari Dinomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69925,
},
[23337] = {
["source"] = "Ramkahen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 162941,
},
[86799] = {
["isChanneled"] = true,
["source"] = "Elemental Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45084,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[453617] = {
["source"] = "Automaxor",
["event"] = "SPELL_CAST_START",
["npcID"] = 220265,
},
[40076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Wrangler",
["npcID"] = 22877,
},
[453616] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[178702] = {
["source"] = "Bittertide Brinetail",
["event"] = "SPELL_CAST_START",
["npcID"] = 131674,
},
[40844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechewer Worker",
["npcID"] = 22963,
},
[10277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Axe Thrower",
["npcID"] = 18970,
},
[20680] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 68609,
},
[411910] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[449522] = {
["source"] = "Drone Abductor",
["event"] = "SPELL_CAST_START",
["npcID"] = 219655,
},
[62601] = {
["encounterName"] = "Thorim",
["source"] = "Sif",
["npcID"] = 33196,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1141,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[138772] = {
["source"] = "Primal Direhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 70016,
},
[407245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[118072] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ook of Dook",
["npcID"] = 60188,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[120149] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 194853,
},
[136725] = {
["encounterName"] = "Horridon",
["source"] = "Farraki Wastewalker",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 69175,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[186529] = {
["source"] = "Bloodbeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 91657,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[377854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustlily",
["npcID"] = 195223,
},
[39670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Defiler",
["npcID"] = 22853,
},
[422078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Wingguard",
["npcID"] = 210278,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[224460] = {
["source"] = "Venomhide Shadowspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 112733,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[93456] = {
["source"] = "Captain Cork",
["event"] = "SPELL_CAST_START",
["npcID"] = 47980,
},
[196111] = {
["encounterName"] = "Serpentrix",
["source"] = "Seaspray Crab",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91793,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[461814] = {
["source"] = "Daughter of Alizabal",
["event"] = "SPELL_CAST_START",
["npcID"] = 214142,
},
[192017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valkyra Aspirant",
["npcID"] = 92764,
},
[375812] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Convoked Tremor",
["npcID"] = 187082,
},
[65812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Serissa Grimdabbler",
["npcID"] = 34474,
},
[412669] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[74003] = {
["source"] = "Trade Prince Gallywix",
["event"] = "SPELL_CAST_START",
["npcID"] = 39582,
},
[404480] = {
["source"] = "Sabellian",
["event"] = "SPELL_CAST_START",
["npcID"] = 202810,
},
[166420] = {
["source"] = "Blackrock Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 81422,
},
[83730] = {
["source"] = "Sarinexx",
["event"] = "SPELL_CAST_START",
["npcID"] = 39149,
},
[143977] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["npcID"] = 71155,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[461817] = {
["source"] = "Daughter of Alizabal",
["event"] = "SPELL_CAST_START",
["npcID"] = 214142,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[392194] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[197137] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[90938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Blood Wizard",
["npcID"] = 48417,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 95833,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201754,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186120,
},
[130317] = {
["source"] = "Osul Spitfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 66289,
},
[139797] = {
["source"] = "Manchu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70202,
},
[145944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeal",
["npcID"] = 72661,
},
[170517] = {
["source"] = "Iron Explosive",
["event"] = "SPELL_CAST_START",
["npcID"] = 78479,
},
[369674] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[192019] = {
["source"] = "Night Watch Mariner",
["event"] = "SPELL_CAST_START",
["npcID"] = 97182,
},
[169494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[117519] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60583,
},
[390150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[138778] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 69616,
},
[369675] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[76611] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["encounterID"] = 1038,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[144923] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["npcID"] = 71380,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[197141] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[281621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mech Jockey",
["npcID"] = 130488,
},
[20297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dmong Naruuk",
["npcID"] = 60683,
},
[49037] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1976,
},
[139803] = {
["source"] = "Manchu",
["event"] = "SPELL_CAST_START",
["npcID"] = 70202,
},
[49549] = {
["source"] = "Azure Ring Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 27638,
},
[267288] = {
["source"] = "Earthen Ring Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 135671,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartzite Sporebat",
["npcID"] = 201306,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[259597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feral Ravasaur",
["npcID"] = 131560,
},
[34447] = {
["isChanneled"] = true,
["source"] = "Archmage Aethas Sunreaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69619,
},
[369828] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[138781] = {
["source"] = "Silver Covenant Spellbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 69624,
},
[21833] = {
["encounterName"] = "Tinkerer Gizlock",
["source"] = "Tinkerer Gizlock",
["encounterID"] = 427,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13601,
},
[417241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[155909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slavemaster Ok'mok",
["npcID"] = 75864,
},
[386059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basrikron",
["npcID"] = 193535,
},
[114449] = {
["source"] = "Hedric Evencane",
["event"] = "SPELL_CAST_START",
["npcID"] = 58840,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["npcID"] = 208363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[143974] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Korven the Prime",
["npcID"] = 71155,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[15653] = {
["source"] = "Nightmare Wyrmkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 5280,
},
[200214] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[64396] = {
["encounterName"] = "Auriaya",
["source"] = "Auriaya",
["npcID"] = 33515,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1131,
},
[138782] = {
["source"] = "Silver Covenant Spellbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 69624,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[396302] = {
["source"] = "Geothermus",
["event"] = "SPELL_CAST_START",
["npcID"] = 217416,
},
[126737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kz'Kzik",
["npcID"] = 62832,
},
[392207] = {
["source"] = "Gareed",
["event"] = "SPELL_CAST_START",
["npcID"] = 200722,
},
[40079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[377206] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2635,
},
[200216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[138783] = {
["source"] = "Sunreaver Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 69625,
},
[197144] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[396304] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197135,
},
[117010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Shadow",
["npcID"] = 62307,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[160285] = {
["source"] = "Goren Gouger",
["event"] = "SPELL_CAST_START",
["npcID"] = 80690,
},
[404496] = {
["source"] = "Sabellian",
["event"] = "SPELL_CAST_START",
["npcID"] = 202810,
},
[146975] = {
["source"] = "Kor'kron Iron Scorpion",
["event"] = "SPELL_CAST_START",
["npcID"] = 73194,
},
[138784] = {
["source"] = "Sunreaver Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 69625,
},
[263202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
},
[143973] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[197486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[394261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurblbrblr the Invader",
["npcID"] = 197211,
},
[136737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Gravekeeper",
["npcID"] = 69235,
},
[115509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Warden",
["npcID"] = 59751,
},
[114997] = {
["source"] = "Angry Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 71823,
},
[148001] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[420881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Ashwarden",
["npcID"] = 208659,
},
[461836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candleflyer",
["npcID"] = 219341,
},
[124690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Hatred",
["npcID"] = 61054,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[126739] = {
["source"] = "Korvexxis",
["event"] = "SPELL_CAST_START",
["npcID"] = 62579,
},
[427159] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[118547] = {
["source"] = "Ik'thik Wing Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 56723,
},
[172574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironwing Flamespitter",
["npcID"] = 86373,
},
[412693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Dreamcrusher",
["npcID"] = 211057,
},
[132644] = {
["source"] = "Darkhatched Flesh-hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 67259,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[386072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[410776] = {
["source"] = "Infinite Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 204658,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[394264] = {
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[41360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Promenade Sentinel",
["npcID"] = 23394,
},
[390169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trueborn Dropflame",
["npcID"] = 201439,
},
[142883] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[394265] = {
["isChanneled"] = true,
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186515,
},
[396313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Diruption",
["npcID"] = 201598,
},
[126227] = {
["source"] = "Adjunct Ek'vem",
["event"] = "SPELL_CAST_START",
["npcID"] = 62073,
},
[59278] = {
["isChanneled"] = true,
["source"] = "Ring-Lord Sorceress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 27639,
},
[271401] = {
["source"] = "Craghorn Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 140657,
},
[396314] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Filth Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 197122,
},
[51103] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[142884] = {
["source"] = "Maragor",
["event"] = "SPELL_CAST_START",
["npcID"] = 71492,
},
[148003] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[396315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Narkena",
["npcID"] = 201539,
},
[11538] = {
["source"] = "Marius Sunshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 113542,
},
[135780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishi",
["npcID"] = 68225,
},
[114965] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wyrmhorn Turtle",
["npcID"] = 56256,
},
[396316] = {
["source"] = "Huntmaster Yrgena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201538,
},
[233048] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felblade Devastator",
["npcID"] = 118776,
},
[124692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Spirit",
["npcID"] = 63839,
},
[386078] = {
["source"] = "Echo of Loss",
["event"] = "SPELL_CAST_START",
["npcID"] = 190259,
},
[125716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Tempest",
["npcID"] = 64358,
},
[195103] = {
["isChanneled"] = true,
["source"] = "Wandering Shellback",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91785,
},
[451608] = {
["source"] = "Hungering Shimmerfin",
["event"] = "SPELL_CAST_START",
["npcID"] = 215243,
},
[172578] = {
["isChanneled"] = true,
["source"] = "Melded Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 86372,
},
[412700] = {
["source"] = "Zaqali Dreamcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 211057,
},
[128276] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ik'thik Egg-Drone",
["npcID"] = 63257,
},
[408605] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[64654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winter Rumbler",
["npcID"] = 34135,
},
[125204] = {
["source"] = "Forgotten King",
["event"] = "SPELL_CAST_START",
["npcID"] = 67081,
},
[396317] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[62605] = {
["encounterName"] = "Thorim",
["source"] = "Sif",
["npcID"] = 33196,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1141,
},
[32914] = {
["source"] = "Stone Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 42522,
},
[16587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Tutor",
["npcID"] = 8548,
},
[169839] = {
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84957,
},
[148004] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[410655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[112911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Hatred",
["npcID"] = 58810,
},
[64653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winter Revenant",
["npcID"] = 34134,
},
[182877] = {
["source"] = "Geir",
["event"] = "SPELL_CAST_START",
["npcID"] = 91948,
},
[139816] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[461850] = {
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[398370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calcifying Crawler",
["npcID"] = 203342,
},
[399666] = {
["source"] = "Spellsworn Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 200598,
},
[394275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[147997] = {
["source"] = "High Priest of Ordos",
["event"] = "SPELL_CAST_START",
["npcID"] = 72898,
},
[396325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disease Slasher",
["npcID"] = 197138,
},
[38560] = {
["source"] = "Smart Mining Monkey",
["event"] = "SPELL_CAST_START",
["npcID"] = 35812,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[132646] = {
["source"] = "Darkhatched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 67256,
},
[124182] = {
["isChanneled"] = true,
["source"] = "Battat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60728,
},
[43133] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Darkmist Recluse",
["npcID"] = 4378,
},
[142879] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["npcID"] = 71454,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1595,
},
[76572] = {
["source"] = "Twilight Sadist",
["event"] = "SPELL_CAST_START",
["npcID"] = 39980,
},
[139818] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["npcID"] = 70247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[449567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[131627] = {
["source"] = "Sha Haunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66425,
},
[119575] = {
["source"] = "Wildscale Herbalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58216,
},
[15305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 78553,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[40082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Harpooner",
["npcID"] = 22874,
},
[396327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[406566] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[408614] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[132652] = {
["source"] = "Darkhatched Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67255,
},
[165416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Fury",
["npcID"] = 78631,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[21067] = {
["source"] = "Poison Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 12216,
},
[136748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Soulripper",
["npcID"] = 69903,
},
[195109] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[118552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[377900] = {
["source"] = "Zaqali Treesmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 207087,
},
[189990] = {
["source"] = "Ingrid Bellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 147623,
},
[396600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karkidan",
["npcID"] = 193725,
},
[241184] = {
["source"] = "Kvaldir Mistcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 93377,
},
[419595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[41069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[195108] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[136741] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 68476,
},
[195473] = {
["source"] = "Gritslime Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 91786,
},
[189991] = {
["source"] = "Ingrid Bellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 147623,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[125720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osul Mist-Shaman",
["npcID"] = 60697,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[54673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zim'Torga Defender",
["npcID"] = 28387,
},
[126232] = {
["source"] = "Jade Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 65170,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["encounterID"] = 2682,
["event"] = "SPELL_CAST_START",
["npcID"] = 200836,
},
[139822] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["npcID"] = 70212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[119577] = {
["source"] = "Wildscale Herbalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58216,
},
[386096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Cursewife",
["npcID"] = 184816,
},
[142894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hodgson",
["npcID"] = 71327,
},
[80158] = {
["source"] = "Stonecore Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 42696,
},
[136751] = {
["source"] = "Greater Cave Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 69351,
},
[59280] = {
["source"] = "Snowflake",
["event"] = "SPELL_CAST_START",
["npcID"] = 28153,
},
[232653] = {
["source"] = "Arcanist Valtrois",
["event"] = "SPELL_CAST_START",
["npcID"] = 147088,
},
[394288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gurblbrblr the Invader",
["npcID"] = 197211,
},
[16588] = {
["source"] = "Twilight Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 42823,
},
[404756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Flamespinner",
["npcID"] = 203686,
},
[50066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pumpkin Soldier",
["npcID"] = 27936,
},
[398385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Blazehound",
["npcID"] = 207429,
},
[136752] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Lu'lin",
["encounterID"] = 1560,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68905,
},
[390194] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[265376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[197240] = {
["source"] = "Prolifica",
["event"] = "SPELL_CAST_START",
["npcID"] = 98986,
},
[412156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[412012] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205408,
},
[199210] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[121114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Amber-Weaver",
["npcID"] = 61929,
},
[88862] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Neferset Snake Charmer",
["npcID"] = 47738,
},
[41396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Host",
["npcID"] = 22959,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[90398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Squallshaper",
["npcID"] = 48521,
},
[455815] = {
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 206514,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2709,
},
[167470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 78553,
},
[87680] = {
["source"] = "Obsidian Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 46646,
},
[185900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lykill",
["npcID"] = 86535,
},
[404517] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[293954] = {
["source"] = "Eclipsing Grasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 218693,
},
[131635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morgus Grimhatchet",
["npcID"] = 65880,
},
[384385] = {
["source"] = "Frostsnout Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 199354,
},
[128282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Clutch-Keeper",
["npcID"] = 64559,
},
[449584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunless Tidemarshal",
["npcID"] = 219602,
},
[455814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elemental Rift",
["npcID"] = 217914,
},
[169519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Spitter",
["npcID"] = 83450,
},
[422964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[398394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deep Krolusk",
["npcID"] = 203898,
},
[12471] = {
["source"] = "Sandfury Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 5648,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["npcID"] = 209800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[398392] = {
["source"] = "Sulfira Wanderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 205808,
},
[429091] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[21068] = {
["source"] = "Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 12217,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[126235] = {
["source"] = "Jade Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 65170,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[386107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Hexclaw",
["npcID"] = 183995,
},
[445492] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[128283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Mistlurker",
["npcID"] = 65404,
},
[265372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[195799] = {
["source"] = "Yotnar",
["event"] = "SPELL_CAST_START",
["npcID"] = 96175,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[125212] = {
["source"] = "Kor'nas Nightsavage",
["event"] = "SPELL_CAST_START",
["npcID"] = 50338,
},
[400443] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crumbling Scoria",
["npcID"] = 201339,
},
[328772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Lurker",
["npcID"] = 199126,
},
[396348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[115997] = {
["source"] = "Dappled Moth",
["event"] = "SPELL_CAST_START",
["npcID"] = 57232,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99192,
},
[328773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Lurker",
["npcID"] = 199126,
},
[265371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enthralled Guard",
["npcID"] = 131585,
},
[398397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clacking Magmaclaw",
["npcID"] = 205809,
},
[443640] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[386111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Butcher",
["npcID"] = 187650,
},
[396350] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fleshripper Vulture",
["npcID"] = 197133,
},
[41171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Heartseeker",
["npcID"] = 23339,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[262493] = {
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_START",
["npcID"] = 133556,
},
[461879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxy Globule",
["npcID"] = 213873,
},
[398399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Acidclaw",
["npcID"] = 201093,
},
[74019] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 39594,
},
[131640] = {
["source"] = "Ik'thik Whisperer",
["event"] = "SPELL_CAST_START",
["npcID"] = 64622,
},
[420925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[118576] = {
["isChanneled"] = true,
["source"] = "Springtail Gnasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 57413,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Flame",
["npcID"] = 186626,
},
[396355] = {
["source"] = "Ritual Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 189851,
},
[390210] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 197130,
},
[118558] = {
["source"] = "Unga Fish-Getter",
["event"] = "SPELL_CAST_START",
["npcID"] = 60299,
},
[267997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilefiend",
["npcID"] = 135816,
},
[71812] = {
["source"] = "Strange Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 33420,
},
[377927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 192690,
},
[457787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[412806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Dragon",
["npcID"] = 205804,
},
[429119] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[122142] = {
["isChanneled"] = true,
["source"] = "Borokhula the Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58739,
},
[204337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsoul Stalker",
["npcID"] = 95314,
},
[74020] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 39594,
},
[461884] = {
["source"] = "Spring Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 215810,
},
[96134] = {
["source"] = "Stone Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 42522,
},
[165220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Brak",
["npcID"] = 81254,
},
[328781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Lurker",
["npcID"] = 199126,
},
[194099] = {
["source"] = "The Grimewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 97185,
},
[40086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragon Turtle",
["npcID"] = 22885,
},
[396423] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190587,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["npcID"] = 56717,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1413,
},
[461886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Basilisk",
["npcID"] = 221298,
},
[135739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishi",
["npcID"] = 68225,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[160312] = {
["source"] = "Sargerei Cleric",
["event"] = "SPELL_CAST_START",
["npcID"] = 77134,
},
[373897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[405850] = {
["source"] = "Sundered Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201753,
},
[263318] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["encounterID"] = 2124,
["event"] = "SPELL_CAST_START",
["npcID"] = 133944,
},
[420933] = {
["source"] = "Volcoross",
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[99618] = {
["source"] = "Gai-Cho Cauterizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62577,
},
[378112] = {
["source"] = "Nibbling Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 189026,
},
[271448] = {
["source"] = "Proudmoore Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 147892,
},
[82742] = {
["source"] = "Southsea Strongarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 40635,
},
[396360] = {
["source"] = "Ritual Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 189851,
},
[425030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Juggernaut",
["npcID"] = 210172,
},
[201298] = {
["source"] = "Bloodtainted Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[267354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Assassin",
["npcID"] = 134232,
},
[257582] = {
["encounterName"] = "Azerokk",
["source"] = "Earthrager",
["npcID"] = 129802,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[202365] = {
["source"] = "Runecarver Slave",
["event"] = "SPELL_CAST_START",
["npcID"] = 102375,
},
[36247] = {
["source"] = "Felblood Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 89754,
},
[105762] = {
["source"] = "Grookin Wildtail",
["event"] = "SPELL_CAST_START",
["npcID"] = 56309,
},
[200228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Questioner Arev'naal",
["npcID"] = 89673,
},
[398501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Rock Viper",
["npcID"] = 203783,
},
[420937] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208365,
},
[263262] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Shalebiter",
["npcID"] = 134005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[201399] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[135742] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ishi",
["npcID"] = 68225,
},
[262347] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[135769] = {
["source"] = "Shan Kien",
["event"] = "SPELL_CAST_START",
["npcID"] = 68378,
},
[148029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pterrordax",
["npcID"] = 73223,
},
[396366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimetalon Spellflinger",
["npcID"] = 195756,
},
[390223] = {
["source"] = "Flashfrost Tarasek",
["event"] = "SPELL_CAST_START",
["npcID"] = 187089,
},
[425035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[112930] = {
["source"] = "Lu-Shero",
["event"] = "SPELL_CAST_START",
["npcID"] = 69274,
},
[396367] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[302222] = {
["source"] = "Titanic Fungus",
["event"] = "SPELL_CAST_START",
["npcID"] = 202658,
},
[130848] = {
["source"] = "Ga'trul",
["event"] = "SPELL_CAST_START",
["npcID"] = 66276,
},
[139838] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["npcID"] = 70247,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[118077] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[431180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[200248] = {
["source"] = "Risen Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 98280,
},
[459849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard An'Jak Shabtir",
["npcID"] = 219665,
},
[425040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungarian Flinger",
["npcID"] = 207460,
},
[195129] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[204344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 186634,
},
[139841] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70235,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[119586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[406802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sawscale Viper",
["npcID"] = 208691,
},
[63891] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[369750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 200451,
},
[136769] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 68476,
},
[389560] = {
["source"] = "Obsidian Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[138817] = {
["source"] = "Elder Pterrorwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 70263,
},
[369751] = {
["source"] = "Zaqali Arbalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 204274,
},
[453709] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[425042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungarian Flinger",
["npcID"] = 207460,
},
[398464] = {
["source"] = "Crystal Wormling",
["event"] = "SPELL_CAST_START",
["npcID"] = 205613,
},
[388225] = {
["source"] = "Frostfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 192030,
},
[136770] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["encounterID"] = 1575,
["event"] = "SPELL_CAST_START",
["npcID"] = 68476,
},
[41117] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["npcID"] = 22917,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[118563] = {
["source"] = "Springtail Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 59514,
},
[172606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goc",
["npcID"] = 85580,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["npcID"] = 208363,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[196814] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felsoul Berserker",
["npcID"] = 95423,
},
[392279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Proto Drake",
["npcID"] = 191778,
},
[369754] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[76584] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[279264] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Honorbound Shadow Hunter",
["npcID"] = 149536,
},
[392280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaurdyth",
["npcID"] = 197835,
},
[390233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rendvith",
["npcID"] = 196971,
},
[257608] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[116004] = {
["source"] = "Water Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 56820,
},
[392281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostdrake",
["npcID"] = 188804,
},
[143939] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["npcID"] = 71161,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[275560] = {
["source"] = "Fleshrot Blighthound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146911,
},
[463956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[131653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vor'thik Fear-Shaper",
["npcID"] = 62814,
},
[48280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blingtron 5000",
["npcID"] = 77789,
},
[120100] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["npcID"] = 61444,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1442,
},
[392283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roosting Matriarch",
["npcID"] = 196369,
},
[263275] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Taskmaster Askari",
["npcID"] = 134012,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[196175] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Hardshell",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 95947,
},
[392284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Proto-Drake",
["npcID"] = 193145,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[133702] = {
["isChanneled"] = true,
["source"] = "Broodmaster Noshi",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67264,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[392285] = {
["source"] = "Corrupted Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 193658,
},
[143941] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kil'ruk the Wind-Reaver",
["npcID"] = 71161,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[145989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amalgamated Hubris",
["npcID"] = 72658,
},
[275564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[384095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ohuna Companion",
["npcID"] = 194254,
},
[394334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matriarch Avethyra",
["npcID"] = 184847,
},
[111398] = {
["isChanneled"] = true,
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58685,
},
[82610] = {
["source"] = "Sabersnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 37513,
},
[125733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swamp Rodent",
["npcID"] = 60733,
},
[209470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravathes",
["npcID"] = 97942,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[122149] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["npcID"] = 62408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[443482] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shipwright Bodyguard",
["npcID"] = 225218,
},
[429176] = {
["source"] = "Gilgoblin Aquamage",
["event"] = "SPELL_CAST_START",
["npcID"] = 40943,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[200256] = {
["source"] = "Arcane Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 101549,
},
[386146] = {
["source"] = "Professor Intinosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195354,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 88862,
},
[275568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Goat",
["npcID"] = 161130,
},
[425054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Portalkeeper",
["npcID"] = 211756,
},
[131657] = {
["source"] = "Ik'thik Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 58368,
},
[387711] = {
["isChanneled"] = true,
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192696,
},
[90932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Blood Wizard",
["npcID"] = 48417,
},
[159949] = {
["source"] = "Ironmarch Warsmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 77653,
},
[47668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Drakkari Warrior",
["npcID"] = 26635,
},
[427175] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[260666] = {
["source"] = "Gilded Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 132126,
},
[431811] = {
["source"] = "Doomshadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 208029,
},
[160323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Spider Worshipper",
["npcID"] = 80530,
},
[396388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[390245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embertooth Vinewrangler",
["npcID"] = 191131,
},
[144969] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[13608] = {
["source"] = "Neferset Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 48626,
},
[76588] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[423010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Dryad",
["npcID"] = 210813,
},
[269429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. War Machine",
["npcID"] = 133463,
},
[47257] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Serpent",
["npcID"] = 26319,
},
[55704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 29981,
},
[21071] = {
["source"] = "Primordial Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 12206,
},
[400486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[377962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostfoot Yeti",
["npcID"] = 192914,
},
[191038] = {
["source"] = "Spectral Windshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 94813,
},
[412775] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dinn",
["npcID"] = 203646,
},
[114472] = {
["source"] = "Lieutenant Granders",
["event"] = "SPELL_CAST_START",
["npcID"] = 58936,
},
[41114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Mystic",
["npcID"] = 22845,
},
[214594] = {
["source"] = "Azurewing Scalewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 91643,
},
[265352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Toad",
["npcID"] = 135052,
},
[400488] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[265337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorestained Piglet",
["npcID"] = 135048,
},
[145995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[425062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Steelshaper",
["npcID"] = 210173,
},
[410728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201411,
},
[76590] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[200261] = {
["source"] = "Soul-Torn Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98243,
},
[258622] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["npcID"] = 129227,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[145996] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Na'kaz",
["npcID"] = 73949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40788,
},
[62872] = {
["encounterName"] = "Freya",
["source"] = "Freya",
["npcID"] = 32906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1133,
},
[214596] = {
["source"] = "Starbuck",
["event"] = "SPELL_CAST_START",
["npcID"] = 107487,
},
[449640] = {
["source"] = "Maddened Siegebomber",
["event"] = "SPELL_CAST_START",
["npcID"] = 216044,
},
[375919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Streamside Scythid",
["npcID"] = 191469,
},
[371824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Hyena",
["npcID"] = 197123,
},
[125736] = {
["source"] = "Apparition of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 64368,
},
[373872] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[400492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[411399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[119593] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[64152] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[192072] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[40091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[160332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Tormentor",
["npcID"] = 77348,
},
[390256] = {
["source"] = "Anxious Memory",
["event"] = "SPELL_CAST_START",
["npcID"] = 200170,
},
[53333] = {
["encounterName"] = "Hadronox",
["source"] = "Anub'ar Necromancer",
["npcID"] = 29098,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1972,
},
[391855] = {
["source"] = "Magmatalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189538,
},
[41371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Torment",
["npcID"] = 22956,
},
[406639] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[192073] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[377971] = {
["source"] = "Spawning Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 194342,
},
[115510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Spiritclaw",
["npcID"] = 55291,
},
[145999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcweaver Reinforcements",
["npcID"] = 73153,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[86830] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[8873] = {
["source"] = "Child of Volcanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 38845,
},
[188161] = {
["isChanneled"] = true,
["source"] = "Azariah",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91737,
},
[38556] = {
["source"] = "Darkspear Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 45015,
},
[182894] = {
["source"] = "Gangamesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 89653,
},
[396432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acrosoth",
["npcID"] = 193243,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122967,
},
[387145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormcaller Solongo",
["npcID"] = 194315,
},
[166478] = {
["source"] = "Tormented Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 82647,
},
[129325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodthirsty Prowler",
["npcID"] = 62945,
},
[258627] = {
["encounterName"] = "Azerokk",
["source"] = "Earthrager",
["npcID"] = 129802,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[200498] = {
["source"] = "Burning Soulstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 96278,
},
[406644] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[40088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 22875,
},
[388211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oshigol",
["npcID"] = 193235,
},
[396400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacias",
["npcID"] = 199028,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[176718] = {
["source"] = "Houndmaster Ely",
["event"] = "SPELL_CAST_START",
["npcID"] = 92951,
},
[408677] = {
["source"] = "Sundered Scaleguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198871,
},
[146002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron War Wolf",
["npcID"] = 72768,
},
[41372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Archon",
["npcID"] = 23400,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[123691] = {
["source"] = "Kang Bramblestaff",
["event"] = "SPELL_CAST_START",
["npcID"] = 58206,
},
[384134] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[205380] = {
["source"] = "Forsaken Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 103729,
},
[369788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Pillager",
["npcID"] = 190983,
},
[41370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Archon",
["npcID"] = 23400,
},
[227913] = {
["source"] = "Felspite Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102788,
},
[214593] = {
["source"] = "Foothills Greatstag",
["event"] = "SPELL_CAST_START",
["npcID"] = 97516,
},
[394362] = {
["source"] = "Rasnar the War Ender",
["event"] = "SPELL_CAST_START",
["npcID"] = 193232,
},
[275571] = {
["source"] = "Guardian Tannin",
["event"] = "SPELL_CAST_START",
["npcID"] = 152736,
},
[143961] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Misery",
["npcID"] = 71476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[182866] = {
["source"] = "Geir",
["event"] = "SPELL_CAST_START",
["npcID"] = 91948,
},
[85802] = {
["source"] = "Stonescale Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 44148,
},
[414815] = {
["source"] = "Slagnaros",
["event"] = "SPELL_CAST_START",
["npcID"] = 206134,
},
[265368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[443510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Executor",
["npcID"] = 217516,
},
[453749] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[371812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Hyena",
["npcID"] = 197123,
},
[277643] = {
["source"] = "Gholvran the Cryptic",
["event"] = "SPELL_CAST_START",
["npcID"] = 146880,
},
[263309] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Adderis",
["encounterID"] = 2124,
["event"] = "SPELL_CAST_START",
["npcID"] = 133379,
},
[445559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[38557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Scout",
["npcID"] = 41175,
},
[392318] = {
["source"] = "Initiate Zorig",
["event"] = "SPELL_CAST_START",
["npcID"] = 193985,
},
[128803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shek'zeer Clutch-Keeper",
["npcID"] = 64559,
},
[425045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Splinterlimb",
["npcID"] = 209365,
},
[394464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piercer Gigra",
["npcID"] = 186511,
},
[142934] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Mogu Shadow Ritualist",
["npcID"] = 71393,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[143958] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Gloom",
["npcID"] = 71477,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[396415] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190587,
},
[398463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[169571] = {
["source"] = "Dionor Seedpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 81721,
},
[213582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Felbat",
["npcID"] = 93556,
},
[429180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cycle Warden",
["npcID"] = 210518,
},
[150102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Driftstalker",
["npcID"] = 74981,
},
[16561] = {
["source"] = "Infused Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 82857,
},
[139894] = {
["source"] = "Horgak the Enslaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 70176,
},
[128304] = {
["source"] = "Shado-Pan Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 58198,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 190187,
},
[396370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tikarr Frostclaw",
["npcID"] = 201542,
},
[387217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Andantenormu",
["npcID"] = 199609,
},
[425037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[191058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[258634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Flamecaster",
["npcID"] = 127488,
},
[396665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[113967] = {
["source"] = "Ik'thik Swarmbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 65683,
},
[54431] = {
["source"] = "Verlok Basilisk Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 42711,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91808,
},
[115009] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shado-Pan Stormbringer",
["npcID"] = 59808,
},
[199250] = {
["source"] = "Seacursed Swiftblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 98919,
},
[457853] = {
["source"] = "The Taskmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 218444,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[144985] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[160681] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1732,
},
[457854] = {
["source"] = "The Taskmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 218444,
},
[139866] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["npcID"] = 70250,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[47773] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[375945] = {
["source"] = "Watchful Gladehind",
["event"] = "SPELL_CAST_START",
["npcID"] = 207621,
},
[143962] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Sorrow",
["npcID"] = 71481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1598,
},
[88883] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Pharaoh Tekahn",
["npcID"] = 47753,
},
[271443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toadstool Danner",
["npcID"] = 200260,
},
[253517] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[139867] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[41374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Archon",
["npcID"] = 23400,
},
[435263] = {
["source"] = "Infinite Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 218346,
},
[131642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gyro-Mechanic Lavenderp",
["npcID"] = 65883,
},
[160345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pale Spider Worshipper",
["npcID"] = 80530,
},
[195474] = {
["source"] = "Bonespeaker Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 93071,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[457858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[410760] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[11990] = {
["isChanneled"] = true,
["source"] = "Firemane Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4334,
},
[141916] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Wrenix the Wretched",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71188,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[369806] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[136797] = {
["encounterName"] = "Horridon",
["source"] = "Zandalari Dinomancer",
["encounterID"] = 1575,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69221,
},
[455812] = {
["source"] = "Crazed Cabbage Smacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 206514,
},
[375950] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[139869] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[255567] = {
["source"] = "T'lonja",
["event"] = "SPELL_CAST_START",
["npcID"] = 128455,
},
[396346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ronsak the Decimator",
["npcID"] = 193227,
},
[263209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mine Rat",
["npcID"] = 130437,
},
[86733] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Rockslice Flayer",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42606,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[126256] = {
["source"] = "Ranger Orestes",
["event"] = "SPELL_CAST_START",
["npcID"] = 68393,
},
[406581] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202264,
},
[127280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Skirmisher",
["npcID"] = 58738,
},
[461869] = {
["source"] = "The Ringing Death",
["event"] = "SPELL_CAST_START",
["npcID"] = 214162,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[64668] = {
["encounterName"] = "Mimiron",
["source"] = "Assault Bot",
["npcID"] = 34057,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1138,
},
[259618] = {
["source"] = "Vicious Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 130756,
},
[398479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hibernating Worm",
["npcID"] = 204742,
},
[80012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aarko",
["npcID"] = 77664,
},
[369811] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[115506] = {
["source"] = "Scarlet Flamethrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 59705,
},
[116018] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1390,
},
[441483] = {
["source"] = "Deathpetal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206184,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[265377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Headhunter",
["npcID"] = 133663,
},
[390290] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[189992] = {
["source"] = "Ingrid Bellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 147623,
},
[369813] = {
["source"] = "Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 189843,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["npcID"] = 206172,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[128305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Suna Silentstrike",
["npcID"] = 61055,
},
[118905] = {
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[88886] = {
["source"] = "Neferset Scryer",
["event"] = "SPELL_CAST_START",
["npcID"] = 48625,
},
[382101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Conjurer",
["npcID"] = 195063,
},
[64174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hodir",
["npcID"] = 33411,
},
[396330] = {
["source"] = "Nokhud Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185357,
},
[114456] = {
["source"] = "Hedric Evencane",
["event"] = "SPELL_CAST_START",
["npcID"] = 58840,
},
[382102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Conjurer",
["npcID"] = 195063,
},
[392341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khuumog",
["npcID"] = 194761,
},
[394269] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[396615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Munchbeak Turtle",
["npcID"] = 195970,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[420895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[40078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leviathan",
["npcID"] = 22884,
},
[9143] = {
["encounterName"] = "Tinkerer Gizlock",
["source"] = "Tinkerer Gizlock",
["encounterID"] = 427,
["event"] = "SPELL_CAST_START",
["npcID"] = 13601,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["npcID"] = 33985,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[369818] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[169567] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 81769,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[457872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[394392] = {
["source"] = "Echo of Loss",
["event"] = "SPELL_CAST_START",
["npcID"] = 190259,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[142947] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["npcID"] = 71395,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[427157] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[148002] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[253526] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[378012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lavacaller Primalist",
["npcID"] = 186823,
},
[49807] = {
["isChanneled"] = true,
["source"] = "Blood Guard Gro'tash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67927,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186121,
},
[142948] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["npcID"] = 71153,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1593,
},
[451732] = {
["source"] = "Swarming Cogwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 232871,
},
[394262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cygenoth",
["npcID"] = 185660,
},
[178784] = {
["source"] = "Prince Farondis",
["event"] = "SPELL_CAST_START",
["npcID"] = 88869,
},
[200218] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[369823] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[165474] = {
["source"] = "Azurewing Scalewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 91643,
},
[147998] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[392349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khuumog",
["npcID"] = 194761,
},
[451734] = {
["source"] = "Persistent Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222843,
},
[404636] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[63134] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[77626] = {
["source"] = "Idra'kess Enchantress",
["event"] = "SPELL_CAST_START",
["npcID"] = 41467,
},
[427162] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[64652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Champion of Hodir",
["npcID"] = 34133,
},
[398494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Shalewing",
["npcID"] = 207090,
},
[400542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kalecgos",
["npcID"] = 193460,
},
[40097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Soothsayer",
["npcID"] = 22876,
},
[396447] = {
["source"] = "Thornmu the Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 196382,
},
[406686] = {
["source"] = "Djaradin Magmashaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 202257,
},
[384161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["npcID"] = 56637,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1412,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["event"] = "SPELL_CAST_START",
["npcID"] = 122967,
},
[390305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rendvith",
["npcID"] = 196971,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[263345] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Heavy Cannon",
["npcID"] = 134025,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[262554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expert Technician",
["npcID"] = 133593,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[144922] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["npcID"] = 71380,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[410629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalecommander Sarkareth",
["npcID"] = 199984,
},
[408749] = {
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204412,
},
[388857] = {
["source"] = "Crag Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197647,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[99503] = {
["source"] = "Lava Wielder",
["event"] = "SPELL_CAST_START",
["npcID"] = 53575,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["npcID"] = 208367,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[44961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Sea Dog",
["npcID"] = 24911,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["event"] = "SPELL_CAST_START",
["npcID"] = 122967,
},
[398500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conflagrated Rock Cobra",
["npcID"] = 203328,
},
[134762] = {
["source"] = "Disha Fearwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 68319,
},
[427169] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[169574] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dionor Seedpriest",
["npcID"] = 81721,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["npcID"] = 77803,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1715,
},
[269493] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2105,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[396454] = {
["source"] = "Insatiable Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 185715,
},
[371358] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[200291] = {
["source"] = "Risen Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 98691,
},
[114291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hopper",
["npcID"] = 59464,
},
[46035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[195172] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[262464] = {
["source"] = "Razak Ironsides",
["event"] = "SPELL_CAST_START",
["npcID"] = 133557,
},
[428345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Scorpid",
["npcID"] = 213696,
},
[41378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Delight",
["npcID"] = 22964,
},
[398504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfurous Viper",
["npcID"] = 203900,
},
[257629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[46150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Witch",
["npcID"] = 24696,
},
[263775] = {
["encounterName"] = "Adderis and Aspix",
["source"] = "Aspix",
["encounterID"] = 2124,
["event"] = "SPELL_CAST_START",
["npcID"] = 133944,
},
[21331] = {
["source"] = "Deeprot Tangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 13142,
},
[125056] = {
["event"] = "SPELL_CAST_START",
["source"] = "MAYHEM",
["npcID"] = 165189,
},
[459938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[198245] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61442,
},
[64649] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Champion of Hodir",
["npcID"] = 34133,
},
[435366] = {
["source"] = "Eratus, the Unwoven Paradox",
["event"] = "SPELL_CAST_START",
["npcID"] = 217190,
},
[317791] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Magus of the Dead",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[185868] = {
["source"] = "Tyndrissen",
["event"] = "SPELL_CAST_START",
["npcID"] = 90390,
},
[196198] = {
["source"] = "Oktel Dragonblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 92920,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["npcID"] = 213008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[371887] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[15530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmage",
["npcID"] = 19258,
},
[416751] = {
["source"] = "Vargul Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207805,
},
[394413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goremaul the Gluttonous",
["npcID"] = 193125,
},
[131601] = {
["source"] = "Twisted Corpse",
["event"] = "SPELL_CAST_START",
["npcID"] = 66948,
},
[373936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[138862] = {
["source"] = "Shan Bu",
["event"] = "SPELL_CAST_START",
["npcID"] = 69534,
},
[386223] = {
["source"] = "Primal Stormshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[86845] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Priest Sekhemet",
["npcID"] = 47730,
},
[394843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oshigol",
["npcID"] = 193235,
},
[134767] = {
["source"] = "Disha Fearwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 68319,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[265407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banquet Steward",
["npcID"] = 131586,
},
[154221] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Cackling Pyromaniac",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 76260,
},
[387708] = {
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192696,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[189626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 95451,
},
[66880] = {
["encounterName"] = "Northrend Beasts",
["source"] = "Acidmaw",
["npcID"] = 35144,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1088,
},
[134768] = {
["source"] = "Disha Fearwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 68319,
},
[125241] = {
["source"] = "Kor'nas Nightsavage",
["event"] = "SPELL_CAST_START",
["npcID"] = 50338,
},
[210535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garzareth",
["npcID"] = 97822,
},
[203368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 114404,
},
[375988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amberfur Prowler",
["npcID"] = 187455,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[122119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadling",
["npcID"] = 62306,
},
[455851] = {
["source"] = "Finclaw Bloodtide",
["event"] = "SPELL_CAST_START",
["npcID"] = 220492,
},
[134769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ubunti the Shade",
["npcID"] = 68320,
},
[118535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orachi",
["npcID"] = 59180,
},
[245155] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devlynn Styx",
["npcID"] = 121527,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[449709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gramwharl",
["npcID"] = 220308,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[390115] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[373943] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[218755] = {
["isChanneled"] = true,
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95779,
},
[62625] = {
["source"] = "Ulduar Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 33237,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["encounterID"] = 1054,
["event"] = "SPELL_CAST_START",
["npcID"] = 45379,
},
[406708] = {
["source"] = "Sindragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 201094,
},
[457902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beledar's Spawn",
["npcID"] = 207802,
},
[252687] = {
["source"] = "Shadowblade Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 122970,
},
[106933] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Striker Ga'dok",
["encounterID"] = 1405,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56589,
},
[176301] = {
["source"] = "Everbloom Waterspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 88261,
},
[134771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ubunti the Shade",
["npcID"] = 68320,
},
[394423] = {
["source"] = "Rohzor Forgesmash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187598,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[436841] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[58053] = {
["source"] = "Crusader of Virtue",
["event"] = "SPELL_CAST_START",
["npcID"] = 30189,
},
[88186] = {
["source"] = "Empyrean Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 45922,
},
[123707] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["npcID"] = 62837,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1501,
},
[75073] = {
["source"] = "Zandalari Spiritbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69225,
},
[449714] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[427189] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[185854] = {
["source"] = "Nightmare Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 92792,
},
[138868] = {
["source"] = "Shan Bu",
["event"] = "SPELL_CAST_START",
["npcID"] = 69534,
},
[369853] = {
["source"] = "Burly Rock-Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 184019,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[80835] = {
["source"] = "Raging Crystal-walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 43373,
},
[180395] = {
["source"] = "Eredar Soul Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 107535,
},
[394427] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flamescale Tarasek",
["npcID"] = 198503,
},
[396475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Proto-Dragon",
["npcID"] = 191705,
},
[393908] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Discordant Watcher",
["npcID"] = 189149,
},
[367807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldbreaker Escapee",
["npcID"] = 185626,
},
[451765] = {
["event"] = "SPELL_CAST_START",
["source"] = "[DNT]Teleport Bunny Prime",
["npcID"] = 224528,
},
[396476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[420817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[119554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[143872] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["npcID"] = 71515,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1603,
},
[210541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karuas",
["npcID"] = 97859,
},
[63138] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["npcID"] = 33134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[253544] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[148085] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[55715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Elite",
["npcID"] = 29980,
},
[383953] = {
["source"] = "Bakar Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194255,
},
[257640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[143990] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[388288] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Elemental",
["npcID"] = 190780,
},
[146038] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'kron Gunner",
["npcID"] = 72784,
},
[376002] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Ohuna",
["npcID"] = 189928,
},
[139895] = {
["source"] = "Soul-Fed Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 70308,
},
[41381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of Delight",
["npcID"] = 22964,
},
[63032] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Keeper Heartwise",
["event"] = "SPELL_CAST_START",
["npcID"] = 33443,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[35913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Blessed Highborne",
["npcID"] = 207147,
},
[388290] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2635,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrnys",
["npcID"] = 1863,
},
[368287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[394434] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primordial Wrath",
["npcID"] = 190579,
},
[392757] = {
["source"] = "Stormbound Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 195094,
},
[388977] = {
["isChanneled"] = true,
["source"] = "Territorial Coastling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193163,
},
[46042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[80195] = {
["source"] = "Stonecore Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 42692,
},
[50715] = {
["isChanneled"] = true,
["source"] = "Ring-Lord Sorceress",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 27639,
},
[118525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Tideweaver",
["npcID"] = 59181,
},
[272659] = {
["source"] = "Scaled Krolusk Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 134629,
},
[427200] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[68209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Freezya",
["npcID"] = 35897,
},
[131091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skyfire Marine",
["npcID"] = 92950,
},
[294491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time Slime",
["npcID"] = 202450,
},
[114874] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[125758] = {
["source"] = "Apparition of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 64368,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["npcID"] = 80005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1736,
},
[369865] = {
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 185353,
},
[421059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[166519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Plume",
["npcID"] = 82701,
},
[278012] = {
["source"] = "Remote-Controlled Mechanostrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 145789,
},
[40102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqueous Spawn",
["npcID"] = 22883,
},
[146050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Gunner",
["npcID"] = 72784,
},
[112894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zouchin Archer",
["npcID"] = 62247,
},
[161150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Grenadier",
["npcID"] = 80936,
},
[394440] = {
["source"] = "Huntmaster Yrgena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201538,
},
[41382] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Battle-mage",
["npcID"] = 23402,
},
[199151] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[83780] = {
["source"] = "Pygmy Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 44897,
},
[451778] = {
["source"] = "Dogmatic Machine Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212878,
},
[265433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[377140] = {
["source"] = "River Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 191618,
},
[392394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[139900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbringer Draz'kil",
["npcID"] = 70445,
},
[306389] = {
["source"] = "Darkmaul Centurion",
["event"] = "SPELL_CAST_START",
["npcID"] = 156825,
},
[455875] = {
["source"] = "Glintwick",
["event"] = "SPELL_CAST_START",
["npcID"] = 219797,
},
[392395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[394443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Wrath",
["npcID"] = 190579,
},
[78828] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mankrik",
["npcID"] = 37847,
},
[451812] = {
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[408502] = {
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204412,
},
[213620] = {
["source"] = "Fal'dorei Web Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 108033,
},
[396492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slobberclaw",
["npcID"] = 195972,
},
[455877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Abomination",
["npcID"] = 215654,
},
[188907] = {
["source"] = "Darkfiend Dreadbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 92789,
},
[211957] = {
["source"] = "Glimar Ironfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 91529,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[118081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Curious Water Sprite",
["npcID"] = 57673,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Thundercloud",
["npcID"] = 197509,
},
[171799] = {
["source"] = "Blackfang Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 89746,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[406733] = {
["source"] = "Memory of a Traitorous Sister",
["event"] = "SPELL_CAST_START",
["npcID"] = 200826,
},
[79932] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Sekhemet",
["npcID"] = 47730,
},
[222499] = {
["source"] = "Kvaldir Cursewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 89759,
},
[213846] = {
["source"] = "Brawlgoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 107127,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201774,
},
[447400] = {
["source"] = "Queen Rickiticka",
["event"] = "SPELL_CAST_START",
["npcID"] = 215772,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["npcID"] = 59804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1306,
},
[388305] = {
["source"] = "Glacial Giantess",
["event"] = "SPELL_CAST_START",
["npcID"] = 193075,
},
[423117] = {
["source"] = "Volcoross",
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[124664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Assistant Tart",
["npcID"] = 62793,
},
[395695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sleeping Whelp",
["npcID"] = 196073,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[51110] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[394450] = {
["source"] = "Huntmaster Krakle",
["event"] = "SPELL_CAST_START",
["npcID"] = 191972,
},
[103236] = {
["isChanneled"] = true,
["source"] = "Jade Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 55236,
},
[406737] = {
["source"] = "Memory of a Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200828,
},
[161533] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[258674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Off-Duty Laborer",
["npcID"] = 130436,
},
[282316] = {
["isChanneled"] = true,
["source"] = "Brother Bruen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144782,
},
[41245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Suffering Soul Fragment",
["npcID"] = 23399,
},
[46036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[145552] = {
["source"] = "Irontide Coin Counter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202398,
},
[200757] = {
["source"] = "Volatile Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 96280,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 44404,
},
[382233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Batak",
["npcID"] = 193462,
},
[388310] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[111772] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Warrior",
["npcID"] = 197982,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[62335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Acolyte",
["npcID"] = 32886,
},
[79176] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azure Prickly Crawler",
["npcID"] = 60437,
},
[443292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Shade",
["npcID"] = 217870,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartfang",
["npcID"] = 216035,
},
[396503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[40872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[451793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Al'haggro",
["npcID"] = 216560,
},
[82760] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[390361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormslinger",
["npcID"] = 203746,
},
[134788] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kar Warmaker",
["npcID"] = 68321,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[157794] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[173180] = {
["source"] = "Stoneshamble Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 74962,
},
[457938] = {
["source"] = "Beledar's Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 207802,
},
[159085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Deadeye",
["npcID"] = 85642,
},
[269099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. War Machine",
["npcID"] = 133463,
},
[133765] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["npcID"] = 68036,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[60646] = {
["source"] = "Korjan Slavemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65638,
},
[427223] = {
["isChanneled"] = true,
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 84957,
},
[388316] = {
["source"] = "Grand Artificer Zeerak",
["event"] = "SPELL_CAST_START",
["npcID"] = 201553,
},
[112998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Residual Hatred",
["npcID"] = 58803,
},
[451474] = {
["source"] = "Purgle-lurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214544,
},
[115013] = {
["source"] = "Borokhula the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 58739,
},
[30933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rangari Jonaa",
["npcID"] = 86663,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["encounterID"] = 2325,
["event"] = "SPELL_CAST_START",
["npcID"] = 157300,
},
[205093] = {
["isChanneled"] = true,
["source"] = "Infiltrator Assassin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102395,
},
[144005] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["npcID"] = 71858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[40936] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Illidari Fearbringer",
["npcID"] = 22954,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[180327] = {
["source"] = "Felflame Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 107548,
},
[132743] = {
["source"] = "Darkhatched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 67256,
},
[39593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashtongue Searing Totem",
["npcID"] = 22896,
},
[257656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[201176] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[265084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Blood Priest",
["npcID"] = 131492,
},
[40873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Sky Stalker",
["npcID"] = 23030,
},
[65868] = {
["encounterName"] = "Faction Champions",
["event"] = "SPELL_CAST_START",
["source"] = "Alyssia Moonstalker",
["npcID"] = 34467,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[414942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarled Lasher",
["npcID"] = 207740,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 202789,
},
[225917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rook Spiderling",
["npcID"] = 114516,
},
[412895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[382179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Manipulator Tharohn",
["npcID"] = 188171,
},
[253562] = {
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_START",
["npcID"] = 122972,
},
[394466] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[119622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[414944] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[80117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burrowing Leyworm",
["npcID"] = 106630,
},
[394467] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Acequian",
["npcID"] = 187617,
},
[113479] = {
["source"] = "Master Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59175,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotspreader",
["npcID"] = 207453,
},
[457948] = {
["source"] = "Vek'kix",
["event"] = "SPELL_CAST_START",
["npcID"] = 225425,
},
[115015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terracotta Warrior",
["npcID"] = 59758,
},
[367500] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 195135,
},
[397014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Emissary",
["npcID"] = 197146,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[135818] = {
["source"] = "Alliance Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67901,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["encounterID"] = 2085,
["event"] = "SPELL_CAST_START",
["npcID"] = 125977,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[199674] = {
["source"] = "King Bjorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 97081,
},
[394470] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[165511] = {
["source"] = "Miserain Starsorrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 82017,
},
[124654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Spirit",
["npcID"] = 63519,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[40106] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aqueous Spawn",
["npcID"] = 22883,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["npcID"] = 184972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2587,
},
[283893] = {
["source"] = "High Tinker Mekkatorque",
["event"] = "SPELL_CAST_START",
["npcID"] = 146066,
},
[182146] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fist of the Deceiver",
["npcID"] = 95429,
},
[172679] = {
["source"] = "Gronnling Bonebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80685,
},
[396520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilmo the Ancient",
["npcID"] = 196386,
},
[20823] = {
["source"] = "Amariel Sunsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 67674,
},
[50089] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1976,
},
[390982] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 197129,
},
[136844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God-Hulk",
["npcID"] = 69200,
},
[406760] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[416999] = {
["source"] = "Paladin of the Silver Hand",
["event"] = "SPELL_CAST_START",
["npcID"] = 208193,
},
[369901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 186965,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[455907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[395833] = {
["source"] = "Mara'nar the Thunderous",
["event"] = "SPELL_CAST_START",
["npcID"] = 196913,
},
[419048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[412905] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[455908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[449765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[106826] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1305,
},
[82765] = {
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 44982,
},
[389245] = {
["source"] = "Blacktalon Slayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201831,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97264,
},
[417782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Mekgineer Hologram",
["npcID"] = 207539,
},
[145037] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["npcID"] = 71865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1623,
},
[64717] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arachnopod Destroyer",
["npcID"] = 34183,
},
[258889] = {
["source"] = "Mechanical Guardhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 139805,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[86861] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Golgarok",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50059,
},
[174730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowborne Felcaster",
["npcID"] = 88040,
},
[449768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Cutthroat",
["npcID"] = 219266,
},
[394479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Hail",
["npcID"] = 189039,
},
[121673] = {
["source"] = "Salyin Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 62350,
},
[265880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[40875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[106827] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1305,
},
[132752] = {
["source"] = "Darkhatched Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67255,
},
[373614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[395816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Wallcrasher",
["npcID"] = 187813,
},
[427245] = {
["source"] = "Hapless Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212981,
},
[371956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Terrasentry",
["npcID"] = 188011,
},
[414959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Rootguard",
["npcID"] = 210592,
},
[381575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[417497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rude Crude",
["npcID"] = 206617,
},
[157326] = {
["isChanneled"] = true,
["source"] = "Insidious Defiler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 76969,
},
[106923] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97269,
},
[451820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gargantuan Honeyslime",
["npcID"] = 222960,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[201033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kethrazor",
["npcID"] = 96997,
},
[61353] = {
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 96779,
},
[117664] = {
["source"] = "Vengeful Hui",
["event"] = "SPELL_CAST_START",
["npcID"] = 61156,
},
[412914] = {
["source"] = "Fragment of Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 205968,
},
[406771] = {
["source"] = "Memory of a Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 200827,
},
[83791] = {
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_START",
["npcID"] = 44835,
},
[394485] = {
["source"] = "Hypoxicron",
["event"] = "SPELL_CAST_START",
["npcID"] = 186334,
},
[136850] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[218019] = {
["source"] = "Runebound Stonewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 93344,
},
[417011] = {
["source"] = "Paladin of the Silver Hand",
["event"] = "SPELL_CAST_START",
["npcID"] = 208193,
},
[269169] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Jalazko's Ironguard",
["npcID"] = 149437,
},
[63913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Frost Mage",
["npcID"] = 33819,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["npcID"] = 82721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[449776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Cutthroat",
["npcID"] = 219266,
},
[393045] = {
["source"] = "Colossal Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186672,
},
[190898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[138695] = {
["source"] = "Yalia Sagewhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69618,
},
[40876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[410870] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[165520] = {
["source"] = "Rainiara the Kingslayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82260,
},
[174735] = {
["source"] = "Khaano",
["event"] = "SPELL_CAST_START",
["npcID"] = 86282,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[11975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 75927,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[188046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Denizen of the Dream",
["npcID"] = 198489,
},
[443636] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[194442] = {
["source"] = "Waterlogged Soul Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 99188,
},
[118297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[384252] = {
["isChanneled"] = true,
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190780,
},
[410873] = {
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 45477,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["npcID"] = 56636,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1406,
},
[406778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Blaze Hound",
["npcID"] = 202279,
},
[395012] = {
["source"] = "Temporal Investi-gator",
["event"] = "SPELL_CAST_START",
["npcID"] = 201664,
},
[156307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armsmaster Gokk",
["npcID"] = 77143,
},
[388349] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunless Slitherer",
["npcID"] = 219606,
},
[395952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonecrusher",
["npcID"] = 197125,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["npcID"] = 191510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[394493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ko'jo",
["npcID"] = 186367,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[114182] = {
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 59372,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[369921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Flamewing",
["npcID"] = 207337,
},
[453879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Overspinner Antourix",
["npcID"] = 225263,
},
[64170] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Freya",
["npcID"] = 33410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[50705] = {
["source"] = "Azure Ley-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 27636,
},
[121165] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[265487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodsworn Defiler",
["npcID"] = 133912,
},
[113998] = {
["isChanneled"] = true,
["source"] = "Maw of Despair",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59237,
},
[40877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonmaw Wind Reaver",
["npcID"] = 23330,
},
[427260] = {
["source"] = "Cursed Rooktender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207199,
},
[426596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Diviner",
["npcID"] = 131819,
},
[414974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Rootguard",
["npcID"] = 210592,
},
[83794] = {
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_START",
["npcID"] = 44835,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[374020] = {
["isChanneled"] = true,
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190342,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[369925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Transformed Dreadsquall",
["npcID"] = 197225,
},
[412928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[372235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Mender",
["npcID"] = 195064,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198998,
},
[412063] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Epoch Ripper",
["npcID"] = 205435,
},
[105296] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartfang",
["npcID"] = 216035,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[286842] = {
["source"] = "Azergem Crystalback",
["event"] = "SPELL_CAST_START",
["npcID"] = 147938,
},
[18649] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 91158,
},
[41334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Acolyte",
["npcID"] = 22939,
},
[65133] = {
["encounterName"] = "Hodir",
["source"] = "Elementalist Mahfuun",
["npcID"] = 33328,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1135,
},
[172774] = {
["source"] = "Mangled Boulderbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 85988,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["npcID"] = 187967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2592,
},
[178837] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[378120] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blazing Firesquall",
["npcID"] = 192799,
},
[132763] = {
["source"] = "Ban Bearheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 62806,
},
[64171] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Thorim",
["npcID"] = 33413,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[433410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Fearmonger",
["npcID"] = 216583,
},
[33910] = {
["source"] = "Knight of Theramore",
["event"] = "SPELL_CAST_START",
["npcID"] = 59654,
},
[395214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver A'tir",
["npcID"] = 186859,
},
[81236] = {
["source"] = "Diseased Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 47202,
},
[433411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[115024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terracotta Warrior",
["npcID"] = 59758,
},
[453889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ren'khat",
["npcID"] = 222152,
},
[33500] = {
["encounterName"] = "Thorim",
["source"] = "Dark Rune Champion",
["npcID"] = 32876,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1141,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 206351,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["encounterID"] = 2688,
["event"] = "SPELL_CAST_START",
["npcID"] = 201261,
},
[406792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Magmaclaw",
["npcID"] = 202288,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["event"] = "SPELL_CAST_START",
["npcID"] = 198998,
},
[451843] = {
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[44538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereum Smuggler",
["npcID"] = 24698,
},
[267546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rowdy Reveler",
["npcID"] = 144231,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[394763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Motivator Krathos",
["npcID"] = 201561,
},
[193603] = {
["source"] = "Soulthirster",
["event"] = "SPELL_CAST_START",
["npcID"] = 97630,
},
[136904] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[253583] = {
["isChanneled"] = true,
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122972,
},
[410890] = {
["source"] = "Infinite Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205259,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[182333] = {
["source"] = "Hatecoil Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 88087,
},
[417640] = {
["source"] = "Fel-Touched Shu'halo",
["event"] = "SPELL_CAST_START",
["npcID"] = 206182,
},
[84309] = {
["source"] = "Captain Margun",
["event"] = "SPELL_CAST_START",
["npcID"] = 47981,
},
[453894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ren'khat",
["npcID"] = 222152,
},
[391118] = {
["encounterName"] = "Azureblade",
["source"] = "Scalebane Lieutenant",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 191739,
},
[102227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enemy Tonk",
["npcID"] = 54642,
},
[205462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karuas",
["npcID"] = 97859,
},
[306457] = {
["isChanneled"] = true,
["source"] = "Tunk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157328,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[64966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clockwork Mechanic",
["npcID"] = 34184,
},
[396559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[122193] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["npcID"] = 62408,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[125506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Lindon",
["npcID"] = 59191,
},
[126117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slitherscale Eggdrinker",
["npcID"] = 63532,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[390834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sarana",
["npcID"] = 190161,
},
[143007] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["npcID"] = 71475,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1598,
},
[79937] = {
["source"] = "Anruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 81998,
},
[84822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algari Expedition Priest",
["npcID"] = 217676,
},
[396019] = {
["source"] = "The Golden Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 59545,
},
[62042] = {
["encounterName"] = "Thorim",
["source"] = "Thorim",
["npcID"] = 32865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1141,
},
[386993] = {
["source"] = "Cascade Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194939,
},
[449318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[414992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rootsear Defiler",
["npcID"] = 209256,
},
[200345] = {
["isChanneled"] = true,
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98275,
},
[369942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 191901,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202971,
},
[414993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Hierophant",
["npcID"] = 206860,
},
[417041] = {
["source"] = "High Keeper Orendi",
["event"] = "SPELL_CAST_START",
["npcID"] = 205874,
},
[270264] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Breacher",
["npcID"] = 209821,
},
[445217] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[83799] = {
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_START",
["npcID"] = 44835,
},
[271652] = {
["source"] = "Guardian Tannin",
["event"] = "SPELL_CAST_START",
["npcID"] = 152736,
},
[314655] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 161504,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[52080] = {
["source"] = "Stone Trogg Beast Tamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 43598,
},
[156320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armsmaster Gokk",
["npcID"] = 77143,
},
[404757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Manaweaver",
["npcID"] = 203681,
},
[133795] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Hungry Eye",
["npcID"] = 67859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[90329] = {
["source"] = "Ramkahen Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 48514,
},
[369946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Wingripper",
["npcID"] = 202439,
},
[265511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit Drain Totem",
["npcID"] = 135169,
},
[114004] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["encounterID"] = 1422,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59303,
},
[114516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trail Packer",
["npcID"] = 59527,
},
[147646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crag Stalker",
["npcID"] = 72807,
},
[314658] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 161504,
},
[82876] = {
["source"] = "Abyssion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44289,
},
[188763] = {
["source"] = "Felskorn Subduer",
["event"] = "SPELL_CAST_START",
["npcID"] = 91759,
},
[147704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[445205] = {
["source"] = "Cinderbee Buzzer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215021,
},
[417735] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mycelial Growth",
["npcID"] = 208525,
},
[392474] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2673,
["event"] = "SPELL_CAST_START",
["npcID"] = 199000,
},
[190110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abigail the Huntress",
["npcID"] = 94822,
},
[374045] = {
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[192158] = {
["source"] = "Olmyr the Enlightened",
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[142222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntmaster S'thoc",
["npcID"] = 71259,
},
[457484] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224798,
},
[120946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Amber-Weaver",
["npcID"] = 61929,
},
[16006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farseer Drek'Thar",
["npcID"] = 78996,
},
[114183] = {
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 59372,
},
[445718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stolen Loader",
["npcID"] = 223541,
},
[65648] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["npcID"] = 33670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[75610] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[378143] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189869,
},
[76634] = {
["source"] = "Tainted Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 40925,
},
[187194] = {
["source"] = "Felskorn Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 91244,
},
[449815] = {
["source"] = "Sandres the Relicbearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217534,
},
[148133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Mushan Beast",
["npcID"] = 73185,
},
[157348] = {
["encounterName"] = "Gnarlroot",
["source"] = "Greater Storm Elemental",
["npcID"] = 77936,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[423195] = {
["isChanneled"] = true,
["source"] = "Nymue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206172,
},
[41071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Deathshaper",
["npcID"] = 22882,
},
[201375] = {
["isChanneled"] = true,
["source"] = "Seacursed Slaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97043,
},
[120706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragon Launcher",
["npcID"] = 62024,
},
[195232] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[81754] = {
["isChanneled"] = true,
["source"] = "Southsea Taskmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40593,
},
[115030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Brawler",
["npcID"] = 192630,
},
[217385] = {
["source"] = "Webmistress Shinaris",
["event"] = "SPELL_CAST_START",
["npcID"] = 108027,
},
[125370] = {
["source"] = "Torik-Ethis",
["event"] = "SPELL_CAST_START",
["npcID"] = 50388,
},
[369423] = {
["source"] = "Skittering Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 184303,
},
[460057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard An'Jak Shabtir",
["npcID"] = 219665,
},
[136872] = {
["source"] = "Echo of Kros",
["event"] = "SPELL_CAST_START",
["npcID"] = 69341,
},
[122064] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["npcID"] = 62405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[384291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Storm Lizard",
["npcID"] = 194082,
},
[394530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acequian",
["npcID"] = 187617,
},
[424704] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["npcID"] = 79548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[208544] = {
["isChanneled"] = true,
["source"] = "Runeseer Faljar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 93093,
},
[121174] = {
["encounterName"] = "Gekkan",
["event"] = "SPELL_CAST_START",
["source"] = "Harthak Flameseeker",
["npcID"] = 61392,
},
[145064] = {
["encounterName"] = "Norushen",
["source"] = "Essence of Corruption",
["npcID"] = 72263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[423200] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_CAST_START",
["npcID"] = 44819,
},
[378150] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189869,
},
[18651] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 91158,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["encounterID"] = 2326,
["event"] = "SPELL_CAST_START",
["npcID"] = 156814,
},
[167590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Field Medic Nesrerah",
["npcID"] = 83736,
},
[115328] = {
["source"] = "Ik'thik Bloodrager",
["event"] = "SPELL_CAST_START",
["npcID"] = 59887,
},
[259739] = {
["source"] = "Charged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 136550,
},
[113641] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["encounterID"] = 1420,
["event"] = "SPELL_CAST_START",
["npcID"] = 59150,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[147863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jademist Dancer",
["npcID"] = 72767,
},
[222880] = {
["source"] = "Brimstone Wrathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111889,
},
[87387] = {
["source"] = "Brimgore",
["event"] = "SPELL_CAST_START",
["npcID"] = 4339,
},
[449824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[201379] = {
["encounterName"] = "Shivermaw",
["source"] = "Shivermaw",
["encounterID"] = 1845,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101951,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Pillager",
["npcID"] = 199963,
},
[138923] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[148138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfuse Engineer",
["npcID"] = 73095,
},
[118434] = {
["source"] = "Ik'thik Precursor",
["event"] = "SPELL_CAST_START",
["npcID"] = 58367,
},
[133804] = {
["source"] = "Broodmaster Noshi",
["event"] = "SPELL_CAST_START",
["npcID"] = 67264,
},
[302388] = {
["source"] = "Vexiona",
["event"] = "SPELL_CAST_START",
["npcID"] = 151798,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[114185] = {
["isChanneled"] = true,
["source"] = "Scarlet Scholar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59372,
},
[118104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Alemental",
["npcID"] = 56684,
},
[51121] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[106681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragrant Lotus",
["npcID"] = 56472,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[398634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Pillager",
["npcID"] = 199963,
},
[396001] = {
["source"] = "The Songbird Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 59553,
},
[126667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brewmaster Bo",
["npcID"] = 62467,
},
[20792] = {
["source"] = "High Arcanist Savor",
["event"] = "SPELL_CAST_START",
["npcID"] = 67662,
},
[147702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[130466] = {
["source"] = "Twinspire Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 66269,
},
[121762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Builder",
["npcID"] = 62633,
},
[404779] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 202320,
},
[111667] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58756,
},
[433448] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gem Hoarder",
["npcID"] = 220148,
},
[127561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oku-Oku",
["npcID"] = 62486,
},
[210597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ivory Sentinel",
["npcID"] = 92751,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[449831] = {
["isChanneled"] = true,
["source"] = "Kaheti Silk Hauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221327,
},
[172714] = {
["source"] = "Botani Greensworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 80696,
},
[125623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salyin Warscout",
["npcID"] = 50783,
},
[455975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Blight",
["npcID"] = 220273,
},
[134831] = {
["source"] = "Korune Sha-weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 68410,
},
[121284] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["npcID"] = 62205,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1464,
},
[194216] = {
["encounterName"] = "Harbaron",
["source"] = "Harbaron",
["encounterID"] = 1823,
["event"] = "SPELL_CAST_START",
["npcID"] = 96754,
},
[183042] = {
["source"] = "Vethir",
["event"] = "SPELL_CAST_START",
["npcID"] = 92302,
},
[122713] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[111728] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[62016] = {
["encounterName"] = "Thorim",
["source"] = "Thorim",
["npcID"] = 32865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1141,
},
[449834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[146757] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["npcID"] = 72958,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[202408] = {
["source"] = "Runecarver Slave",
["event"] = "SPELL_CAST_START",
["npcID"] = 102375,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[79939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cabalist Doombrow",
["npcID"] = 70708,
},
[79971] = {
["source"] = "Sunwalker Dezco",
["event"] = "SPELL_CAST_START",
["npcID"] = 59851,
},
[121291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mischievous Snow Sprite",
["npcID"] = 59967,
},
[120213] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Ook of Dook",
["npcID"] = 60188,
},
[80003] = {
["source"] = "Thunder Cleft Brave",
["event"] = "SPELL_CAST_START",
["npcID"] = 59853,
},
[126625] = {
["source"] = "Spirit of Violence",
["event"] = "SPELL_CAST_START",
["npcID"] = 64656,
},
[136881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[275778] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Ettin Stoneflinger",
["npcID"] = 136419,
},
[62938] = {
["encounterName"] = "Freya",
["source"] = "Storm Lasher",
["npcID"] = 32919,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1133,
},
[128123] = {
["source"] = "Oracle Hiss'ir",
["event"] = "SPELL_CAST_START",
["npcID"] = 63998,
},
[107356] = {
["encounterName"] = "Taran Zhu",
["source"] = "Corrupted Taran Zhu",
["npcID"] = 56884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1306,
},
[115363] = {
["source"] = "Puckish Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 56349,
},
[78742] = {
["isChanneled"] = true,
["source"] = "Thundergill",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67125,
},
[119394] = {
["isChanneled"] = true,
["source"] = "Greenstone Terror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61159,
},
[418528] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[129084] = {
["source"] = "Ruqin Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 59826,
},
[138632] = {
["source"] = "Slavemaster Shiaxu",
["event"] = "SPELL_CAST_START",
["npcID"] = 69923,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[127834] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 62980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1507,
},
[374073] = {
["source"] = "Primalist Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[120667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Marksman",
["npcID"] = 61968,
},
[128708] = {
["source"] = "Bubbling Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59521,
},
[396599] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faunos",
["npcID"] = 200725,
},
[455984] = {
["source"] = "Voidstone Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 221307,
},
[147309] = {
["source"] = "Windfeather Nestkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72761,
},
[455380] = {
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 218251,
},
[107357] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1306,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[15577] = {
["isChanneled"] = true,
["source"] = "Hedric Evencane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58840,
},
[451890] = {
["source"] = "Dogmatic Soot-Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212876,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2635,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[114848] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[119688] = {
["source"] = "Et'kil",
["event"] = "SPELL_CAST_START",
["npcID"] = 61540,
},
[91335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warrior",
["npcID"] = 61842,
},
[199341] = {
["source"] = "Valarjar Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[402769] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202260,
},
[116710] = {
["source"] = "Zhi-Zhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 54924,
},
[130395] = {
["encounterName"] = "The Stone Guard",
["source"] = "Jasper Guardian",
["npcID"] = 59915,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1395,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["npcID"] = 60709,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[140673] = {
["source"] = "Rocky Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 70430,
},
[174769] = {
["source"] = "Steamscar Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81747,
},
[122301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Sprite",
["npcID"] = 62930,
},
[402748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Crusher",
["npcID"] = 202284,
},
[396605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faunos",
["npcID"] = 200725,
},
[13952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightsworn Vindicator",
["npcID"] = 22861,
},
[31707] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[394558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Flame",
["npcID"] = 198577,
},
[86881] = {
["encounterName"] = "Corborus",
["source"] = "Corborus",
["encounterID"] = 1056,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43438,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[140543] = {
["source"] = "Hu'seng the Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69483,
},
[427323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[129018] = {
["source"] = "Dojani Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 65626,
},
[141381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Boltblaster",
["npcID"] = 71329,
},
[123960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Little Liuyang",
["npcID"] = 63313,
},
[114565] = {
["source"] = "Big Bessa",
["event"] = "SPELL_CAST_START",
["npcID"] = 58787,
},
[22273] = {
["isChanneled"] = true,
["source"] = "Theramore Arcanist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59596,
},
[111570] = {
["encounterName"] = "Lilian Voss",
["source"] = "Lilian Voss",
["npcID"] = 58722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1429,
},
[445125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cindersting",
["npcID"] = 220238,
},
[125069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber-Ridden Mushan",
["npcID"] = 63568,
},
[111594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[116831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Konk",
["npcID"] = 55509,
},
[407296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[198407] = {
["source"] = "Skeletal Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 114289,
},
[95283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hagman",
["npcID"] = 71436,
},
[133817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Team Leader Scooter",
["npcID"] = 67810,
},
[120670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[121182] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61392,
},
[113503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tomb Guardian",
["npcID"] = 60912,
},
[382277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Balara",
["npcID"] = 193457,
},
[255824] = {
["source"] = "Dazar'ai Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 122971,
},
[394564] = {
["source"] = "Lord Epochbrgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 193241,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[62131] = {
["encounterName"] = "Thorim",
["source"] = "Thorim",
["npcID"] = 32865,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1141,
},
[135191] = {
["source"] = "Archmage Lan'dalock",
["event"] = "SPELL_CAST_START",
["npcID"] = 68617,
},
[147333] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tormented Initiate",
["npcID"] = 73349,
},
[396613] = {
["source"] = "Munchbeak Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 195970,
},
[125480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Searsting",
["npcID"] = 63569,
},
[134058] = {
["source"] = "Bilgewater Blastgineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67884,
},
[12739] = {
["source"] = "Kor'kron Soulbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 68342,
},
[396614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavernous Tyrant",
["npcID"] = 199197,
},
[141391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Boltblaster",
["npcID"] = 71329,
},
[392519] = {
["isChanneled"] = true,
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197799,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["npcID"] = 56717,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1413,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[406854] = {
["source"] = "Malgosa Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205620,
},
[140375] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loa Speaker",
["npcID"] = 69302,
},
[402759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Crusher",
["npcID"] = 202284,
},
[57780] = {
["source"] = "Steelforged Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 33236,
},
[133820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Team Leader Scooter",
["npcID"] = 67810,
},
[143424] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["npcID"] = 71480,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1598,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[412999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Dezran",
["npcID"] = 201677,
},
[149184] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[137588] = {
["source"] = "Guardian Tak'u",
["event"] = "SPELL_CAST_START",
["npcID"] = 69336,
},
[110945] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["npcID"] = 56747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1303,
},
[149179] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[87396] = {
["isChanneled"] = true,
["source"] = "Sapphire Scarab",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46127,
},
[216755] = {
["source"] = "Excess Power",
["event"] = "SPELL_CAST_START",
["npcID"] = 109009,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[169657] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[128134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ilikkax",
["npcID"] = 62833,
},
[135220] = {
["source"] = "Silver Covenant Spellbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 68043,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[147689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Oathguard",
["npcID"] = 72892,
},
[149463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Berserker",
["npcID"] = 72895,
},
[62662] = {
["encounterName"] = "General Vezax",
["source"] = "General Vezax",
["npcID"] = 33271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1134,
},
[136894] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[126878] = {
["source"] = "Taoshi",
["event"] = "SPELL_CAST_START",
["npcID"] = 62593,
},
[135173] = {
["source"] = "Sorin Magehand",
["event"] = "SPELL_CAST_START",
["npcID"] = 68587,
},
[99172] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[149181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grom'kar Pyro",
["npcID"] = 75387,
},
[424621] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Sergeant Shaynemail",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[384336] = {
["source"] = "Nokhud Lancemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[64692] = {
["source"] = "Mechagnome Battletank",
["event"] = "SPELL_CAST_START",
["npcID"] = 34164,
},
[186041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightglaive the Traitor",
["npcID"] = 90621,
},
[106851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stout Brew Alemental",
["npcID"] = 59519,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[451913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascended Webfriar",
["npcID"] = 219022,
},
[306523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistfang Howler",
["npcID"] = 162969,
},
[191161] = {
["event"] = "SPELL_CAST_START",
["source"] = "God-King Skovald",
["npcID"] = 92307,
},
[79856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyromancer Flamehearth",
["npcID"] = 70709,
},
[427341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[396625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toxic Swogmother",
["npcID"] = 197774,
},
[125825] = {
["source"] = "Sik'thik Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 62575,
},
[118626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shai Hu",
["npcID"] = 61069,
},
[86374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Guard",
["npcID"] = 61252,
},
[413008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201268,
},
[130120] = {
["source"] = "Apparition of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 66100,
},
[216759] = {
["source"] = "Ael'Yith",
["event"] = "SPELL_CAST_START",
["npcID"] = 90267,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[128049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mygoness",
["npcID"] = 62766,
},
[126856] = {
["isChanneled"] = true,
["source"] = "Serevex",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62580,
},
[377512] = {
["source"] = "Igneous Mollusc",
["event"] = "SPELL_CAST_START",
["npcID"] = 200806,
},
[213688] = {
["source"] = "Fel Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 107024,
},
[306527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistfang Alpha",
["npcID"] = 150108,
},
[140106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeb'tula Spearanger",
["npcID"] = 69518,
},
[137203] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[193211] = {
["encounterName"] = "Ymiron, the Fallen King",
["source"] = "Ymiron, the Fallen King",
["encounterID"] = 1822,
["event"] = "SPELL_CAST_START",
["npcID"] = 96756,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[144379] = {
["encounterName"] = "Sha of Pride",
["source"] = "Manifestation of Pride",
["npcID"] = 71946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1604,
},
[147398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Pool Tender",
["npcID"] = 73342,
},
[427346] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[413012] = {
["source"] = "Shadow Additive",
["event"] = "SPELL_CAST_START",
["npcID"] = 205671,
},
[396828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vorgan the Mangler",
["npcID"] = 190467,
},
[269670] = {
["encounterName"] = "Avatar of Sethraliss",
["source"] = "Avatar of Sethraliss",
["encounterID"] = 2127,
["event"] = "SPELL_CAST_START",
["npcID"] = 133392,
},
[137313] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["encounterID"] = 1577,
["event"] = "SPELL_CAST_START",
["npcID"] = 69465,
},
[273766] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Footman",
["npcID"] = 147195,
},
[115587] = {
["source"] = "Miss Fanny",
["event"] = "SPELL_CAST_START",
["npcID"] = 60069,
},
[130914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorling",
["npcID"] = 66597,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["npcID"] = 56541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1304,
},
[149186] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198998,
},
[186302] = {
["source"] = "Helhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 91384,
},
[273768] = {
["source"] = "Chadwick Paxton",
["event"] = "SPELL_CAST_START",
["npcID"] = 147628,
},
[126307] = {
["source"] = "Gochao the Ironfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 62880,
},
[11829] = {
["source"] = "Gai-Cho Cauterizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62577,
},
[147811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 73483,
},
[306533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Fury",
["npcID"] = 150364,
},
[420501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Primalist",
["npcID"] = 209200,
},
[79721] = {
["source"] = "Southsea Musketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 40632,
},
[275110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak the Ravenous",
["npcID"] = 201535,
},
[445781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stolen Loader",
["npcID"] = 223541,
},
[406874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Acidhide Krolusk",
["npcID"] = 202269,
},
[458068] = {
["source"] = "Croakit",
["event"] = "SPELL_CAST_START",
["npcID"] = 214757,
},
[131034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Gurthani Spirit",
["npcID"] = 65452,
},
[117708] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["npcID"] = 60708,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[423257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 210686,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203678,
},
[120300] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tormented Spirit",
["npcID"] = 60524,
},
[396637] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[382303] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[63414] = {
["encounterName"] = "Mimiron",
["source"] = "VX-001",
["npcID"] = 33651,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1138,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[124546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apothecary Cheng",
["npcID"] = 63812,
},
[423259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Blazekin",
["npcID"] = 210685,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[144070] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[81770] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Catapult",
["npcID"] = 43509,
},
[427356] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[49592] = {
["encounterName"] = "Ley-Guardian Eregos",
["source"] = "Amber Drake",
["encounterID"] = 2013,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 27755,
},
[116070] = {
["source"] = "Gormali Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 54702,
},
[25054] = {
["source"] = "Theramore Faithful",
["event"] = "SPELL_CAST_START",
["npcID"] = 59595,
},
[394593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[396641] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[125441] = {
["source"] = "Kri'thik Screamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61377,
},
[128999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thundermaw",
["npcID"] = 58456,
},
[413024] = {
["source"] = "Valow, Timesworn Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 201222,
},
[191170] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felskorn Chosen",
["npcID"] = 96489,
},
[128869] = {
["source"] = "Qi'tar the Deathcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 62863,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[124309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashfang Hyena",
["npcID"] = 60932,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[196290] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[410978] = {
["source"] = "Djaradin Dragonhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 202108,
},
[406141] = {
["isChanneled"] = true,
["source"] = "Loot Specialist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203353,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[270515] = {
["source"] = "Unleashed Azerite",
["event"] = "SPELL_CAST_START",
["npcID"] = 131311,
},
[376218] = {
["isChanneled"] = true,
["source"] = "Monsoo, The Boiling Rage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190718,
},
[396645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elusive Elder Rockfang",
["npcID"] = 194085,
},
[147720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ordon Fire-Watcher",
["npcID"] = 72894,
},
[85867] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Needlerock Rider",
["npcID"] = 43250,
},
[77721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiritbinder Tu'chek",
["npcID"] = 69301,
},
[396646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loamas",
["npcID"] = 199030,
},
[117931] = {
["source"] = "Arconiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 60824,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[201411] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[399987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[451937] = {
["isChanneled"] = true,
["source"] = "Grand Gluttony",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217747,
},
[136339] = {
["source"] = "Nalak",
["event"] = "SPELL_CAST_START",
["npcID"] = 69099,
},
[146763] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["npcID"] = 72353,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1622,
},
[376171] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[125799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nasra Spothide",
["npcID"] = 50811,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[121513] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Ook of Dook",
["npcID"] = 60188,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[143362] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber Parasite",
["npcID"] = 71578,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1593,
},
[386745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prozela Galeshot",
["npcID"] = 193669,
},
[141421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[144076] = {
["isChanneled"] = true,
["source"] = "Sikari the Mistweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71828,
},
[413544] = {
["source"] = "Timestream Anomaly",
["event"] = "SPELL_CAST_START",
["npcID"] = 199749,
},
[374126] = {
["source"] = "Thousandmile",
["event"] = "SPELL_CAST_START",
["npcID"] = 193676,
},
[384365] = {
["source"] = "Nokhud Lancemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192800,
},
[378222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Hornswog",
["npcID"] = 200275,
},
[82797] = {
["source"] = "Snickerfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 5985,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamecaller",
["npcID"] = 38926,
},
[384366] = {
["source"] = "Sholazian Roc",
["event"] = "SPELL_CAST_START",
["npcID"] = 205854,
},
[125288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Timberhusk",
["npcID"] = 61355,
},
[144628] = {
["encounterName"] = "Norushen",
["source"] = "Titanic Corruption",
["npcID"] = 72051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[118256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brewmaster Chani",
["npcID"] = 60996,
},
[137994] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 69702,
},
[262383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. War Machine",
["npcID"] = 133463,
},
[125899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brewmaster Chani",
["npcID"] = 60996,
},
[138042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Warbringer",
["npcID"] = 69841,
},
[128872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qi'tar the Deathcaller",
["npcID"] = 62863,
},
[394607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Lancer",
["npcID"] = 193198,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[137995] = {
["source"] = "Dark Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 69702,
},
[196296] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[138187] = {
["source"] = "Lightning Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 69834,
},
[146637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Skullsplitter",
["npcID"] = 72983,
},
[128034] = {
["source"] = "Dread Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 63587,
},
[392561] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[125289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Flamecaller",
["npcID"] = 63526,
},
[137045] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[80279] = {
["source"] = "Stonecore Rift Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 42691,
},
[144688] = {
["source"] = "Ordos",
["event"] = "SPELL_CAST_START",
["npcID"] = 72057,
},
[119775] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[166605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Forager",
["npcID"] = 83449,
},
[145550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Shadowmage",
["npcID"] = 72150,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186124,
},
[44475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Mage Guard",
["npcID"] = 24683,
},
[137132] = {
["source"] = "Itoka",
["event"] = "SPELL_CAST_START",
["npcID"] = 69461,
},
[408946] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198870,
},
[427376] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[374135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Craggy Stag",
["npcID"] = 191541,
},
[392565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[125290] = {
["isChanneled"] = true,
["source"] = "Leechfingers",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 63494,
},
[125802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nasra Spothide",
["npcID"] = 50811,
},
[393037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Causality",
["npcID"] = 186672,
},
[393812] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[127338] = {
["source"] = "Sha of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 62541,
},
[445808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heelripper",
["npcID"] = 216555,
},
[374137] = {
["source"] = "Angerdrool",
["event"] = "SPELL_CAST_START",
["npcID"] = 195968,
},
[123461] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[118228] = {
["source"] = "Osul Veteran Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61886,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[137231] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["npcID"] = 68081,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1559,
},
[376186] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[402807] = {
["source"] = "Glittering Shard Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 202326,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[215754] = {
["source"] = "Spawn of Serpentrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 108655,
},
[392569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[149312] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Master Kragg",
["npcID"] = 73775,
},
[210635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Isel the Hammer",
["npcID"] = 94413,
},
[139416] = {
["source"] = "Zandalari Arcanital",
["event"] = "SPELL_CAST_START",
["npcID"] = 69281,
},
[118312] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[372093] = {
["source"] = "Furious Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 196540,
},
[133845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Team Leader Scooter",
["npcID"] = 67810,
},
[411958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iridikron's Creation",
["npcID"] = 205691,
},
[137079] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[136917] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[387508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Destroyer",
["npcID"] = 187244,
},
[376190] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Rotflinger",
["npcID"] = 186362,
},
[427384] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[82801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henry Zykes",
["npcID"] = 37165,
},
[432036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[201858] = {
["source"] = "Taintheart Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 100539,
},
[125292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bataari Flamecaller",
["npcID"] = 63526,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[395841] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197120,
},
[138966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowed Voodoo Spirit",
["npcID"] = 70060,
},
[394622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 197131,
},
[133432] = {
["source"] = "Domination Point Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 67671,
},
[125871] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zar'thik Augurer",
["npcID"] = 64454,
},
[277901] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Williams",
["npcID"] = 131037,
},
[250569] = {
["source"] = "Tally Zapnabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 133627,
},
[147543] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[65210] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Mimiron",
["npcID"] = 33412,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[32735] = {
["source"] = "Steamwheedle Shark",
["event"] = "SPELL_CAST_START",
["npcID"] = 39354,
},
[115054] = {
["isChanneled"] = true,
["source"] = "Engorged Crocolisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56183,
},
[82802] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lashvine",
["npcID"] = 37093,
},
[406911] = {
["source"] = "Sundered Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201288,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[50364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerub'ar Tunneler",
["npcID"] = 25622,
},
[125805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Cacophyte",
["npcID"] = 63680,
},
[146180] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Staff of Resonating Water",
["npcID"] = 72810,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1594,
},
[163541] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["npcID"] = 79545,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1732,
},
[139417] = {
["isChanneled"] = true,
["source"] = "Zandalari Arcanital",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69281,
},
[396674] = {
["source"] = "Ripsaw the Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 193153,
},
[390531] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[392579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[370054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battleseared Magmatusk",
["npcID"] = 196772,
},
[396675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Flame Cleaver",
["npcID"] = 202247,
},
[130413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strongarm Ace",
["npcID"] = 66000,
},
[130925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Doren",
["npcID"] = 66052,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["encounterID"] = 1416,
["event"] = "SPELL_CAST_START",
["npcID"] = 56732,
},
[82803] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lashvine",
["npcID"] = 37093,
},
[431488] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Idriana",
["npcID"] = 214211,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[136207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lion's Landing Priest",
["npcID"] = 67512,
},
[144089] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[413059] = {
["source"] = "Shadow Canister",
["event"] = "SPELL_CAST_START",
["npcID"] = 206019,
},
[260811] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["npcID"] = 129232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[137427] = {
["source"] = "Lor'danel Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 32969,
},
[78196] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Dark Iron Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 41902,
},
[413060] = {
["source"] = "Fire Canister",
["event"] = "SPELL_CAST_START",
["npcID"] = 206022,
},
[148302] = {
["encounterName"] = "Galakras",
["source"] = "Kor'kron Demolisher",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72947,
},
[135285] = {
["source"] = "Summoned Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 68678,
},
[144090] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["npcID"] = 71859,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1606,
},
[455203] = {
["source"] = "XT-Minecrusher 8700",
["event"] = "SPELL_CAST_START",
["npcID"] = 216034,
},
[130414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aarko",
["npcID"] = 77664,
},
[122735] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["npcID"] = 62164,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1463,
},
[41150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illidari Nightlord",
["npcID"] = 22855,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[257791] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[277911] = {
["source"] = "Hrolskald the Fetid",
["event"] = "SPELL_CAST_START",
["npcID"] = 146886,
},
[137990] = {
["source"] = "Electromancer Ju'le",
["event"] = "SPELL_CAST_START",
["npcID"] = 69339,
},
[124935] = {
["source"] = "Sele'na",
["event"] = "SPELL_CAST_START",
["npcID"] = 50766,
},
[36645] = {
["source"] = "Irestone Rumbler",
["event"] = "SPELL_CAST_START",
["npcID"] = 42527,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[30493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverblade Flesh-hunter",
["npcID"] = 58274,
},
[132829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Cannoneer",
["npcID"] = 69194,
},
[12675] = {
["source"] = "Pearlfin Watershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59361,
},
[408969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[139206] = {
["source"] = "Zandalari Storm-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 69390,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[374158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snoozing Basilisk Bull",
["npcID"] = 189757,
},
[408970] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198870,
},
[462686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[396684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kangalo",
["npcID"] = 200738,
},
[21390] = {
["encounterName"] = "Lord Vyletongue",
["source"] = "Lord Vyletongue",
["encounterID"] = 424,
["event"] = "SPELL_CAST_START",
["npcID"] = 12236,
},
[387614] = {
["source"] = "Ukhel Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84358,
},
[137438] = {
["source"] = "Zandalari Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 69521,
},
[139468] = {
["source"] = "No'ku Stormsayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 70276,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[427402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rookguard",
["npcID"] = 207197,
},
[79913] = {
["source"] = "Earthmender Norsala",
["event"] = "SPELL_CAST_START",
["npcID"] = 43503,
},
[128368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Battlesinger",
["npcID"] = 62758,
},
[120951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho Cho the Wicked",
["npcID"] = 60090,
},
[263583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Askari",
["npcID"] = 134012,
},
[421260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[124951] = {
["source"] = "Hatescale Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 63490,
},
[378835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brackenhide Rotflinger",
["npcID"] = 186362,
},
[427404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[444946] = {
["source"] = "Stormtop Terralisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 214581,
},
[445974] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222281,
},
[408975] = {
["source"] = "Sundered Edgelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 198873,
},
[394641] = {
["source"] = "Frostfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 192030,
},
[145119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storeroom Guard",
["npcID"] = 73152,
},
[449038] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[392594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meatgrinder Sotok",
["npcID"] = 186777,
},
[427406] = {
["source"] = "Austin Huxworth",
["event"] = "SPELL_CAST_START",
["npcID"] = 209065,
},
[396690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kangalo",
["npcID"] = 200738,
},
[139336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unblinking Eye",
["npcID"] = 70238,
},
[302494] = {
["source"] = "Grip of Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 151872,
},
[394643] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baron Ashflow",
["npcID"] = 192274,
},
[194266] = {
["encounterName"] = "Harbaron",
["source"] = "Shackled Servitor",
["encounterID"] = 1823,
["event"] = "SPELL_CAST_START",
["npcID"] = 98693,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["npcID"] = 79545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1732,
},
[440162] = {
["source"] = "Scarlet Stinkcap",
["event"] = "SPELL_CAST_START",
["npcID"] = 212579,
},
[120442] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shek'zeer Bladesworn",
["npcID"] = 62563,
},
[122797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uruk",
["npcID"] = 62613,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[445910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 213434,
},
[177885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwing Adolescent",
["npcID"] = 85357,
},
[126907] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Kor'thik Fleshrender",
["encounterID"] = 1499,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 64902,
},
[197818] = {
["source"] = "Malgalor",
["event"] = "SPELL_CAST_START",
["npcID"] = 92608,
},
[119693] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["encounterID"] = 1431,
["event"] = "SPELL_CAST_START",
["npcID"] = 60999,
},
[126560] = {
["source"] = "Ravenous Kunchong",
["event"] = "SPELL_CAST_START",
["npcID"] = 63696,
},
[133859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zan'thik Brutalizer",
["npcID"] = 67774,
},
[140356] = {
["source"] = "Slateshell Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 67763,
},
[140511] = {
["source"] = "Hu'seng the Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69483,
},
[194268] = {
["source"] = "Greywatch Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 94614,
},
[406934] = {
["source"] = "Djaradin Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202256,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[41152] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Maiev Shadowsong",
["npcID"] = 23197,
["event"] = "SPELL_CAST_START",
["encounterID"] = 609,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[137227] = {
["encounterName"] = "Iron Qon",
["source"] = "Dam'ren",
["encounterID"] = 1559,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 68081,
},
[139178] = {
["source"] = "Goda",
["event"] = "SPELL_CAST_START",
["npcID"] = 69998,
},
[139402] = {
["isChanneled"] = true,
["source"] = "No'ku Stormsayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 70276,
},
[195293] = {
["source"] = "Skjal",
["event"] = "SPELL_CAST_START",
["npcID"] = 99307,
},
[118644] = {
["isChanneled"] = true,
["source"] = "Ken-Ken",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60979,
},
[456936] = {
["source"] = "Manifested Protocol",
["event"] = "SPELL_CAST_START",
["npcID"] = 222946,
},
[190174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skyfire Powder Monkey",
["npcID"] = 94275,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[15117] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Spitescale Siren",
["npcID"] = 38301,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Pebblemaker",
["npcID"] = 218658,
},
[277010] = {
["isChanneled"] = true,
["source"] = "Moon Priestess Liara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 152729,
},
[122740] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[448002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Stormfang",
["npcID"] = 216017,
},
[11443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomlord",
["npcID"] = 72564,
},
[117809] = {
["isChanneled"] = true,
["source"] = "Jahesh of Osul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60802,
},
[449942] = {
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[427417] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[202462] = {
["encounterName"] = "Sael'orn",
["source"] = "Sael'orn",
["encounterID"] = 1851,
["event"] = "SPELL_CAST_START",
["npcID"] = 102387,
},
[440652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[118645] = {
["isChanneled"] = true,
["source"] = "Ken-Ken",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60979,
},
[378394] = {
["source"] = "Riled Kelpcoil",
["event"] = "SPELL_CAST_START",
["npcID"] = 225901,
},
[214749] = {
["source"] = "Starbuck",
["event"] = "SPELL_CAST_START",
["npcID"] = 107487,
},
[422393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Darkness",
["npcID"] = 208457,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[270494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Charlga Razorflank",
["npcID"] = 221749,
},
[423324] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[418295] = {
["source"] = "Treasure Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 208728,
},
[115062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unga Spearscamp",
["npcID"] = 62474,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[456940] = {
["source"] = "Manifested Protocol",
["event"] = "SPELL_CAST_START",
["npcID"] = 222946,
},
[452133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulldunk",
["npcID"] = 221310,
},
[144103] = {
["source"] = "Sikari the Mistweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 71828,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201773,
},
[137077] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Spear-Shaper",
["npcID"] = 69388,
},
[195493] = {
["source"] = "Bonespeaker Carver",
["event"] = "SPELL_CAST_START",
["npcID"] = 93070,
},
[430179] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[450885] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[440181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boskroot Brute",
["npcID"] = 212736,
},
[417184] = {
["source"] = "Eviscerator Kintara",
["event"] = "SPELL_CAST_START",
["npcID"] = 207596,
},
[450628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[401370] = {
["source"] = "Raging Owlbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 205316,
},
[450417] = {
["source"] = "Plaguehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 219267,
},
[417185] = {
["source"] = "Eviscerator Kintara",
["event"] = "SPELL_CAST_START",
["npcID"] = 207596,
},
[394660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bluescale",
["npcID"] = 188723,
},
[430238] = {
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[448341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Thwacker",
["npcID"] = 203877,
},
[408995] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[273844] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Honorbound Spiritcaller",
["npcID"] = 145008,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[118647] = {
["source"] = "The Wrestler",
["event"] = "SPELL_CAST_START",
["npcID"] = 60997,
},
[394662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sky Vixen Shokhari",
["npcID"] = 190761,
},
[273845] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Honorbound Spiritcaller",
["npcID"] = 145008,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Brain of Yogg-Saron",
["npcID"] = 33890,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1143,
},
[425379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamespreader",
["npcID"] = 210294,
},
[256101] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[187653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felskorn Warmonger",
["npcID"] = 96135,
},
[81276] = {
["encounterName"] = "The Crown Chemical Co.",
["event"] = "SPELL_CAST_START",
["source"] = "Troggzor the Earthinator",
["npcID"] = 43456,
},
[457183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowspinner Azarak",
["npcID"] = 222612,
},
[378282] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[41410] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["npcID"] = 23419,
["event"] = "SPELL_CAST_START",
["encounterID"] = 606,
},
[450180] = {
["source"] = "Angry Rocks",
["event"] = "SPELL_CAST_START",
["npcID"] = 220543,
},
[75645] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[428066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[432114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[456468] = {
["source"] = "Skardyn Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 213566,
},
[436360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glooming Darkweaver",
["npcID"] = 216868,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[140539] = {
["source"] = "Memory of a Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 200816,
},
[393696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[113017] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[452169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[447909] = {
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[204517] = {
["source"] = "Portal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 102335,
},
[427432] = {
["source"] = "Prophet of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 207315,
},
[91004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Envoker",
["npcID"] = 48418,
},
[22883] = {
["source"] = "Siaszerathel",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[144482] = {
["encounterName"] = "Norushen",
["source"] = "Manifestation of Corruption",
["npcID"] = 71977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1624,
},
[204852] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[396717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[374192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mature Basilisk",
["npcID"] = 191696,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[187406] = {
["source"] = "Gunnlaug Scaleheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 91240,
},
[431674] = {
["source"] = "Kaheti Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 217448,
},
[426260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepwater Kobyss",
["npcID"] = 215750,
},
[88445] = {
["source"] = "Dark Iron Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 8338,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2728,
},
[58438] = {
["source"] = "Unbound Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 30856,
},
[73599] = {
["source"] = "Gobber",
["event"] = "SPELL_CAST_START",
["npcID"] = 39201,
},
[452009] = {
["source"] = "Earthenwork Ironstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 213951,
},
[445866] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarm-Maven Donmiss",
["npcID"] = 216578,
},
[446261] = {
["source"] = "Emboldened Fog Wither",
["event"] = "SPELL_CAST_START",
["npcID"] = 219909,
},
[124793] = {
["source"] = "Shado-Pan Wu Kao",
["event"] = "SPELL_CAST_START",
["npcID"] = 63846,
},
[448347] = {
["source"] = "Diu'mik",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[200674] = {
["isChanneled"] = true,
["source"] = "Vile Soulmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97014,
},
[440007] = {
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 214576,
},
[114149] = {
["source"] = "Chief Gukgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 54868,
},
[418082] = {
["source"] = "Felhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 206090,
},
[115320] = {
["source"] = "Alliance Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 56303,
},
[434252] = {
["source"] = "Nerubian Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 217039,
},
[200425] = {
["source"] = "Mo'arg Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 98484,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[202473] = {
["encounterName"] = "Sael'orn",
["source"] = "Sael'orn",
["encounterID"] = 1851,
["event"] = "SPELL_CAST_START",
["npcID"] = 102387,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["encounterID"] = 2672,
["event"] = "SPELL_CAST_START",
["npcID"] = 203799,
},
[449965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Roots",
["npcID"] = 216250,
},
[394676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Council Icecaller",
["npcID"] = 198501,
},
[372151] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 186284,
},
[456259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[448111] = {
["source"] = "Diu'mik",
["event"] = "SPELL_CAST_START",
["npcID"] = 211564,
},
[370104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Protector",
["npcID"] = 186600,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["encounterID"] = 2671,
["event"] = "SPELL_CAST_START",
["npcID"] = 198999,
},
[170734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darktide Bomb Bot",
["npcID"] = 78822,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[448248] = {
["source"] = "Bloodstained Webmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 223253,
},
[388535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnawbone Chainchewer",
["npcID"] = 196521,
},
[390583] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[458256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurker of the Deeps",
["npcID"] = 220285,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[88959] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[447921] = {
["source"] = "Cascade Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 214594,
},
[458160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skulldunk",
["npcID"] = 221310,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1305,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[124283] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["npcID"] = 61485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1447,
},
[458161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurker of the Deeps",
["npcID"] = 220285,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 195821,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["npcID"] = 60701,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[146163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[409016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[140316] = {
["source"] = "Kirin Tor Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 67934,
},
[428150] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[143534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Joan Lorraine",
["npcID"] = 67530,
},
[104318] = {
["encounterName"] = "Rezan",
["source"] = "Wild Imp",
["encounterID"] = 2086,
["event"] = "SPELL_CAST_START",
["npcID"] = 55659,
},
[456295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[388540] = {
["source"] = "O'nank Shorescour",
["event"] = "SPELL_CAST_START",
["npcID"] = 193118,
},
[436180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Air Elemental",
["npcID"] = 215048,
},
[409018] = {
["source"] = "Failed Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 203927,
},
[263628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[144461] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[447926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galvanized Lurker",
["npcID"] = 224779,
},
[417210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[465012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[331274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Goo",
["npcID"] = 218519,
},
[154356] = {
["source"] = "Sargerei Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 76595,
},
[196335] = {
["source"] = "Oktel Dragonblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 92920,
},
[433845] = {
["source"] = "Blood Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[306633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Balance",
["npcID"] = 150411,
},
[398782] = {
["source"] = "Farscale Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[452024] = {
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 214576,
},
[129916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siftworm",
["npcID"] = 65711,
},
[462856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullbot",
["npcID"] = 229729,
},
[392640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Black Blood",
["encounterID"] = 2901,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[306635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Balance",
["npcID"] = 150411,
},
[463081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[116606] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zandalari Skullcharger",
["npcID"] = 60375,
},
[144119] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["npcID"] = 71407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1593,
},
[53824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undertide Deepfisher",
["npcID"] = 226961,
},
[431549] = {
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[171764] = {
["source"] = "Baron Scaldius",
["event"] = "SPELL_CAST_START",
["npcID"] = 107195,
},
[431697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boltweaver Enforcer",
["npcID"] = 223362,
},
[396738] = {
["source"] = "The Blue Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195976,
},
[128381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'thik Resonator",
["npcID"] = 62755,
},
[448162] = {
["source"] = "Enormous Kelp-Snaggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 221061,
},
[443837] = {
["encounterName"] = "Reformed Fury",
["source"] = "Speaker Davenruth",
["npcID"] = 218022,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2998,
},
[136953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Water-Binder",
["npcID"] = 69455,
},
[406978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Contamination Guard",
["npcID"] = 205244,
},
[261866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hexthralled Crossbowman",
["npcID"] = 131529,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[431702] = {
["source"] = "Colormancer Nirethi",
["event"] = "SPELL_CAST_START",
["npcID"] = 222150,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[452442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terror of the Forge",
["npcID"] = 220271,
},
[288210] = {
["source"] = "Necromancer Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 146834,
},
[136954] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[446682] = {
["source"] = "Warped Sapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 220655,
},
[458675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[450697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[396742] = {
["source"] = "Crabtankerous",
["event"] = "SPELL_CAST_START",
["npcID"] = 209909,
},
[431691] = {
["source"] = "Sureki String Conductor",
["event"] = "SPELL_CAST_START",
["npcID"] = 216554,
},
[450899] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[146170] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kor'kron Dark Farseer",
["npcID"] = 72770,
},
[139003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mumta",
["npcID"] = 69664,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[119862] = {
["encounterName"] = "Sha of Fear",
["source"] = "Cheng Kang",
["npcID"] = 61042,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[382410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[191401] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[125311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scritch",
["npcID"] = 50831,
},
[295032] = {
["source"] = "Livid Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 227355,
},
[187126] = {
["source"] = "Bladesquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 91874,
},
[450400] = {
["source"] = "Supervisor Radlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 220897,
},
[452035] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[306779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nathanos Blightcaller",
["npcID"] = 152329,
},
[458610] = {
["source"] = "Toadstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 207803,
},
[400842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[448161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[448179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Abomination",
["npcID"] = 219454,
},
[140347] = {
["source"] = "Silver Covenant Spellblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 67970,
},
[456664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rabaan",
["npcID"] = 228343,
},
},
["InterruptableSpells"] = {
[199726] = true,
[420320] = true,
[1766] = true,
[377008] = true,
[93985] = true,
[384365] = true,
[2139] = true,
[123060] = true,
[143343] = true,
[116705] = true,
[347008] = true,
[41197] = true,
[40823] = true,
[161220] = true,
[134091] = true,
[420090] = true,
[220543] = true,
[30849] = true,
[125888] = true,
[386071] = true,
[96231] = true,
[183752] = true,
[32747] = true,
[57994] = true,
[147362] = true,
[41180] = true,
[19647] = true,
[420330] = true,
[138763] = true,
[31935] = true,
[404754] = true,
[47528] = true,
[139425] = true,
[97547] = true,
[132409] = true,
[187707] = true,
[427609] = true,
[196543] = true,
[162617] = true,
[351338] = true,
[139867] = true,
[6552] = true,
[426240] = true,
[429812] = true,
[11972] = true,
[381516] = true,
[266106] = true,
[91807] = true,
[98237] = true,
[139869] = true,
},
["performance_units"] = {
[211306] = true,
[214441] = true,
[189707] = true,
[84401] = true,
[96247] = true,
[189363] = true,
[100529] = true,
[208994] = true,
[210231] = true,
[167999] = true,
[176920] = true,
[194999] = true,
[191714] = true,
[189706] = true,
[197398] = true,
[196642] = true,
[196679] = true,
},
["profiles"] = {
["Default"] = {
["target_shady_combat_only"] = false,
["extra_icon_use_blizzard_border_color"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1703478753,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["Icon"] = -13828,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 382,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
},
["Prio"] = 99,
["Name"] = "Aura - Invalidate Unit [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1696897853,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["Icon"] = 136048,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 549,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189729",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["outline"] = true,
["nameplateColor"] = {
0.86666666666667,
0.43529411764706,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700351235,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["Icon"] = -14046,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 917,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["Enabled"] = true,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Prio"] = 99,
["Name"] = "Spiteful/Fixate Name&Glow",
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["NpcNames"] = {
"174773",
"164702",
"166251",
"165913",
"167898",
"56792",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700785512,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["Icon"] = 413591,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Enabled"] = true,
["Revision"] = 324,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
},
["Prio"] = 99,
["Name"] = "Pandemic Glow (Pixel)",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1713704437,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 1036,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
268030,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
371983,
373405,
391599,
387627,
375653,
387862,
392457,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
392486,
385331,
388804,
106856,
397394,
377612,
385574,
215204,
212773,
397382,
265540,
265542,
403978,
403671,
278755,
265511,
183528,
193803,
193585,
410870,
87779,
373897,
411302,
274400,
400296,
405433,
408805,
411300,
412378,
412233,
415304,
421029,
421031,
420525,
425816,
264390,
264407,
253583,
256849,
204243,
427459,
169839,
76820,
225562,
436841,
},
["Prio"] = 99,
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Time"] = 1696897854,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["Icon"] = 135801,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["Enabled"] = false,
["Revision"] = 190,
["semver"] = "",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Author"] = "Nephuhlim-Illidan",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
228287,
295311,
391191,
},
["Prio"] = 99,
["Name"] = "Change Color on Debuff",
["PlaterCore"] = 1,
["version"] = -1,
["Desc"] = "",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1710901066,
["url"] = "https://wago.io/XPNrgiHqw/2",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["Icon"] = 644389,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Enabled"] = true,
["Revision"] = 128,
["semver"] = "1.1.0",
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Hide Nameplate",
["PlaterCore"] = 1,
["version"] = 2,
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["Options"] = {
},
["NpcNames"] = {
"167966",
"199220",
"199916",
},
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["casting"] = 1.1999999284744,
["hide"] = true,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1700351230,
["url"] = "https://wago.io/8_ULM1VxI/7",
["Temp_ConstructorCode"] = "function()\nend",
["Icon"] = 298642,
["Temp_OnHideCode"] = "function()\nend",
["Enabled"] = true,
["Revision"] = 179,
["semver"] = "1.0.6",
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Incorporeal",
["PlaterCore"] = 1,
["version"] = 7,
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Debuffed Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Casting Scale",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["NpcNames"] = {
"204560",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1723750905,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "https://wago.io/miabQpRfX/11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 496,
["semver"] = "1.0.10",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["version"] = 11,
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = " [D] Add - Health Markers",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"186121",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"191736",
"201261",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"164451",
"164463",
"164461",
"165946",
"133007",
"198933",
"201792",
"207638",
"199000",
"209892",
"207639",
"198997",
"131527",
"131824",
"131825",
"131823",
"40586",
"99192",
"98810",
"98965",
"40825",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["npcs_renamed"] = {
[173044] = "Stitcher",
[197698] = "Thundercunt",
[176394] = "Worker",
[192333] = "Alpha",
[178141] = "Fish Dicker",
[40765] = "Chief Crab",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[180015] = "Dickhand",
[176523] = "Painsmith",
[185683] = "Speed Relic",
[98521] = "Etheldrin",
[101839] = "Cat",
[199368] = "Big Crystal",
[164967] = "Dickus",
[179842] = "Assclapper",
[144298] = "Mk III",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[181224] = "Da Sausage",
[114627] = "Terror",
[168969] = "Green Slime",
[189813] = "Dathea",
[174843] = "Maitre D",
[184130] = "Earthen",
[184908] = "Haste Boi",
[179733] = "Fish Dick",
[184972] = "Eggnog",
[131823] = "M'lady",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[151649] = "Mk I",
[98538] = "Velandras",
[190340] = "Defender",
[208445] = "Larodar",
[131825] = "Brian",
[180990] = "Jailer",
[175663] = "Hill Brad",
[135048] = "Bacon",
[185610] = "Simp",
[59555] = "Haunting",
[195929] = "Twomen",
[189722] = "Gulp This",
[185680] = "Haste Relic",
[190128] = "Zul'gondeez",
[98696] = "Illysanna",
[209090] = "T. Swift",
[98965] = "Kur'talos",
[191736] = "Beak Bitch",
[175646] = "S.U.C.C. Master",
[181548] = "Absolution",
[59726] = "Pearl",
[214012] = "Dark ",
[174773] = "Spiteful",
[168153] = "Plaguecock",
[32666] = "Uh oh",
[181546] = "Renewal",
[196116] = "Furry",
[164705] = "Haste Slime",
[99192] = "Xavius",
[194897] = "Stormsurge Totem",
[102781] = "Bat!",
[188026] = "Skull Emoji",
[181549] = "War",
[164501] = "Mute Me",
[167731] = "Separator",
[201155] = "Nascent Dragon",
[184582] = "Eric",
[151657] = "Bomb",
[168310] = "Plaguecock",
[182169] = "Lithium",
[197298] = "Nascent Dragon",
[164707] = "Purple Slime",
[190484] = "Cracka",
[197219] = "Big Lasher",
[162691] = "Blightboner",
[70245] = "uh oh",
[193457] = "Ballerina",
[180773] = "Trash Can",
[181551] = "Duty",
[165946] = "Mordretha",
[185685] = "CDR Relic",
[198998] = "Tyr",
[194315] = "Shlongo",
[114632] = "Attendant",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[184911] = "CDR Boi",
[164804] = "Simp Tree",
[179334] = "Not the boss",
[178171] = "Don't Pull Me",
[194316] = "I'm Zarii",
[144294] = "Twinkerer",
[175806] = "Sa'lami",
[198047] = "Tempest",
[191222] = "Frost Dragon",
},
["blizzard_nameplate_large_font"] = "Expressway",
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4260",
["nameplateResourceOnTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateLargerScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateSelfScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["nameplateShowEnemies"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4262",
["nameplateShowSelf"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateGlobalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowEnemyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateOverlapH"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8646",
["nameplateMotion"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateSelfAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateSelfBottomInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowOnlyNames"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4261",
["nameplateSelfTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1574: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1052: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:870: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:870>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2485: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2482>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4684: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:734: in function <Interface/AddOns/Details/Libs/DF/button.lua:670>\n",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["all-consuming spite"] = {
343553,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["freezing ice stone"] = {
402940,
403391,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["insidious chill"] = {
391566,
391568,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["moonkin aura"] = {
209740,
209746,
},
["in the spotlight"] = {
227931,
312926,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
},
["url"] = "https://wago.io/ak3iS95aa/98",
["blizzard_nameplate_font_override_enabled"] = true,
["hover_highlight_alpha"] = 0.5,
["indicator_raidmark_scale"] = 0.84999996423721,
["cast_statusbar_spark_alpha"] = 1,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["spellname_text_font"] = "Expressway",
["castbar_offset"] = -55,
["spellpercent_text_font"] = "Expressway",
["mana_incombat"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["cast"] = {
170,
},
["percent_text_size"] = 9,
["castbar_enabled"] = false,
["cast_incombat"] = {
170,
},
["percent_text_color"] = {
1,
1,
1,
},
["percent_text_font"] = "Expressway",
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["mana"] = {
168,
4,
},
["power_percent_text_size"] = 8,
["percent_text_anchor"] = {
["y"] = 1.2999992370605,
},
["healthbar_color"] = {
0,
0,
0,
},
["module_enabled"] = false,
},
["friendlyplayer"] = {
["actorname_text_font"] = "Expressway",
["spellpercent_text_font"] = "Expressway",
["actorname_friend_color"] = {
0.70980392156863,
},
["actorname_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["actorname_guild_color"] = {
0.49803921568627,
},
["cast_incombat"] = {
135,
7,
},
["percent_show_percent"] = false,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["percent_text_font"] = "Expressway",
["percent_text_show_decimals"] = false,
["level_text_font"] = "Expressway",
["only_thename"] = true,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["percent_text_ooc"] = true,
["big_actortitle_text_size"] = 9,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["enabled"] = false,
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["module_enabled"] = false,
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["percent_text_enabled"] = true,
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["percent_text_size"] = 10,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["spellpercent_text_enabled"] = true,
["big_actorname_text_font"] = "Expressway",
["level_text_alpha"] = 0.29999998211861,
["spellname_text_size"] = 9,
["percent_show_health"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellpercent_text_size"] = 9,
["spellname_text_font"] = "Expressway",
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2.5,
["side"] = 10,
},
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
},
["enemynpc"] = {
["actorname_text_font"] = "Expressway",
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["actorname_text_size"] = 9,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_font"] = "Expressway",
["spellname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["big_actorname_text_font"] = "Expressway",
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["global_health_width"] = 132,
["enemyplayer"] = {
["actorname_text_font"] = "Expressway",
["big_actorname_text_size"] = 10,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["level_text_size"] = 8,
["health_incombat"] = {
135,
15,
},
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["all_names"] = true,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["big_actortitle_text_size"] = 10,
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["spellname_text_font"] = "Expressway",
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["spellpercent_text_size"] = 9,
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["global_health_height"] = 16,
},
["health_selection_overlay"] = "PlaterFocus",
["aura_y_offset"] = 1.5,
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["cast_statusbar_use_fade_effects"] = false,
["indicator_spec"] = false,
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607843137255,
0.2078431372549,
},
},
["resources_settings"] = {
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-3678-0D44FD01"] = "ComboPoints",
["Player-970-006B99B8"] = "ComboPoints",
["Player-75-0EE5568B"] = "Essence",
["Player-75-0EE8A760"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-5764-00018799"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-3693-0E71AEB0"] = "Chi",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-75-0EEA107B"] = "Chi",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4184-0021692E"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-3296-00945C33"] = "ComboPoints",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-3674-0898468A"] = "SoulShards",
["Player-75-0F40E777"] = "ArcaneCharges",
["Player-75-0F48ED55"] = "Runes",
},
["global_settings"] = {
["anchor"] = {
["y"] = 9.7099990844727,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
},
["health_animation_time_dilatation"] = 1.6699999570847,
["npc_cache"] = {
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
},
[420087] = {
"Oil Packed Brazier",
"New Candle, New Hope",
"enUS",
},
[213434] = {
"Sporbit",
"Fungal Folly",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[420089] = {
"Oil Packed Brazier",
"New Candle, New Hope",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[455914] = {
"Mislaid Curiosity",
"Kriegval's Rest",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[219066] = {
"Inflicted Civilian",
"The Rookery",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[161241] = {
"Voidweaver Mal'thir",
"The Underrot",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[150495] = {
"Essence of Rage",
"Gilneas - Worgen Heritage Scenario",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Kriegval's Rest",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[161243] = {
"Samh'rek, Beckoner of Chaos",
"The Underrot",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[478443] = {
"Mislaid Curiosity",
"Skittering Breach",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[161244] = {
"Blood of the Corruptor",
"The Underrot",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[150498] = {
"Dark Ranger Thyala",
"Gilneas - Worgen Heritage Scenario",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[228030] = {
"Sir Finley Mrrgglton",
"Kriegval's Rest",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[217541] = {
"Nightfall Initiate",
"Nightfall Sanctum",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131825] = {
"Sister Briar",
"UNKNOWN",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[220616] = {
"Corridor Sleeper",
"Darkflame Cleft",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[127484] = {
"Jes Howlis",
"Tol Dagor",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134390] = {
"Sand-crusted Striker",
"Temple of Sethraliss",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[412967] = {
"Helm of Memories",
"Kriegval's Rest",
"enUS",
},
[127486] = {
"Ashvane Officer",
"Tol Dagor",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[228044] = {
"Reno Jackson",
"Kriegval's Rest",
"enUS",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[216275] = {
"Brann's Epic Egg",
"Kriegval's Rest",
"enUS",
},
[217299] = {
"Ostiary Wystan",
"Hall of Awakening",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[216541] = {
"Threadmaestro Fothis",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[157434] = {
"Street Thug",
"Crapopolis - Scenario",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[172021] = {
"Coldheart Automaton",
"Torghast, Tower of the Damned",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[216544] = {
"Sureki String Leader",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[219361] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[455482] = {
"|cff1EFF00Sturdy Chest",
"The Dread Pit",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[97175] = {
"Felguard Invader",
"Broken Shore",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[219874] = {
"High Speaker's Construct",
"Hall of Awakening",
"enUS",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[466232] = {
"Kriegval's Rest",
"Kriegval's Rest",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[127497] = {
"Ashvane Warden",
"Tol Dagor",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[455488] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[462141] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[210153] = {
"Ol' Waxbeard",
"Darkflame Cleft",
"enUS",
},
[455489] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[462142] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[455490] = {
"|cff1EFF00Sturdy Chest",
"The Waterworks",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[97177] = {
"Impling Pursuer",
"Broken Shore",
"enUS",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[216554] = {
"Sureki String Conductor",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[216555] = {
"Heelripper",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[135699] = {
"Ashvane Jailer",
"Tol Dagor",
},
[213741] = {
"Voidstone Awakened",
"The Rookery",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[213743] = {
"Enraged Skardyn",
"Hall of Awakening",
"enUS",
},
[139284] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[455508] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[216560] = {
"Al'haggro",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[455510] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[455511] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
},
[139799] = {
"Ironhull Apprentice",
"Shrine of the Storm",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[455513] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[193534] = {
"Strunraan",
"10.0 Dragon Isles",
},
[157456] = {
"Trade Prince Gallywix",
"Crapopolis - Scenario",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[446305] = {
"Corrupted Flame",
"11.0 - Priory Scenario",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[464729] = {
"|cff0070ddBountiful Heavy Trunk",
"Mycomancer Cavern",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[220148] = {
"Gem Hoarder",
"The Dread Pit",
"enUS",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[413047] = {
"Aqirite",
"The Dread Pit",
"enUS",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[455523] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[455524] = {
"|cff1EFF00Sturdy Chest",
"Kriegval's Rest",
"enUS",
},
[413049] = {
"Ironclaw",
"Kriegval's Rest",
"enUS",
},
[218103] = {
"Nerubian Lord",
"The Dread Pit",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[136735] = {
"Ashvane Marine",
"Tol Dagor",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[455531] = {
"|cff1EFF00Sturdy Chest",
"The Spiral Weave",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[334759] = {
"Grapplehammer's Chest",
"Crapopolis - Scenario",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[108702] = {
"Crimson Rockshell",
"Shield's Rest",
"enUS",
},
[138019] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[189707] = {
"Chaotic Mote",
"Castle Nathria",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[216578] = {
"Swarm-Maven Donmiss",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Arcane Curator",
"The Azure Vault",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[216582] = {
"Kx",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[211977] = {
"Pack Mole",
"Darkflame Cleft",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[217353] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[213771] = {
"High Speaker Eirich",
"Hall of Awakening",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[155432] = {
"Enchanted Emissary",
"Temple of Sethraliss",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[196117] = {
"Crystal Construct",
"The Azure Vault",
},
[155433] = {
"Void-Touched Emissary",
"Temple of Sethraliss",
},
[487805] = {
"",
"Earthcrawl Mines",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[219148] = {
"Skardyn Metamorphosis",
"Hall of Awakening",
"enUS",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[219149] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[217870] = {
"Devouring Shade",
"Nightfall Sanctum",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
},
[222221] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[220432] = {
"Particularly Bad Guy",
"Mycomancer Cavern",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"The Sinkhole",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"The Sinkhole",
"enUS",
},
[452513] = {
"Diagnostic Console",
"The Stonevault",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[423349] = {
"Sacred Flame",
"Priory of the Sacred Flame",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[414657] = {
"Prototype Stomping Shoes Chest",
"The Waterworks",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[454070] = {
"Lush Mycobloom",
"Nightfall Sanctum",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[454071] = {
"Mycobloom",
"Mycomancer Cavern",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[454075] = {
"Lush Mycobloom",
"The Underkeep",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[454076] = {
"Mycobloom",
"The Underkeep",
"enUS",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[220707] = {
"Staglette",
"11.0 - Priory Scenario",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[456130] = {
"Refreshment Table",
"The Rookery",
"enUS",
},
[135759] = {
"Earthwall Totem",
"Kings' Rest",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[220710] = {
"Leviathan Manipulator",
"The Sinkhole",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[134994] = {
"Spectral Headhunter",
"Kings' Rest",
},
[96571] = {
"Rattling Dead",
"Shield's Rest",
"enUS",
},
[454091] = {
"|cff1EFF00Sturdy Chest",
"Earthcrawl Mines",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[210478] = {
"Infected Beast",
"Fungal Folly",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[135764] = {
"Explosive Totem",
"Kings' Rest",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[102970] = {
"Fel Lord Dakuur",
"Broken Shore",
"enUS",
},
[214576] = {
"Iron-Runed Protector",
"Hall of Awakening",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[92608] = {
"Malgalor",
"Broken Shore",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[413677] = {
"Wavering Candle",
"New Candle, New Hope",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[161103] = {
"Hired Scoundrel",
"Crapopolis - Scenario",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[223541] = {
"Stolen Loader",
"Earthcrawl Mines",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[455666] = {
"Research Papers",
"The Underkeep",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[413703] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[219454] = {
"Crazed Abomination",
"The Underkeep",
"enUS",
},
[422916] = {
"Explorers' League Rope",
"Fungal Folly",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"The Sinkhole",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[96455] = {
"Swirling Storms",
"Shield's Rest",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[213828] = {
"Candleclaw Pyromancer",
"New Candle, New Hope",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[213829] = {
"Candleclaw Soilseer",
"New Candle, New Hope",
"enUS",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[213830] = {
"Candleclaw Kobold",
"New Candle, New Hope",
"enUS",
},
[421903] = {
"Earthen Console",
"Hall of Awakening",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[226625] = {
"Cave Skipper",
"Fungal Folly",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[213833] = {
"Candleclaw Knight",
"New Candle, New Hope",
"enUS",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[220742] = {
"Guardian Tentacle",
"The Sinkhole",
"enUS",
},
[217672] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[213834] = {
"Candleclaw Mole",
"New Candle, New Hope",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[161124] = {
"Urg'roth, Breaker of Heroes",
"The Underrot",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[213835] = {
"Candleclaw Scrambler",
"New Candle, New Hope",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[210510] = {
"Flimflam the Cowardly",
"Darkflame Cleft",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[131445] = {
"Block Warden",
"Tol Dagor",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[137591] = {
"Healing Tide Totem",
"Kings' Rest",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[217684] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[433705] = {
"Pheromone Bottle",
"The Underkeep",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[207450] = {
"Fungal Stabber",
"Fungal Folly",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Fungal Folly",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Fungal Folly",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"Earthcrawl Mines",
"enUS",
},
[115402] = {
"Bishop",
"Return to Karazhan",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
},
[217435] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[228951] = {
"Nerubian Stalker",
"The Dread Pit",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[219996] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Dread Pit",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[207459] = {
"Fungal Rotcaster",
"Fungal Folly",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[228953] = {
"Skittering Intruder",
"The Dread Pit",
"enUS",
},
[207460] = {
"Fungarian Flinger",
"Fungal Folly",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[196203] = {
"Algeth'ar Nurse",
"Algeth'ar Academy",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[208745] = {
"The Candle King",
"Darkflame Cleft",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
},
[97752] = {
"Ironhorn Bull",
"Shield's Rest",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Fungal Folly",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[409185] = {
"Dynamite Bundle",
"Darkflame Cleft",
"enUS",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[214381] = {
"Writhing Shade",
"11.0 - Priory Scenario",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[94813] = {
"Spectral Windshaper",
"Shield's Rest",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[213873] = {
"Waxy Globule",
"New Candle, New Hope",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[217200] = {
"Void Crystal Monstrosity",
"Hall of Awakening",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[414317] = {
"Orbinid",
"Mycomancer Cavern",
"enUS",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[214368] = {
"The Broken Queen",
"11.0 - Priory Scenario",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[207482] = {
"Invasive Sporecap",
"Kriegval's Rest",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[441379] = {
"Oil Brazier",
"11.0 - Priory Scenario",
"enUS",
},
[414325] = {
"Crystallized Mycobloom",
"Kriegval's Rest",
"enUS",
},
[449549] = {
"Corrupted Flame",
"11.0 - Priory Scenario",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[97176] = {
"Eredar Enslaver",
"Broken Shore",
"enUS",
},
[189555] = {
"Arcane Attendant",
"The Azure Vault",
},
[214382] = {
"Whispering Monstrosity",
"11.0 - Priory Scenario",
"enUS",
},
[218693] = {
"Eclipsing Grasp",
"11.0 - Priory Scenario",
"enUS",
},
[214379] = {
"Living Shadow",
"11.0 - Priory Scenario",
"enUS",
},
[303148] = {
"Soulwell",
"The Stonevault",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[227532] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[213881] = {
"Candleclaw Bootlicker",
"New Candle, New Hope",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[219676] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[227874] = {
"Web Spreader",
"Skittering Breach",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[216441] = {
"Pale Illusion",
"The Sinkhole",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[157455] = {
"Dax Blitzblaster",
"Crapopolis - Scenario",
"enUS",
},
[157459] = {
"Gazlowe",
"Crapopolis - Scenario",
"enUS",
},
[213883] = {
"Dripear the Waxy",
"New Candle, New Hope",
"enUS",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[442763] = {
"Soggy Chest",
"Nightfall Sanctum",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[423915] = {
"Stolen Relic",
"Nightfall Sanctum",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[157435] = {
"Hotwired Peacekeeper",
"Crapopolis - Scenario",
"enUS",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[97123] = {
"Icebreaker Champion",
"Shield's Rest",
"enUS",
},
[233282] = {
"Refreshment Table",
"Priory of the Sacred Flame",
"enUS",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[414315] = {
"Mycobloom",
"Mycomancer Cavern",
"enUS",
},
[423912] = {
"Bloodied Chest",
"Nightfall Sanctum",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"The Sinkhole",
"enUS",
},
[220738] = {
"Leviathan Caller",
"The Sinkhole",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[177807] = {
"Customs Security",
"Tazavesh, the Veiled Market",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
},
[411628] = {
"Wax-Encrusted Chest",
"Darkflame Cleft",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"The Sinkhole",
"enUS",
},
[208457] = {
"Skittering Darkness",
"Darkflame Cleft",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[413590] = {
"|cffA335EEBountiful Coffer",
"Mycomancer Cavern",
"enUS",
},
[135846] = {
"Sand-Crusted Striker",
"Temple of Sethraliss",
},
[220029] = {
"Gearsweep",
"Hall of Awakening",
"enUS",
},
[454202] = {
"|cff1EFF00Sturdy Chest",
"Mycomancer Cavern",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[210810] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[220542] = {
"Enraged Kelp",
"The Waterworks",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
},
[223613] = {
"Weave Drone",
"The Spiral Weave",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[216561] = {
"Gahn'dante",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[223614] = {
"Kobold Thief",
"The Waterworks",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[127488] = {
"Ashvane Flamecaster",
"Tol Dagor",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[210797] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[416398] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[213008] = {
"Wriggling Darkspawn",
"Darkflame Cleft",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[96034] = {
"Magnar Icebreaker",
"Shield's Rest",
"enUS",
},
[409747] = {
"Construct Canker",
"Fungal Folly",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[409748] = {
"Dormouse Ecila",
"Fungal Folly",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[217610] = {
"Deviant Skardyn",
"Hall of Awakening",
"enUS",
},
[127482] = {
"Sewer Vicejaw",
"Tol Dagor",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[462137] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[443526] = {
"Supply Bag",
"Kriegval's Rest",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[222222] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[135246] = {
"\"Stabby\" Lottie",
"The Rotting Mire (Islands 9)",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[413046] = {
"Bismuth",
"Kriegval's Rest",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[215177] = {
"Waximus",
"New Candle, New Hope",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[132481] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[217225] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[455484] = {
"|cff1EFF00Sturdy Chest",
"The Dread Pit",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[443537] = {
"Lost Supplies",
"The Dread Pit",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[408227] = {
"Leave Delve",
"Kriegval's Rest",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[462138] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[155051] = {
"Lumbering Nightmare",
"Gilneas - Worgen Heritage Scenario",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[455824] = {
"Webbed Hookshot",
"Earthcrawl Mines",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[207740] = {
"Gnarled Lasher",
"Kriegval's Rest",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[462139] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[423585] = {
"Ironfuse Bomb",
"Hall of Awakening",
"enUS",
},
[94714] = {
"Pillik",
"Shield's Rest",
"enUS",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[441966] = {
"Moldy Chest",
"Fungal Folly",
"enUS",
},
[413563] = {
"|cff1EFF00Heavy Trunk",
"Kriegval's Rest",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[219022] = {
"Ascended Webfriar",
"The Underkeep",
"enUS",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[449688] = {
"Molten Engine",
"Earthcrawl Mines",
"enUS",
},
[218511] = {
"Forming Whispers",
"11.0 - Priory Scenario",
"enUS",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[98285] = {
"Smashum Grabb",
"Tanaan Jungle",
},
[139800] = {
"Galecaller Apprentice",
"Shrine of the Storm",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[96433] = {
"Reylar the Stormcaller",
"Shield's Rest",
"enUS",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[132530] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[444098] = {
"Webbed Chest",
"Earthcrawl Mines",
"enUS",
},
[219810] = {
"Nerubian Ritualist",
"Skittering Breach",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[413874] = {
"Rich Bismuth",
"Kriegval's Rest",
"enUS",
},
[213831] = {
"Candleclaw Underboss",
"New Candle, New Hope",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[155434] = {
"Emissary of the Tides",
"Temple of Sethraliss",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
},
[413877] = {
"Rich Ironclaw",
"Skittering Breach",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[94707] = {
"Icebreaker Tombguard",
"Shield's Rest",
"enUS",
},
[413883] = {
"Crystallized Bismuth",
"Kriegval's Rest",
"enUS",
},
[218520] = {
"Nightcaller Velys",
"11.0 - Priory Scenario",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[218521] = {
"Hazzk the Ascended",
"11.0 - Priory Scenario",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[413886] = {
"EZ-Mine Bismuth",
"Skittering Breach",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[449709] = {
"Bouncy Shroom",
"Kriegval's Rest",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[224663] = {
"Mesmerized Flyer",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[219034] = {
"Web Marauder",
"The Underkeep",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[94710] = {
"Storm Drake Hunter",
"Shield's Rest",
"enUS",
},
[136391] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[216221] = {
"Earthen-Ward Sentinel",
"Hall of Awakening",
"enUS",
},
[212383] = {
"Kobold Taskworker",
"Darkflame Cleft",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
},
[446645] = {
"Stuffed Barrel",
"Kriegval's Rest",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[185262] = {
"Howling Creekborne",
"Dragon Isles",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[220314] = {
"Bogpiper",
"Mycomancer Cavern",
"enUS",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[226459] = {
"Glowmite",
"Fungal Folly",
"enUS",
},
[218527] = {
"Shadesworn Crusher",
"11.0 - Priory Scenario",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[226617] = {
"Snake",
"Fungal Folly",
"enUS",
},
[35591] = {
"Fishing Bobber",
"The Waterworks",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Spires of Ascension",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[134058] = {
"Galecaller Faye",
"Shrine of the Storm",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[217249] = {
"Waterworks Opportunist",
"The Waterworks",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[134602] = {
"Shrouded Fang",
"Temple of Sethraliss",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[413905] = {
"EZ-Mine Ironclaw",
"Fungal Folly",
"enUS",
},
[218022] = {
"Speaker Davenruth",
"Nightfall Sanctum",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[139946] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[217799] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[325888] = {
"Dream Rift",
"Gilneas - Worgen Heritage Scenario",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[153285] = {
"Training Dummy",
"Eastern Kingdoms",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
},
[216487] = {
"Skardyn Remnants",
"Hall of Awakening",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[130025] = {
"Irontide Thug",
"Tol Dagor",
},
[217485] = {
"Nightfall Lookout",
"Nightfall Sanctum",
"enUS",
},
[455512] = {
"|cff1EFF00Sturdy Chest",
"The Waterworks",
"enUS",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[130026] = {
"Bilge Rat Seaspeaker",
"Tol Dagor",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[462140] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[130027] = {
"Ashvane Marine",
"Tol Dagor",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[98257] = {
"Bezzeredes",
"Broken Shore",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[217516] = {
"Nightfall Executor",
"Nightfall Sanctum",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[462136] = {
"Discarded Loot",
"New Candle, New Hope",
"enUS",
},
[420995] = {
"Web Blockade",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[217517] = {
"Nightfall Hopestealer",
"Nightfall Sanctum",
"enUS",
},
[210148] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[208743] = {
"Blazikon",
"Darkflame Cleft",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[127480] = {
"Stinging Parasite",
"Tol Dagor",
},
[208747] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[217518] = {
"Nightfall Inquisitor",
"Nightfall Sanctum",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[94718] = {
"Greater Raven",
"Shield's Rest",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[217519] = {
"Nightfall Shadeguard",
"Nightfall Sanctum",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[219912] = {
"Crawler",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[464761] = {
"|cff0070ddBountiful Heavy Trunk",
"Mycomancer Cavern",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[441671] = {
"Priory Door",
"Priory of the Sacred Flame",
"enUS",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"The Sinkhole",
"enUS",
},
[440935] = {
"Explorers' League Rope",
"The Sinkhole",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[136665] = {
"Ashvane Spotter",
"Tol Dagor",
},
[220741] = {
"Slamming Tentacle",
"The Sinkhole",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"The Sinkhole",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[422154] = {
"Brann's Cozy Campfire",
"Nightfall Sanctum",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[218034] = {
"Reformed Fury",
"Nightfall Sanctum",
"enUS",
},
[441670] = {
"Priory Door",
"Priory of the Sacred Flame",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[455616] = {
"Scribbled Notes",
"Nightfall Sanctum",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[455491] = {
"|cff1EFF00Sturdy Chest",
"The Sinkhole",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[150091] = {
"Phantasmal Stalker",
"Gilneas - Worgen Heritage Scenario",
"enUS",
},
[152329] = {
"Nathanos Blightcaller",
"Gilneas - Worgen Heritage Scenario",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[455509] = {
"|cff1EFF00Sturdy Chest",
"The Underkeep",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[220437] = {
"Overseer Kaskel",
"The Spiral Weave",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[487815] = {
"DELVER'S CALL: The Waterworks",
"The Waterworks",
"enUS",
},
},
["spell_animation_list"] = {
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["scale_upY"] = 1.039999961853,
["scale_upX"] = 1.039999961853,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["enabled"] = true,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[17364] = {
["1"] = {
["scale_upY"] = 1.02,
["scale_upX"] = 1.02,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.10000000745058,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.7999999523163,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[11366] = {
["1"] = {
["scale_upY"] = 1.15,
["scale_upX"] = 1.15,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 6.460000038147,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scale_upY"] = 1.0299999713898,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["enabled"] = true,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["scale_upY"] = 1.03,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["enabled"] = true,
},
},
[31935] = {
["1"] = {
["scale_upY"] = 1.03,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53595] = {
["1"] = {
["scale_upY"] = 1.03,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 3,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["scale_upY"] = 1.0299999713898,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["enabled"] = true,
},
},
[53351] = {
["1"] = {
["scale_upY"] = 1,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[8042] = {
["1"] = {
["scale_upY"] = 1.05,
["scale_upX"] = 1.05,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.060000000745058,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[206930] = {
["1"] = {
["scale_upY"] = 1,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["scale_upY"] = 1.0299999713898,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["enabled"] = true,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.75,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["scale_upY"] = 1.2999999523163,
["scale_upX"] = 1.1999999284744,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[27285] = {
["1"] = {
["scale_upY"] = 1.1,
["scale_upX"] = 1.1,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["enabled"] = true,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3.6583230495453,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["scale_upY"] = 1.0299999713898,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["enabled"] = true,
},
},
[52174] = {
["1"] = {
["scale_upY"] = 1.15,
["scale_upX"] = 1.15,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[32645] = {
["1"] = {
["scale_upY"] = 1.1999999284744,
["scale_upX"] = 1.1000000238419,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
},
["indicator_scale"] = 0.99999994039536,
["extra_icon_timer_decimals"] = true,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.50242385268211,
},
["indicator_anchor"] = {
["side"] = 6,
["x"] = 2,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["aura_padding"] = 0,
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Find Weakness\"] = 93,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1697196348,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 516,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Aura Reorder [Plater]",
},
{
["Enabled"] = true,
["Revision"] = 163,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "�r��ne-Kel'thuzad",
["PlaterCore"] = 1,
["Desc"] = "Adds double arrow as a target indicators option",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1702817419,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Name"] = "Double Arrow Target",
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 237,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Viashi-Antonidas",
["PlaterCore"] = 1,
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1702817442,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Name"] = "QuestProgress",
["Url"] = "https://wago.io/uwe9CEwMm/2",
["Icon"] = 132212,
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1702817467,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/VtPjNl8Mg/7",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1235,
["semver"] = "1.0.6",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Absorb Shields in Healthbar",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
},
["Time"] = 1696898532,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["arena"] = true,
["pvp"] = true,
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/Zz1aEIOJR/1",
["Icon"] = 132310,
["Enabled"] = true,
["Revision"] = 325,
["semver"] = "1.0.0",
["Author"] = "Irashi-Antonidas",
["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Sappable (Custom Icon)",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
},
["Time"] = 1696897899,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/lLK9gn7lc/5",
["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
["Enabled"] = true,
["Revision"] = 74,
["semver"] = "1.0.4",
["Author"] = "Ariani-Antonidas",
["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
["Prio"] = 99,
["version"] = 5,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Load Screen",
["Name"] = "Arena - Buff-Tracking Mode",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1702817454,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/-ny0jWQDT/2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = true,
["Revision"] = 213,
["semver"] = "1.0.1",
["Author"] = "Driani-Antonidas",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Target Border Color",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1723750899,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/12",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 455,
["semver"] = "1.0.11",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["Name"] = "Cast Icon Anchor + Border",
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["version"] = 12,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696898479,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 108,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Pet Threat Highlighter",
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["SPpixelborder"] = false,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowyoff"] = 0.5,
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1696898535,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/uEnDIKvvP/2",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 981,
["semver"] = "1.0.1",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "Common Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Type",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Glow Frequency",
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Number of Particles",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "X-Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Y-Offset",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Length",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Pixel Line Thickness",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Ants Glow Scale",
},
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1702817430,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 89,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Force Threat Color NPC",
},
{
["OptionsValues"] = {
["EXEbdrcolor"] = {
1,
0.37647062540054,
0,
1,
},
["EXEhicolor"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
0,
},
["EXEhdcolor"] = {
0.99215692281723,
1,
0.94901967048645,
1,
},
["EXEalert"] = 0,
["EXEhbcon"] = false,
["onlyNPC"] = true,
["EXEbdron"] = false,
},
["HooksTemp"] = {
},
["UID"] = "0x6150129e178c7fc5",
["Hooks"] = {
["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
},
["Time"] = 1702817455,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/uCoprJFNs/3",
["Icon"] = 135358,
["Enabled"] = true,
["Revision"] = 3555,
["semver"] = "1.0.2",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Advanced Execute Range [Fix]",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Color Options",
["Name"] = "Execute Color Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhbcon",
["Value"] = true,
["Name"] = "Enable Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Healthbar Color",
},
{
["Type"] = 1,
["Key"] = "EXEhbcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Healthbar Color",
},
{
["Type"] = 4,
["Key"] = "EXEbdron",
["Value"] = false,
["Name"] = "Enable Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Border Color",
},
{
["Type"] = 1,
["Key"] = "EXEbdrcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Border Color",
},
{
["Type"] = 4,
["Key"] = "onlyNPC",
["Value"] = true,
["Name"] = "Only on NPC",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply these features only on NPC",
},
{
["Type"] = 4,
["Key"] = "TrackAggro",
["Value"] = false,
["Name"] = "Track Aggro Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Divisor Options",
["Name"] = "Execute Divisor Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhdoff",
["Value"] = false,
["Name"] = "Disable Execute Health Divisor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Disable Execute Health Divisor",
},
{
["Type"] = 1,
["Key"] = "EXEhdcolor",
["Value"] = {
1,
1,
1,
0.8500000089407,
},
["Name"] = "Execute Health Divisor Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Divisor Color",
},
{
["Type"] = 1,
["Key"] = "EXEhicolor",
["Value"] = {
0.27843137254902,
0,
1,
0.25,
},
["Name"] = "Execute Health Indicator Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Indicator Color",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
["Min"] = 0,
["Key"] = "EXEalert",
["Value"] = 13,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Preview Divisor %",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Force set health Divisor alpha value.",
["Min"] = 0,
["Key"] = "EXEhdalpha",
["Value"] = 50,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Divisor Alpha %",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
},
["Time"] = 1702817476,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/UMY67A2bw/1",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 112,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Health / Max Health (%)",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, -- Chaotic Essence\n        [189707] = true, -- Chaotic mote \n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, -- Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        \n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1704504618,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 245,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Performance Units",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["Time"] = 1700250838,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "ShadowDotsColors",
},
{
["OptionsValues"] = {
["castNameSize"] = 50,
["colorInterruptSoon"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorInterruptAvailable"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorNoInterrupt"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["colorProtected"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
},
["LastHookEdited"] = "Constructor",
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcd = C_Spell.GetSpellCooldown(61304) -- GCD\n        local gcdSTART, gcdDUR = gcd.startTime, gcd.duration\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellCD = C_Spell.GetSpellCooldown(spellID)\n        local spellStart, spellDuration  = spellCD.startTime, spellCD.duration\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1724385819,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/3408lMaNb/3",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1332,
["semver"] = "1.0.2",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["Name"] = "Enhanced Enemy Castbar [Plater]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "CUSTOM CAST BAR COLORS",
["Value"] = "Feature - Custom cast bar coloring:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable custom colored enemy cast bars.",
["Value"] = true,
["Key"] = "showInterruptColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Value"] = true,
["Key"] = "showSecondaryInterrupts",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is available.",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Key"] = "colorInterruptAvailable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Key"] = "colorInterruptSoon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is unavailable.",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Key"] = "colorNoInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Key"] = "colorSecondaryInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Name"] = "Color for casts that are protected/un-interruptable.",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Key"] = "colorProtected",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Key"] = "colorTick",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Name"] = "Settings Target Name",
["Value"] = "Feature - Show name of target in the cast bar:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show the name of cast targets in the cast bar.",
["Value"] = true,
["Key"] = "showTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Hide my name when not in a party.",
["Value"] = true,
["Key"] = "hideNameSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Show \"Me\" instead of my character name.",
["Value"] = true,
["Key"] = "replaceName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 60,
["Key"] = "castNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
},
{
["Type"] = 5,
["Name"] = "Settings Border Flash",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Value"] = false,
["Key"] = "nameplateFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when not in a party.",
["Value"] = true,
["Key"] = "hideNameplateFlashSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Value"] = true,
["Key"] = "hideFlashAsTank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcd = C_Spell.GetSpellCooldown(61304) -- GCD\n        local gcdSTART, gcdDUR = gcd.startTime, gcd.duration\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellCD = C_Spell.GetSpellCooldown(spellID)\n        local spellStart, spellDuration  = spellCD.startTime, spellCD.duration\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["version"] = 3,
},
{
["OptionsValues"] = {
["colour_names"] = true,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1702817524,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 257,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
["LastHookEdited"] = "",
["Name"] = "M+ Renamer",
},
{
["OptionsValues"] = {
["extraLowScale"] = 0.79999995231628,
["higherScale"] = 1.1999999284744,
["scale"] = true,
["lowScale"] = 0.79971849918365,
["midScale"] = 0.89680552482605,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local prioScaleMap = {\n        [1] = modTable.config.midScale, -- 0.9\n        [2] = modTable.config.lowScale, -- 0.8\n        [3] = modTable.config.extraLowScale, -- 0.7,\n        [4] = modTable.config.higherScale -- 1.1\n    }\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[153285] = 2, --Testing Dummy        \n        --[194644] = 4, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        \n        --Nokhud Offensive\n        [195875] = 2, --Desecrated Bakar\n        [195855] = 1, -- Risen Warrior\n        \n        \n        --Dawn of the Infinite\n        [204536] = 2, --Blight Chunk\n        [206063] = 1, -- Temporal Deviation\n        \n        --Waycrest manor\n        [131669] = 1, --Jagged Hound\n        \n        --Atal'Dazar\n        [128435] = 1, --Saurid's\n        \n        --Darkheart Thicket\n        [100529] = 2, --Hatespawn Slime\n        [101074] = 2, --Hatespawn Whelpling\n        \n        --Everbloom\n        [81864] = 1, --Dreadpetal\n        [84401] = 2, --Swift Sproutling\n        \n        --Blackrook Hold\n        [98677] = 2, --Rook Spiderling\n        [98900] = 1, --Wyrmtongue Trickster\n        [102781] = 2, --Fel Bat Pup\n        \n        --Throne of the tides\n        [40923] = 2, --Unstable Corruption\n        \n        --Halls of Infusion\n        [190923] = 2, --Zephyrling\n        \n        --Brackenhide Hollow\n        [189299] = 2, -- Decaying Slime\n        [189363] = 2, -- Infected Lasher\n        [194373] = 1, -- Witherling\n        \n        --Uldaman\n        [184134] = 2, -- Scavaging Leaper\n        \n        --Nelth's Lair\n        [96247] = 2, -- Vileshard Crawler\n        [102430] = 2, --Tarspitter Slug\n        \n        -- Freehold\n        [130024] = 2, --Soggy Shiprat\n        \n        -- Underrot\n        [131402] = 1, --Underrot Tick\n        \n        -- Temple of the Jade Serpent\n        [58319] = 2, --Lesser Sha\n        [62358] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [195579] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [105703] = 2, --Mana Wyrm\n        [104295] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [77006] = 2, --Corpse Skitterling\n        [75451] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [196642] = 2, --Hungry Lasher\n        [197398] = 2, --Hungry Lasher\n        [196694] = 1, --Arcane Forager\n        [192329] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [191313] = 2, -- Volatile Sapling\n        [187242] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [190205] = 1, --Scorchling\n        [197509] = 2, --Primal Thundercloud\n        [187894] = 1, --Infused Whelp\n        \n        --Karazhan\n        \n        --Tazavesh\n        [178163] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [163089] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [166264] = 2, --Spare Parts\n        [171500] = 2, --Shuffling Corpse\n        [165138] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [171455] = 2, --Stonewall Gargon\n        [168457] = 2, --Stonewall Gargon\n        [166589] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [168969] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [168986] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [167892] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Amirdrassil\n        [210231] = 1, --Tainted Lasher\n        [211306] = 2, --Fiery vines\n        \n        --Vault\n        [194991] = 1, --Oathsworn Vanguard\n        [191714] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [183669] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [169925] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [144300] = 2, -- \n        [189707] = 2, --Chaotic Motes\n    }\n    \n    modTable.isSpiteful = function(id)\n        return tonumber(id) == 174773\n    end\n    \n    modTable.parseGUID = function(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    modTable.spitefulTargetsPlayer = function(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\n    \n    modTable.getScale = function(prio)\n        if not modTable.config.scale then\n            return nil\n        end\n        \n        return prioScaleMap[prio]\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
},
["Time"] = 1713704142,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 1543,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Priority based scaling",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Mid prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Low prio",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Very Low Prio",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Higher Priority",
},
},
["LastHookEdited"] = "Initialization",
},
},
["last_news_time"] = 1696043087,
["auras_per_row_auto"] = false,
["aura_width2"] = 19,
["aura_stack_size"] = 8,
["auras_per_row_amount2"] = 2,
["range_check_power_bar_alpha"] = 0.89999997615814,
["range_check_health_bar_alpha"] = 0.84999996423721,
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["aura_show_crowdcontrol"] = true,
["blizzard_nameplate_large_font_size"] = 9,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["crowdcontrol"] = {
1,
1,
1,
},
["is_buff"] = {
0.65098041296005,
0.011764707043767,
0.090196080505848,
0,
},
},
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Unit - Show Energy"] = 11,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Cast - Tank Interrupt"] = 12,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Countdown"] = 11,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Glowing [P]"] = 10,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Explode on Die [P]"] = 1,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - Voidzone [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Cast - AoE With Range [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - On Going Cast [P]"] = 2,
["Cast - Important Target [P]"] = 2,
["Unit - Important"] = 11,
["Blink by Time Left"] = 1,
["Cast - Shield Interrupt"] = 2,
["Cast - Very Important"] = 15,
["Cast - Quick Flash"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Color Change"] = 1,
["Cast - Debuff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Unit - Health Markers"] = 12,
["Cast - Heal Cut [P]"] = 3,
["Spiteful Affix"] = 3,
["Auto Set Skull"] = 11,
["Cast - Alert + Timer [P]"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Explosion Affix M+"] = 14,
["Aura Border Color"] = 1,
["Cast - Stop Casting"] = 4,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Shining Green [P]"] = 3,
["Aura - Buff Alert"] = 15,
["Fixate On You"] = 11,
},
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["show_healthbars_on_softinteract"] = false,
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["extra_icon_stack_outline"] = "OUTLINE",
["range_check_alpha"] = 0.89999997615814,
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
},
["aura2_grow_direction"] = 3,
["semver"] = "4.7.0",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.1999969482422,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark3",
["auto_toggle_friendly"] = {
["arena"] = true,
["cities"] = false,
["world"] = false,
},
["indicator_faction"] = false,
["show_softinteract_icons"] = false,
["show_healthbars_on_not_attackable"] = true,
["aura_x_offset"] = 1.1999969482422,
["range_check_alpha_friendlies"] = 1,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["aura_consolidate"] = true,
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.8199996948242,
["x"] = 0,
["side"] = 12,
},
["extra_icon_width"] = 21,
["aura_show_enrage"] = true,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Monk Statue"] = 2,
["Combo Points"] = 6,
["Extra Border"] = 2,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Execute Range"] = 1,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["update_throttle"] = 0.33000001311302,
["minor_width_scale"] = 0.99999994039536,
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["border_thickness"] = 1.2000000476837,
["castbar_target_text_size"] = 9,
["npc_colors"] = {
[99358] = {
true,
false,
"fuchsia",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[134012] = {
false,
false,
"blue",
},
[207796] = {
true,
false,
"fuchsia",
},
[129601] = {
false,
false,
"blueviolet",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[161124] = {
false,
false,
"blue",
},
[200126] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
false,
false,
"mediumpurple",
},
[197697] = {
true,
false,
"fuchsia",
},
[132481] = {
false,
false,
"blue",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
false,
false,
"blue",
},
[197698] = {
true,
false,
"fuchsia",
},
[175576] = {
true,
false,
"fuchsia",
},
[199233] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
true,
false,
"blue",
},
[130435] = {
false,
false,
"white",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[178008] = {
true,
false,
"yellow",
},
[127111] = {
true,
false,
"blue",
},
[40634] = {
true,
false,
"deepskyblue",
},
[130436] = {
false,
false,
"blue",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[130437] = {
false,
false,
"fuchsia",
},
[192333] = {
true,
false,
"mediumpurple",
},
[134150] = {
false,
false,
"yellow",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
false,
false,
"blue",
},
[99366] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[205384] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[134158] = {
false,
false,
"blue",
},
[172265] = {
true,
false,
"deepskyblue",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[65317] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[129548] = {
false,
false,
"blueviolet",
},
[101991] = {
true,
false,
"blue",
},
[134418] = {
false,
false,
"springgreen",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[180070] = {
true,
false,
"fuchsia",
},
[138255] = {
false,
false,
"blueviolet",
},
[198868] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[150276] = {
false,
false,
"white",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[135699] = {
false,
false,
"darkgreen",
},
[97197] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"deepskyblue",
},
[198870] = {
true,
false,
"blue",
},
[195929] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[170483] = {
true,
false,
"fuchsia",
},
[98285] = {
false,
false,
"blue",
},
[168949] = {
false,
false,
"white",
},
[190688] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[139284] = {
false,
false,
"springgreen",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[129232] = {
false,
false,
"white",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[172021] = {
false,
false,
"white",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[180335] = {
true,
false,
"deepskyblue",
},
[202969] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[134174] = {
false,
false,
"springgreen",
},
[202971] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[186220] = {
true,
false,
"deepskyblue",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[168318] = {
true,
false,
"mediumpurple",
},
[163459] = {
true,
false,
"blue",
},
[83392] = {
false,
false,
"blue",
},
[178165] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[81283] = {
false,
false,
"deepskyblue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[198501] = {
true,
false,
"deepskyblue",
},
[45917] = {
true,
false,
"mediumpurple",
},
[162057] = {
true,
false,
"mediumpurple",
},
[150165] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[135204] = {
false,
false,
"springgreen",
},
[122972] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
false,
false,
"white",
},
[198503] = {
true,
false,
"deepskyblue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[139425] = {
false,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[196202] = {
true,
false,
"blue",
},
[138019] = {
false,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[186740] = {
false,
false,
"blue",
},
[129367] = {
false,
false,
"springgreen",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[174210] = {
true,
false,
"deepskyblue",
},
[100532] = {
true,
false,
"fuchsia",
},
[182778] = {
true,
false,
"fuchsia",
},
[165515] = {
false,
false,
"fuchsia",
},
[134058] = {
false,
false,
"yellow",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[195696] = {
true,
false,
"fuchsia",
},
[187768] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[129370] = {
false,
false,
"springgreen",
},
[151325] = {
true,
false,
"fuchsia",
},
[153755] = {
false,
false,
"white",
},
[189816] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[139946] = {
false,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[132530] = {
false,
false,
"blue",
},
[191225] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[105715] = {
true,
false,
"blue",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[132532] = {
false,
false,
"fuchsia",
},
[139949] = {
false,
false,
"springgreen",
},
[130012] = {
false,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[168594] = {
true,
false,
"mediumpurple",
},
[144298] = {
true,
false,
"blue",
},
[137521] = {
false,
false,
"fuchsia",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[196856] = {
true,
false,
"mediumpurple",
},
[96574] = {
true,
false,
"mediumpurple",
},
[198263] = {
true,
false,
"mediumpurple",
},
[190207] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"blue",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[135989] = {
false,
false,
"blue",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[179852] = {
true,
false,
"blue",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[177807] = {
false,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"blue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[129547] = {
false,
false,
"mediumpurple",
},
[190340] = {
true,
false,
"blue",
},
[150251] = {
true,
false,
"blue",
},
[204918] = {
true,
false,
"blue",
},
[195135] = {
true,
false,
"fuchsia",
},
[81279] = {
false,
false,
"deepskyblue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[114319] = {
true,
false,
"blue",
},
[184331] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[189555] = {
true,
false,
"deepskyblue",
},
[114544] = {
true,
false,
"fuchsia",
},
[155432] = {
false,
false,
"blueviolet",
},
[199549] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[135474] = {
true,
false,
"blue",
},
[185032] = {
true,
false,
"mediumpurple",
},
[155433] = {
false,
false,
"blueviolet",
},
[213806] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[131587] = {
true,
false,
"mediumpurple",
},
[195842] = {
true,
false,
"blue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[104251] = {
true,
false,
"fuchsia",
},
[127106] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[170480] = {
true,
false,
"mediumpurple",
},
[101438] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"mediumpurple",
},
[136470] = {
false,
false,
"springgreen",
},
[170882] = {
true,
false,
"blue",
},
[135846] = {
false,
false,
"blueviolet",
},
[186125] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[184335] = {
true,
false,
"deepskyblue",
},
[128967] = {
false,
false,
"fuchsia",
},
[206074] = {
true,
false,
"deepskyblue",
},
[190686] = {
true,
false,
"blue",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[184023] = {
true,
false,
"blue",
},
[189707] = {
false,
false,
"white",
},
[176974] = {
true,
false,
"fuchsia",
},
[179733] = {
true,
false,
"fuchsia",
},
[196203] = {
true,
false,
"deepskyblue",
},
[171805] = {
true,
false,
"blue",
},
[208193] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[201288] = {
true,
false,
"fuchsia",
},
[180429] = {
true,
false,
"mediumpurple",
},
[136735] = {
false,
false,
"fuchsia",
},
[196102] = {
false,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[197985] = {
true,
false,
"deepskyblue",
},
[81236] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"blue",
},
[83765] = {
false,
false,
"deepskyblue",
},
[45915] = {
true,
false,
"mediumpurple",
},
[135235] = {
false,
false,
"white",
},
[82579] = {
true,
false,
"deepskyblue",
},
[136186] = {
false,
false,
"fuchsia",
},
[189706] = {
true,
false,
"yellow",
},
[165414] = {
true,
false,
"deepskyblue",
},
[150168] = {
true,
false,
"fuchsia",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[114317] = {
true,
false,
"deepskyblue",
},
[114804] = {
true,
false,
"blue",
},
[163458] = {
true,
false,
"deepskyblue",
},
[175517] = {
true,
false,
"blue",
},
[100531] = {
true,
false,
"mediumpurple",
},
[114542] = {
true,
false,
"blue",
},
[194315] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[187969] = {
true,
false,
"blue",
},
[135365] = {
true,
false,
"fuchsia",
},
[167963] = {
true,
false,
"blue",
},
[168942] = {
true,
false,
"blue",
},
[40936] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[187155] = {
true,
false,
"blue",
},
[155434] = {
false,
false,
"blueviolet",
},
[163882] = {
true,
false,
"mediumpurple",
},
[208440] = {
true,
false,
"mediumpurple",
},
[195851] = {
false,
false,
"blue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[135239] = {
false,
false,
"white",
},
[150712] = {
false,
false,
"white",
},
[102232] = {
true,
false,
"blue",
},
[167965] = {
true,
false,
"blue",
},
[201223] = {
true,
false,
"blue",
},
[169861] = {
true,
false,
"blue",
},
[162691] = {
false,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[136391] = {
false,
false,
"blue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[184131] = {
true,
false,
"fuchsia",
},
[156212] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"blue",
},
[151353] = {
false,
false,
"white",
},
[199124] = {
true,
false,
"deepskyblue",
},
[135241] = {
false,
false,
"fuchsia",
},
[214140] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[134602] = {
false,
false,
"blue",
},
[156213] = {
false,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"blue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[193534] = {
false,
false,
"white",
},
[155830] = {
true,
false,
"deepskyblue",
},
[100485] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[183707] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[191230] = {
true,
false,
"fuchsia",
},
[182045] = {
true,
false,
"fuchsia",
},
[32666] = {
false,
false,
"blue",
},
[195930] = {
true,
false,
"mediumpurple",
},
[155831] = {
true,
false,
"fuchsia",
},
[204206] = {
true,
false,
"blue",
},
[206214] = {
true,
false,
"mediumpurple",
},
[115402] = {
false,
false,
"deepskyblue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[130025] = {
false,
false,
"blue",
},
[101637] = {
true,
false,
"mediumpurple",
},
[100486] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"blue",
},
[59546] = {
true,
false,
"blue",
},
[130404] = {
true,
false,
"mediumpurple",
},
[102788] = {
true,
false,
"blue",
},
[127486] = {
false,
false,
"darkgreen",
},
[127497] = {
false,
false,
"blue",
},
[189464] = {
true,
false,
"blue",
},
[168109] = {
true,
false,
"deepskyblue",
},
[192789] = {
false,
false,
"blue",
},
[168365] = {
false,
false,
"fuchsia",
},
[206066] = {
true,
false,
"deepskyblue",
},
[134990] = {
false,
false,
"springgreen",
},
[115640] = {
true,
false,
"fuchsia",
},
[130026] = {
false,
false,
"springgreen",
},
[135246] = {
false,
false,
"white",
},
[178630] = {
true,
false,
"deepskyblue",
},
[87252] = {
true,
false,
"mediumpurple",
},
[96587] = {
true,
false,
"deepskyblue",
},
[131666] = {
true,
false,
"blue",
},
[83892] = {
true,
false,
"deepskyblue",
},
[183671] = {
true,
false,
"fuchsia",
},
[190342] = {
true,
false,
"fuchsia",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[129552] = {
true,
false,
"mediumpurple",
},
[176551] = {
true,
false,
"deepskyblue",
},
[135759] = {
false,
false,
"fuchsia",
},
[144071] = {
false,
false,
"springgreen",
},
[190362] = {
true,
false,
"blue",
},
[130027] = {
false,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[92610] = {
true,
false,
"fuchsia",
},
[190690] = {
true,
false,
"mediumpurple",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[188673] = {
true,
false,
"mediumpurple",
},
[174197] = {
true,
false,
"deepskyblue",
},
[196576] = {
true,
false,
"blue",
},
[156157] = {
true,
false,
"blue",
},
[44404] = {
true,
false,
"deepskyblue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"blue",
},
[134994] = {
false,
false,
"fuchsia",
},
[81819] = {
true,
false,
"blue",
},
[115642] = {
true,
false,
"blue",
},
[98275] = {
true,
false,
"blue",
},
[163894] = {
true,
false,
"blue",
},
[98521] = {
true,
false,
"fuchsia",
},
[154744] = {
true,
false,
"fuchsia",
},
[179847] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[188703] = {
true,
false,
"yellow",
},
[169905] = {
true,
false,
"blue",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[152898] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"blue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[139799] = {
false,
false,
"blue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[186658] = {
true,
false,
"deepskyblue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[206351] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[191847] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[179842] = {
true,
false,
"fuchsia",
},
[197905] = {
true,
false,
"blue",
},
[115388] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[197145] = {
true,
false,
"mediumpurple",
},
[200840] = {
true,
false,
"mediumpurple",
},
[198424] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"deepskyblue",
},
[199703] = {
true,
false,
"fuchsia",
},
[188067] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[153285] = {
false,
false,
"gold",
},
[197146] = {
true,
false,
"mediumpurple",
},
[167607] = {
true,
false,
"mediumpurple",
},
[187154] = {
true,
false,
"fuchsia",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
false,
false,
"blue",
},
[45930] = {
true,
false,
"fuchsia",
},
[173044] = {
true,
false,
"deepskyblue",
},
[133593] = {
false,
false,
"springgreen",
},
[130400] = {
true,
false,
"mediumpurple",
},
[40943] = {
true,
false,
"deepskyblue",
},
[196115] = {
true,
false,
"blue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[199547] = {
true,
false,
"fuchsia",
},
[192800] = {
true,
false,
"blue",
},
[138254] = {
false,
false,
"fuchsia",
},
[129529] = {
true,
false,
"fuchsia",
},
[130661] = {
false,
false,
"springgreen",
},
[83894] = {
true,
false,
"mediumpurple",
},
[132491] = {
false,
false,
"fuchsia",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[131677] = {
true,
false,
"fuchsia",
},
[152009] = {
false,
false,
"white",
},
[197149] = {
true,
false,
"deepskyblue",
},
[197406] = {
true,
false,
"fuchsia",
},
[80936] = {
true,
false,
"blue",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[113537] = {
true,
false,
"mediumpurple",
},
[152905] = {
true,
false,
"fuchsia",
},
[136665] = {
false,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
false,
false,
"blue",
},
[128434] = {
true,
false,
"blue",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[134364] = {
false,
false,
"springgreen",
},
[141284] = {
false,
false,
"springgreen",
},
[206230] = {
true,
false,
"fuchsia",
},
[174773] = {
false,
false,
"blue",
},
[163520] = {
true,
false,
"mediumpurple",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"fuchsia",
},
[164557] = {
true,
false,
"mediumpurple",
},
[116549] = {
true,
false,
"deepskyblue",
},
[186226] = {
true,
false,
"fuchsia",
},
[198047] = {
true,
false,
"blue",
},
[180015] = {
true,
false,
"blue",
},
[141283] = {
false,
false,
"blue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[127482] = {
false,
false,
"blue",
},
[87329] = {
false,
false,
"blue",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[185262] = {
false,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[137830] = {
true,
false,
"blue",
},
[194990] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[133482] = {
false,
false,
"blueviolet",
},
[169159] = {
true,
false,
"gold",
},
[135007] = {
false,
false,
"blue",
},
[190377] = {
true,
false,
"blue",
},
[135263] = {
false,
false,
"blueviolet",
},
[104300] = {
true,
false,
"deepskyblue",
},
[195876] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"mediumpurple",
},
[95769] = {
true,
false,
"deepskyblue",
},
[168384] = {
true,
false,
"blue",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[131812] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[208698] = {
true,
false,
"fuchsia",
},
[179388] = {
true,
false,
"deepskyblue",
},
[203812] = {
true,
false,
"fuchsia",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"blue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[167612] = {
true,
false,
"blue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[132126] = {
true,
false,
"blue",
},
[104270] = {
true,
false,
"mediumpurple",
},
[196263] = {
true,
false,
"deepskyblue",
},
[167876] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[197671] = {
true,
false,
"blue",
},
[197799] = {
true,
false,
"deepskyblue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[155090] = {
true,
false,
"deepskyblue",
},
[127799] = {
false,
false,
"blue",
},
[80805] = {
true,
false,
"mediumpurple",
},
[198311] = {
true,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"blue",
},
[199717] = {
true,
false,
"mediumpurple",
},
[138465] = {
false,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"blue",
},
[167493] = {
false,
false,
"blue",
},
[170690] = {
true,
false,
"blue",
},
[130485] = {
false,
false,
"white",
},
[127480] = {
false,
false,
"fuchsia",
},
[165763] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[175550] = {
true,
false,
"fuchsia",
},
[134629] = {
false,
false,
"blue",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
false,
false,
"blue",
},
[192796] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[41139] = {
true,
false,
"blue",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[168007] = {
true,
false,
"blue",
},
[82597] = {
true,
false,
"fuchsia",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[166301] = {
true,
false,
"fuchsia",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[135764] = {
false,
false,
"blueviolet",
},
[167113] = {
true,
false,
"blue",
},
[131436] = {
true,
false,
"mediumpurple",
},
[59553] = {
true,
false,
"mediumpurple",
},
[155221] = {
true,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"blue",
},
[164929] = {
true,
false,
"blue",
},
[169927] = {
true,
false,
"fuchsia",
},
[177716] = {
true,
false,
"deepskyblue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[155094] = {
false,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[131821] = {
true,
false,
"blue",
},
[114624] = {
true,
false,
"mediumpurple",
},
[199595] = {
true,
false,
"mediumpurple",
},
[199325] = {
true,
false,
"deepskyblue",
},
[185529] = {
true,
false,
"fuchsia",
},
[166589] = {
true,
false,
"fuchsia",
},
[164506] = {
true,
false,
"blue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[165556] = {
true,
false,
"fuchsia",
},
[130488] = {
false,
false,
"fuchsia",
},
[141285] = {
false,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[189878] = {
true,
false,
"yellow",
},
[136643] = {
false,
false,
"blue",
},
[205622] = {
true,
false,
"mediumpurple",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[164921] = {
true,
false,
"deepskyblue",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"mediumpurple",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[127484] = {
false,
false,
"blueviolet",
},
[138187] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[45704] = {
true,
false,
"dimgray",
},
[100527] = {
true,
false,
"deepskyblue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[163128] = {
true,
false,
"deepskyblue",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[200836] = {
true,
false,
"mediumpurple",
},
[157017] = {
true,
false,
"blue",
},
[214012] = {
true,
false,
"mediumpurple",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[175861] = {
true,
false,
"fuchsia",
},
[198577] = {
true,
false,
"blue",
},
[98368] = {
true,
false,
"mediumpurple",
},
[155824] = {
true,
false,
"blue",
},
[162133] = {
true,
false,
"fuchsia",
},
[200137] = {
true,
false,
"deepskyblue",
},
[176521] = {
true,
false,
"blue",
},
[164563] = {
true,
false,
"blue",
},
[114634] = {
false,
false,
"white",
},
[165805] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[194487] = {
true,
false,
"blue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[126919] = {
true,
false,
"deepskyblue",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[84520] = {
true,
false,
"mediumpurple",
},
[151649] = {
false,
false,
"white",
},
[165076] = {
true,
false,
"blue",
},
[131445] = {
false,
false,
"blue",
},
[129788] = {
true,
false,
"deepskyblue",
},
[136139] = {
false,
false,
"white",
},
[81432] = {
true,
false,
"deepskyblue",
},
[198999] = {
false,
false,
"white",
},
[179841] = {
true,
false,
"deepskyblue",
},
[171376] = {
true,
false,
"blue",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[161241] = {
false,
false,
"springgreen",
},
[115019] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[186208] = {
true,
false,
"mediumpurple",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[167967] = {
true,
false,
"blue",
},
[104278] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[184132] = {
true,
false,
"blue",
},
[98081] = {
true,
false,
"fuchsia",
},
[194316] = {
true,
false,
"mediumpurple",
},
[56792] = {
true,
false,
"fuchsia",
},
[139800] = {
false,
false,
"fuchsia",
},
[161243] = {
false,
false,
"blueviolet",
},
[115020] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[127488] = {
false,
false,
"springgreen",
},
[162040] = {
true,
false,
"fuchsia",
},
[134390] = {
false,
false,
"blueviolet",
},
[196671] = {
true,
false,
"mediumpurple",
},
[161244] = {
false,
false,
"fuchsia",
},
[180348] = {
true,
false,
"blue",
},
[162049] = {
false,
false,
"fuchsia",
},
[150142] = {
true,
false,
"deepskyblue",
},
[127879] = {
false,
false,
"blue",
},
[212673] = {
true,
false,
"fuchsia",
},
[183495] = {
true,
false,
"mediumpurple",
},
[134139] = {
false,
false,
"blue",
},
[214441] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[205618] = {
true,
false,
"mediumpurple",
},
[95779] = {
true,
false,
"mediumpurple",
},
[91000] = {
true,
false,
"mediumpurple",
},
[178392] = {
true,
false,
"fuchsia",
},
[164707] = {
true,
false,
"mediumpurple",
},
[205623] = {
true,
false,
"mediumpurple",
},
[205363] = {
true,
false,
"deepskyblue",
},
[84400] = {
true,
false,
"mediumpurple",
},
[205619] = {
true,
false,
"mediumpurple",
},
[134137] = {
false,
false,
"springgreen",
},
[178171] = {
true,
false,
"fuchsia",
},
[183497] = {
true,
false,
"blue",
},
[190174] = {
true,
false,
"fuchsia",
},
[193373] = {
true,
false,
"fuchsia",
},
[141938] = {
false,
false,
"fuchsia",
},
[150250] = {
true,
false,
"deepskyblue",
},
[205620] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[151657] = {
false,
false,
"white",
},
[168153] = {
true,
false,
"fuchsia",
},
[137591] = {
false,
false,
"yellow",
},
[193760] = {
true,
false,
"mediumpurple",
},
[141939] = {
false,
false,
"blueviolet",
},
[80816] = {
true,
false,
"deepskyblue",
},
[178139] = {
true,
false,
"mediumpurple",
},
},
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.1999969482422,
["side"] = 7,
},
["auto_toggle_stacking"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
["tocversion"] = 100206,
["indicator_rare"] = false,
["indicator_extra_raidmark"] = false,
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["extra_icon_caster_font"] = "Expressway",
["pet_width_scale"] = 0.99999994039536,
["aura_show_debuffs_personal"] = false,
["aura_timer_text_font"] = "Expressway",
["indicator_elite"] = false,
["extra_icon_timer_font"] = "Expressway",
["castbar_target_font"] = "Expressway",
["not_affecting_combat_alpha"] = 1,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["first_run3"] = true,
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["non_targeted_alpha_enabled"] = true,
["extra_icon_height"] = 20,
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.1999969482422,
["target_indicator"] = "Double Arrows",
["bossmod_aura_width"] = 32.621017456055,
["aura_tracker"] = {
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["buff_tracked"] = {
["227931"] = true,
["365338"] = true,
["389808"] = true,
["343502"] = false,
["297133"] = true,
["385528"] = true,
["209859"] = true,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["338510"] = false,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["buff_banned"] = {
["286145"] = true,
["318486"] = true,
["323961"] = true,
["333553"] = true,
["284471"] = true,
["327416"] = false,
["396113"] = true,
["396106"] = true,
["302564"] = true,
["422067"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["333575"] = true,
["396109"] = true,
["311571"] = true,
["268710"] = true,
["284882"] = true,
["317602"] = true,
["417039"] = false,
["333579"] = true,
["236502"] = true,
["61573"] = true,
["206150"] = true,
["209746"] = true,
["216777"] = true,
["5760"] = true,
["343553"] = true,
["343613"] = false,
["266499"] = true,
["396098"] = true,
},
["debuff_banned"] = {
["294934"] = true,
["353354"] = true,
["324260"] = true,
["391568"] = true,
["352534"] = true,
["6343"] = true,
["403391"] = true,
["392388"] = true,
["389788"] = false,
["295367"] = true,
["331653"] = true,
["356372"] = false,
["331016"] = false,
["394453"] = false,
["394021"] = true,
["420144"] = true,
["358379"] = true,
["204242"] = true,
["294909"] = true,
["406770"] = true,
["273836"] = true,
["356329"] = true,
["354052"] = true,
["314113"] = true,
["169623"] = true,
["286581"] = true,
["281242"] = true,
["206760"] = true,
["394328"] = true,
["279416"] = true,
["373281"] = false,
["360277"] = true,
["256148"] = true,
["5760"] = true,
["345466"] = true,
["255909"] = true,
["321330"] = true,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
},
["focus_as_target_alpha"] = true,
["aura_timer_text_size"] = 9,
["range_check_cast_bar_alpha"] = 0.89999997615814,
["aura_breakline_space"] = 1,
["target_highlight_alpha"] = 0.34999999403954,
["target_shady_alpha"] = 0,
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["extra_icon_auras_mine"] = {
["Violent Detonation"] = false,
["209859"] = false,
["Plague Bomb"] = false,
["Serrated Bone Spike"] = true,
},
["target_shady_enabled"] = false,
["version"] = 98,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateOverlapH"] = "0.75",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["nameplatePersonalShowInCombat"] = "0",
["nameplateShowAll"] = "1",
["nameplateShowOnlyNames"] = "0",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateMinScale"] = "1",
["nameplateSelfAlpha"] = "0.89999997615814",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.37",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.5",
["NamePlateHorizontalScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelfTopInset"] = "0.57",
["SoftTargetIconGameObject"] = "1",
},
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_grow_direction"] = 1,
["login_counter"] = 50335,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
80,
1,
},
["target_highlight_height"] = 15,
["health_cutoff_upper"] = false,
["aura_sort"] = true,
["health_cutoff"] = false,
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["bossmod_aura_height"] = 32.105155944824,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["aura_stack_font"] = "Expressway",
["patch_version"] = 37,
["blizzard_nameplate_font"] = "Expressway",
["range_check_in_range_or_target_alpha"] = 1,
["range_check_buffs_alpha"] = 0.89999997615814,
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["number_region_first_run"] = true,
["target_highlight"] = false,
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["pet_height_scale"] = 0.99999994039536,
["first_run2"] = true,
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.1000000238419,
},
},
["ghost_auras"] = {
["enabled"] = true,
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {35}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1723750904,
["Time"] = 1704218760,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["url"] = "https://wago.io/miabQpRfX/10",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {35}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 595,
["semver"] = "1.0.9",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Add - Health Markers [D]",
["PlaterCore"] = 1,
["version"] = 10,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            self.FrameOverlay.LeapArrow1:Show()\n            self.FrameOverlay.LeapArrow2:Show()\n            self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Stop()\n        texture:Hide()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1722356313,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 119,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["__TrashAt"] = 1724430756,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Rename Spell",
["Value"] = true,
["Key"] = "bRenameSpell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Name"] = "Spell Name",
["Value"] = "Heroic Leap",
["Key"] = "spellName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color",
["Value"] = false,
["Key"] = "bUseCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
["__TrashAt"] = 1724906837,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1724881991,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 82,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1725211758,
["NpcNames"] = {
},
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
},
["hook_data_trash"] = {
{
["OptionsValues"] = {
["replaceName"] = false,
["hideNameSolo"] = false,
["castNameSize"] = 50,
["colorInterruptSoon"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorInterruptAvailable"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorNoInterrupt"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["colorProtected"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\",\n                \"Curse of Stone\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\",\n                \"Decaying Mind\",\n                \"Void Spit\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\",\n                \"Scorching Detonation\",\n                \"Void Surge\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        },\n        -- Dawn of the Infinite\n        [19] = {\n            [\"spells\"] = {    \n                \"Noxious Ejection\",\n                \"Stonebolt\",\n                \"Infinite Bolt\",\n                \"Infinite Blast\",\n                \"Fireball\",\n                \"Immolate\",\n                \"Temporal Blast\",\n                \"Corroding Volley\",\n                \"Epoch Bolt\"\n            },\n            [\"zones\"] = {\n                2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198\n            }\n        },\n        -- Amirdrassil\n        [20] = {\n            [\"spells\"] = {\n                \"Coiling Flames\",\n                \"Twisting Singe\",\n                \"Fyr'alath's Flame\"\n            },\n            [\"zones\"] = {\n                2232, 2240, 2244, 2233, 2234, 2238\n            }\n        },\n        -- Atal'Dazar\n        [21] = {\n            [\"spells\"] = {\n                \"Wildfire\",\n                \"Venomfang Strike\",\n                \"Venom Blast\",\n                \"Soulburn\",\n                \"Wracking Pain\"\n            },\n            [\"zones\"] = {\n                934, 935\n            }\n        },\n        -- Black Rook Hold\n        [22] = {\n            [\"spells\"] = {\n                \"Soul Blast\",\n                \"Arcane Blitz\"\n            },\n            [\"zones\"] = {\n                751, 752, 753, 754, 755, 756\n            }\n        },\n        -- Darkheart Thicket\n        [23] = {\n            [\"spells\"] = {\n                \"Nightmare Bolt\",\n                \"Feed on the Weak\",\n                \"Bloodbolt\",\n                \"Firebolt\",\n                \"Nightmare Toxin\",\n                \"Despair\",\n                \"Unnerving Screech\",\n                \"Tormenting Eye\",\n                \"Shadow Bolt\",\n                \"Darksoul Bite\"\n            },\n            [\"zones\"] = {\n                733\n            }\n        },\n        -- Everbloom\n        [24] = {\n            [\"spells\"] = {\n                \"Nature's Wrath\",\n                \"Water Bolt\",\n                \"Dreadpetal Pollen\",\n                \"Arcane Blast\",\n                \"Fireball\",\n                \"Frostbolt\",\n                \"Choking Vines\",\n                \"Dancing Thorns\",\n                \"Pyroblast\",\n                \"Poisonous Claws\"\n            },\n            [\"zones\"] = {\n                620, 621\n            }\n        },\n        -- Throne of the Tides\n        [25] = {\n            [\"spells\"] = {\n                \"Focused Tempest\",\n                \"Frostbolt\",\n                \"Water Bolt\",\n                \"Flame Shock\",\n                \"Mind Rot\",\n                \"Foul Bolt\",\n                \"Ink Blast\",\n                \"Mind Flay\",\n                \"Aquablast\",\n                \"Hex\",\n                \"Crushing Depths\",\n                \"Lightning Bolt\",\n                \"Lightning Surge\"\n                \n            },\n            [\"zones\"] = {\n                323, 322\n            }\n        },\n        -- Waycrest Manor\n        [26] = {\n            [\"spells\"] = {\n                \"Bramble Bolt\",\n                \"Ruinous Bolt\",\n                \"Soul Bolt\",\n                \"Wasting Strike\",\n                \"Wracking Chord\",\n                \"Virulent Pathogen\",\n                \"Darkened Lighting\",\n                \"Shadow Cleave\",\n                \"Infest\",\n                \"Spit\",\n                \"Etch\",\n                \"Runic Mark\",\n                \"Decaying Touch\",\n                \"Dread Mark\",\n                \"Runic Bolt\",\n                \"Scar Soul\",\n                \"Tearing Strike\",\n                \"Drain Essence\"\n            },\n            [\"zones\"] = {\n                1016, 1015, 1017, 1018, 1029\n            }\n        }\n    }\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        \n                    end \n                    local isInterruptKnown\n                    if envTable.interruptID ~= \"Spell Lock\" and envTable.interruptID ~= nil then\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            isInterruptKnown = true\n                        else\n                            isInterruptKnown = false\n                        end\n                    end\n                    local isSpellLock = envTable.interruptID == \"Spell Lock\"\n                    if isSpellLock or isInterruptKnown then\n                        if interruptReadyTime == 0 then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                        elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                            -- Paladin Avenger's Shield\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                        elseif interruptReadyTime < (castEndTime - 0.25) then\n                            castBar.tick:Show()\n                            castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                            local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue\n                            if castBar.channeling then\n                                tickLocation = 1 - tickLocation\n                            end\n                            castBar.tick:SetPoint(\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                            \n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)\n                        elseif interruptReadyTime >= (castEndTime - 0.25) then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                        end\n                    else\n                        Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                    end\n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n            end\n            \n            \n            -- Spell Reflection coloring\n            if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                -- Check to see if the ability is targetting the player\n                if UnitExists(targetUnitId) then\n                    if UnitName(targetUnitId) == UnitName(\"player\") then\n                        -- Color the bar if the spell is reflectable\n                        if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                        end\n                    end\n                end\n            end\n            \n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil then\n            -- Check for Grimoire of Sacrifice\n            return \"Spell Lock\"\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["__TrashAt"] = 1723750894,
["Time"] = 1703475394,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/3408lMaNb/2",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1632,
["semver"] = "1.0.1",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Enhanced Enemy Castbar [Plater]",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = true,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = true,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Key"] = "castNameSize",
["Value"] = 60,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["LastHookEdited"] = "Initialization",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["__TrashAt"] = 1723750897,
["Time"] = 1702817435,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/10",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 509,
["semver"] = "1.0.9",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 10,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Cast Icon Anchor + Border",
},
},
["dps"] = {
["colors"] = {
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
},
},
["resources"] = {
["scale"] = 0.75,
["y_offset"] = 51.589996337891,
["y_offset_target"] = 0,
},
["show_health_prediction"] = false,
["extra_icon_timer_size"] = 11,
["indicator_pet"] = false,
["range_check_enabled"] = false,
["aura_width"] = 19,
["auras_per_row_amount"] = 4,
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 10,
["auto_toggle_enemy"] = {
["raid"] = false,
["party"] = false,
["arena"] = false,
["world"] = false,
},
},
["Jundies - Season 3 M+ and Ra"] = {
["target_shady_combat_only"] = false,
["extra_icon_use_blizzard_border_color"] = false,
["aura_sort"] = true,
["npcs_renamed"] = {
[173044] = "Stitcher",
[197698] = "Thundercunt",
[176394] = "Worker",
[192333] = "Alpha",
[178141] = "Fish Dicker",
[40765] = "Chief Crab",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[180015] = "Dickhand",
[176523] = "Painsmith",
[185683] = "Speed Relic",
[98521] = "Etheldrin",
[101839] = "Cat",
[199368] = "Big Crystal",
[164967] = "Dickus",
[179842] = "Assclapper",
[144298] = "Mk III",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[181224] = "Da Sausage",
[114627] = "Terror",
[168969] = "Green Slime",
[189813] = "Dathea",
[174843] = "Maitre D",
[184130] = "Earthen",
[184908] = "Haste Boi",
[179733] = "Fish Dick",
[184972] = "Eggnog",
[131823] = "M'lady",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[191222] = "Frost Dragon",
[98538] = "Velandras",
[190340] = "Defender",
[175806] = "Sa'lami",
[131825] = "Brian",
[180990] = "Jailer",
[144294] = "Twinkerer",
[135048] = "Bacon",
[185610] = "Simp",
[59555] = "Haunting",
[195929] = "Twomen",
[189722] = "Gulp This",
[194316] = "I'm Zarii",
[190128] = "Zul'gondeez",
[179334] = "Not the boss",
[209090] = "T. Swift",
[98965] = "Kur'talos",
[184911] = "CDR Boi",
[194315] = "Shlongo",
[32666] = "Uh oh",
[59726] = "Pearl",
[214012] = "Dark ",
[114632] = "Attendant",
[175646] = "S.U.C.C. Master",
[181548] = "Absolution",
[181546] = "Renewal",
[185685] = "CDR Relic",
[164705] = "Haste Slime",
[99192] = "Xavius",
[194897] = "Stormsurge Totem",
[181551] = "Duty",
[181549] = "War",
[188026] = "Skull Emoji",
[193457] = "Ballerina",
[167731] = "Separator",
[201155] = "Nascent Dragon",
[182169] = "Lithium",
[151657] = "Bomb",
[168310] = "Plaguecock",
[184582] = "Eric",
[197298] = "Nascent Dragon",
[197219] = "Big Lasher",
[190484] = "Cracka",
[164707] = "Purple Slime",
[162691] = "Blightboner",
[70245] = "uh oh",
[164501] = "Mute Me",
[180773] = "Trash Can",
[102781] = "Bat!",
[165946] = "Mordretha",
[196116] = "Furry",
[198998] = "Tyr",
[168153] = "Plaguecock",
[174773] = "Spiteful",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[191736] = "Beak Bitch",
[164804] = "Simp Tree",
[98696] = "Illysanna",
[178171] = "Don't Pull Me",
[185680] = "Haste Relic",
[175663] = "Hill Brad",
[208445] = "Larodar",
[198047] = "Tempest",
[151649] = "Mk I",
},
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:20: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateResourceOnTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateLargerScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateSelfScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:210",
["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:19: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowSelf"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:5943: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:5941>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateGlobalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:9003: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:8998>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateSelfTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowOnlyNames"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8648",
["nameplateMotion"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/FrameXML/SettingDefinitions/InterfaceOverrides.lua\"]:18: in function <...e/FrameXML/SettingDefinitions/InterfaceOverrides.lua:12>\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:262: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:376: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:372>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:178: in function <Interface/SharedXML/CallbackRegistry.lua:177>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:181: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:325: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:324>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"=(tail call)\"]: ?\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:7: in function <...ace/AddOns/AdvancedInterfaceOptions/basicOptions.lua:5>\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:172: in function `SetCVar'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:199: in function `SetValue'\n[string \"@Interface/AddOns/AdvancedInterfaceOptions/basicOptions.lua\"]:1005: in function <...ace/AddOns/AdvancedInterfaceOptions/basicOptions.lua:1002>\n",
["nameplateSelfBottomInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["SoftTargetNameplateInteract"] = "Interface/AddOns/Plater/options/Plater_O_Advanced.lua:215",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateSelfAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
["nameplateOverlapH"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1560: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1027: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:845>\n[string \"=[C]\"]: in function `pcall'\n[string \"@Interface/AddOns/Details/Libs/DF/panel.lua\"]:2483: in function <Interface/AddOns/Details/Libs/DF/panel.lua:2480>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4475: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:733: in function <Interface/AddOns/Details/Libs/DF/button.lua:669>\n",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["in the spotlight"] = {
227931,
312926,
},
["moonkin aura"] = {
209740,
209746,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["insidious chill"] = {
391566,
391568,
},
["freezing ice stone"] = {
402940,
403391,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["all-consuming spite"] = {
343553,
},
},
["url"] = "https://wago.io/ak3iS95aa/98",
["blizzard_nameplate_font_override_enabled"] = true,
["indicator_raidmark_scale"] = 0.84999996423721,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "PlaterFocus",
["expansion_triggerwipe"] = {
[8] = true,
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["npc_cache"] = {
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[33432] = {
"Leviathan Mk II",
"Ulduar",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[190406] = {
"Aqualing",
"Halls of Infusion",
"enUS",
},
[379149] = {
"Hoard of Draconic Delicacies",
"Vault of the Incarnates",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[219066] = {
"Inflicted Civilian",
"The Rookery",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34137] = {
"Winter Jormungar",
"Ulduar",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[161241] = {
"Voidweaver Mal'thir",
"The Underrot",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[22898] = {
"Supremus",
"Black Temple",
"enUS",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[161243] = {
"Samh'rek, Beckoner of Chaos",
"The Underrot",
},
[33754] = {
"Dark Rune Thunderer",
"Ulduar",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[478443] = {
"Mislaid Curiosity",
"Tak-Rethan Abyss",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[161244] = {
"Blood of the Corruptor",
"The Underrot",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[127482] = {
"Sewer Vicejaw",
"Tol Dagor",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[131825] = {
"Sister Briar",
"UNKNOWN",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[127484] = {
"Jes Howlis",
"Tol Dagor",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[194264] = {
"Lever",
"Ulduar",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134390] = {
"Sand-crusted Striker",
"Temple of Sethraliss",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[32926] = {
"Flash Freeze",
"Ulduar",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[33822] = {
"Twilight Guardian",
"Ulduar",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34014] = {
"Sanctum Sentry",
"Ulduar",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[127488] = {
"Ashvane Flamecaster",
"Tol Dagor",
},
[216275] = {
"Brann's Epic Egg",
"Tak-Rethan Abyss",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[179944] = {
"Meeting Stone Summoning Portal",
"Uldaman: Legacy of Tyr",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[33824] = {
"Twilight Shadowblade",
"Ulduar",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[32865] = {
"Thorim",
"Ulduar",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[210910] = {
"Doomfiend",
"Ulduar",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[216541] = {
"Threadmaestro Fothis",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[172021] = {
"Coldheart Automaton",
"Torghast, Tower of the Damned",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[216544] = {
"Sureki String Leader",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[297860] = {
"General's Cache",
"Ulduar",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[143622] = {
"Wild Imp",
"Ulduar",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[33699] = {
"Storm Tempered Keeper",
"Ulduar",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[127497] = {
"Ashvane Warden",
"Tol Dagor",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[297869] = {
"Titan's Cache",
"Ulduar",
"enUS",
},
[441671] = {
"Priory Door",
"Priory of the Sacred Flame",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[216554] = {
"Sureki String Conductor",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[135699] = {
"Ashvane Jailer",
"Tol Dagor",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[139284] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[216560] = {
"Al'haggro",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[216561] = {
"Gahn'dante",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[139799] = {
"Ironhull Apprentice",
"Shrine of the Storm",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[376193] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[193534] = {
"Strunraan",
"10.0 Dragon Isles",
},
[376194] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[376196] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205306] = {
"Fractured Causality",
"10.1.5 Time Rifts - Demon (Azewrath)",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[376198] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205307] = {
"Fractured Causality",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[136735] = {
"Ashvane Marine",
"Tol Dagor",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[214012] = {
"Dark Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[138019] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[189707] = {
"Chaotic Mote",
"Castle Nathria",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[32874] = {
"Iron Ring Guard",
"Ulduar",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[22874] = {
"Coilskar Harpooner",
"Black Temple",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[23418] = {
"Essence of Suffering",
"Black Temple",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[401814] = {
"Void-Touched Chest",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[216582] = {
"Kx",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[189973] = {
"Goldclover",
"Ulduar",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[246779] = {
"Font of Power",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[155433] = {
"Void-Touched Emissary",
"Temple of Sethraliss",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[384944] = {
"Reverberating Boulder",
"Vault of the Incarnates",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[202262] = {
"Blazing Dreadsquall",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[190496] = {
"Terros",
"Vault of the Incarnates",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[440229] = {
"Minecart",
"The Stonevault",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[214551] = {
"Wandering Gutter",
"Tak-Rethan Abyss",
"enUS",
},
[376264] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[376269] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[208670] = {
"Glorious Vanguard",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[376785] = {
"Cushion",
"Brackenhide Hollow",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[191019] = {
"Adder's Tongue",
"Ulduar",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[33202] = {
"Ancient Water Spirit",
"Ulduar",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[34034] = {
"Swarming Guardian",
"Ulduar",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[32883] = {
"Captured Mercenary Soldier",
"Ulduar",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[454076] = {
"Mycobloom",
"Tak-Rethan Abyss",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[33651] = {
"VX-001",
"Ulduar",
"enUS",
},
[33715] = {
"Charged Sphere",
"Ulduar",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[135246] = {
"\"Stabby\" Lottie",
"The Rotting Mire (Islands 9)",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[135759] = {
"Earthwall Totem",
"Kings' Rest",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[412125] = {
"Dream Rock",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[134994] = {
"Spectral Headhunter",
"Kings' Rest",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[135764] = {
"Explosive Totem",
"Kings' Rest",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[444374] = {
"Minecart",
"The Stonevault",
"enUS",
},
[32886] = {
"Dark Rune Acolyte",
"Ulduar",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[194108] = {
"Summoning Portal",
"Uldaman: Legacy of Tyr",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[33527] = {
"Nature's Blade",
"Ulduar",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[381955] = {
"Challenger's Cache",
"Ruby Life Pools",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[303147] = {
"Summoning Portal",
"Uldaman: Legacy of Tyr",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17252] = {
"Krenvazin",
"Ulduar",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[381967] = {
"Challenger's Cache",
"Algeth'ar Academy",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[378899] = {
"Grand Banquet of the Kalu'ak",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
"enUS",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[404492] = {
"Gilded Vase",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[33722] = {
"Storm Tempered Keeper",
"Ulduar",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[336432] = {
"Lavish Refreshment Table",
"Vault of the Incarnates",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[226625] = {
"Cave Skipper",
"Tak-Rethan Abyss",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[403483] = {
"Time-Portal to Everywhere Inn",
"Naxxramas",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[208461] = {
"Scorching Roots",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[131445] = {
"Block Warden",
"Tol Dagor",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[222222] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[216578] = {
"Swarm-Maven Donmiss",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[219912] = {
"Crawler",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[216555] = {
"Heelripper",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[451830] = {
"|cff1EFF00Heavy Trunk",
"Tak-Rethan Abyss",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[422154] = {
"Brann's Cozy Campfire",
"Tak-Rethan Abyss",
"enUS",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[216325] = {
"Crazed Predator",
"Tak-Rethan Abyss",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[137591] = {
"Healing Tide Totem",
"Kings' Rest",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[441670] = {
"Priory Door",
"Priory of the Sacred Flame",
"enUS",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[403508] = {
"Cat Toy",
"Naxxramas",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[208728] = {
"Treasure Wraith",
"Tak-Rethan Abyss",
"enUS",
},
[33855] = {
"Junk Bot",
"Ulduar",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[33836] = {
"Bomb Bot",
"Ulduar",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[22885] = {
"Dragon Turtle",
"Black Temple",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[212489] = {
"Spirit Wolf",
"Ulduar",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[442414] = {
"Shimmering Crystal",
"Tak-Rethan Abyss",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[165189] = {
"Hank",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[198489] = {
"Denizen of the Dream",
"Ulduar",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[23109] = {
"Vengeful Spirit",
"Black Temple",
"enUS",
},
[208224] = {
"Great Glorious Alliance Footman",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[376405] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
"enUS",
},
[377165] = {
"Cushion",
"Brackenhide Hollow",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[376191] = {
"Vault Door",
"Uldaman: Legacy of Tyr",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[33823] = {
"Twilight Slayer",
"Ulduar",
"enUS",
},
[380928] = {
"Crumbling Rock Vein",
"Uldaman: Legacy of Tyr",
"enUS",
},
[403980] = {
"Discarded Wastelands Rocket Pack",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[194569] = {
"Ulduar Teleporter",
"Ulduar",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[100820] = {
"Spirit Wolf",
"Ulduar",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33271] = {
"General Vezax",
"Ulduar",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[127480] = {
"Stinging Parasite",
"Tol Dagor",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[390747] = {
"Challenger's Cache",
"Brackenhide Hollow",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[62005] = {
"Beast",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[32882] = {
"Jormungar Behemoth",
"Ulduar",
"enUS",
},
[33820] = {
"Twilight Pyromancer",
"Ulduar",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[33838] = {
"Enslaved Fire Elemental",
"Ulduar",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[390750] = {
"Challenger's Cache",
"Uldaman: Legacy of Tyr",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[208380] = {
"Val'kyr Shadowguard",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[202824] = {
"Erratic Remnant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[32938] = {
"Flash Freeze",
"Ulduar",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[390752] = {
"Potion Cauldron of Ultimate Power |A:Professions-Icon-Quality-Tier3-Small:20:20|a",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[390748] = {
"Challenger's Cache",
"Neltharus",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[33772] = {
"Faceless Horror",
"Ulduar",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[233282] = {
"Refreshment Table",
"Vault of the Incarnates",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[33755] = {
"Dark Rune Ravager",
"Ulduar",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[155434] = {
"Emissary of the Tides",
"Temple of Sethraliss",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[130025] = {
"Irontide Thug",
"Tol Dagor",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[33670] = {
"Aerial Command Unit",
"Ulduar",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[390749] = {
"Challenger's Cache",
"Halls of Infusion",
"enUS",
},
[33818] = {
"Twilight Adherent",
"Ulduar",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[403977] = {
"Discarded Wastelands Rocket Pack",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[205308] = {
"Varian Wrynn",
"10.1.5 Time Rifts - HvA (The Warlands)",
"enUS",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[33350] = {
"Mimiron",
"Ulduar",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[380921] = {
"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[384641] = {
"Portal to Valdrakken",
"Algeth'ar Academy",
"enUS",
},
[34183] = {
"Arachnopod Destroyer",
"Ulduar",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[281374] = {
"Cache of Winter",
"Ulduar",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[139800] = {
"Galecaller Apprentice",
"Shrine of the Storm",
},
[32904] = {
"Dark Rune Commoner",
"Ulduar",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[414330] = {
"Altered Mycobloom",
"Tak-Rethan Abyss",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[252775] = {
"Costume Chest: Disposable Holiday Outfits",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[281370] = {
"Cache of Innovation",
"Ulduar",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[161124] = {
"Urg'roth, Breaker of Heroes",
"The Underrot",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[194437] = {
"Activate Tram",
"Ulduar",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[23374] = {
"Ashtongue Stalker",
"Black Temple",
"enUS",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[177807] = {
"Customs Security",
"Tazavesh, the Veiled Market",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[34057] = {
"Assault Bot",
"Ulduar",
"enUS",
},
[34184] = {
"Clockwork Mechanic",
"Ulduar",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[32906] = {
"Freya",
"Ulduar",
"enUS",
},
[420995] = {
"Web Blockade",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[303148] = {
"Soulwell",
"Uldaman: Legacy of Tyr",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185262] = {
"Howling Creekborne",
"Dragon Isles",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[428166] = {
"Duck Disguiser",
"Vault of the Incarnates",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[135846] = {
"Sand-Crusted Striker",
"Temple of Sethraliss",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[32907] = {
"Captured Mercenary Captain",
"Ulduar",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[139946] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[33228] = {
"Eonar's Gift",
"Ulduar",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[127486] = {
"Ashvane Officer",
"Tol Dagor",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[132530] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[23371] = {
"Shadowmoon Fallen",
"Black Temple",
"enUS",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[136391] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[32845] = {
"Hodir",
"Ulduar",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[408227] = {
"Leave Delve",
"Tak-Rethan Abyss",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[98285] = {
"Smashum Grabb",
"Tanaan Jungle",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[33806] = {
"Void Beast",
"Ulduar",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[378046] = {
"Stormforged Treasure Trove",
"Vault of the Incarnates",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[153285] = {
"Training Dummy",
"Eastern Kingdoms",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[376197] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[34191] = {
"Trash",
"Ulduar",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[398015] = {
"Doodad_Icecrown_ThroneFrostyWind01",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33488] = {
"Saronite Vapors",
"Ulduar",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[23419] = {
"Essence of Desire",
"Black Temple",
"enUS",
},
[34192] = {
"Boomer XP-500",
"Ulduar",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[23469] = {
"Enslaved Soul",
"Black Temple",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[224663] = {
"Mesmerized Flyer",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[134058] = {
"Galecaller Faye",
"Shrine of the Storm",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[98035] = {
"Dreadstalker",
"Ulduar",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[34193] = {
"Clockwork Sapper",
"Ulduar",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[381946] = {
"Challenger's Cache",
"The Azure Vault",
"enUS",
},
[54983] = {
"Treant",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[413837] = {
"Dream Bench",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[23226] = {
"Illidari Elite",
"Black Temple",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[376406] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[155432] = {
"Enchanted Emissary",
"Temple of Sethraliss",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[134602] = {
"Shrouded Fang",
"Temple of Sethraliss",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[33528] = {
"Guardian of Life",
"Ulduar",
"enUS",
},
[376270] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[376195] = {
"Stool",
"Uldaman: Legacy of Tyr",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[281368] = {
"Cache of Heroic Storms",
"Ulduar",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[281369] = {
"Cache of Storms",
"Ulduar",
"enUS",
},
[189669] = {
"Binding Spear",
"Neltharus",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[132481] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[130026] = {
"Bilge Rat Seaspeaker",
"Tol Dagor",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[281373] = {
"Rare Cache of Winter",
"Ulduar",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[281376] = {
"Freya's Gift",
"Ulduar",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[130027] = {
"Ashvane Marine",
"Tol Dagor",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[281377] = {
"Freya's Heroic Gift",
"Ulduar",
"enUS",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[190170] = {
"Talandra's Rose",
"Ulduar",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[33819] = {
"Twilight Frost Mage",
"Ulduar",
"enUS",
},
[33515] = {
"Auriaya",
"Ulduar",
"enUS",
},
[34133] = {
"Champion of Hodir",
"Ulduar",
"enUS",
},
[402922] = {
"Suspicious Lever",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[32877] = {
"Dark Rune Warbringer",
"Ulduar",
"enUS",
},
[32878] = {
"Dark Rune Evoker",
"Ulduar",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[32876] = {
"Dark Rune Champion",
"Ulduar",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[33525] = {
"Mangrove Ent",
"Ulduar",
"enUS",
},
[33110] = {
"Dark Rune Acolyte",
"Ulduar",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[33526] = {
"Ironroot Lasher",
"Ulduar",
"enUS",
},
[33430] = {
"Guardian Lasher",
"Ulduar",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[115402] = {
"Bishop",
"Return to Karazhan",
},
[380927] = {
"Crumbling Rock Vein",
"Uldaman: Legacy of Tyr",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[34134] = {
"Winter Revenant",
"Ulduar",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[403786] = {
"Antlered Skull",
"10.1.5 Time Rifts - Demon (Azewrath)",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[33966] = {
"Crusher Tentacle",
"Ulduar",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[136665] = {
"Ashvane Spotter",
"Tol Dagor",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[423349] = {
"Sacred Flame",
"Priory of the Sacred Flame",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[33431] = {
"Forest Swarmer",
"Ulduar",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[34135] = {
"Winter Rumbler",
"Ulduar",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
},
["extra_icon_timer_decimals"] = true,
["aura_grow_direction"] = 1,
["indicator_anchor"] = {
["x"] = 2,
["side"] = 6,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["aura_padding"] = 0,
["last_news_time"] = 1696043087,
["aura_width2"] = 19,
["aura_stack_size"] = 8,
["range_check_health_bar_alpha"] = 0.84999996423721,
["aura_show_crowdcontrol"] = true,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["crowdcontrol"] = {
1,
1,
1,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["is_buff"] = {
0.65098041296005,
0.011764707043767,
0.090196080505848,
0,
},
},
["hook_data_trash"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["__TrashAt"] = 1723752567,
["Time"] = 1702817435,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/10",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 509,
["semver"] = "1.0.9",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 10,
["PlaterCore"] = 1,
["Name"] = "Cast Icon Anchor + Border",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
},
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.89999997615814,
["semver"] = "4.7.0",
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.1999969482422,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["auto_toggle_friendly"] = {
["arena"] = true,
},
["extra_icon_height"] = 20,
["transparency_behavior"] = 3,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_consolidate"] = true,
["extra_icon_width"] = 21,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Extra Border"] = 2,
["Monk Statue"] = 2,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["minor_width_scale"] = 0.99999994039536,
["castbar_target_text_size"] = 9,
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.1999969482422,
["side"] = 7,
},
["aura_timer_text_font"] = "Expressway",
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["non_targeted_alpha_enabled"] = true,
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.1999969482422,
["target_indicator"] = "Double Arrows",
["range_check_cast_bar_alpha"] = 0.89999997615814,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateOverlapH"] = "0.75",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["SoftTargetIconGameObject"] = "1",
["nameplateSelfTopInset"] = "0.57",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["NamePlateHorizontalScale"] = "1",
["nameplateShowFriends"] = "1",
["nameplateMotion"] = "1",
["nameplateOccludedAlphaMult"] = "0.5",
["nameplateMinScale"] = "1",
["nameplateShowEnemyTotems"] = "1",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.37",
["SoftTargetNameplateInteract"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "0.89999997615814",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowOnlyNames"] = "0",
["nameplateShowAll"] = "1",
["nameplatePersonalShowInCombat"] = "0",
},
["login_counter"] = 50315,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
80,
1,
},
["bossmod_aura_height"] = 32.105155944824,
["aura_stack_font"] = "Expressway",
["blizzard_nameplate_font"] = "Expressway",
["range_check_buffs_alpha"] = 0.89999997615814,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.1000000238419,
},
},
["auras_per_row_amount"] = 4,
["blizzard_nameplate_large_font"] = "Expressway",
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["plate_config"] = {
["player"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
170,
},
["castbar_enabled"] = false,
["module_enabled"] = false,
["mana_incombat"] = {
168,
4,
},
["healthbar_color"] = {
0,
0,
0,
},
["cast_incombat"] = {
170,
},
["percent_text_anchor"] = {
["y"] = 1.2999992370605,
},
["power_percent_text_size"] = 8,
["spellname_text_font"] = "Expressway",
["mana"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["castbar_offset"] = -55,
["percent_text_size"] = 9,
["percent_text_font"] = "Expressway",
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["percent_text_color"] = {
1,
1,
1,
},
},
["friendlyplayer"] = {
["actorname_use_friends_color"] = false,
["spellpercent_text_font"] = "Expressway",
["show_guild_name"] = true,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_use_guild_color"] = false,
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["only_thename"] = true,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["actorname_friend_color"] = {
0.70980392156863,
},
["percent_text_show_decimals"] = false,
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["percent_text_font"] = "Expressway",
["actorname_guild_color"] = {
0.49803921568627,
},
["percent_show_percent"] = false,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["actorname_text_size"] = 9,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["show_guild_name"] = false,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["fixed_class_color"] = {
0,
1,
0,
1,
},
["enabled"] = false,
["percent_text_show_decimals"] = false,
["click_through"] = true,
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["mana_incombat"] = {
nil,
3,
},
["actorname_use_guild_color"] = true,
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Expressway",
["percent_show_percent"] = false,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana"] = {
nil,
3,
},
["big_actorname_text_font"] = "Expressway",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["actorname_use_friends_color"] = true,
["percent_text_font"] = "Expressway",
["buff_frame_y_offset"] = 10,
["actorname_guild_color"] = {
0.49803921568627,
1,
0.2,
1,
},
["quest_enabled"] = false,
["actorname_friend_color"] = {
0.70980392156863,
1,
1,
1,
},
["big_actortitle_text_size"] = 8,
["follow_blizzard_npc_option"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["actorname_text_size"] = 9,
},
["global_health_height"] = 16,
["global_health_width"] = 132,
["enemyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["show_guild_name"] = true,
["level_text_size"] = 8,
["cast"] = {
135,
7,
},
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "Expressway",
["big_actortitle_text_size"] = 10,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["percent_text_font"] = "Expressway",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["level_text_alpha"] = 0.29999998211861,
["spellname_text_size"] = 9,
["level_text_enabled"] = false,
},
["enemynpc"] = {
["spellpercent_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["level_text_font"] = "Expressway",
["actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 8,
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["big_actortitle_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["spellname_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["big_actorname_text_font"] = "Expressway",
["spellpercent_text_size"] = 9,
["level_text_alpha"] = 0.29999998211861,
["percent_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["actorname_text_size"] = 9,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["spellname_text_size"] = 9,
["level_text_enabled"] = false,
},
},
["aura_y_offset"] = 1.5,
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["bossmod_aura_width"] = 32.621017456055,
["indicator_spec"] = false,
["border_thickness"] = 1.2000000476837,
["resources_settings"] = {
["global_settings"] = {
["anchor"] = {
["y"] = 9.7099990844727,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-75-0EEA1695"] = "SoulShards",
["Player-5764-00018799"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-3674-0898468A"] = "SoulShards",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4184-0021692E"] = "ComboPoints",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-3296-00945C33"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-970-006B99B8"] = "ComboPoints",
["Player-3678-0D44FD01"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[20243] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[280720] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
},
["indicator_scale"] = 0.99999994039536,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.50242385268211,
},
["npc_colors"] = {
[99358] = {
true,
false,
"fuchsia",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[134012] = {
false,
false,
"blue",
},
[207796] = {
true,
false,
"fuchsia",
},
[129601] = {
false,
false,
"blueviolet",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[161124] = {
false,
false,
"blue",
},
[200126] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
false,
false,
"mediumpurple",
},
[197697] = {
true,
false,
"fuchsia",
},
[132481] = {
false,
false,
"blue",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
false,
false,
"blue",
},
[197698] = {
true,
false,
"fuchsia",
},
[175576] = {
true,
false,
"fuchsia",
},
[199233] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
true,
false,
"blue",
},
[130435] = {
false,
false,
"white",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[178008] = {
true,
false,
"yellow",
},
[127111] = {
true,
false,
"blue",
},
[40634] = {
true,
false,
"deepskyblue",
},
[130436] = {
false,
false,
"blue",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[130437] = {
false,
false,
"fuchsia",
},
[192333] = {
true,
false,
"mediumpurple",
},
[134150] = {
false,
false,
"yellow",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
false,
false,
"blue",
},
[99366] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[205384] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[134158] = {
false,
false,
"blue",
},
[172265] = {
true,
false,
"deepskyblue",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[65317] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[129548] = {
false,
false,
"blueviolet",
},
[101991] = {
true,
false,
"blue",
},
[134418] = {
false,
false,
"springgreen",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[180070] = {
true,
false,
"fuchsia",
},
[138255] = {
false,
false,
"blueviolet",
},
[198868] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[150276] = {
false,
false,
"white",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[135699] = {
false,
false,
"darkgreen",
},
[97197] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"deepskyblue",
},
[198870] = {
true,
false,
"blue",
},
[195929] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[170483] = {
true,
false,
"fuchsia",
},
[98285] = {
false,
false,
"blue",
},
[168949] = {
false,
false,
"white",
},
[190688] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[139284] = {
false,
false,
"springgreen",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[129232] = {
false,
false,
"white",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[172021] = {
false,
false,
"white",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[180335] = {
true,
false,
"deepskyblue",
},
[202969] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[134174] = {
false,
false,
"springgreen",
},
[202971] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[186220] = {
true,
false,
"deepskyblue",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[168318] = {
true,
false,
"mediumpurple",
},
[163459] = {
true,
false,
"blue",
},
[83392] = {
false,
false,
"blue",
},
[178165] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[81283] = {
false,
false,
"deepskyblue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[198501] = {
true,
false,
"deepskyblue",
},
[45917] = {
true,
false,
"mediumpurple",
},
[162057] = {
true,
false,
"mediumpurple",
},
[150165] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[135204] = {
false,
false,
"springgreen",
},
[122972] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
false,
false,
"white",
},
[198503] = {
true,
false,
"deepskyblue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[139425] = {
false,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[196202] = {
true,
false,
"blue",
},
[138019] = {
false,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[186740] = {
false,
false,
"blue",
},
[129367] = {
false,
false,
"springgreen",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[174210] = {
true,
false,
"deepskyblue",
},
[100532] = {
true,
false,
"fuchsia",
},
[182778] = {
true,
false,
"fuchsia",
},
[165515] = {
false,
false,
"fuchsia",
},
[134058] = {
false,
false,
"yellow",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[195696] = {
true,
false,
"fuchsia",
},
[187768] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[129370] = {
false,
false,
"springgreen",
},
[151325] = {
true,
false,
"fuchsia",
},
[153755] = {
false,
false,
"white",
},
[189816] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[139946] = {
false,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[132530] = {
false,
false,
"blue",
},
[191225] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[105715] = {
true,
false,
"blue",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[132532] = {
false,
false,
"fuchsia",
},
[139949] = {
false,
false,
"springgreen",
},
[130012] = {
false,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[191739] = {
true,
false,
"mediumpurple",
},
[168594] = {
true,
false,
"mediumpurple",
},
[144298] = {
true,
false,
"blue",
},
[137521] = {
false,
false,
"fuchsia",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[196856] = {
true,
false,
"mediumpurple",
},
[96574] = {
true,
false,
"mediumpurple",
},
[198263] = {
true,
false,
"mediumpurple",
},
[190207] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"blue",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[135989] = {
false,
false,
"blue",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[179852] = {
true,
false,
"blue",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[177807] = {
false,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"blue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[178139] = {
true,
false,
"mediumpurple",
},
[190340] = {
true,
false,
"blue",
},
[80816] = {
true,
false,
"deepskyblue",
},
[204918] = {
true,
false,
"blue",
},
[141939] = {
false,
false,
"blueviolet",
},
[193760] = {
true,
false,
"mediumpurple",
},
[137591] = {
false,
false,
"yellow",
},
[164510] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[168153] = {
true,
false,
"fuchsia",
},
[184331] = {
true,
false,
"mediumpurple",
},
[151657] = {
false,
false,
"white",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[189555] = {
true,
false,
"deepskyblue",
},
[114544] = {
true,
false,
"fuchsia",
},
[155432] = {
false,
false,
"blueviolet",
},
[199549] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[135474] = {
true,
false,
"blue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[155433] = {
false,
false,
"blueviolet",
},
[213806] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[193373] = {
true,
false,
"fuchsia",
},
[195842] = {
true,
false,
"blue",
},
[190174] = {
true,
false,
"fuchsia",
},
[104251] = {
true,
false,
"fuchsia",
},
[183497] = {
true,
false,
"blue",
},
[163618] = {
true,
false,
"blue",
},
[178171] = {
true,
false,
"fuchsia",
},
[101438] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"mediumpurple",
},
[84400] = {
true,
false,
"mediumpurple",
},
[170882] = {
true,
false,
"blue",
},
[205623] = {
true,
false,
"mediumpurple",
},
[186125] = {
true,
false,
"deepskyblue",
},
[164707] = {
true,
false,
"mediumpurple",
},
[184335] = {
true,
false,
"deepskyblue",
},
[178392] = {
true,
false,
"fuchsia",
},
[206074] = {
true,
false,
"deepskyblue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[189707] = {
false,
false,
"white",
},
[205618] = {
true,
false,
"mediumpurple",
},
[179733] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[171805] = {
true,
false,
"blue",
},
[164737] = {
true,
false,
"fuchsia",
},
[168992] = {
true,
false,
"deepskyblue",
},
[201288] = {
true,
false,
"fuchsia",
},
[134139] = {
false,
false,
"blue",
},
[136735] = {
false,
false,
"fuchsia",
},
[196102] = {
false,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[212673] = {
true,
false,
"fuchsia",
},
[127879] = {
false,
false,
"blue",
},
[81236] = {
true,
false,
"deepskyblue",
},
[177817] = {
true,
false,
"blue",
},
[150142] = {
true,
false,
"deepskyblue",
},
[162049] = {
false,
false,
"fuchsia",
},
[135235] = {
false,
false,
"white",
},
[82579] = {
true,
false,
"deepskyblue",
},
[180348] = {
true,
false,
"blue",
},
[189706] = {
true,
false,
"yellow",
},
[165414] = {
true,
false,
"deepskyblue",
},
[196671] = {
true,
false,
"mediumpurple",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[134390] = {
false,
false,
"blueviolet",
},
[114804] = {
true,
false,
"blue",
},
[162040] = {
true,
false,
"fuchsia",
},
[175517] = {
true,
false,
"blue",
},
[100531] = {
true,
false,
"mediumpurple",
},
[150253] = {
true,
false,
"mediumpurple",
},
[194315] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[115020] = {
true,
false,
"mediumpurple",
},
[135365] = {
true,
false,
"fuchsia",
},
[167963] = {
true,
false,
"blue",
},
[139800] = {
false,
false,
"fuchsia",
},
[56792] = {
true,
false,
"fuchsia",
},
[194316] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"blue",
},
[98081] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"mediumpurple",
},
[208440] = {
true,
false,
"mediumpurple",
},
[195851] = {
false,
false,
"blue",
},
[198326] = {
true,
false,
"mediumpurple",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[135239] = {
false,
false,
"white",
},
[150712] = {
false,
false,
"white",
},
[104278] = {
true,
false,
"fuchsia",
},
[167967] = {
true,
false,
"blue",
},
[201223] = {
true,
false,
"blue",
},
[169861] = {
true,
false,
"blue",
},
[162691] = {
false,
false,
"blue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[136391] = {
false,
false,
"blue",
},
[186208] = {
true,
false,
"mediumpurple",
},
[212775] = {
true,
false,
"deepskyblue",
},
[156212] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[151353] = {
false,
false,
"white",
},
[199124] = {
true,
false,
"deepskyblue",
},
[135241] = {
false,
false,
"fuchsia",
},
[214140] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[134602] = {
false,
false,
"blue",
},
[156213] = {
false,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"blue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[193534] = {
false,
false,
"white",
},
[171376] = {
true,
false,
"blue",
},
[155830] = {
true,
false,
"deepskyblue",
},
[179841] = {
true,
false,
"deepskyblue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[198999] = {
false,
false,
"white",
},
[81432] = {
true,
false,
"deepskyblue",
},
[182045] = {
true,
false,
"fuchsia",
},
[32666] = {
false,
false,
"blue",
},
[136139] = {
false,
false,
"white",
},
[155831] = {
true,
false,
"fuchsia",
},
[129788] = {
true,
false,
"deepskyblue",
},
[206214] = {
true,
false,
"mediumpurple",
},
[131445] = {
false,
false,
"blue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[130025] = {
false,
false,
"blue",
},
[59546] = {
true,
false,
"blue",
},
[100486] = {
true,
false,
"deepskyblue",
},
[163121] = {
true,
false,
"blue",
},
[101637] = {
true,
false,
"mediumpurple",
},
[130404] = {
true,
false,
"mediumpurple",
},
[102788] = {
true,
false,
"blue",
},
[84520] = {
true,
false,
"mediumpurple",
},
[162099] = {
true,
false,
"fuchsia",
},
[189464] = {
true,
false,
"blue",
},
[168109] = {
true,
false,
"deepskyblue",
},
[192789] = {
false,
false,
"blue",
},
[168365] = {
false,
false,
"fuchsia",
},
[76446] = {
true,
false,
"blue",
},
[126919] = {
true,
false,
"deepskyblue",
},
[134990] = {
false,
false,
"springgreen",
},
[130026] = {
false,
false,
"springgreen",
},
[135246] = {
false,
false,
"white",
},
[59555] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[131666] = {
true,
false,
"blue",
},
[96587] = {
true,
false,
"deepskyblue",
},
[194487] = {
true,
false,
"blue",
},
[183671] = {
true,
false,
"fuchsia",
},
[165805] = {
true,
false,
"mediumpurple",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[129552] = {
true,
false,
"mediumpurple",
},
[176551] = {
true,
false,
"deepskyblue",
},
[135759] = {
false,
false,
"fuchsia",
},
[144071] = {
false,
false,
"springgreen",
},
[130027] = {
false,
false,
"fuchsia",
},
[190362] = {
true,
false,
"blue",
},
[176521] = {
true,
false,
"blue",
},
[200137] = {
true,
false,
"deepskyblue",
},
[190690] = {
true,
false,
"mediumpurple",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[155824] = {
true,
false,
"blue",
},
[98368] = {
true,
false,
"mediumpurple",
},
[196576] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[44404] = {
true,
false,
"deepskyblue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"blue",
},
[115642] = {
true,
false,
"blue",
},
[81819] = {
true,
false,
"blue",
},
[134994] = {
false,
false,
"fuchsia",
},
[214012] = {
true,
false,
"mediumpurple",
},
[163894] = {
true,
false,
"blue",
},
[157017] = {
true,
false,
"blue",
},
[200836] = {
true,
false,
"mediumpurple",
},
[179847] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[169905] = {
true,
false,
"blue",
},
[152898] = {
true,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"deepskyblue",
},
[168627] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[45704] = {
true,
false,
"dimgray",
},
[131586] = {
true,
false,
"mediumpurple",
},
[186658] = {
true,
false,
"deepskyblue",
},
[138187] = {
true,
false,
"fuchsia",
},
[206351] = {
true,
false,
"deepskyblue",
},
[127484] = {
false,
false,
"blueviolet",
},
[191847] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[179842] = {
true,
false,
"fuchsia",
},
[197905] = {
true,
false,
"blue",
},
[115388] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[197145] = {
true,
false,
"mediumpurple",
},
[164921] = {
true,
false,
"deepskyblue",
},
[198424] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"deepskyblue",
},
[199703] = {
true,
false,
"fuchsia",
},
[167607] = {
true,
false,
"mediumpurple",
},
[197146] = {
true,
false,
"mediumpurple",
},
[188067] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[153285] = {
false,
false,
"gold",
},
[205622] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
false,
false,
"blue",
},
[45930] = {
true,
false,
"fuchsia",
},
[136643] = {
false,
false,
"blue",
},
[133593] = {
false,
false,
"springgreen",
},
[130400] = {
true,
false,
"mediumpurple",
},
[40943] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[199547] = {
true,
false,
"fuchsia",
},
[192800] = {
true,
false,
"blue",
},
[138254] = {
false,
false,
"fuchsia",
},
[141285] = {
false,
false,
"fuchsia",
},
[130661] = {
false,
false,
"springgreen",
},
[165556] = {
true,
false,
"fuchsia",
},
[150160] = {
true,
false,
"mediumpurple",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[164506] = {
true,
false,
"blue",
},
[152009] = {
false,
false,
"white",
},
[131677] = {
true,
false,
"fuchsia",
},
[163520] = {
true,
false,
"mediumpurple",
},
[199595] = {
true,
false,
"mediumpurple",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[166589] = {
true,
false,
"fuchsia",
},
[152905] = {
true,
false,
"fuchsia",
},
[136665] = {
false,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
false,
false,
"blue",
},
[197406] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[134364] = {
false,
false,
"springgreen",
},
[80936] = {
true,
false,
"blue",
},
[206230] = {
true,
false,
"fuchsia",
},
[114624] = {
true,
false,
"mediumpurple",
},
[199325] = {
true,
false,
"deepskyblue",
},
[84957] = {
true,
false,
"fuchsia",
},
[197535] = {
true,
false,
"fuchsia",
},
[131821] = {
true,
false,
"blue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[186226] = {
true,
false,
"fuchsia",
},
[198047] = {
true,
false,
"blue",
},
[180015] = {
true,
false,
"blue",
},
[169927] = {
true,
false,
"fuchsia",
},
[177716] = {
true,
false,
"deepskyblue",
},
[141283] = {
false,
false,
"blue",
},
[164929] = {
true,
false,
"blue",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[190377] = {
true,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[167998] = {
true,
false,
"mediumpurple",
},
[155221] = {
true,
false,
"deepskyblue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[192934] = {
true,
false,
"blue",
},
[131436] = {
true,
false,
"mediumpurple",
},
[167113] = {
true,
false,
"blue",
},
[135007] = {
false,
false,
"blue",
},
[185262] = {
false,
false,
"blue",
},
[135263] = {
false,
false,
"blueviolet",
},
[135764] = {
false,
false,
"blueviolet",
},
[195876] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"fuchsia",
},
[102404] = {
true,
false,
"mediumpurple",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[176959] = {
true,
false,
"deepskyblue",
},
[95769] = {
true,
false,
"deepskyblue",
},
[166301] = {
true,
false,
"fuchsia",
},
[195877] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[98706] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[208698] = {
true,
false,
"fuchsia",
},
[82597] = {
true,
false,
"fuchsia",
},
[168007] = {
true,
false,
"blue",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"blue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[41139] = {
true,
false,
"blue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[192796] = {
true,
false,
"fuchsia",
},
[132126] = {
true,
false,
"blue",
},
[127799] = {
false,
false,
"blue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[205727] = {
true,
false,
"blue",
},
[190381] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[138465] = {
false,
false,
"blue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[175550] = {
true,
false,
"fuchsia",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[134629] = {
false,
false,
"blue",
},
[167876] = {
true,
false,
"fuchsia",
},
[197671] = {
true,
false,
"blue",
},
[197799] = {
true,
false,
"deepskyblue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[59552] = {
true,
false,
"blue",
},
[167493] = {
false,
false,
"blue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[130485] = {
false,
false,
"white",
},
[127480] = {
false,
false,
"fuchsia",
},
[59873] = {
true,
false,
"mediumpurple",
},
[81984] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[176573] = {
true,
false,
"fuchsia",
},
[170690] = {
true,
false,
"blue",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
false,
false,
"blue",
},
[173190] = {
true,
false,
"deepskyblue",
},
[151127] = {
true,
false,
"fuchsia",
},
[167612] = {
true,
false,
"blue",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[203812] = {
true,
false,
"fuchsia",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[205212] = {
true,
false,
"fuchsia",
},
[131819] = {
true,
false,
"deepskyblue",
},
[189235] = {
true,
false,
"mediumpurple",
},
[80935] = {
true,
false,
"deepskyblue",
},
[104300] = {
true,
false,
"deepskyblue",
},
[169159] = {
true,
false,
"gold",
},
[133482] = {
false,
false,
"blueviolet",
},
[87329] = {
false,
false,
"blue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[96664] = {
true,
false,
"blue",
},
[194990] = {
true,
false,
"deepskyblue",
},
[127482] = {
false,
false,
"blue",
},
[137830] = {
true,
false,
"blue",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[155094] = {
false,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[164557] = {
true,
false,
"mediumpurple",
},
[174773] = {
false,
false,
"blue",
},
[141284] = {
false,
false,
"springgreen",
},
[113537] = {
true,
false,
"mediumpurple",
},
[185529] = {
true,
false,
"fuchsia",
},
[128434] = {
true,
false,
"blue",
},
[197149] = {
true,
false,
"deepskyblue",
},
[132491] = {
false,
false,
"fuchsia",
},
[83894] = {
true,
false,
"mediumpurple",
},
[130488] = {
false,
false,
"fuchsia",
},
[129529] = {
true,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[196115] = {
true,
false,
"blue",
},
[189878] = {
true,
false,
"yellow",
},
[173044] = {
true,
false,
"deepskyblue",
},
[187154] = {
true,
false,
"fuchsia",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[200840] = {
true,
false,
"mediumpurple",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"mediumpurple",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[151773] = {
true,
false,
"blue",
},
[139799] = {
false,
false,
"blue",
},
[81820] = {
true,
false,
"deepskyblue",
},
[76104] = {
true,
false,
"blue",
},
[188703] = {
true,
false,
"yellow",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[154744] = {
true,
false,
"fuchsia",
},
[98521] = {
true,
false,
"fuchsia",
},
[98275] = {
true,
false,
"blue",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[156157] = {
true,
false,
"blue",
},
[198577] = {
true,
false,
"blue",
},
[174197] = {
true,
false,
"deepskyblue",
},
[188673] = {
true,
false,
"mediumpurple",
},
[162133] = {
true,
false,
"fuchsia",
},
[92610] = {
true,
false,
"fuchsia",
},
[197595] = {
true,
false,
"mediumpurple",
},
[164563] = {
true,
false,
"blue",
},
[114634] = {
false,
false,
"white",
},
[190342] = {
true,
false,
"fuchsia",
},
[179269] = {
true,
false,
"fuchsia",
},
[83892] = {
true,
false,
"deepskyblue",
},
[171341] = {
true,
false,
"deepskyblue",
},
[178630] = {
true,
false,
"deepskyblue",
},
[115640] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"deepskyblue",
},
[127497] = {
false,
false,
"blue",
},
[127486] = {
false,
false,
"darkgreen",
},
[151649] = {
false,
false,
"white",
},
[165076] = {
true,
false,
"blue",
},
[115402] = {
false,
false,
"deepskyblue",
},
[204206] = {
true,
false,
"blue",
},
[195930] = {
true,
false,
"mediumpurple",
},
[191230] = {
true,
false,
"fuchsia",
},
[92538] = {
true,
false,
"fuchsia",
},
[168156] = {
true,
false,
"fuchsia",
},
[100485] = {
true,
false,
"mediumpurple",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[161241] = {
false,
false,
"springgreen",
},
[115019] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"blue",
},
[184131] = {
true,
false,
"fuchsia",
},
[168418] = {
true,
false,
"deepskyblue",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[167965] = {
true,
false,
"blue",
},
[102232] = {
true,
false,
"blue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"blue",
},
[155434] = {
false,
false,
"blueviolet",
},
[180323] = {
true,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[168942] = {
true,
false,
"blue",
},
[161243] = {
false,
false,
"blueviolet",
},
[187969] = {
true,
false,
"blue",
},
[84990] = {
true,
false,
"blue",
},
[114542] = {
true,
false,
"blue",
},
[127488] = {
false,
false,
"springgreen",
},
[163458] = {
true,
false,
"deepskyblue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[150168] = {
true,
false,
"fuchsia",
},
[161244] = {
false,
false,
"fuchsia",
},
[136186] = {
false,
false,
"fuchsia",
},
[45915] = {
true,
false,
"mediumpurple",
},
[83765] = {
false,
false,
"deepskyblue",
},
[197985] = {
true,
false,
"deepskyblue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[183495] = {
true,
false,
"mediumpurple",
},
[180429] = {
true,
false,
"mediumpurple",
},
[214441] = {
true,
false,
"fuchsia",
},
[208193] = {
true,
false,
"blue",
},
[196203] = {
true,
false,
"deepskyblue",
},
[176974] = {
true,
false,
"fuchsia",
},
[184023] = {
true,
false,
"blue",
},
[190686] = {
true,
false,
"blue",
},
[128967] = {
false,
false,
"fuchsia",
},
[168934] = {
true,
false,
"fuchsia",
},
[135846] = {
false,
false,
"blueviolet",
},
[205363] = {
true,
false,
"deepskyblue",
},
[136470] = {
false,
false,
"springgreen",
},
[205619] = {
true,
false,
"mediumpurple",
},
[134137] = {
false,
false,
"springgreen",
},
[170480] = {
true,
false,
"mediumpurple",
},
[127106] = {
true,
false,
"fuchsia",
},
[184301] = {
true,
false,
"deepskyblue",
},
[131587] = {
true,
false,
"mediumpurple",
},
[141938] = {
false,
false,
"fuchsia",
},
[185032] = {
true,
false,
"mediumpurple",
},
[205620] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[114319] = {
true,
false,
"blue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[81279] = {
false,
false,
"deepskyblue",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[129547] = {
false,
false,
"mediumpurple",
},
},
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Find Weakness\"] = 93,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1697196348,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 516,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Time"] = 1702817419,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["Enabled"] = true,
["Revision"] = 163,
["Options"] = {
},
["Author"] = "�r��ne-Kel'thuzad",
["Desc"] = "Adds double arrow as a target indicators option",
["Prio"] = 99,
["Name"] = "Double Arrow Target",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Time"] = 1702817442,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Url"] = "https://wago.io/uwe9CEwMm/2",
["Icon"] = 132212,
["Enabled"] = true,
["Revision"] = 237,
["Options"] = {
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Prio"] = 99,
["Name"] = "QuestProgress",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1702817467,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/VtPjNl8Mg/7",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1235,
["semver"] = "1.0.6",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Absorb Shields in Healthbar",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
},
["Time"] = 1696898532,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["arena"] = true,
["pvp"] = true,
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/Zz1aEIOJR/1",
["Icon"] = 132310,
["Enabled"] = true,
["Revision"] = 325,
["semver"] = "1.0.0",
["Author"] = "Irashi-Antonidas",
["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Sappable (Custom Icon)",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
},
["Time"] = 1696897899,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/lLK9gn7lc/5",
["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
["Enabled"] = true,
["Revision"] = 74,
["semver"] = "1.0.4",
["Author"] = "Ariani-Antonidas",
["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
["Prio"] = 99,
["version"] = 5,
["PlaterCore"] = 1,
["Name"] = "Arena - Buff-Tracking Mode",
["LastHookEdited"] = "Load Screen",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1702817454,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/-ny0jWQDT/2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = true,
["Revision"] = 213,
["semver"] = "1.0.1",
["Author"] = "Driani-Antonidas",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Target Border Color",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1723752569,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/12",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 455,
["semver"] = "1.0.11",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["Name"] = "Cast Icon Anchor + Border",
["PlaterCore"] = 1,
["version"] = 12,
["HooksTemp"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    envTable.moveCastIcon = not Plater.db.profile.castbar_icon_customization_enabled --false\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = true\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        if not envTable.moveCastIcon then return end\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:ClearAllPoints()\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:ClearAllPoints()\n                    PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:ClearAllPoints()\n                PixelUtil.SetPoint(healthBar.border, \"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                PixelUtil.SetPoint(healthBar.border, \"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696898479,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 108,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Pet Threat Highlighter",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["SPpixelborder"] = false,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowyoff"] = 0.5,
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1696898535,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/uEnDIKvvP/2",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 981,
["semver"] = "1.0.1",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "Common Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Name"] = "Glow Type",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Name"] = "Glow Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Name"] = "Number of Particles",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Name"] = "X-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Name"] = "Y-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Name"] = "Pixel Line Length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Name"] = "Pixel Line Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Name"] = "Ants Glow Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1702817430,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 89,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Force Threat Color NPC",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["EXEbdrcolor"] = {
1,
0.37647062540054,
0,
1,
},
["EXEhicolor"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
0,
},
["EXEhdcolor"] = {
0.99215692281723,
1,
0.94901967048645,
1,
},
["EXEalert"] = 0,
["EXEhbcon"] = false,
["onlyNPC"] = true,
["EXEbdron"] = false,
},
["HooksTemp"] = {
},
["UID"] = "0x6150129e178c7fc5",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
},
["Time"] = 1702817455,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/uCoprJFNs/3",
["Icon"] = 135358,
["Enabled"] = true,
["Revision"] = 3555,
["semver"] = "1.0.2",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Color Options",
["Name"] = "Execute Color Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhbcon",
["Value"] = true,
["Name"] = "Enable Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Healthbar Color",
},
{
["Type"] = 1,
["Key"] = "EXEhbcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Healthbar Color",
},
{
["Type"] = 4,
["Key"] = "EXEbdron",
["Value"] = false,
["Name"] = "Enable Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Border Color",
},
{
["Type"] = 1,
["Key"] = "EXEbdrcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Border Color",
},
{
["Type"] = 4,
["Key"] = "onlyNPC",
["Value"] = true,
["Name"] = "Only on NPC",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply these features only on NPC",
},
{
["Type"] = 4,
["Key"] = "TrackAggro",
["Value"] = false,
["Name"] = "Track Aggro Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Divisor Options",
["Name"] = "Execute Divisor Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhdoff",
["Value"] = false,
["Name"] = "Disable Execute Health Divisor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Disable Execute Health Divisor",
},
{
["Type"] = 1,
["Key"] = "EXEhdcolor",
["Value"] = {
1,
1,
1,
0.8500000089407,
},
["Name"] = "Execute Health Divisor Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Divisor Color",
},
{
["Type"] = 1,
["Key"] = "EXEhicolor",
["Value"] = {
0.27843137254902,
0,
1,
0.25,
},
["Name"] = "Execute Health Indicator Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Indicator Color",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
["Min"] = 0,
["Key"] = "EXEalert",
["Value"] = 13,
["Name"] = "Preview Divisor %",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Force set health Divisor alpha value.",
["Min"] = 0,
["Key"] = "EXEhdalpha",
["Value"] = 50,
["Name"] = "Divisor Alpha %",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Name"] = "Advanced Execute Range [Fix]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
},
["Time"] = 1702817476,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/UMY67A2bw/1",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 112,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Health / Max Health (%)",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, -- Chaotic Essence\n        [189707] = true, -- Chaotic mote \n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, -- Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        \n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1704504618,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 245,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Name"] = "Performance Units",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["Time"] = 1700250838,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "ShadowDotsColors",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["castNameSize"] = 60,
["colorInterruptSoon"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorInterruptAvailable"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["colorNoInterrupt"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["colorProtected"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
},
["LastHookEdited"] = "Constructor",
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
},
["Time"] = 1723854009,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/3408lMaNb/3",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1329,
["semver"] = "1.0.2",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["Name"] = "Enhanced Enemy Castbar [Plater]",
["PlaterCore"] = 1,
["version"] = 3,
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" » \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    local cooldown  = C_Spell.GetSpellCooldown(envTable.interruptID)  --local\n                    start, duration = cooldown.startTime, cooldown.duration\n                    interruptReadyTime = start + duration\n                end\n                \n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            if interruptReadyTime == 0 then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                            elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                                -- Paladin Avenger's Shield\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            elseif interruptReadyTime < (castEndTime - 0.25) then       \n                                castBar.tick:Show()\n                                castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                                local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue  -- castBar.spellStartTime + 0.25\n                                if castBar.channeling then\n                                    tickLocation = 1 - tickLocation\n                                end                                \n                                castBar.tick:SetPoint (\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                                \n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)                \n                            elseif interruptReadyTime >= (castEndTime - 0.25) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                            end\n                        else\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)                \n                        end     \n                    end          \n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n                \n                \n                -- Spell Reflection coloring\n                if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                    -- Check to see if the ability is targetting the player\n                    if UnitExists(targetUnitId) then\n                        if UnitName(targetUnitId) == UnitName(\"player\") then\n                            -- Color the bar if the spell is reflectable\n                            if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                                Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                            end\n                        end\n                    end\n                end\n            end\n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil and IsSpellKnown(132409, true) then\n            -- Check for Grimoire of Sacrifice\n            return 132409\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        }\n    }   \n    \nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
},
["Options"] = {
{
["Type"] = 5,
["Name"] = "CUSTOM CAST BAR COLORS",
["Value"] = "Feature - Custom cast bar coloring:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable custom colored enemy cast bars.",
["Value"] = true,
["Key"] = "showInterruptColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Value"] = true,
["Key"] = "showSecondaryInterrupts",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is available.",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Key"] = "colorInterruptAvailable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Key"] = "colorInterruptSoon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Name"] = "Color when my primary interrupt is unavailable.",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Key"] = "colorNoInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Key"] = "colorSecondaryInterrupt",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Name"] = "Color for casts that are protected/un-interruptable.",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Key"] = "colorProtected",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Key"] = "colorTick",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Name"] = "Settings Target Name",
["Value"] = "Feature - Show name of target in the cast bar:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show the name of cast targets in the cast bar.",
["Value"] = true,
["Key"] = "showTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Hide my name when not in a party.",
["Value"] = true,
["Key"] = "hideNameSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Name"] = "Show \"Me\" instead of my character name.",
["Value"] = true,
["Key"] = "replaceName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 60,
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castNameSize",
},
{
["Type"] = 5,
["Name"] = "Settings Border Flash",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Key"] = "option8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Value"] = false,
["Key"] = "nameplateFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when not in a party.",
["Value"] = true,
["Key"] = "hideNameplateFlashSolo",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Value"] = true,
["Key"] = "hideFlashAsTank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
},
{
["OptionsValues"] = {
["colour_names"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1702817524,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 257,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Name"] = "M+ Renamer",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
},
{
["OptionsValues"] = {
["extraLowScale"] = 0.79999995231628,
["higherScale"] = 1.1999999284744,
["scale"] = true,
["lowScale"] = 0.79971849918365,
["midScale"] = 0.89680552482605,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local prioScaleMap = {\n        [1] = modTable.config.midScale, -- 0.9\n        [2] = modTable.config.lowScale, -- 0.8\n        [3] = modTable.config.extraLowScale, -- 0.7,\n        [4] = modTable.config.higherScale -- 1.1\n    }\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[153285] = 2, --Testing Dummy        \n        --[194644] = 4, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        \n        --Nokhud Offensive\n        [195875] = 2, --Desecrated Bakar\n        [195855] = 1, -- Risen Warrior\n        \n        \n        --Dawn of the Infinite\n        [204536] = 2, --Blight Chunk\n        [206063] = 1, -- Temporal Deviation\n        \n        --Waycrest manor\n        [131669] = 1, --Jagged Hound\n        \n        --Atal'Dazar\n        [128435] = 1, --Saurid's\n        \n        --Darkheart Thicket\n        [100529] = 2, --Hatespawn Slime\n        [101074] = 2, --Hatespawn Whelpling\n        \n        --Everbloom\n        [81864] = 1, --Dreadpetal\n        [84401] = 2, --Swift Sproutling\n        \n        --Blackrook Hold\n        [98677] = 2, --Rook Spiderling\n        [98900] = 1, --Wyrmtongue Trickster\n        [102781] = 2, --Fel Bat Pup\n        \n        --Throne of the tides\n        [40923] = 2, --Unstable Corruption\n        \n        --Halls of Infusion\n        [190923] = 2, --Zephyrling\n        \n        --Brackenhide Hollow\n        [189299] = 2, -- Decaying Slime\n        [189363] = 2, -- Infected Lasher\n        [194373] = 1, -- Witherling\n        \n        --Uldaman\n        [184134] = 2, -- Scavaging Leaper\n        \n        --Nelth's Lair\n        [96247] = 2, -- Vileshard Crawler\n        [102430] = 2, --Tarspitter Slug\n        \n        -- Freehold\n        [130024] = 2, --Soggy Shiprat\n        \n        -- Underrot\n        [131402] = 1, --Underrot Tick\n        \n        -- Temple of the Jade Serpent\n        [58319] = 2, --Lesser Sha\n        [62358] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [195579] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [105703] = 2, --Mana Wyrm\n        [104295] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [77006] = 2, --Corpse Skitterling\n        [75451] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [196642] = 2, --Hungry Lasher\n        [197398] = 2, --Hungry Lasher\n        [196694] = 1, --Arcane Forager\n        [192329] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [191313] = 2, -- Volatile Sapling\n        [187242] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [190205] = 1, --Scorchling\n        [197509] = 2, --Primal Thundercloud\n        [187894] = 1, --Infused Whelp\n        \n        --Karazhan\n        \n        --Tazavesh\n        [178163] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [163089] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [166264] = 2, --Spare Parts\n        [171500] = 2, --Shuffling Corpse\n        [165138] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [171455] = 2, --Stonewall Gargon\n        [168457] = 2, --Stonewall Gargon\n        [166589] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [168969] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [168986] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [167892] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Amirdrassil\n        [210231] = 1, --Tainted Lasher\n        [211306] = 2, --Fiery vines\n        \n        --Vault\n        [194991] = 1, --Oathsworn Vanguard\n        [191714] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [183669] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [169925] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [144300] = 2, -- \n        [189707] = 2, --Chaotic Motes\n    }\n    \n    modTable.isSpiteful = function(id)\n        return tonumber(id) == 174773\n    end\n    \n    modTable.parseGUID = function(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    modTable.spitefulTargetsPlayer = function(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\n    \n    modTable.getScale = function(prio)\n        if not modTable.config.scale then\n            return nil\n        end\n        \n        return prioScaleMap[prio]\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
},
["Time"] = 1713704142,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 1543,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Name"] = "Very Low Prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Name"] = "Higher Priority",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Name"] = "Priority based scaling",
},
},
["auras_per_row_auto"] = false,
["auras_per_row_amount2"] = 2,
["aura_width"] = 19,
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["blizzard_nameplate_large_font_size"] = 9,
["pet_width_scale"] = 0.99999994039536,
["indicator_pet"] = false,
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Fixate On You"] = 11,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Cast - Shining Green [P]"] = 3,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Voidzone [P]"] = 2,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Glowing [P]"] = 10,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Fixate"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - Stop Casting"] = 4,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Cast - AoE With Range [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Countdown"] = 11,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Very Important"] = 15,
["Cast - Quick Flash"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Spiteful Affix"] = 3,
["Cast - Debuff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Unit - Important"] = 11,
["Cast - Heal Cut [P]"] = 3,
["Auto Set Skull"] = 11,
["Color Change"] = 1,
["Cast - Alert + Timer [P]"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Tank Interrupt"] = 12,
["Aura Border Color"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Unit - Health Markers"] = 12,
["Explosion Affix M+"] = 14,
["Blink by Time Left"] = 1,
["Unit - Show Energy"] = 11,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["extra_icon_stack_outline"] = "OUTLINE",
["resources"] = {
["y_offset"] = 51.589996337891,
["y_offset_target"] = 0,
["scale"] = 0.75,
},
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
},
["aura2_grow_direction"] = 3,
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["focus_as_target_alpha"] = true,
["range_check_power_bar_alpha"] = 0.89999997615814,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark3",
["first_run2"] = true,
["health_animation_time_dilatation"] = 1.6699999570847,
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607843137255,
0.2078431372549,
},
},
["cast_statusbar_use_fade_effects"] = false,
["pet_height_scale"] = 0.99999994039536,
["aura_x_offset"] = 1.1999969482422,
["range_check_alpha_friendlies"] = 1,
["health_cutoff_upper"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1703478753,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = -13828,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 382,
["semver"] = "",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1696897853,
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189729",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
["url"] = "",
["Icon"] = 136048,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 549,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["outline"] = true,
["nameplateColor"] = {
0.86666666666667,
0.43529411764706,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700351235,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["Icon"] = -14046,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 917,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["NpcNames"] = {
"174773",
"164702",
"166251",
"165913",
"167898",
"56792",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
},
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Name"] = "Spiteful/Fixate Name&Glow",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700785512,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 413591,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Revision"] = 324,
["semver"] = "",
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["version"] = -1,
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["Name"] = "Pandemic Glow (Pixel)",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1713704437,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Revision"] = 1036,
["semver"] = "",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Name"] = "Cast - Very Important [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
268030,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
371983,
373405,
391599,
387627,
375653,
387862,
392457,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
392486,
385331,
388804,
106856,
397394,
377612,
385574,
215204,
212773,
397382,
265540,
265542,
403978,
403671,
278755,
265511,
183528,
193803,
193585,
410870,
87779,
373897,
411302,
274400,
400296,
405433,
408805,
411300,
412378,
412233,
415304,
421029,
421031,
420525,
425816,
264390,
264407,
253583,
256849,
204243,
427459,
169839,
76820,
225562,
436841,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Time"] = 1696897854,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 135801,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["Revision"] = 190,
["semver"] = "",
["Desc"] = "",
["version"] = -1,
["Author"] = "Nephuhlim-Illidan",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Name"] = "Change Color on Debuff",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["SpellIds"] = {
228287,
295311,
391191,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1710901066,
["NpcNames"] = {
"167966",
"199220",
"199916",
},
["url"] = "https://wago.io/XPNrgiHqw/2",
["Icon"] = 644389,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Revision"] = 128,
["semver"] = "1.1.0",
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["version"] = 2,
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Name"] = "Hide Nameplate",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["hide"] = true,
["casting"] = 1.1999999284744,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1700351230,
["NpcNames"] = {
"204560",
},
["url"] = "https://wago.io/8_ULM1VxI/7",
["Icon"] = 298642,
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Name"] = "Debuffed Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function()\nend",
["Revision"] = 179,
["semver"] = "1.0.6",
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["version"] = 7,
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Incorporeal",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function()\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1714082580,
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["url"] = "https://wago.io/miabQpRfX/11",
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"186121",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"191736",
"201261",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"164451",
"164463",
"164461",
"165946",
"133007",
"198933",
"201792",
"207638",
"199000",
"209892",
"207639",
"198997",
"131527",
"131824",
"131825",
"131823",
"40586",
"99192",
"98810",
"98965",
"40825",
},
["semver"] = "1.0.10",
["Enabled"] = true,
["Revision"] = 496,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["version"] = 11,
["Prio"] = 99,
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Name"] = " [D] Add - Health Markers",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        \n        \n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Dawn of the Infinite\n        [198933] = {90},         --Iridikron\n        [207638] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [207639] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [198997] = {80,50},     -- Blight of Galakrond / Ahnzon\n        [201792] = {80,50},     -- Ahnzon \n        [199000] = {20,8},       -- Deios\n        [209892] = {20,8},       -- Deios\n        \n        \n        ---Algeth'ar Academy\n        [191736] = {75, 45},      --Crawth\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [186227] = {20}, --Monstrous Decay\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        [189719] = {15}, --Watcher Irideus\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonemen\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131824] = {50}, --Sister Solena\n        [131825] = {50}, --Sister Briar\n        [131823] = {50}, --Sister Malady\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        --Black Rook Hold\n        [98810] = {25}, --Wrathguard Bladelord\n        [98965] = {20}, --Kur'talos Ravencrest\n        \n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        -- **Cata\n        -- Throne of the Tides\n        [40586] = {66,33}, -- Lady Naz'Jar\n        [40825] = {30},     -- Erunak Stonespeaker \n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        [194990] = {50}, -- Stormseeker Acolyte, Vault\n        [189492] = {65}, -- Raszageth, Vault\n        [201261] = {80, 60, 40}, -- Kazzara, Aberrus\n        [201773] = {50}, -- Chamber: Eternal Blaze, Aberrus\n        [201774] = {50}, -- Chamber: Essence of Shadow, Aberrus\n        [199659] = {25},                    -- Assault:Warlord Kagni, Aberrus\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["target_highlight"] = false,
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.8199996948242,
["x"] = 0,
["side"] = 12,
},
["aura_show_enrage"] = true,
["aura_tracker"] = {
["buff_banned"] = {
["318486"] = true,
["323961"] = true,
["333553"] = true,
["317602"] = true,
["396106"] = true,
["236502"] = true,
["5760"] = true,
["396098"] = true,
["343553"] = true,
["396109"] = true,
["343613"] = false,
["216777"] = true,
["327416"] = false,
["302564"] = true,
["417039"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["286145"] = true,
["284471"] = true,
["396113"] = true,
["268710"] = true,
["422067"] = false,
["61573"] = true,
["206150"] = true,
["311571"] = true,
["284882"] = true,
["333575"] = true,
["333579"] = true,
["266499"] = true,
["209746"] = true,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["debuff_banned"] = {
["294934"] = true,
["353354"] = true,
["324260"] = true,
["391568"] = true,
["352534"] = true,
["6343"] = true,
["403391"] = true,
["392388"] = true,
["389788"] = false,
["295367"] = true,
["331653"] = true,
["356372"] = false,
["331016"] = false,
["345466"] = true,
["394021"] = true,
["394453"] = false,
["5760"] = true,
["204242"] = true,
["256148"] = true,
["360277"] = true,
["273836"] = true,
["358379"] = true,
["279416"] = true,
["314113"] = true,
["169623"] = true,
["294909"] = true,
["281242"] = true,
["406770"] = true,
["394328"] = true,
["354052"] = true,
["373281"] = false,
["206760"] = true,
["286581"] = true,
["356329"] = true,
["420144"] = true,
["255909"] = true,
["321330"] = true,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["buff_tracked"] = {
["227931"] = true,
["365338"] = true,
["389808"] = true,
["343502"] = false,
["297133"] = true,
["385528"] = true,
["209859"] = true,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["338510"] = false,
},
},
["extra_icon_caster_font"] = "Expressway",
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["update_throttle"] = 0.33000001311302,
["tocversion"] = 100206,
["indicator_extra_raidmark"] = false,
["aura_show_debuffs_personal"] = false,
["extra_icon_timer_font"] = "Expressway",
["not_affecting_combat_alpha"] = 1,
["target_highlight_alpha"] = 0.34999999403954,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["aura_breakline_space"] = 1,
["hover_highlight_alpha"] = 0.5,
["cast_statusbar_spark_alpha"] = 1,
["indicator_quest"] = false,
["target_shady_alpha"] = 0,
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["target_highlight_height"] = 15,
["auto_toggle_stacking"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
["version"] = 98,
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["ghost_auras"] = {
["enabled"] = true,
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["health_cutoff"] = false,
["extra_icon_auras_mine"] = {
["Plague Bomb"] = false,
["209859"] = false,
["Serrated Bone Spike"] = true,
["Violent Detonation"] = false,
},
["show_health_prediction"] = false,
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["number_region_first_run"] = true,
["castbar_target_font"] = "Expressway",
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {35}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1714082824,
["Time"] = 1704218760,
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["url"] = "https://wago.io/miabQpRfX/10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 595,
["semver"] = "1.0.9",
["version"] = 10,
["Prio"] = 99,
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [D]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {35}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["UID"] = "0x662ad370fb87139",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1714082821,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["Icon"] = "",
["Enabled"] = false,
["Revision"] = 3,
["Options"] = {
},
["ScriptType"] = 1,
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Author"] = "Riparium-Argent Dawn",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["Name"] = "New Script",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["__TrashAt"] = 1714082826,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1724953623,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["SpellIds"] = {
343470,
423228,
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1724881991,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 82,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1725201544,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["SpellIds"] = {
343470,
423228,
},
["NpcNames"] = {
},
},
},
["show_healthbars_on_not_attackable"] = true,
["indicator_faction"] = false,
["indicator_rare"] = false,
["first_run3"] = true,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["transparency_behavior_use_division"] = true,
["indicator_elite"] = false,
["target_shady_enabled"] = false,
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["dps"] = {
["colors"] = {
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
},
},
["patch_version"] = 37,
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 10,
["auto_toggle_enemy"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
},
["Main"] = {
["focus_as_target_alpha"] = true,
["extra_icon_use_blizzard_border_color"] = false,
["aura_sort"] = true,
["npcs_renamed"] = {
[173044] = "Stitcher",
[197698] = "Thundercunt",
[176394] = "Worker",
[192333] = "Alpha",
[178141] = "Fish Dicker",
[40765] = "Chief Crab",
[197985] = "Flame",
[190381] = "Rotburst",
[207796] = "Burning",
[98965] = "Kur'talos",
[176523] = "Painsmith",
[190128] = "Zul'gondeez",
[101839] = "Cat",
[199368] = "Big Crystal",
[164967] = "Dickus",
[179842] = "Assclapper",
[98696] = "Illysanna",
[184319] = "Custodian",
[204560] = "Incorporeal",
[135234] = "Doggo",
[181224] = "Da Sausage",
[151649] = "Mk I",
[168969] = "Green Slime",
[189813] = "Dathea",
[98538] = "Velandras",
[184130] = "Earthen",
[184908] = "Haste Boi",
[196116] = "Furry",
[184972] = "Eggnog",
[131823] = "M'lady",
[163891] = "Bad Slime",
[201261] = "Kazzara",
[184910] = "Speed Boi",
[128551] = "Doggo",
[191222] = "Frost Dragon",
[174843] = "Maitre D",
[190340] = "Defender",
[208445] = "Larodar",
[184911] = "CDR Boi",
[180990] = "Jailer",
[144294] = "Twinkerer",
[135048] = "Bacon",
[181546] = "Renewal",
[194897] = "Stormsurge Totem",
[195929] = "Twomen",
[190484] = "Cracka",
[194316] = "I'm Zarii",
[179334] = "Not the boss",
[144298] = "Mk III",
[209090] = "T. Swift",
[189722] = "Gulp This",
[191736] = "Beak Bitch",
[195930] = "Mandick",
[167731] = "Separator",
[59726] = "Pearl",
[168153] = "Plaguecock",
[174773] = "Spiteful",
[194315] = "Shlongo",
[181548] = "Absolution",
[185610] = "Simp",
[32666] = "Uh oh",
[164705] = "Haste Slime",
[99192] = "Xavius",
[131825] = "Brian",
[181551] = "Duty",
[188026] = "Skull Emoji",
[181549] = "War",
[164501] = "Mute Me",
[179733] = "Fish Dick",
[201155] = "Nascent Dragon",
[182169] = "Lithium",
[151657] = "Bomb",
[168310] = "Plaguecock",
[184582] = "Eric",
[197298] = "Nascent Dragon",
[197219] = "Big Lasher",
[185685] = "CDR Relic",
[164707] = "Purple Slime",
[162691] = "Blightboner",
[70245] = "uh oh",
[193457] = "Ballerina",
[180773] = "Trash Can",
[102781] = "Bat!",
[165946] = "Mordretha",
[114627] = "Terror",
[198998] = "Tyr",
[175646] = "S.U.C.C. Master",
[114632] = "Attendant",
[165010] = "Purple Slime",
[190426] = "Decay Totem",
[185683] = "Speed Relic",
[164804] = "Simp Tree",
[59555] = "Haunting",
[178171] = "Don't Pull Me",
[185680] = "Haste Relic",
[175663] = "Hill Brad",
[175806] = "Sa'lami",
[198047] = "Tempest",
[180015] = "Dickhand",
},
["blizzard_nameplate_large_font"] = "Expressway",
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["ShowNamePlateLoseAggroFlash"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["SoftTargetIconGameObject"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:221: in function `SetCVars'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:238: in function `OnEvent'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:270: in function <Interface/AddOns/BetterFishing/BetterFishing.lua:270>\n",
["NamePlateClassificationScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateResourceOnTarget"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateLargerScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["SoftTargetInteract"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:218: in function `SetCVars'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:238: in function `OnEvent'\n[string \"@Interface/AddOns/BetterFishing/BetterFishing.lua\"]:270: in function <Interface/AddOns/BetterFishing/BetterFishing.lua:270>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"NAMEPLATES\"]:3: in function <[string \"NAMEPLATES\"]:1>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowSelf"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateGlobalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8447: in function `RefreshAutoToggle'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:2283: in function `func'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3891: in function `EventHandler'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3902: in function `RunFunctionForEvent'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:3908: in function <Interface/AddOns/Plater/Plater.lua:3905>\n",
["nameplateMotion"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowOnlyNames"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:7082: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:7080>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Plater/libs/DF/slider.lua:762>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfBottomInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateSelfAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
["nameplateOverlapH"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1518: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1013: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:833: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1265: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1265>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/fw.lua\"]:3800: in function `CoreDispatch'\n[string \"@Interface/AddOns/Plater/libs/DF/button.lua\"]:724: in function <Interface/AddOns/Plater/libs/DF/button.lua:660>\n",
},
["aura_cache_by_name"] = {
["mort'regar's echoes"] = {
333575,
},
["broodkeeper's blaze"] = {
394452,
394453,
},
["regrowth"] = {
8936,
16561,
20665,
22373,
22695,
27637,
28744,
34361,
39000,
39125,
66067,
69882,
72922,
72932,
84158,
97426,
98099,
102047,
165753,
173791,
176218,
187697,
188905,
224527,
265532,
283745,
292627,
292734,
311571,
326689,
338857,
},
["storm dominance"] = {
374918,
396076,
396077,
396111,
396113,
},
["crippling poison"] = {
3408,
3409,
25809,
30981,
44289,
115196,
132747,
132748,
169622,
169623,
283648,
283649,
},
["flame dominance"] = {
374881,
396056,
396062,
396105,
396106,
},
["blazing soul"] = {
111642,
235365,
389176,
411008,
422067,
423530,
426898,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["ice barrier"] = {
11426,
33245,
69787,
198094,
201565,
240074,
262251,
264458,
267504,
284882,
},
["sphere of suppression"] = {
294906,
294907,
294908,
294909,
294910,
294912,
294919,
294920,
294922,
298292,
298418,
298419,
298420,
300012,
300013,
},
["atrophic poison"] = {
83609,
381637,
392388,
},
["concentrated flame"] = {
295368,
295373,
295374,
295375,
295376,
295377,
295378,
295379,
295380,
295384,
299349,
299353,
302564,
},
["sanguine sphere"] = {
163689,
166591,
},
["enslaved"] = {
201089,
204831,
211680,
222424,
268192,
299156,
303622,
323961,
},
["bolster"] = {
209859,
280001,
},
["frost dominance"] = {
374916,
396072,
396074,
396108,
396109,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["whip rage"] = {
29340,
233210,
},
["kevin's wrath"] = {
352520,
352528,
352533,
352534,
},
["sinful revelation"] = {
309623,
324260,
},
["predatory instincts"] = {
389808,
},
["iron wire"] = {
196861,
256148,
},
["earth shield"] = {
379,
974,
32734,
38590,
54479,
54480,
55599,
55600,
56451,
57802,
57803,
58981,
58982,
59471,
59472,
60013,
60014,
66063,
66064,
67530,
67537,
69568,
69569,
69925,
69926,
77905,
79927,
79928,
101649,
101650,
143475,
143479,
145559,
145560,
159981,
159982,
165773,
199355,
199356,
204288,
204290,
226078,
254417,
254425,
268709,
268710,
374066,
374067,
377874,
377875,
383648,
413008,
413010,
},
["power word: shield"] = {
17,
11647,
11835,
11974,
17139,
20697,
22187,
27607,
29408,
32595,
35944,
36052,
41373,
44175,
44291,
46193,
66099,
71548,
71780,
83842,
84039,
102409,
113734,
122808,
123258,
127399,
135313,
136100,
165718,
211558,
226076,
248441,
284471,
318158,
344426,
},
["strength of the pack"] = {
64369,
64381,
171114,
178149,
178150,
189715,
199184,
199186,
200922,
260057,
341222,
341223,
359768,
365338,
},
["numbing poison"] = {
5760,
5761,
158873,
158876,
311373,
342947,
359078,
},
["consecration"] = {
26573,
32773,
33559,
36946,
37553,
38385,
41541,
43429,
57798,
59998,
69930,
79966,
81297,
107100,
111365,
153441,
158416,
162642,
165711,
184047,
188370,
190010,
200667,
200678,
200679,
204242,
205228,
216217,
221645,
221730,
233390,
243597,
251151,
251152,
251549,
251550,
264082,
283579,
283582,
283583,
288807,
288808,
288809,
290496,
290497,
290498,
294346,
294347,
327980,
344172,
382484,
387881,
413267,
},
["lunar empowerment"] = {
211091,
292664,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
369990,
375583,
},
["nimble steps"] = {
352366,
354050,
354051,
354052,
},
["breath of eons"] = {
403631,
403755,
403758,
409632,
409990,
},
["tidebringer"] = {
236501,
236502,
},
["prey on the weak"] = {
131511,
255909,
389788,
389806,
},
["pistol shot"] = {
185763,
207820,
214779,
223933,
240073,
255966,
267241,
267452,
268229,
274253,
275000,
285167,
294934,
},
["liquefying ooze"] = {
345466,
},
["enveloping mist"] = {
124682,
209193,
212414,
227345,
231605,
274062,
317602,
344008,
344240,
},
["selfless healer"] = {
85804,
114250,
128863,
216777,
},
["butcher cut"] = {
279416,
279426,
},
["mutilated flesh"] = {
211672,
340431,
381672,
394021,
},
["shadowflame wreathe"] = {
405076,
405764,
405765,
405766,
406753,
406764,
406770,
},
["shadow's grasp"] = {
206760,
263656,
263658,
306965,
},
["scouring touch"] = {
356329,
},
["dream delver"] = {
352786,
353353,
353354,
},
["might of the upper reaches"] = {
333579,
},
["thunder clap"] = {
6343,
57832,
60019,
69304,
85216,
145046,
147683,
183543,
236389,
237917,
262538,
267578,
283929,
316143,
316414,
316490,
382590,
386028,
396719,
},
["nothing personal"] = {
286573,
286579,
286581,
289467,
},
["filthy transfusion"] = {
273834,
273835,
273836,
},
["soulglow spectrometer"] = {
352186,
352938,
352939,
352940,
358379,
},
["arcane intellect"] = {
1459,
13326,
36880,
45525,
129171,
266499,
367803,
},
["mystic touch"] = {
8647,
113746,
331653,
},
["blistering heat"] = {
105444,
105445,
417039,
420950,
420968,
},
["effusive anima accelerator"] = {
352188,
353248,
353349,
360277,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406231,
},
["in the spotlight"] = {
227931,
312926,
},
["moonkin aura"] = {
209740,
209746,
},
["power word: fortitude"] = {
13864,
21562,
23947,
23948,
36004,
58921,
74973,
94366,
133538,
160637,
165739,
183585,
206629,
211681,
266501,
267528,
284466,
286145,
},
["blaze of glory"] = {
99252,
146038,
146039,
153926,
167629,
167630,
177354,
373972,
373973,
373974,
373975,
373976,
373977,
385528,
},
["insidious chill"] = {
391566,
391568,
},
["freezing ice stone"] = {
402940,
403391,
},
["amplifying poison"] = {
381664,
383414,
394328,
},
["earth dominance"] = {
374917,
396067,
396068,
396085,
396098,
},
["deadly poison"] = {
2818,
2823,
3583,
10022,
13582,
21787,
21788,
32970,
32971,
34616,
34655,
34657,
36872,
38519,
38520,
41191,
41192,
41485,
43580,
43581,
56145,
56149,
59479,
59482,
63755,
63756,
67710,
67711,
72329,
82632,
82633,
96648,
113780,
129410,
130980,
130981,
132745,
132746,
145419,
145420,
145421,
177918,
177919,
177920,
289078,
314113,
373774,
377030,
377036,
394324,
394325,
403952,
},
["defensive countermeasure"] = {
297133,
299428,
300996,
303941,
},
["inspired"] = {
105710,
133461,
133928,
134116,
134454,
134885,
135077,
135414,
135435,
192943,
224693,
235727,
256539,
301972,
343503,
},
["all-consuming spite"] = {
343553,
},
},
["url"] = "https://wago.io/ak3iS95aa/96",
["blizzard_nameplate_font_override_enabled"] = true,
["aura_stack_anchor"] = {
["y"] = 2.5,
["x"] = 8,
["side"] = 12,
},
["indicator_raidmark_scale"] = 0.84999996423721,
["cast_statusbar_spark_alpha"] = 1,
["aura2_y_offset"] = 1.5,
["aura_timer_text_anchor"] = {
["x"] = 0.5,
},
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["spellname_text_font"] = "Expressway",
["castbar_offset"] = -55,
["spellpercent_text_font"] = "Expressway",
["mana_incombat"] = {
168,
4,
},
["power_percent_text_font"] = "Expressway",
["cast"] = {
170,
},
["percent_text_size"] = 9,
["castbar_enabled"] = false,
["cast_incombat"] = {
170,
},
["module_enabled"] = false,
["healthbar_color"] = {
0,
0,
0,
},
["healthbar_color_by_hp"] = true,
["health_incombat"] = {
168,
},
["health"] = {
168,
},
["mana"] = {
168,
4,
},
["power_percent_text_size"] = 8,
["percent_text_anchor"] = {
["y"] = 1.2999992370605,
},
["percent_text_font"] = "Expressway",
["percent_text_color"] = {
1,
1,
1,
},
},
["friendlyplayer"] = {
["actorname_text_font"] = "Expressway",
["spellpercent_text_font"] = "Expressway",
["actorname_friend_color"] = {
0.70980392156863,
},
["actorname_text_size"] = 9,
["actorname_use_class_color"] = true,
["cast"] = {
135,
7,
},
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 8,
["only_damaged"] = false,
["actorname_guild_color"] = {
0.49803921568627,
},
["cast_incombat"] = {
135,
7,
},
["only_thename"] = true,
["spellname_text_font"] = "Expressway",
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
},
["percent_text_show_decimals"] = false,
["percent_text_font"] = "Expressway",
["level_text_font"] = "Expressway",
["percent_show_percent"] = false,
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["big_actortitle_text_size"] = 9,
["spellpercent_text_anchor"] = {
["side"] = 5,
["x"] = 1,
},
["enabled"] = false,
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["module_enabled"] = false,
["actorname_text_font"] = "Expressway",
["quest_color"] = {
1,
0.49803921568627,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["big_actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
nil,
0.7843137254902,
nil,
1,
},
["spellpercent_text_enabled"] = true,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["quest_color_enemy"] = {
1,
0.36862745098039,
0,
1,
},
["big_actorname_text_color"] = {
0.25098039215686,
0.68627450980392,
0.20392156862745,
1,
},
["percent_show_health"] = true,
["spellname_text_font"] = "Expressway",
["percent_text_ooc"] = true,
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["health_incombat"] = {
135,
15,
},
["percent_text_enabled"] = true,
["percent_text_size"] = 10,
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2.5,
["side"] = 10,
},
["level_text_alpha"] = 0.29999998211861,
},
["global_health_height"] = 16,
["global_health_width"] = 132,
["enemyplayer"] = {
["actorname_text_font"] = "Expressway",
["big_actorname_text_size"] = 10,
["quest_color_enemy"] = {
1,
0.49803921568627,
0,
1,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.49803921568627,
0,
1,
},
["level_text_size"] = 8,
["spellname_text_font"] = "Expressway",
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["all_names"] = true,
["level_text_alpha"] = 0.29999998211861,
["big_actortitle_text_size"] = 10,
["fixed_class_color"] = {
0.69803921568627,
0.1921568627451,
0.11372549019608,
},
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["spellpercent_text_size"] = 9,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Expressway",
["big_actorname_text_font"] = "Expressway",
["quest_enabled"] = true,
["cast_incombat"] = {
135,
7,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_size"] = 9,
["quest_color_enabled"] = true,
["health_incombat"] = {
135,
15,
},
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["actorname_text_size"] = 10,
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
["enemynpc"] = {
["actorname_text_font"] = "Expressway",
["quest_color_enemy"] = {
nil,
0.49803921568627,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
nil,
0.49803921568627,
},
["actorname_text_size"] = 9,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
135,
7,
},
["spellpercent_text_size"] = 9,
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0.29999998211861,
["spellpercent_text_anchor"] = {
["y"] = -1.5,
["x"] = 3,
["side"] = 5,
},
["actorname_text_spacing"] = 8,
["percent_text_font"] = "Expressway",
["cast_incombat"] = {
135,
7,
},
["spellname_text_font"] = "Expressway",
["actorname_text_anchor"] = {
["y"] = 0.5,
["x"] = 2,
["side"] = 10,
},
["health_incombat"] = {
135,
15,
},
["spellname_text_size"] = 9,
["health"] = {
135,
15,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = -1,
["side"] = 3,
},
["big_actorname_text_font"] = "Expressway",
["percent_text_anchor"] = {
["y"] = 0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
},
["health_selection_overlay"] = "PlaterFocus",
["aura_y_offset"] = 1.5,
["expansion_triggerwipe"] = {
[9] = true,
[8] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.80000007152557,
0.30196079611778,
0.30196079611778,
1,
},
["bossmod_aura_width"] = 32.621017456055,
["indicator_spec"] = false,
["border_thickness"] = 1.2000000476837,
["resources_settings"] = {
["global_settings"] = {
["anchor"] = {
["y"] = 9.7099990844727,
},
["show_depleted"] = false,
["scale"] = 0.80000001192093,
},
["chr"] = {
["Player-4184-004EAE08"] = "ArcaneCharges",
["Player-3296-00936CF9"] = "ComboPoints",
["Player-3678-0D4F17CA"] = "ComboPoints",
["Player-11-0E5C6A6B"] = "ComboPoints",
["Player-3678-0D4C07B5"] = "ComboPoints",
["Player-11-0E5C6A2D"] = "ComboPoints",
["Player-3674-09CBAF8C"] = "ArcaneCharges",
["Player-3678-0D7BB774"] = "ComboPoints",
["Player-2073-09AF21B0"] = "ComboPoints",
["Player-5764-00018799"] = "ComboPoints",
["Player-3674-096625B1"] = "Chi",
["Player-3674-0898468A"] = "SoulShards",
["Player-3676-0DBAB9E1"] = "ComboPoints",
["Player-3678-0D8642EB"] = "ComboPoints",
["Player-5764-0008F0CD"] = "ComboPoints",
["Player-970-0065C1C7"] = "ComboPoints",
["Player-4184-0021692E"] = "ComboPoints",
["Player-5764-0008EBB9"] = "ComboPoints",
["Player-3296-00945C33"] = "ComboPoints",
["Player-4604-00325132"] = "ComboPoints",
["Player-3684-091919FE"] = "HolyPower",
["Player-970-006B99B8"] = "ComboPoints",
["Player-3678-0D44FD01"] = "ComboPoints",
},
},
["health_animation_time_dilatation"] = 1.6699999570847,
["npc_cache"] = {
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[161124] = {
"Urg'roth, Breaker of Heroes",
"The Underrot",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[132481] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[142587] = {
"Devouring Maggot",
"Waycrest Manor",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[202947] = {
"Cologne Neutralizer",
"Shadowfang Keep",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[202948] = {
"Perfume Neutralizer",
"Shadowfang Keep",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[150276] = {
"Heavy Scrapbot",
"Operation: Mechagon",
},
[52019] = {
"Skyfall Nova",
"The Vortex Pinnacle",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[135699] = {
"Ashvane Jailer",
"Tol Dagor",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[139284] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[202969] = {
"Empty Recollection",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[139800] = {
"Galecaller Apprentice",
"Shrine of the Storm",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[53231] = {
"Lava Scion",
"Firelands",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[136735] = {
"Ashvane Marine",
"Tol Dagor",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[53140] = {
"Son of Flame",
"Firelands",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[233282] = {
"Refreshment Table",
"Brackenhide Hollow",
"enUS",
},
[137591] = {
"Healing Tide Totem",
"Kings' Rest",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[139425] = {
"Crazed Incubator",
"Temple of Sethraliss",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[138019] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
},
[303148] = {
"Soulwell",
"Firelands",
"enUS",
},
[135846] = {
"Sand-Crusted Striker",
"Temple of Sethraliss",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[84400] = {
"Gnarled Ancient",
"The Everbloom",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[189555] = {
"Arcane Attendant",
"The Azure Vault",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[165515] = {
"Depraved Darkblade",
"Halls of Atonement",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[134058] = {
"Galecaller Faye",
"Shrine of the Storm",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[127497] = {
"Ashvane Warden",
"Tol Dagor",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[52409] = {
"Ragnaros",
"Firelands",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
"enUS",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
},
[139946] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[200943] = {
"Electrified Colossal Stormfiend",
"Vault of the Incarnates",
},
[132530] = {
"Kul Tiran Vanguard",
"Siege of Boralus",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[98285] = {
"Smashum Grabb",
"Tanaan Jungle",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
},
[130012] = {
"Irontide Ravager",
"Freehold",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[135474] = {
"Thistle Acolyte",
"UNKNOWN",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[130909] = {
"Fetid Maggot",
"The Underrot",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[131445] = {
"Block Warden",
"Tol Dagor",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[53545] = {
"Molten Spewer",
"Firelands",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[177807] = {
"Customs Security",
"Tazavesh, the Veiled Market",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[338224] = {
"Cache of the Fire Lord",
"Firelands",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[172021] = {
"Coldheart Automaton",
"Torghast, Tower of the Damned",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[199547] = {
"Frostforged Zealot",
"Vault of the Incarnates",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
},
[155433] = {
"Void-Touched Emissary",
"Temple of Sethraliss",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[155434] = {
"Emissary of the Tides",
"Temple of Sethraliss",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[189707] = {
"Chaotic Mote",
"Castle Nathria",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[127484] = {
"Jes Howlis",
"Tol Dagor",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
},
[130404] = {
"Vermin Trapper",
"Freehold",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[187154] = {
"Arcane Curator",
"The Azure Vault",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
},
[85194] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[128551] = {
"Irontide Mastiff",
"Freehold",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
},
[136391] = {
"Heart Guardian",
"Temple of Sethraliss",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[151353] = {
"Mawrat",
"Torghast, Tower of the Damned",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[214140] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[134602] = {
"Shrouded Fang",
"Temple of Sethraliss",
},
[156213] = {
"Coldheart Guardian",
"Torghast, Tower of the Damned",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[168365] = {
"Fungret Shroomtender",
"Plaguefall",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[135246] = {
"\"Stabby\" Lottie",
"The Rotting Mire (Islands 9)",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[135759] = {
"Earthwall Totem",
"Kings' Rest",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[130027] = {
"Ashvane Marine",
"Tol Dagor",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[196117] = {
"Crystal Construct",
"The Azure Vault",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[36272] = {
"Apothecary Frye",
"Shadowfang Keep",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Halls of Infusion",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[135764] = {
"Explosive Totem",
"Kings' Rest",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[153285] = {
"Training Dummy",
"Eastern Kingdoms",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[152009] = {
"Malfunctioning Scrapbot",
"Operation: Mechagon",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[136665] = {
"Ashvane Spotter",
"Tol Dagor",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[382538] = {
"Alchemist's Lab Bench",
"Ruby Life Pools",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Spires of Ascension",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[36565] = {
"Apothecary Baxter",
"Shadowfang Keep",
"enUS",
},
[185262] = {
"Howling Creekborne",
"Dragon Isles",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[53189] = {
"Molten Elemental",
"Firelands",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[385357] = {
"Ancestors' Treasure Trove",
"The Nokhud Offensive",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
},
[127482] = {
"Sewer Vicejaw",
"Tol Dagor",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[139799] = {
"Ironhull Apprentice",
"Shrine of the Storm",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[130025] = {
"Irontide Thug",
"Tol Dagor",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[127480] = {
"Stinging Parasite",
"Tol Dagor",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[87329] = {
"Raider's Training Dummy",
"Draenor",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
},
[134994] = {
"Spectral Headhunter",
"Kings' Rest",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[131818] = {
"Marked Sister",
"Waycrest Manor",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[130026] = {
"Bilge Rat Seaspeaker",
"Tol Dagor",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[53575] = {
"Lava Wielder",
"Firelands",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[155094] = {
"Mechagon Trooper",
"Operation: Mechagon",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
},
[193534] = {
"Strunraan",
"10.0 Dragon Isles",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
},
[131823] = {
"Sister Malady",
"UNKNOWN",
"enUS",
},
[376176] = {
"Meat Storage",
"Brackenhide Hollow",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
"enUS",
},
[191926] = {
"Fishface",
"Brackenhide Hollow",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[131825] = {
"Sister Briar",
"UNKNOWN",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[155432] = {
"Enchanted Emissary",
"Temple of Sethraliss",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
},
[130400] = {
"Irontide Crusher",
"Freehold",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[114634] = {
"Undying Servant",
"Return to Karazhan",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[127486] = {
"Ashvane Officer",
"Tol Dagor",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[115402] = {
"Bishop",
"Return to Karazhan",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[161241] = {
"Voidweaver Mal'thir",
"The Underrot",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[161243] = {
"Samh'rek, Beckoner of Chaos",
"The Underrot",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[127488] = {
"Ashvane Flamecaster",
"Tol Dagor",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[134390] = {
"Sand-crusted Striker",
"Temple of Sethraliss",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[161244] = {
"Blood of the Corruptor",
"The Underrot",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[214441] = {
"Scorched Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[36296] = {
"Apothecary Hummel",
"Shadowfang Keep",
"enUS",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[53617] = {
"Molten Erupter",
"Firelands",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[382594] = {
"'Good Students' Reward Chest",
"Algeth'ar Academy",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[127106] = {
"Irontide Officer",
"Freehold",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
},
["spell_animation_list"] = {
["30451"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 30451,
["desc"] = "",
},
},
["31935"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["info"] = {
["time"] = 0,
["class"] = "PALADIN",
["spellid"] = 31935,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["31661"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 31661,
["desc"] = "",
},
},
["285452"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["info"] = {
["time"] = 0,
["class"] = "SHAMAN",
["spellid"] = 285452,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["222024"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["info"] = {
["time"] = 0,
["class"] = "DEATHKNIGHT",
["spellid"] = 222024,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.7999999523163,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
["2098"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.1999999284744,
},
["info"] = {
["time"] = 1539293610,
["class"] = "ROGUE",
["spellid"] = 2098,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.079999998211861,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 1.5,
["fade_in"] = 0,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 2.710000038147,
},
},
["228600"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 228600,
["desc"] = "",
},
},
["203782"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539716639,
["class"] = "DEMONHUNTER",
["spellid"] = 203782,
["desc"] = "",
},
},
["107270"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["time"] = 1539296490,
["class"] = "MONK",
["spellid"] = 107270,
["desc"] = "",
},
},
["162243"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539717356,
["class"] = "DEMONHUNTER",
["spellid"] = 162243,
["desc"] = "",
},
},
["117418"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.1499999910593,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["info"] = {
["time"] = 1539296387,
["class"] = "MONK",
["spellid"] = 117418,
["desc"] = "",
},
},
["204157"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 6,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539716637,
["class"] = "DEMONHUNTER",
["spellid"] = 204157,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
},
["184575"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["scale_upY"] = 1.05,
},
["info"] = {
["time"] = 0,
["class"] = "PALADIN",
["spellid"] = 184575,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 2,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["324540"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["info"] = {
["time"] = 1539292087,
["class"] = "WARLOCK",
["spellid"] = 324540,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.0299999713898,
},
},
["264178"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["info"] = {
["time"] = 0,
["class"] = "WARLOCK",
["spellid"] = 264178,
["desc"] = "",
},
},
["185099"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.18999999761581,
["absolute_sineX"] = false,
["scaleY"] = 0.84999847412109,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539712435,
["class"] = "MONK",
["spellid"] = 185099,
["desc"] = "",
},
},
["55090"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 3.9020702838898,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.7999999523163,
},
["info"] = {
["time"] = 0,
["class"] = "DEATHKNIGHT",
["spellid"] = 55090,
["desc"] = "",
},
},
["198030"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 0.5,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.31999999284744,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["time"] = 1539717136,
["class"] = "DEMONHUNTER",
["spellid"] = 198030,
["desc"] = "",
},
},
["148135"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.75,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["info"] = {
["time"] = 1539295958,
["class"] = "MONK",
["spellid"] = 148135,
["desc"] = "",
},
},
["189112"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["amplitude"] = 1.8799999952316,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["info"] = {
["time"] = 1539715467,
["class"] = "DEMONHUNTER",
["spellid"] = 189112,
["desc"] = "",
},
},
["85948"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "DEATHKNIGHT",
["spellid"] = 85948,
["desc"] = "",
},
},
["35395"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "PALADIN",
["spellid"] = 35395,
["desc"] = "",
},
},
["280720"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 0.89999997615814,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["info"] = {
["time"] = 1539292087,
["class"] = "ROGUE",
["spellid"] = 280720,
["desc"] = "",
},
},
["49998"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["scaleY"] = 1,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "DEATHKNIGHT",
["spellid"] = 49998,
["desc"] = "",
},
},
["155166"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "DEATHKNIGHT",
["spellid"] = 155166,
["desc"] = "",
},
},
["228354"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 228354,
["desc"] = "",
},
},
["8042"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.05,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.060000000745058,
["scale_downY"] = 0.95,
["scale_downX"] = 0.95,
["scale_upY"] = 1.05,
},
["info"] = {
["time"] = 0,
["class"] = "SHAMAN",
["spellid"] = 285452,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["27285"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["scale_upY"] = 1.1,
},
["info"] = {
["time"] = 0,
["class"] = "WARLOCK",
["spellid"] = 27285,
["desc"] = "",
},
},
["53351"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["info"] = {
["time"] = 0,
["class"] = "HUNTER",
["spellid"] = 53351,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["228598"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 228598,
["desc"] = "",
},
},
["108853"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 108853,
["desc"] = "",
},
},
["205523"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539295885,
["class"] = "MONK",
["spellid"] = 205523,
["desc"] = "",
},
},
["245388"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.03,
["scale_downY"] = 0.9,
["scale_downX"] = 0.9,
["scale_upY"] = 1.1,
},
["info"] = {
["time"] = 0,
["class"] = "ROGUE",
["spellid"] = 245388,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.01,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 2,
},
},
["6343"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.1,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "WARRIOR",
["spellid"] = 6343,
["desc"] = "",
},
},
["199547"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539717795,
["class"] = "DEMONHUNTER",
["spellid"] = 199547,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.039999961853,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900558,
["scale_downX"] = 0.96999996900558,
["scale_upY"] = 1.039999961853,
},
},
["17364"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.02,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.10000000745058,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.02,
},
["info"] = {
["time"] = 0,
["class"] = "SHAMAN",
["spellid"] = 17364,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["206930"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["info"] = {
["time"] = 0,
["class"] = "DEATHKNIGHT",
["spellid"] = 222026,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["86040"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["info"] = {
["time"] = 0,
["class"] = "WARLOCK",
["spellid"] = 86040,
["desc"] = "",
},
},
["187708"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "HUNTER",
["spellid"] = 187708,
["desc"] = "",
},
},
["275779"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = -1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "PALADIN",
["spellid"] = 275779,
["desc"] = "",
},
},
["116858"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["duration"] = 0.099999994039536,
["scale_downX"] = 0.94999998807907,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.94999998807907,
["cooldown"] = 0.75,
["scale_upY"] = 1.0499999523163,
},
["info"] = {
["time"] = 0,
["class"] = "WARLOCK",
["spellid"] = 116858,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = 4.9699974060059,
["amplitude"] = 0.59999996423721,
["fade_in"] = 0.049999997019768,
["duration"] = 0.099999994039536,
["cooldown"] = 0.25,
["frequency"] = 2.8999998569489,
},
},
["197834"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "ROGUE",
["spellid"] = 197834,
["desc"] = "",
},
},
["5374"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "ROGUE",
["spellid"] = 5374,
["desc"] = "",
},
},
["11366"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 11366,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 10,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["199552"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539717392,
["class"] = "DEMONHUNTER",
["spellid"] = 199552,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
["265157"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.096889182925224,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_downY"] = 0.89999997615814,
["cooldown"] = 0.75,
["scale_upY"] = 1.1000000238419,
},
["info"] = {
["time"] = 0,
["class"] = "HUNTER",
["spellid"] = 265157,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 0.50999999046326,
["critical_scale"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 39.995635986328,
},
},
["32645"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1000000238419,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.1999999284744,
},
["info"] = {
["time"] = 0,
["class"] = "ROGUE",
["spellid"] = 32645,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
["222026"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.0199999809265,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_upY"] = 1,
},
["info"] = {
["time"] = 0,
["class"] = "DEATHKNIGHT",
["spellid"] = 222026,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["scaleY"] = -1,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
["196278"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "WARLOCK",
["spellid"] = 196278,
["desc"] = "",
},
},
["46968"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["info"] = {
["time"] = 0,
["class"] = "WARRIOR",
["spellid"] = 46968,
["desc"] = "",
},
},
["100780"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 1,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539295910,
["class"] = "MONK",
["spellid"] = 100780,
["desc"] = "",
},
},
["188443"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "SHAMAN",
["spellid"] = 188443,
["desc"] = "",
},
},
["196819"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.1999999284744,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.04,
["scale_downY"] = 0.89999997615814,
["scale_downX"] = 0.89999997615814,
["scale_upY"] = 1.2999999523163,
},
["info"] = {
["time"] = 0,
["class"] = "ROGUE",
["spellid"] = 196819,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["scaleY"] = 1,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
["20243"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "WARRIOR",
["spellid"] = 20243,
["desc"] = "",
},
},
["185763"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 3.6583230495453,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["info"] = {
["time"] = 1539275610,
["class"] = "ROGUE",
["spellid"] = 185763,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
["7268"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 7268,
["desc"] = "",
},
},
["199804"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 1.1699999570847,
["critical_scale"] = 1.05,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["info"] = {
["time"] = 1539293872,
["class"] = "ROGUE",
["spellid"] = 199804,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0499999523163,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.050000000745058,
["scale_downY"] = 1,
["scale_downX"] = 1,
["scale_upY"] = 1.0499999523163,
},
},
["257045"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 1,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "HUNTER",
["spellid"] = 257045,
["desc"] = "",
},
},
["100784"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["amplitude"] = 3,
["critical_scale"] = 1.05,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539296312,
["class"] = "MONK",
["spellid"] = 100784,
["desc"] = "",
},
},
["187874"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["info"] = {
["time"] = 0,
["class"] = "SHAMAN",
["spellid"] = 187874,
["desc"] = "",
},
},
["2643"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["scaleY"] = 0.6,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["info"] = {
["time"] = 0,
["class"] = "HUNTER",
["spellid"] = 2643,
["desc"] = "",
},
},
["52174"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.15,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.075,
["scale_downY"] = 0.8,
["scale_downX"] = 0.8,
["scale_upY"] = 1.15,
},
["info"] = {
["time"] = 0,
["class"] = "WARRIOR",
["spellid"] = 52174,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["amplitude"] = 6,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
["44425"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["scaleY"] = 1,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 0,
["class"] = "MAGE",
["spellid"] = 44425,
["desc"] = "",
},
},
["228478"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["amplitude"] = 2.5,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["info"] = {
["time"] = 1539716636,
["class"] = "DEMONHUNTER",
["spellid"] = 228478,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
["53595"] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1.03,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.97,
["scale_downX"] = 0.97,
["scale_upY"] = 1.03,
},
["info"] = {
["time"] = 0,
["class"] = "PALADIN",
["spellid"] = 53595,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["amplitude"] = 3,
["critical_scale"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
["185438"] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["amplitude"] = 6.460000038147,
["critical_scale"] = 1.05,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["info"] = {
["time"] = 1539204014,
["class"] = "ROGUE",
["spellid"] = 185438,
["desc"] = "",
},
["2"] = {
["enabled"] = true,
["scale_upX"] = 1.0299999713898,
["animation_type"] = "scale",
["cooldown"] = 0.75,
["duration"] = 0.05,
["scale_downY"] = 0.96999996900559,
["scale_downX"] = 0.96999996900559,
["scale_upY"] = 1.0299999713898,
},
},
},
["indicator_scale"] = 0.99999994039536,
["extra_icon_timer_decimals"] = true,
["border_color"] = {
nil,
nil,
nil,
1,
},
["focus_color"] = {
nil,
nil,
nil,
0.50242385268211,
},
["indicator_anchor"] = {
["side"] = 6,
["x"] = 2,
},
["hide_name_on_game_objects"] = false,
["health_selection_overlay_alpha"] = 0,
["minor_height_scale"] = 0.99999994039536,
["extra_icon_show_enrage_border"] = {
0.85098039215686,
0,
0.074509803921569,
},
["aura_padding"] = 0,
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        \n        --Rogue\n        [\"Marked for Death\"] = 101,\n        [\"Ghostly Strike\"] = 100,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Find Weakness\"] = 93,\n        [\"Between the Eyes\"] = 83,\n        [\"Pistol Shot\"] = 82,\n        -- [\"Se\"] =\n        [\"Serrated Bone Spike\"] = 0,\n        \n        --Druid\n        [\"Sunfire\"] = 100,\n        [\"Moonfire\"] = 99,\n        \n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        \n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        \n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1697196348,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = true,
["Revision"] = 516,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 161,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Options"] = {
},
["Author"] = "�r��ne-Kel'thuzad",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Desc"] = "Adds double arrow as a target indicators option",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    -- /RELOAD AFTER IMPORTING OR CHANGING THE SCRIPT\n    -- SELECT THE INDICATOR AT THE TARGET TAB\n    \n    Plater.TargetIndicators    [\"Double Arrows\"] = {\n        path = [[Interface\\AddOns\\Plater\\media\\arrow_double_right_64]],\n        coords = {\n            {0, 1, 0, 1}, \n            {1, 0, 0, 1}\n        },\n        desaturated = false,\n        width = 17,\n        height = 13,\n        x = 14,\n        y = 0,\n        blend = \"ADD\",\n        color = \"white\",\n    }    \n    \nend\n\n\n",
},
["Prio"] = 99,
["Time"] = 1696897945,
["PlaterCore"] = 1,
["Name"] = "Double Arrow Target",
["Url"] = "https://wago.io/f5itAXjQq/1",
["Icon"] = "Interface\\AddOns\\Plater\\media\\arrow_double_right_64",
["LastHookEdited"] = "Nameplate Created",
},
{
["Enabled"] = true,
["Revision"] = 236,
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Options"] = {
},
["Author"] = "Viashi-Antonidas",
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.updateText(unitFrame)\n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    -- text settings:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    -- positioning\n    local anchor = {\n        side = 2, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = -15, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    --frames:\n    \n    --create the text frame that will show the quest progress\n    if (not  unitFrame.healthBar.questProgressTextFrame) then\n        envTable.questProgressTextFrame = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.questProgressTextFrame, anchor);\n        unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n        envTable.questProgressTextFrame:SetText(\"\")\n    end\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    function envTable.updateText (unitFrame)\n        local text = \"\"\n        if unitFrame and unitFrame.namePlateIsQuestObjective then\n            if unitFrame.QuestAmountCurrent then\n                if unitFrame.QuestAmountTotal then\n                    text = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                else\n                    text = unitFrame.QuestAmountCurrent .. \"%\"\n                end\n            end\n        end\n        unitFrame.healthBar.questProgressTextFrame:SetText(text)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1696898519,
["PlaterCore"] = 1,
["Name"] = "QuestProgress",
["Url"] = "https://wago.io/uwe9CEwMm/2",
["Icon"] = 132212,
["LastHookEdited"] = "Nameplate Added",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --Disable for classic\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        function envTable.addHook(unitFrame) end\n        return\n    end\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"\"\n    --local shieldTexture = \"Details Flat\"\n    local useHalfBar = false --use a \"half bar\" overlay if the health+absorb is > 100% of the health\n    local showAlways = false --show absorbs value if health amount is disabled\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        \n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n            return\n        end\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        local isHalfBar = false\n                        if curHealthTotal > currentHealthMax then\n                            if useHalfBar then\n                                damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                                if damageAbsorbPercent > 1 then\n                                    damageAbsorbPercent = 1 -- just limit it to the healthbar width...\n                                end\n                                healthPercentAbsorb = 1 - damageAbsorbPercent\n                                self:SetMinMaxValues (0, currentHealthMax)\n                                \n                                isHalfBar = true\n                            else\n                                damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                                healthPercentAbsorb = currentHealth / curHealthTotal\n                                self:SetMinMaxValues (0, curHealthTotal)\n                            end\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, (isHalfBar and (- self:GetHeight() / 2)) or 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1698537794,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/VtPjNl8Mg/7",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 1232,
["semver"] = "1.0.6",
["Author"] = "Elaiana-Proudmoore",
["Desc"] = "Adds absorbs to the health bar as full health value.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Absorb Shields in Healthbar",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options For @scriptname",
["Name"] = "Options Intro",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = "",
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if unitFrame.sappableIndicator then\n        unitFrame.sappableIndicator:Hide()\n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function() end)\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addIndicator(unitFrame)\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --Settings:\n    local anchorPoint = \"center\"\n    local anchorRelative = \"right\"\n    local xOffset = 9\n    local yOffset = 0\n    local relativeFrame = unitFrame.healthBar\n    \n    \n    -- functions\n    function envTable.addIndicator(unitFrame)\n        if not unitFrame.sappableIndicator then\n            unitFrame.sappableIndicator=unitFrame:CreateTexture(nil, \"OVERLAY\");\n            unitFrame.sappableIndicator:SetPoint (anchorPoint, relativeFrame, anchorRelative, xOffset, yOffset)\n            unitFrame.sappableIndicator:SetSize(17, 17);\n            unitFrame.sappableIndicator:SetTexture(\"Interface\\\\Addons\\\\CustomFolder\\\\sap\");\n            unitFrame.sappableIndicator:Hide();\n            unitFrame.sappableIndicator.updateFrame = CreateFrame(\"Frame\")\n            unitFrame.sappableIndicator.updateFrame.unitFrame = unitFrame\n        end\n        \n        unitFrame.sappableIndicator.updateFrame:SetScript(\"OnUpdate\", function(self)\n                local unitFrame = self.unitFrame\n                if not unitFrame or not unitFrame.unit then return end\n                if not unitFrame:IsVisible() then return end\n                \n                local isSappable = false\n                local creatureType = UnitCreatureType(unitFrame.unit)\n                for index, value in ipairs({'Humanoid', 'Beast', 'Demon', 'Dragonkin'}) do\n                    if (value == creatureType) then\n                        isSappable = true\n                    end\n                end\n                \n                if (isSappable and unitFrame.PlateFrame.namePlateUnitReaction <= 4 and not UnitAffectingCombat(unitFrame.unit)) then\n                    unitFrame.sappableIndicator:Show()\n                else\n                    unitFrame.sappableIndicator:Hide()\n                end\n                \n        end)\n    end\n    \nend",
},
["Time"] = 1696898532,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
["Enabled"] = true,
["arena"] = true,
["pvp"] = true,
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/Zz1aEIOJR/1",
["Icon"] = 132310,
["Enabled"] = true,
["Revision"] = 325,
["semver"] = "1.0.0",
["Author"] = "Irashi-Antonidas",
["Desc"] = "Adds a \"sap\" indicator to the nameplate if the unit is sappable. (LoadConditions: Rogue, Arena and BG)",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Sappable (Custom Icon)",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    --Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
},
["Time"] = 1696897899,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/lLK9gn7lc/5",
["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
["Enabled"] = true,
["Revision"] = 74,
["semver"] = "1.0.4",
["Author"] = "Ariani-Antonidas",
["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
["Prio"] = 99,
["version"] = 5,
["PlaterCore"] = 1,
["Name"] = "Arena - Buff-Tracking Mode",
["LastHookEdited"] = "Load Screen",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.updateBorderColor(unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.targetBorderColor = \"#ffffff\"\n    envTable.focusBorderColor = \"#00FFFF\"\n    --envTable.nonTargetBorderColor = \"white\"\n    \n    \n    function envTable.updateBorderColor(unitFrame)\n        if unitFrame.namePlateIsTarget then\n            Plater.SetBorderColor (unitFrame, envTable.targetBorderColor)\n        elseif unitFrame.IsFocus then\n            Plater.SetBorderColor (unitFrame, envTable.focusBorderColor)\n        else\n            Plater.SetBorderColor (unitFrame, envTable.nonTargetBorderColor)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696899767,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/-ny0jWQDT/2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = true,
["Revision"] = 212,
["semver"] = "1.0.1",
["Author"] = "Driani-Antonidas",
["Desc"] = "",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Target Border Color",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateBorder (unitFrame, false)\nend\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    envTable.UpdateBorder (unitFrame, true)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    --self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    --show cast icon\n    envTable.ShowIcon = false --Plater.db.profile.castbar_icon_show --true\n    --anchor icon on what side\n    envTable.IconAnchor = \"left\" --accep 'left' 'right'\n    --fine tune the size of the icon\n    envTable.IconSizeOffset = 0\n    \n    --shield for non interruptible casts\n    envTable.ShowShield = false\n    envTable.ShieldTexture = [[Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON]]\n    envTable.ShieldDesaturated = true\n    envTable.ShieldColor = {1, 1, 1 ,1}\n    envTable.ShieldSize = {10, 12}\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local shield = castBar.BorderShield\n        \n        if (envTable.ShowIcon) then\n            icon:ClearAllPoints()\n            \n            if (envTable.IconAnchor == \"left\") then\n                icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", 0, 0)    \n                \n            elseif (envTable.IconAnchor == \"right\") then\n                icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", 0, envTable.IconSizeOffset)\n                icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", 0, 0)\n                \n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n            \n        else\n            icon:Hide()\n            \n        end\n        \n        if (envTable.ShowShield and not castBar.canInterrupt) then\n            shield:Show()\n            shield:SetAlpha (1)\n            shield:SetTexCoord (0, 1, 0, 1)\n            shield:SetVertexColor (1, 1, 1, 1)\n            \n            shield:SetTexture (envTable.ShieldTexture)\n            shield:SetDesaturated (envTable.ShieldDesaturated)\n            \n            if (not envTable.ShieldDesaturated) then\n                shield:SetVertexColor (DetailsFramework:ParseColors (envTable.ShieldColor))\n            end\n            \n            shield:SetSize (unpack (envTable.ShieldSize))\n            \n            shield:ClearAllPoints()\n            shield:SetPoint (\"center\", castBar, \"left\", 0, 0)\n            \n        else\n            shield:Hide()\n            \n        end\n        \n    end\n    \n    function envTable.UpdateBorder (unitFrame, casting)\n        local healthBar = unitFrame.healthBar\n        local castBar = unitFrame.castBar\n        --casting = not casting == false or  ((castBar.casting or castBar.channeling) and not (castBar.interrupted or castBar.failed))\n        \n        if casting then\n            if envTable.ShowIcon and castBar.Icon:IsShown() then\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", castBar.Icon, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", castBar.Icon, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            else\n                if envTable.IconAnchor == \"left\" then\n                    healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMRIGHT\", castBar, \"BOTTOMRIGHT\", 0, 0)\n                elseif envTable.IconAnchor == \"right\" then\n                    healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                    healthBar.border:SetPoint(\"BOTTOMLEFT\", castBar, \"BOTTOMLEFT\", 0, 0) \n                end\n            end\n        else\n            if envTable.IconAnchor == \"left\" then\n                healthBar.border:SetPoint(\"TOPLEFT\", healthBar, \"TOPLEFT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMRIGHT\", healthBar, \"BOTTOMRIGHT\", 0, 0)\n            elseif envTable.IconAnchor == \"right\" then\n                healthBar.border:SetPoint(\"TOPRIGHT\", healthBar, \"TOPRIGHT\", 0, 0)\n                healthBar.border:SetPoint(\"BOTTOMLEFT\", healthBar, \"BOTTOMLEFT\", 0, 0) \n            end\n        end\n    end\n    \n    if not unitFrame.castBar.borderChangeHooked then\n        hooksecurefunc(unitFrame.castBar, \"Hide\", function() envTable.UpdateBorder(unitFrame, false) end)\n        unitFrame.castBar.borderChangeHooked = true\n    end\n    \nend",
},
["Time"] = 1697196350,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/mEN8Q6zUa/10",
["Icon"] = "Interface\\Buttons\\UI-Quickslot2",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "1.0.9",
["Author"] = "Viash-Thrall",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate and extend the border around icon + cast bar.",
["Prio"] = 99,
["version"] = 10,
["PlaterCore"] = 1,
["Name"] = "Cast Icon Anchor + Border",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    envTable.color = \"#5d00ff\"\n    \n    envTable.npcs = {\n        [61056] = \"Greater Earth Elemental\",\n        [61146] = \"Black Ox Statue\",\n        [95072] = \"Earth Elemental\",\n        [103822] = \"Treant\"\n    }\n    \n    envTable.rules = {\n        [\"Pet\"] = true,\n        [\"Creature\"] = function(npcID)\n            return (envTable.npcs[npcID] ~= nil)\n        end\n    }\n    \n    envTable.getTypeAndID = function(guid)\n        local unitType, _, _, _, _, npcID = strsplit(\"-\", guid)\n        return unitType, tonumber(npcID or \"0\") or 0\n    end\n    \n    envTable.shallHighlight = function(self, guid)\n        local unitType, npcID = envTable.getTypeAndID(guid)\n        if unitType then\n            local value = envTable.rules[unitType]\n            if value then\n                if type(value) == \"boolean\" then\n                    return value\n                elseif type(value) == \"function\" then\n                    return value(npcID)\n                end\n            end -- value\n        end -- unitType\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)    \n    local inCombat = self.InCombat\n    local isTanking = self.namePlateThreatIsTanking\n    local isTapDenied = UnitIsTapDenied(unitId)\n    \n    if inCombat and not isTanking and not isTapDenied then\n        local exists = UnitExists(self.targetUnitID)\n        if exists then\n            local role = UnitGroupRolesAssigned(self.targetUnitID)\n            local isTank = (role == \"TANK\")\n            \n            if not isTank then\n                local guid = UnitGUID(self.targetUnitID)\n                if envTable.shallHighlight(self, guid) then\n                    Plater.SetNameplateColor(unitFrame, envTable.color)\n                end\n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696898479,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["TANK"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ZqU9hBu43/3",
["Icon"] = 627607,
["Enabled"] = true,
["Revision"] = 108,
["semver"] = "1.0.2",
["Author"] = "Brewdux-Tarren Mill",
["Desc"] = "Recolors the nameplate, if you the unit is tanked by a pet.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["Name"] = "Pet Threat Highlighter",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["SPglowfreq"] = 0.59999990463257,
["SPglowxoff"] = 0.5,
["SPpixelborder"] = false,
["SPglowcolor"] = {
1,
1,
0.45490199327469,
1,
},
["SPglowyoff"] = 0.5,
["SPglowparticle"] = 5,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    local options1 = {\n        glowType = \"button\",\n        frequency = modTable.config.SPglowfreq\n    }\n    \n    local options2 = {\n        glowType = \"pixel\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        length = modTable.config.SPpixellength,\n        th = modTable.config.SPpixelth,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n        border = modTable.config.SPpixelborder\n    }\n    \n    local options3 = {\n        glowType = \"ants\",\n        N = modTable.config.SPglowparticle,\n        frequency = modTable.config.SPglowfreq,\n        scale = modTable.config.SPantsscale,\n        xOffset = modTable.config.SPglowxoff,\n        yOffset = modTable.config.SPglowyoff,\n    }\n    \n    modTable.options = (modTable.config.SPglownum == 1 and options1) or (modTable.config.SPglownum == 2 and options2) or (modTable.config.SPglownum == 3 and options3)\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.healthBar:IsShown() then return end\n    \n    local buffSpecialGlow = true\n    local color = modTable.config.SPglowcolor\n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        \n        local auraContainer = auraContainers [containerID]\n        \n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n        \n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1696898535,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/uEnDIKvvP/2",
["Icon"] = 132096,
["Enabled"] = true,
["Revision"] = 981,
["semver"] = "1.0.1",
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Common Options",
["Name"] = "Common Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "1(Button) / 2(Pixel) / 3(Ants) ",
["Min"] = 1,
["Key"] = "SPglownum",
["Value"] = 2,
["Name"] = "Glow Type",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set to negative to inverse direction of rotation",
["Min"] = -2,
["Key"] = "SPglowfreq",
["Value"] = 0.5,
["Name"] = "Glow Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "SPglowcolor",
["Value"] = {
1,
1,
0.45490196078431,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set glow color",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel & Ants Glow",
["Name"] = "Options for Pixel & Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Set number of lines",
["Min"] = 1,
["Key"] = "SPglowparticle",
["Value"] = 6,
["Name"] = "Number of Particles",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowxoff",
["Value"] = 1.2,
["Name"] = "X-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Offset of glow relative to region border",
["Min"] = -10,
["Key"] = "SPglowyoff",
["Value"] = 1.2,
["Name"] = "Y-Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Pixel Glow",
["Name"] = "Options for Pixel Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "SPpixelborder",
["Value"] = false,
["Name"] = "Pixel Add Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable to true to create border under lines",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set pixel line length",
["Min"] = 0.01,
["Key"] = "SPpixellength",
["Value"] = 6,
["Name"] = "Pixel Line Length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Set pixel line thickness",
["Min"] = 0.01,
["Key"] = "SPpixelth",
["Value"] = 2,
["Name"] = "Pixel Line Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Options for Ants Glow",
["Name"] = "Options for Ants Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 2.5,
["Desc"] = "Set ants glow scale",
["Min"] = 0.01,
["Key"] = "SPantsscale",
["Value"] = 0.8,
["Name"] = "Ants Glow Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit is a player, ignore\n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1696819089,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = true,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Force Threat Color NPC",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["EXEbdrcolor"] = {
1,
0.37647062540054,
0,
1,
},
["EXEhicolor"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
0,
},
["EXEhdcolor"] = {
0.99215692281723,
1,
0.94901967048645,
1,
},
["EXEalert"] = 0,
["EXEhbcon"] = false,
["onlyNPC"] = true,
["EXEbdron"] = false,
},
["HooksTemp"] = {
},
["UID"] = "0x6150129e178c7fc5",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    do        \n        function envTable.UnitInExecuteRange (unitFrame)\n            if (modTable.config.onlyNPC and UnitIsPlayer(unitFrame.unit)) or\n            (modTable.config.TrackAggro and\n                ((unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank) or\n                    (not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank))) then\n                if unitFrame.executeRangeColored then\n                    unitFrame.executeRangeColored = false\n                end\n                return \n            end             \n            \n            if (modTable.config.EXEhbcon) then\n                Plater.SetNameplateColor (unitFrame, modTable.config.EXEhbcolor)\n                unitFrame.executeRangeColored = true\n            end\n            \n            if (modTable.config.EXEbdron) then\n                Plater.SetBorderColor (unitFrame, modTable.config.EXEbdrcolor)\n                unitFrame.executeRangeColored = true\n            end\n        end\n        \n        function envTable.UnitInExecuteAlertRange (unitFrame, divisorPercent)\n            if (modTable.config.EXEhdoff) then\n                unitFrame.healthBar.healthCutOff:Hide()          \n                unitFrame.healthBar.ExecuteGlowUp:Hide()\n                unitFrame.healthBar.ExecuteGlowDown:Hide()\n                unitFrame.healthBar.executeRange:Hide()\n            else\n                envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame, divisorPercent)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhdcolor))\n            healthBar.healthCutOff.ShowAnimation:Play()\n            \n            if (Plater.db.profile.health_cutoff_extra_glow) then\n                healthBar.ExecuteGlowUp.ShowAnimation:Play()\n                healthBar.ExecuteGlowDown.ShowAnimation:Play()\n            end\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (modTable.config.EXEhicolor))\n            \n            if (modTable.EXEenabled) or (modTable.uEXEenabled) then\n                healthBar.healthCutOff:ClearAllPoints()     \n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * divisorPercent, 0)\n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                \n                healthBar.executeRange:ClearAllPoints()\n                if (divisorPercent == modTable.EXEpercent) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.EXEpercent, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                    healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n                elseif (divisorPercent == modTable.SER) then\n                    healthBar.executeRange:SetTexCoord (0, modTable.SER, 0, 1)\n                    healthBar.executeRange:SetPoint (\"left\", healthBar.healthCutOff, \"center\")\n                    healthBar.executeRange:SetPoint (\"right\", healthBar, \"right\", 0, 0)\n                end\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n            end\n        end\n    end\nend",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateEXETalent()\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if UnitIsTapDenied (unitId) or unitFrame.IsSelf or unitFrame.PlayerCannotAttack or not unitFrame.healthBar:IsShown() then return end \n    \n    if (modTable.EXEenabled) or (modTable.uEXEenabled) then  \n        \n        local percent = unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax\n        local execute = modTable.EXEpercent\n        if (modTable.EXEenabled) and (percent <= execute) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, execute)\n            end\n        elseif (modTable.uEXEenabled) and (percent >= modTable.SER and percent < 1) then\n            if not unitFrame.coloredByScript then\n                envTable.UnitInExecuteRange(unitFrame)\n            end\n            if not unitFrame.healthBar.healthCutOff:IsShown() then\n                envTable.UnitInExecuteAlertRange (unitFrame, modTable.SER)\n            end\n        else\n            if unitFrame.executeRangeColored then\n                if modTable.config.EXEhbcon then\n                    Plater.RefreshNameplateColor (unitFrame)\n                end                \n                if modTable.config.EXEbdron then\n                    Plater.SetBorderColor (unitFrame)\n                end                \n                unitFrame.executeRangeColored = false\n            end\n            \n            if (modTable.EXEenabled) and (percent > execute and percent <= execute + modTable.EXEalert) then\n                if not unitFrame.healthBar.healthCutOff:IsShown() then\n                    envTable.UnitInExecuteAlertRange (unitFrame, execute)\n                end\n            else\n                if unitFrame.healthBar.healthCutOff:IsShown() then\n                    unitFrame.healthBar.healthCutOff:Hide() \n                    unitFrame.healthBar.ExecuteGlowUp:Hide()\n                    unitFrame.healthBar.ExecuteGlowDown:Hide()\n                    unitFrame.healthBar.executeRange:Hide()\n                end\n            end\n        end\n        -- dirty hax\n        unitFrame.healthBar.healthCutOff:SetAlpha(modTable.config.EXEhdalpha / 100)\n    else\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame, 0)\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    function modTable.UpdateEXETalent()\n        modTable.EXEenabled = false\n        modTable.uEXEenabled = false\n        modTable.EXEpercent = 0\n        modTable.EXEalert = modTable.config.EXEalert/100\n        modTable.SER = 1\n        \n        local _, class = UnitClass (\"player\")\n        local spec = GetSpecialization()\n        local specID = GetSpecializationInfo (spec) or 0\n        if not (spec or class or specID) or specID == 0 then return end\n        \n        if (class == \"MAGE\") then\n            if (specID == 62) then \n                local using_Bombardment = IsPlayerSpell(384581)\n                if (using_Bombardment) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            elseif (specID == 63) then \n                local using_Firestarter = IsPlayerSpell(205026)\n                local using_Touch = IsPlayerSpell(269644)\n                if (using_Firestarter) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.9\n                end\n                if (using_Touch) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.3\n                end\n            end\n        elseif (class == \"WARLOCK\") then\n            if (specID == 265) then \n                local using_Souldrain = IsPlayerSpell(198590)\n                if (using_Souldrain) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            elseif (specID == 267) then \n                local using_Shadowburn = IsPlayerSpell(17877)\n                if (using_Shadowburn) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.2\n                end\n            end\n        elseif (class == \"PRIEST\") then\n            local using_ToF = IsPlayerSpell(390972)\n            local using_SWD = IsPlayerSpell(32379)\n            if (using_ToF) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            elseif (using_SWD) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"WARRIOR\") then\n            modTable.EXEenabled = true\n            modTable.EXEpercent = 0.2    \n            if ((specID == 72 and IsPlayerSpell(206315)) or IsPlayerSpell(281001)) then\n                modTable.EXEpercent = 0.35\n            end\n        elseif (class == \"HUNTER\") then\n            local using_KillShot = IsPlayerSpell(53351)\n            local using_KillerInstinct = IsPlayerSpell(273887)\n            if (using_KillerInstinct) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            elseif (using_KillShot) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n            \n            if (specID == 254) then\n                local using_CarefulAim = IsPlayerSpell(260228)\n                if (using_CarefulAim) then\n                    modTable.uEXEenabled = true\n                    modTable.SER = 0.7\n                end\n            end\n        elseif (class == \"ROGUE\") then\n            if (specID == 259) then \n                local using_Blindside = IsPlayerSpell(328085)\n                if (using_Blindside) then\n                    modTable.EXEenabled = true\n                    modTable.EXEpercent = 0.35\n                end\n            end\n        elseif (class == \"PALADIN\") then\n            if IsPlayerSpell(24275) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.2\n            end\n        elseif (class == \"MONK\") then\n            if IsPlayerSpell(322109) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.15\n            end\n        elseif (class == \"DEATHKNIGHT\") then\n            local using_Soulreaper = IsPlayerSpell(343294)\n            if (using_Soulreaper) then\n                modTable.EXEenabled = true\n                modTable.EXEpercent = 0.35\n            end\n        end\n        \n        local EXECUTE = EXECUTE or CreateFrame(\"frame\", \"EXECUTE\", UIParent)\n        EXECUTE:RegisterEvent(\"PLAYER_EQUIPMENT_CHANGED\")\n        EXECUTE:RegisterEvent(\"SOULBIND_ACTIVATED\")\n        EXECUTE:SetScript(\"OnEvent\", function(self, event, ...) \n                modTable.UpdateEXETalent()\n        end)\n    end\nend",
["Player Logon"] = "function (modTable)\n    modTable.UpdateEXETalent()\nend",
},
["Time"] = 1698537826,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/uCoprJFNs/3",
["Icon"] = 135358,
["Enabled"] = true,
["Revision"] = 3553,
["semver"] = "1.0.2",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Adds extra effects to execute range and allow to setup two execute ranges for classes with execute when the unit has almost full healh. See the constructor script for options.",
["Prio"] = 99,
["version"] = 3,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Color Options",
["Name"] = "Execute Color Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhbcon",
["Value"] = true,
["Name"] = "Enable Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Healthbar Color",
},
{
["Type"] = 1,
["Key"] = "EXEhbcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Healthbar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Healthbar Color",
},
{
["Type"] = 4,
["Key"] = "EXEbdron",
["Value"] = false,
["Name"] = "Enable Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Enable Execute Border Color",
},
{
["Type"] = 1,
["Key"] = "EXEbdrcolor",
["Value"] = {
0.3921568627451,
0.15294117647059,
1,
1,
},
["Name"] = "Execute Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Border Color",
},
{
["Type"] = 4,
["Key"] = "onlyNPC",
["Value"] = true,
["Name"] = "Only on NPC",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Apply these features only on NPC",
},
{
["Type"] = 4,
["Key"] = "TrackAggro",
["Value"] = false,
["Name"] = "Track Aggro Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "",
["Value"] = "Execute Divisor Options",
["Name"] = "Execute Divisor Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "EXEhdoff",
["Value"] = false,
["Name"] = "Disable Execute Health Divisor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Disable Execute Health Divisor",
},
{
["Type"] = 1,
["Key"] = "EXEhdcolor",
["Value"] = {
1,
1,
1,
0.8500000089407,
},
["Name"] = "Execute Health Divisor Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Divisor Color",
},
{
["Type"] = 1,
["Key"] = "EXEhicolor",
["Value"] = {
0.27843137254902,
0,
1,
0.25,
},
["Name"] = "Execute Health Indicator Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Execute Health Indicator Color",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Set +% of health to show Execute Divisor before entering execute range.",
["Min"] = 0,
["Key"] = "EXEalert",
["Value"] = 13,
["Name"] = "Preview Divisor %",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Force set health Divisor alpha value.",
["Min"] = 0,
["Key"] = "EXEhdalpha",
["Value"] = 50,
["Name"] = "Divisor Alpha %",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Name"] = "Advanced Execute Range [Fix]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Health Update"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)    \n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    \n    envTable.UpdateHealth (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    envTable.ShowMaxHealth = false\n    envTable.ShowPercent = true\n    envTable.Separator = \" \"\n    \n    --privite:\n    function envTable.UpdateHealth (unitFrame)\n        --get the health and health max current values\n        local currentHealth = unitFrame.healthBar.CurrentHealth or 0\n        local currentHealthMax = unitFrame.healthBar.CurrentHealthMax or 0\n        \n        --build the string text with current health\n        local healthString = Plater.FormatNumber (currentHealth) .. \"\"\n        \n        --if is showing max health, add it in the health string text\n        if (envTable.ShowMaxHealth) then\n            healthString = healthString .. envTable.Separator .. Plater.FormatNumber (currentHealthMax)\n        end\n        \n        --if is showing the percent text, add it into the string text\n        if (envTable.ShowPercent) then\n            local percent = currentHealth / currentHealthMax * 100\n            local fraction = \"%.1f\"\n            \n            if (percent == 100) then\n                fraction = \"%.0f\"\n            elseif (percent < 10) then\n                fraction = \"%.2f\"\n            end\n            \n            if (envTable.ShowMaxHealth) then\n                healthString = healthString .. \" (\" .. format (fraction, percent) .. \"%)\"\n            else\n                healthString = healthString .. envTable.Separator .. format (fraction, percent) .. \"%\"\n            end\n        end\n        \n        --set the string text\n        unitFrame.healthBar.lifePercent:SetText (healthString)\n    end\n    \nend",
},
["Time"] = 1696811621,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/UMY67A2bw/1",
["Icon"] = 237031,
["Enabled"] = true,
["Revision"] = 110,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the total health and percent in the health amount text. See the constructor code to change options.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Health / Max Health (%)",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62f9521d664ad",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    if not Plater.AddPerformanceUnits then return end\n    \n    local units = {\n        \n        -- Raids\n        [189706] = true, --Chaotic Essence\n        [189707] = true, -- Chaotic mote \n        [176920] = true, -- Domination Arrow -- Sylv\n        [196679] = true, -- Frozen Shroud -- Broodkeeper\n        [194999] = true, -- Volatile Spark -- Raszageth\n        [191714] = true, -- Seeking Stormling -- Raszageth\n        [210231] = true, --Tainted Lasher -- Gnarlroot\n        [211306] = true, -- Fiery vines -- Tindral\n        \n        \n        -- Dungeons\n        [196642] = true, -- Hungry Lasher (Boss add)\n        [197398] = true, -- Hungry Lasher\n        [208994] = true, -- Infected Lasher\n        [189363] = true, -- Infected Lasher\n        [96247] = true, -- Vileshard Crawler\n        [100529] = true, -- Hatespawn Slime\n        [84401] = true, -- Swift Sproutling (boss add)\n        \n        \n        \n        --Testing\n        [198594] = false, -- Testing target dummy\n        [161890] = false, -- testing\n    }\n    \n    for unit, flag in pairs(units) do\n        if  flag then\n            if flag and modTable.config.performance then\n                --print(\"perf\", unit)\n                Plater.AddPerformanceUnits(unit)\n            else\n                --print(\"no-perf\", unit)\n                Plater.RemovePerformanceUnits(unit)\n            end\n            if flag and modTable.config.forceBlizz then\n                --print(\"blizz\", unit)\n                Plater.AddForceBlizzardNameplateUnits(unit)\n            else\n                --print(\"no-blizz\", unit)\n                Plater.RemoveForceBlizzardNameplateUnits(unit)\n            end\n        else\n            --print(\"igno\", unit)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1700894784,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["HEALER"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 458228,
["Enabled"] = true,
["Revision"] = 238,
["semver"] = "",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "performance",
["Value"] = true,
["Name"] = "Performance",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "forceBlizz",
["Value"] = false,
["Name"] = "Force Blizzard",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Name"] = "Performance Units",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    local vt = Plater.NameplateHasAura(unitFrame, \"Vampiric Touch\")\n    \n    if vt then\n        Plater.SetNameplateColor(unitFrame)\n    else\n        Plater.SetNameplateColor(unitFrame, \"#7FFFD4\")\n        \n        return\n    end\nend",
},
["Time"] = 1700250838,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["PRIEST"] = true,
},
["map_ids"] = {
},
["role"] = {
["Enabled"] = true,
["DAMAGER"] = true,
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 87,
["semver"] = "",
["Author"] = "Эллинойз-Ревущий фьорд",
["Desc"] = "Changing Colors on doted targets",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "ShadowDotsColors",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["replaceName"] = false,
["colorInterruptAvailable"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["castNameSize"] = 50,
["colorInterruptSoon"] = {
1,
0.96078437566757,
0.070588238537312,
1,
},
["hideNameSolo"] = false,
["colorNoInterrupt"] = {
1,
0.49411767721176,
0.13725490868092,
1,
},
["colorProtected"] = {
0.80784320831299,
0.29411765933037,
0.28627452254295,
1,
},
["colorSecondaryInterrupt"] = {
1,
0.0078431377187371,
0.78431379795074,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x63cc19ce2df2342d",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    -- Create a tick if it doesn't already exist. The tick will be used to show when interrupt will be available.\n    if not unitFrame.castBar.tick then\n        unitFrame.castBar.tick = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        unitFrame.castBar.tick:SetDrawLayer (\"overlay\", 4)\n        unitFrame.castBar.tick:SetBlendMode (\"DISABLE\")\n        --unitFrame.castBar.tick:SetHeight(unitFrame.castBar:GetHeight())\n        unitFrame.castBar.tick:SetHeight(8)\n    end\n    unitFrame.castBar.tick:SetTexture(Plater.SparkTextures[8])\n    unitFrame.castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n    unitFrame.castBar.tick:SetWidth(2)    \n    \n    \n    function envTable.EnhancedCastBar(unitId, castBar)\n        castBar.tick:Hide()\n        \n        if castBar.IsInterrupted then\n            return\n        end\n        \n        local targetUnitId = unitId .. \"target\"\n        \n        if UnitExists(targetUnitId) then\n            local targetName = UnitName(targetUnitId)\n            local spellName = castBar.SpellName\n            local inParty = UnitInParty(\"player\")\n            local inRaid = UnitInRaid(\"player\")\n            castBar.Text:SetText(spellName)    \n            \n            -- Cast is targetting a specific unit\n            if targetName then\n                \n                local isTargettingMe\n                local targetNameByColor\n                \n                -- Determine if the cast is targetting the player character\n                if targetName == UnitName(\"player\") then\n                    isTargettingMe = true\n                else\n                    isTargettingMe = false\n                end\n                \n                -- Nameplate flash options\n                if isTargettingMe then\n                    if envTable.optionsNameplateFlash then\n                        \n                        -- Default value of true since it is turned on in the options\n                        local showNameplateFlash = true\n                        \n                        -- Hide flash when not in a group\n                        if envTable.optionsHideFlashSolo then\n                            if not inParty and not inRaid then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Hide flash when player is a tank specialization\n                        if envTable.optionsHideFlashAsTank then\n                            if GetSpecializationRole(GetSpecialization()) == \"TANK\" then\n                                showNameplateFlash = false\n                            end\n                        end\n                        \n                        -- Show nameplate flash if conditions met\n                        if showNameplateFlash then\n                            Plater.FlashNameplateBody (unitFrame)\n                        end\n                    end\n                end\n                \n                \n                -- Target name in cast bar options\n                if envTable.optionsShowTargetName then\n                    \n                    -- Change character name to \"Me\" if turned on in options\n                    if envTable.optionsReplaceMyName then \n                        if isTargettingMe then\n                            targetName = \"Me\"\n                        end\n                    end                    \n                    \n                    -- Color the target name based on the targets class color\n                    targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                    \n                    -- Shrink the name of the cast bar text if necessary (based on options)\n                    local castBarWidth = castBar:GetWidth()\n                    DetailsFramework:TruncateText (castBar.Text, castBarWidth * (envTable.optionsCastNameSize / 100))\n                    \n                    -- Update the cast bar text\n                    local currentText = castBar.Text:GetText()\n                    if currentText ~= nil and currentText ~= '' then \n                        local castText = currentText .. \" \" ..  targetNameByColor\n                        \n                        -- Hide self target name when solo\n                        if envTable.optionsHideNameSolo then\n                            if not inParty and not inRaid then\n                                if isTargettingMe then\n                                    castText = currentText\n                                end\n                            end\n                        end\n                        castBar.Text:SetText(castText)\n                        DetailsFramework:TruncateText (castBar.Text, castBarWidth)\n                    end   \n                end\n            end\n            \n            \n            -- Interrupt bar color options\n            if envTable.optionsShowInterruptColor then\n                local canInterrupt = castBar.canInterrupt\n                local castEndTime = castBar.spellEndTime\n                local interruptReadyTime = 0\n                local start\n                local duration\n                local playerIsWarlock\n                \n                if envTable.interruptID ~= nil then\n                    start, duration  = GetSpellCooldown(envTable.interruptID)  --local\n                    interruptReadyTime = start + duration\n                end\n                if canInterrupt then\n                    if envTable.interruptID ~= nil then\n                        \n                        -- Is the player a warlock?\n                        if envTable.class == 9 then\n                            playerIsWarlock = true\n                        else\n                            playerIsWarlock = false\n                        end\n                        \n                        -- Check to see if the spell is known/talented\n                        \n                    end \n                    local isInterruptKnown\n                    if envTable.interruptID ~= \"Spell Lock\" and envTable.interruptID ~= nil then\n                        if IsSpellKnown(envTable.interruptID, playerIsWarlock) then\n                            isInterruptKnown = true\n                        else\n                            isInterruptKnown = false\n                        end\n                    end\n                    local isSpellLock = envTable.interruptID == \"Spell Lock\"\n                    if isSpellLock or isInterruptKnown then\n                        if interruptReadyTime == 0 then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptAvailable)\n                        elseif envTable.optionsShowSecondaryInterrupts and envTable.class == 2 and IsSpellKnown(31935) and not envTable.isSpellOnCooldown_IgnoreGCD(31935) then\n                            -- Paladin Avenger's Shield\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                        elseif interruptReadyTime < (castEndTime - 0.25) then\n                            castBar.tick:Show()\n                            castBar.tick:SetVertexColor(Plater:ParseColors(envTable.optionsColorTick))\n                            local tickLocation = (start + duration - castBar.spellStartTime) / castBar.maxValue\n                            if castBar.channeling then\n                                tickLocation = 1 - tickLocation\n                            end\n                            castBar.tick:SetPoint(\"center\", castBar, \"left\", tickLocation * castBar:GetWidth(), 0)\n                            \n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorInterruptSoon)\n                        elseif interruptReadyTime >= (castEndTime - 0.25) then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                        end\n                    else\n                        Plater.SetCastBarColor(unitFrame, envTable.optionsColorNoInterrupt)\n                    end\n                else\n                    Plater.SetCastBarColor(unitFrame, envTable.optionsColorProtected)                \n                end\n            end\n            \n            \n            -- Spell Reflection coloring\n            if envTable.optionsShowSecondaryInterrupts and IsSpellKnown(23920) and not envTable.isSpellOnCooldown_IgnoreGCD(23920) then\n                -- Check to see if the ability is targetting the player\n                if UnitExists(targetUnitId) then\n                    if UnitName(targetUnitId) == UnitName(\"player\") then\n                        -- Color the bar if the spell is reflectable\n                        if envTable.IsSpellReflectable(C_Map.GetBestMapForUnit(\"player\"), modTable.reflectableSpells, castBar.SpellName) then\n                            Plater.SetCastBarColor(unitFrame, envTable.optionsColorSecondaryAvailable)\n                        end\n                    end\n                end\n            end\n            \n            \n            \n        end\n    end\n    \n    \n    -- Checks to see if Felgaurd or Felhunter interrupt skill is known and assigns if found\n    function envTable.GetWarlockInterrupt()\n        if IsSpellKnown(89766, true) then\n            -- Felguard: Axe Toss\n            return 89766\n        elseif IsSpellKnown(19647, true) then\n            -- Felhunter: Spell Lock\n            return 19647\n        elseif C_UnitAuras.GetPlayerAuraBySpellID(196099) ~= nil then\n            -- Check for Grimoire of Sacrifice\n            return \"Spell Lock\"\n        else \n            -- Otherwise no interrupt available    \n            return nil \n        end\n    end\n    \n    \n    -- Checks to see if the spell being cast is reflectable. Checks for a spell name and zone ID match.\n    function envTable.IsSpellReflectable(zoneID, spellList, spellName)\n        for i = 1, #spellList do\n            -- Check for matching spell name\n            for y = 1, #spellList[i][\"spells\"] do\n                if spellList[i][\"spells\"][y] == spellName then \n                    -- Check to see if the player is in one of the supported zones for this spell ID\n                    for z = 1, #spellList[i][\"zones\"] do\n                        if spellList[i][\"zones\"][z] == zoneID then\n                            return true\n                        end\n                    end\n                end\n            end \n        end\n        return false\n    end    \n    \n    \n    -- Checks to see if a spell is on cooldown, not counting the 1.5s cooldown from global cooldown.\n    function envTable.isSpellOnCooldown_IgnoreGCD(spellID)\n        local gcdSTART, gcdDUR = GetSpellCooldown(61304) -- GCD\n        local GCD_expirationTime = gcdSTART + gcdDUR\n        local spellStart, spellDuration  = GetSpellCooldown(spellID)\n        local spellReadyTime = spellStart + spellDuration        \n        if spellReadyTime <= GCD_expirationTime then\n            return false\n        else\n            return true\n        end\n    end\n    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- Get players current talent specialization\n    envTable.spec = GetSpecialization()\n    \n    -- Flashing nameplate options\n    envTable.optionsHideFlashSolo = modTable.config.hideNameplateFlashSolo\n    envTable.optionsNameplateFlash = modTable.config.nameplateFlash\n    envTable.optionsHideFlashAsTank = modTable.config.hideFlashAsTank\n    \n    -- Target name options\n    envTable.optionsShowTargetName = modTable.config.showTargetName\n    envTable.optionsReplaceMyName = modTable.config.replaceName\n    envTable.optionsHideNameSolo = modTable.config.hideNameSolo\n    envTable.optionsCastNameSize = modTable.config.castNameSize\n    \n    -- Cast bar interrupt coloring\n    envTable.optionsShowInterruptColor = modTable.config.showInterruptColor\n    envTable.optionsShowSecondaryInterrupts = modTable.config.showSecondaryInterrupts\n    envTable.optionsColorNoInterrupt = modTable.config[\"colorNoInterrupt\"]\n    envTable.optionsColorInterruptAvailable = modTable.config[\"colorInterruptAvailable\"]\n    envTable.optionsColorInterruptSoon = modTable.config[\"colorInterruptSoon\"]\n    envTable.optionsColorSecondaryAvailable = modTable.config[\"colorSecondaryInterrupt\"]\n    envTable.optionsColorProtected = modTable.config[\"colorProtected\"]\n    envTable.optionsColorTick = modTable.config[\"colorTick\"]\n    \n    -- Get the primary interrupt ID of the players current class/spec.\n    -- All non-warlock classes have straight forward primary interrupt skills.\n    if envTable.class ~= 9 then\n        envTable.interruptID = modTable.primaryInterrupts[envTable.class][envTable.spec]\n    else \n        -- Warlock interrupt changes based on pet being used.\n        envTable.interruptID = envTable.GetWarlockInterrupt()\n    end\n    \n    envTable.EnhancedCastBar(unitId, unitFrame.castBar)\n    \nend",
["Initialization"] = "function (modTable)\n    \n    -- List of primary interupt skills used by each spec and class\n    -- Does not track secondary interrupt skills (such as Avenger's shield, etc)\n    modTable.primaryInterrupts = {\n        \n        -- Warrior\n        [1] = {\n            [1] = 6552,  -- Pummel (Arms)\n            [2] = 6552,  -- Pummel (Fury)\n            [3] = 6552  --  Pummel (Protection)\n        },\n        \n        -- Paladin\n        [2] = {\n            [1] = 96231,  -- Rebuke (Holy)\n            [2] = 96231,  -- Rebuke (Protection)\n            [3] = 96231  -- Rebuke (Retribution)\n        }, \n        \n        -- Hunter\n        [3] = {\n            [1] = 147362,  -- Counter Shot (Beast Mastery)\n            [2] = 147362,  -- Counter Shot (Marksmanship)\n            [3] = 187707 -- Muzzle (Survival)\n        }, \n        \n        -- Rogue\n        [4] = {\n            [1] = 1766,  -- Kick (Assassination)\n            [2] = 1766,  -- Kick (Outlaw)\n            [3] = 1766  -- Kick (Subtlety)\n        },\n        \n        -- Priest\n        [5] = {\n            [1] = nil, \n            [2] = nil, \n            [3] = 15487 -- Silence (Shadow)\n        },\n        \n        -- Death Knight\n        [6] = {\n            [1] = 47528,  -- Mind Freeze (Blood)\n            [2] = 47528,  -- Mind Freeze (Frost)\n            [3] = 47528  -- Mind Freeze (Unholy)\n        },\n        \n        -- Shaman\n        [7] = {\n            [1] = 57994,  -- Wind Shear (Elemental)\n            [2] = 57994,  -- Wind Shear (Enhancement)\n            [3] = 57994  -- Wind Shear (Restoration)\n        },\n        \n        -- Mage\n        [8] = {\n            [1] = 2139,  -- Counterspell (Arcane)\n            [2] = 2139,  -- Counterspell (Fire)\n            [3] = 2139  -- Counterspell (Frost)\n        }, \n        \n        -- [9] Warlock interrupt depends on pet being used.\n        --  Code for warlock contained in Cast Start hook.\n        \n        -- Monk\n        [10] = {\n            [1] = 116705,  -- Spear Hand Strike (Brewmaster)\n            [2] = 116705,  -- Spear Hand Strike (Mistweaver)\n            [3] = 116705  -- Spear Hand Strike (Windwalker)\n        }, \n        \n        -- Druid\n        [11] = {\n            [1] = 78675,  -- Solar Beam (Balance)\n            [2] = 106839,  -- Skull Bash (Feral)\n            [3] = 106839,  -- Skull Bash (Guardian)\n            [4] = 106839  -- Skull Bash (Restoration)\n        },\n        \n        -- Demon Hunter\n        [12] = {\n            [1] = 183752,  -- Disrupt (Havoc)\n            [2] = 183752  -- Disrupt (Vengeance)\n        }, \n        \n        -- Evoker\n        [13] = {\n            [1] = 351338,  -- Quell (Devastation)\n            [2] = 351338, -- Quell (Preservation)\n            [3] = 351338 -- Quell (Augmentation)\n        }\n    }\n    \n    \n    -- The list of supported spell reflection names and zones.\n    modTable.reflectableSpells = {\n        -- Initial data for reflectable spells credit to: https://docs.google.com/spreadsheets/d/e/2PACX-1vS26lkSc_eaulHX7-UY8Uu-7DAHvkScxh3npd0kQn3uvvWsgsQm9ducLUi4R2mb7ieNluVilyq5sQe5/pubhtml#\n        \n        -- The Azure Vault\n        [1] = {\n            [\"spells\"] = {    \n                \"Infused Strike\",\n                \"Illusionary Bolt\",\n                \"Dragon Strike\",\n                \"Arcane Bolt\",\n                \"Infused Ground\",\n                \"Condensed Frost\",\n                \"Heavy Tome\"\n            },\n            [\"zones\"] = {\n                2073, 2074, 2075, 2076, 2077\n            }\n        },\n        -- Algeth'ar Academy \n        [2] = {\n            [\"spells\"] = {    \n                \"Energy Bomb\",\n                \"Darting Sting\",\n                \"Arcane Missiles\",\n                \"Vicious Ambush\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2097, 2098, 2099\n            }\n        },     \n        -- Court of Stars\n        [3] = {\n            [\"spells\"] = {    \n                \"Drifting Embers\",\n                \"Firebolt\",\n                \"Throw Torch\",\n                \"Vampiric Claws\",\n                \"Suppress\",\n                \"Shadow Slash\",\n                \"Eyestorm\"\n            },\n            [\"zones\"] = {\n                761, 762, 763\n            }\n        },     \n        -- Halls of Valor\n        [4] = {\n            [\"spells\"] = {    \n                \"Arcing Bolt\",\n                \"Searing Light\",\n                \"Etch\",\n                \"Shattered Rune\",\n                \"Thunderous Bolt\"\n            },\n            [\"zones\"] = {\n                703, 704, 705, 829\n            }\n        },    \n        -- Ruby Life Pools\n        [5] = {\n            [\"spells\"] = {    \n                \"Cold Claws\",\n                \"Frigid Shard\",\n                \"Primal Chill\",\n                \"Living Bomb\",\n                \"Icebolt\",\n                \"Cold Claws\",\n                \"Cinderbolt\",\n                \"Flame Dance\",\n                \"Lightning Bolt\",\n                \"Burning Touch\",\n                \"Thunder Bolt\"\n            },\n            [\"zones\"] = {\n                2094, 2095\n            }\n        },\n        -- Shadowmoon Burial Grounds\n        [6] = {\n            [\"spells\"] = {    \n                \"Deathspike\",\n                \"Void Devastation\",\n                \"Death Blast\",\n                \"Plague Spit\",\n                \"Shadow Bolt\",\n                \"Shadow Word: Frailty\",\n                \"Rending Voidlash\",\n                \"Void Bolt\"\n            },\n            [\"zones\"] = {\n                574, 575, 576\n            }\n        },  \n        -- Temple of the Jade Serpent\n        [7] = {\n            [\"spells\"] = {    \n                \"Hydrolance\",\n                \"Agony\",\n                \"Serpent Strike\",\n                \"Jade Serpent Wave\",\n                \"Defiling Mist\",\n                \"Touch of Ruin\",\n                \"Throw Torch\",\n                \"Dark Claw\"\n            },\n            [\"zones\"] = {\n                429, 430, 791, 792\n            }\n        },   \n        -- The Nokhud Offensive\n        [8] = {\n            [\"spells\"] = {    \n                \"Wind Burst\",\n                \"Gale Arrow\",\n                \"Conductive Strike\",\n                \"Storm Shock\",\n                \"Stormbolt\",\n                \"Chain Lightning\",\n                \"Thunderstrike\",\n                \"Death Bolt\",\n                \"Surge\"\n            },\n            [\"zones\"] = {\n                2093\n            }\n        },   \n        -- Vault of the Incarnates\n        [9] = {\n            [\"spells\"] = {    \n                \"Primal Flow\",\n                \"Chain Lightning\",\n                \"Frost Spike\",\n                \"Lightning Bolt\",\n                \"Aerial Buffet\",\n                \"Aerial Slash\",\n                \"Storm Bolt\",\n                \"Ice Barrage\",\n                \"Static Jolt\",\n                \"Uber Strike\" --Spell Reflect testing\n                \n            },\n            [\"zones\"] = {\n                2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 622\n            }\n        },\n        -- Brackenhide Hollow\n        [10] = {\n            [\"spells\"] = {    \n                \"Earth Bolt\",\n                \"Decayed Senses\",\n                \"Touch of Decay\",\n                \"Decay Surge\"\n            },\n            [\"zones\"] = {\n                2096, 2106\n            }\n        },\n        -- Halls of Infusion\n        [11] = {\n            [\"spells\"] = {    \n                \"Purifying Blast\",\n                \"Gulp Swog Toxin\",\n                \"Focused Deluge\",\n                \"Squall Buffet\",\n                \"Containment Beam\",\n                \"Pyretic Burst\",\n                \"Ice Shard\",\n                \"Lightning Blast\",\n                \"Frost Shock\",\n                \"Wind Buffet\"\n            },\n            [\"zones\"] = {\n                2082, 2083\n            }\n        },\n        -- Netharus\n        [12] = {\n            [\"spells\"] = {    \n                \"Grounding Spear\",\n                \"Melt\",\n                \"Lava Bolt\",\n                \"Magma Conflagration\"\n            },\n            [\"zones\"] = {\n                2080, 2081\n            }\n        },\n        -- Uldaman\n        [13] = {\n            [\"spells\"] = {    \n                \"Chain Lightning\",\n                \"Stone Spike\",\n                \"Earthen Shards\",\n                \"Burning Heat\",\n                \"Stone Bolt\",\n                \"Venomous Fangs\",\n                \"Time Sink\",\n                \"Spiked Carapace\",\n                \"Curse of Stone\"\n            },\n            [\"zones\"] = {\n                2071, 2072\n            }\n        },\n        -- Freehold\n        [14] = {\n            [\"spells\"] = {    \n                \"Water Bolt\",\n                \"Lightning Bolt\",\n                \"Infected Wound\",\n                \"Oiled Blade\"\n            },\n            [\"zones\"] = {\n                936\n            }\n        },\n        -- Underrot\n        [15] = {\n            [\"spells\"] = {    \n                \"Blood Bolt\",\n                \"Wicked Embrace\",\n                \"Decaying Mind\",\n                \"Void Spit\"\n            },\n            [\"zones\"] = {\n                1041, 1042\n            }\n        },\n        -- Neltharion's Lair\n        [16] = {\n            [\"spells\"] = {    \n                \"Stone Gaze\",\n                \"Stone Bolt\",\n                \"Toxic Retch\",\n                \"Molten Crash\",\n                \"Piercing Shards\",\n                \"Sunder\"\n            },\n            [\"zones\"] = {\n                731\n            }\n        },\n        -- Vortex Pinnacle\n        [17] = {\n            [\"spells\"] = {    \n                \"Lightning Bolt\",\n                \"Chain Lightning\",\n                \"Rushing Wind\",\n                \"Lightning Lash\",\n                \"Starlight\",\n                \"Holy Smite\",\n                \"Wind Bolt\"\n            },\n            [\"zones\"] = {\n                325, 737\n            }\n        },\n        -- Abberus, the Shadowed Crucible\n        [18] = {\n            [\"spells\"] = {    \n                \"Flame Slash\",\n                \"Shadow Spike\",\n                \"Flaming Cudgel\",\n                \"Lava Bolt\",\n                \"Scorching Detonation\",\n                \"Void Surge\"\n            },\n            [\"zones\"] = {\n                2166, 2167, 2168, 2169, 2170\n            }\n        },\n        -- Dawn of the Infinite\n        [19] = {\n            [\"spells\"] = {    \n                \"Noxious Ejection\",\n                \"Stonebolt\",\n                \"Infinite Bolt\",\n                \"Infinite Blast\",\n                \"Fireball\",\n                \"Immolate\",\n                \"Temporal Blast\",\n                \"Corroding Volley\",\n                \"Epoch Bolt\"\n            },\n            [\"zones\"] = {\n                2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198\n            }\n        },\n        -- Amirdrassil\n        [20] = {\n            [\"spells\"] = {\n                \"Coiling Flames\",\n                \"Twisting Singe\",\n                \"Fyr'alath's Flame\"\n            },\n            [\"zones\"] = {\n                2232, 2240, 2244, 2233, 2234, 2238\n            }\n        },\n        -- Atal'Dazar\n        [21] = {\n            [\"spells\"] = {\n                \"Wildfire\",\n                \"Venomfang Strike\",\n                \"Venom Blast\",\n                \"Soulburn\",\n                \"Wracking Pain\"\n            },\n            [\"zones\"] = {\n                934, 935\n            }\n        },\n        -- Black Rook Hold\n        [22] = {\n            [\"spells\"] = {\n                \"Soul Blast\",\n                \"Arcane Blitz\"\n            },\n            [\"zones\"] = {\n                751, 752, 753, 754, 755, 756\n            }\n        },\n        -- Darkheart Thicket\n        [23] = {\n            [\"spells\"] = {\n                \"Nightmare Bolt\",\n                \"Feed on the Weak\",\n                \"Bloodbolt\",\n                \"Firebolt\",\n                \"Nightmare Toxin\",\n                \"Despair\",\n                \"Unnerving Screech\",\n                \"Tormenting Eye\",\n                \"Shadow Bolt\",\n                \"Darksoul Bite\"\n            },\n            [\"zones\"] = {\n                733\n            }\n        },\n        -- Everbloom\n        [24] = {\n            [\"spells\"] = {\n                \"Nature's Wrath\",\n                \"Water Bolt\",\n                \"Dreadpetal Pollen\",\n                \"Arcane Blast\",\n                \"Fireball\",\n                \"Frostbolt\",\n                \"Choking Vines\",\n                \"Dancing Thorns\",\n                \"Pyroblast\",\n                \"Poisonous Claws\"\n            },\n            [\"zones\"] = {\n                620, 621\n            }\n        },\n        -- Throne of the Tides\n        [25] = {\n            [\"spells\"] = {\n                \"Focused Tempest\",\n                \"Frostbolt\",\n                \"Water Bolt\",\n                \"Flame Shock\",\n                \"Mind Rot\",\n                \"Foul Bolt\",\n                \"Ink Blast\",\n                \"Mind Flay\",\n                \"Aquablast\",\n                \"Hex\",\n                \"Crushing Depths\",\n                \"Lightning Bolt\",\n                \"Lightning Surge\"\n                \n            },\n            [\"zones\"] = {\n                323, 322\n            }\n        },\n        -- Waycrest Manor\n        [26] = {\n            [\"spells\"] = {\n                \"Bramble Bolt\",\n                \"Ruinous Bolt\",\n                \"Soul Bolt\",\n                \"Wasting Strike\",\n                \"Wracking Chord\",\n                \"Virulent Pathogen\",\n                \"Darkened Lighting\",\n                \"Shadow Cleave\",\n                \"Infest\",\n                \"Spit\",\n                \"Etch\",\n                \"Runic Mark\",\n                \"Decaying Touch\",\n                \"Dread Mark\",\n                \"Runic Bolt\",\n                \"Scar Soul\",\n                \"Tearing Strike\",\n                \"Drain Essence\"\n            },\n            [\"zones\"] = {\n                1016, 1015, 1017, 1018, 1029\n            }\n        }\n    }\n    \nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    if unitFrame.castBar.tick then\n        unitFrame.castBar.tick:Hide()\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1701133020,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/3408lMaNb/2",
["Icon"] = 429383,
["Enabled"] = true,
["Revision"] = 1611,
["semver"] = "1.0.1",
["Author"] = "Nimeshady-Zul'jin",
["Desc"] = "Shows who a cast is targeting in the cast bar as well as other configurable options.",
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["LastHookEdited"] = "Initialization",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Feature - Custom cast bar coloring:",
["Name"] = "CUSTOM CAST BAR COLORS",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showInterruptColor",
["Value"] = true,
["Name"] = "Enable custom colored enemy cast bars.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting the cast bar will change to the colors below based on the status of you being able to interrupt the cast.",
},
{
["Type"] = 4,
["Key"] = "showSecondaryInterrupts",
["Value"] = true,
["Name"] = "Enable support for secondary interrupts: Avenger's Shield (Paladin), Spell Reflection (Warrior).",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colors casts that can be reflected with Spell Reflection (Warrior) and interrupted with Avenger's Shield (Paladin).",
},
{
["Type"] = 1,
["Key"] = "colorInterruptAvailable",
["Value"] = {
0.10980392992496,
0.63921570777893,
0.1843137294054,
1,
},
["Name"] = "Color when my primary interrupt is available.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorInterruptSoon",
["Value"] = {
0.63921570777893,
0.61568629741669,
0.10980392992496,
1,
},
["Name"] = "Color when my primary interrupt is down but will be available before cast finishes.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you have an interrupt on cooldown but it will be available to interrupt the current cast.",
},
{
["Type"] = 1,
["Key"] = "colorNoInterrupt",
["Value"] = {
0.61960786581039,
0.16862745583057,
0.28627452254295,
1,
},
["Name"] = "Color when my primary interrupt is unavailable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when you do not have an interrupt available to interrupt the current cast",
},
{
["Type"] = 1,
["Key"] = "colorSecondaryInterrupt",
["Value"] = {
0.10980392992496,
0.52156865596771,
0.63921570777893,
1,
},
["Name"] = "Color for secondary interrupts. (Avenger's Shield and Spell Reflection)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast targeting you can be reflected with Spell Reflection or interrupted with Avenger's Shield. Only active when playing the appropriate class with the skill off cooldown.",
},
{
["Type"] = 1,
["Key"] = "colorProtected",
["Value"] = {
0.22352942824364,
0.22352942824364,
0.22352942824364,
1,
},
["Name"] = "Color for casts that are protected/un-interruptable.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "This color will be used when the current cast can not be interrupted by a standard interrupt.",
},
{
["Type"] = 1,
["Key"] = "colorTick",
["Value"] = {
0,
1,
0.0078431377187371,
1,
},
["Name"] = "Color of interrupt available tick. (Hover for more info)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "When your interrupt is currently down but will become available before the current cast completes a tick will appear in the cast bar showing you the exact position in the cast you will be able to interrupt the cast. You can customize the color of the tick using this setting.  YOU MUST /RELOAD YOUR UI AFTER CHANGING THIS COLOR.",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Feature - Show name of target in the cast bar:",
["Name"] = "Settings Target Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTargetName",
["Value"] = true,
["Name"] = "Show the name of cast targets in the cast bar.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is casting a spell at a target, the targets name will appear in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "hideNameSolo",
["Value"] = true,
["Name"] = "Hide my name when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When you are not in a party or raid group casts targetting you will not display your name in the cast bar.",
},
{
["Type"] = 4,
["Key"] = "replaceName",
["Value"] = true,
["Name"] = "Show \"Me\" instead of my character name.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When targetted by casts, instead of showing your character name it will show \"Me\".",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "The relative size (in percentage) that a spell name will take up of the cast bar, not including the target name. Adjust this so that target names fit into the cast bar correctly based on the width and text size of your cast bar. If you find even after adjusting this setting that there is not enough space try decreasing your cast bar text size or making the cast bar wider.",
["Min"] = 30,
["Key"] = "castNameSize",
["Value"] = 60,
["Name"] = "Maximum length of a cast name in %. Hover for more info.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 5,
["Key"] = "option8",
["Value"] = "Feature - Flash nameplates when a spell targets you:",
["Name"] = "Settings Border Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Namplate Flash",
},
{
["Type"] = 4,
["Key"] = "nameplateFlash",
["Value"] = false,
["Name"] = "Flash the nameplates of enemies that are casting a spell or ability targeting me.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When an enemy is targetting you with a cast, this option will flash the nameplate of that enemy to indicate that cast is targeting you.",
},
{
["Type"] = 4,
["Key"] = "hideNameplateFlashSolo",
["Value"] = true,
["Name"] = "Hide flash effect when not in a party.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing solo.",
},
{
["Type"] = 4,
["Key"] = "hideFlashAsTank",
["Value"] = true,
["Name"] = "Hide flash effect when I'm playing a tank specialization.",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "The flash effect will be hidden when you are playing as a tank specialization.",
},
},
["Name"] = "Enhanced Enemy Castbar [Plater]",
},
{
["OptionsValues"] = {
["colour_names"] = false,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend",
["Initialization"] = "function(modTable)\n    \n    -- used for nameColouring\n    -- AARRGGBB\n    local markerToHex = {\n        [1] = \"FFEAEA0D\", -- Yellow 5 Point Star\n        [2] = \"FFEAB10D\", -- Orange Circle\n        [3] = \"FFCD00FF\", -- Purple Diamond\n        [4] = \"FF06D425\", -- Green Triangle\n        [5] = \"FFB3E3D8\", -- Light Blue Moon\n        [6] = \"FF0CD2EA\", -- Blue Square\n        [7] = \"FFD6210B\", -- Red Cross\n        [8] = \"FFFFFFFF\", -- White Skull\n    }\n    \n    -- Makes it so you take their first name e.g Jessie Howlis -> Jessie\n    local nameBlacklist = {\n        [\"the\"] = true,\n        [\"of\"] = true,\n        [\"Tentacle\"] = true,\n        [\"Apprentice\"] = true,\n        [\"Denizen\"] = true,\n        [\"Emissary\"] = true,\n        [\"Howlis\"] = true,\n        [\"Terror\"] = true,\n        [\"Totem\"] = true,\n        [\"Waycrest\"] = true,\n        [\"Aspect\"] = true\n    }\n    \n    \n    -- @unitId  unitID for mob e.g nameplate1\n    function modTable.renamer(unitFrame, unitId)\n        \n        if not (unitId and unitFrame) then\n            return\n        end\n        \n        local name = unitFrame.namePlateUnitName or UnitName(unitId) or \"\"\n        \n        -- 1) shorten\n        if modTable.config[\"short_names\"] and not unitFrame.unitName.isRenamed then\n            local unitName\n            local a, b, c, d, e, f = strsplit(' ', name, 5)\n            if nameBlacklist[b] then\n                unitName = a or b or c or d or e or f\n            else\n                unitName = f or e or d or c or b or a\n            end\n            name = unitName or name\n        end -- if short_names\n        \n        \n        -- 2) Coloring\n        if modTable.config[\"colour_names\"] then\n            local marker = GetRaidTargetIndex(unitId)\n            if marker then\n                local color = markerToHex[marker or 8]\n                name = WrapTextInColorCode(name, color)\n            end\n        end\n        \n        -- 3) Apply\n        unitFrame.healthBar.unitName:SetText(name)\n    end -- envTable.namer\n    \nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.renamer(unitFrame, unitId)\nend\n\n\n\n",
},
["Time"] = 1698537789,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/vmszcNe2o/4",
["Icon"] = "INTERFACE\\ICONS\\Ability_Monk_Ascension",
["Enabled"] = true,
["Revision"] = 255,
["semver"] = "1.0.3",
["Author"] = "Rhk-Tarren Mill",
["Desc"] = "Aimed at making calls in dungeons simpler by using the last name of a mob or first name of certains ones i.e Jessie Howlis -> Jessie",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["Name"] = "M+ Renamer",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
{
["Type"] = 4,
["Key"] = "short_names",
["Value"] = true,
["Name"] = "Shorten Names",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Shortens NPC Names. eg.: \"Murkbrine Fishmancer\" -> \"Fishmancer\"",
},
{
["Type"] = 4,
["Key"] = "colour_names",
["Value"] = true,
["Name"] = "Colour by Raidmark",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Colours the Name by the assigned Raidmark. eg.: Triangle --> Green Name",
},
},
},
{
["OptionsValues"] = {
["extraLowScale"] = 0.79999995231628,
["higherScale"] = 1.1999999284744,
["scale"] = true,
["lowScale"] = 0.79971849918365,
["midScale"] = 0.89680552482605,
},
["HooksTemp"] = {
},
["UID"] = "0x6366dbeb1fda6285",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
["Nameplate Updated"] = "function (_, unitId, unitFrame, _, modTable)\n    if not modTable.config.scale then\n        return\n    end\n    \n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID or not modTable.isSpiteful(npcID) then\n        return\n    end\n    \n    Plater.SetNameplateScale(\n        unitFrame,\n        modTable.spitefulTargetsPlayer(unitId) and modTable.config.higherScale or modTable.config.extraLowScale\n    )\nend",
["Initialization"] = "function (modTable)\n    local prioScaleMap = {\n        [1] = modTable.config.midScale, -- 0.9\n        [2] = modTable.config.lowScale, -- 0.8\n        [3] = modTable.config.extraLowScale, -- 0.7,\n        [4] = modTable.config.higherScale -- 1.1\n    }\n    \n    modTable[\"npcIDs\"] = {\n        \n        --TEST\n        --[153285] = 2, --Testing Dummy        \n        --[194644] = 4, -- Valdrakken Dummy\n        \n        --                                                          DUNGEONS\n        \n        --Dawn of the Infinite\n        [204536] = 2, --Blight Chunk\n        [206063] = 1, -- Temporal Deviation\n        \n        --Waycrest manor\n        [131669] = 1, --Jagged Hound\n        \n        --Atal'Dazar\n        [128435] = 1, --Saurid's\n        \n        --Darkheart Thicket\n        [100529] = 2, --Hatespawn Slime\n        [101074] = 2, --Hatespawn Whelpling\n        \n        --Everbloom\n        [81864] = 1, --Dreadpetal\n        [84401] = 2, --Swift Sproutling\n        \n        --Blackrook Hold\n        [98677] = 2, --Rook Spiderling\n        [98900] = 1, --Wyrmtongue Trickster\n        [102781] = 2, --Fel Bat Pup\n        \n        --Throne of the tides\n        [40923] = 2, --Unstable Corruption\n        \n        --Halls of Infusion\n        [190923] = 2, --Zephyrling\n        \n        --Brackenhide Hollow\n        [189299] = 2, -- Decaying Slime\n        [189363] = 2, -- Infected Lasher\n        [194373] = 1, -- Witherling\n        \n        --Uldaman\n        [184134] = 2, -- Scavaging Leaper\n        \n        --Nelth's Lair\n        [96247] = 2, -- Vileshard Crawler\n        [102430] = 2, --Tarspitter Slug\n        \n        -- Freehold\n        [130024] = 2, --Soggy Shiprat\n        \n        -- Underrot\n        [131402] = 1, --Underrot Tick\n        \n        -- Temple of the Jade Serpent\n        [58319] = 2, --Lesser Sha\n        [62358] = 2, --Corrupt Droplet\n        \n        \n        --The Nokhud Offensive\n        [195579] = 2, --Primal Gust\n        \n        \n        --Court of Stars\n        [105703] = 2, --Mana Wyrm\n        [104295] = 1, --Blazing Imp\n        \n        \n        --Shadowmoon Burial Grounds\n        [77006] = 2, --Corpse Skitterling\n        [75451] = 1, --Defiled Spirit\n        \n        \n        --Algeth'ar Academy\n        [196642] = 2, --Hungry Lasher\n        [197398] = 2, --Hungry Lasher\n        [196694] = 1, --Arcane Forager\n        [192329] = 1, --Territorial Eagle\n        \n        \n        --The Azure Vault\n        [191313] = 2, -- Volatile Sapling\n        [187242] = 1, --Tarasek Delver\n        \n        \n        --Halls of Valor\n        \n        \n        --Ruby Life Pools\n        [190205] = 1, --Scorchling\n        [197509] = 2, --Primal Thundercloud\n        [187894] = 1, --Infused Whelp\n        --[188011] = 1, -- terrasentry test\n        \n        --Karazhan\n        \n        --Tazavesh\n        [178163] = 2, --Murkbrine Shorerunner\n        \n        --Theater of Pain\n        [163089] = 2, --Disgusting Refuse\n        \n        --Necrotic Wake\n        [166264] = 2, --Spare Parts\n        [171500] = 2, --Shuffling Corpse\n        [165138] = 2, --Blight bag\n        \n        --Sanguine Depths\n        [171455] = 2, --Stonewall Gargon\n        [168457] = 2, --Stonewall Gargon\n        [166589] = 2, --Animate Weapon\n        \n        \n        --Plaguefall\n        [168969] = 2, --Gushing Slime\n        \n        \n        --De Other Side\n        [168986] = 2, --Skeletal Raptor\n        \n        \n        --Halls of Atonement\n        [167892] = 1, --Tormented Soul\n        \n        \n        --                                                            RAIDS\n        \n        --Amirdrassil\n        [210231] = 1, --Tainted Lasher\n        [211306] = 2, --Fiery vines\n        \n        --Vault\n        [194991] = 1, --Oathsworn Vanguard\n        [191714] = 2, --Seeking Stormling\n        \n        --Sepulcher of the First Ones\n        [183669] = 2, --Fiendish Soul\n        \n        \n        --Castle Nathria\n        [169925] = 2, --Begrudging Waiter\n        \n        \n        --Misc\n        [144300] = 2, -- \n        [189707] = 2, --Chaotic Motes\n    }\n    \n    modTable.isSpiteful = function(id)\n        return tonumber(id) == 174773\n    end\n    \n    modTable.parseGUID = function(unit)\n        local guid = UnitGUID(unit)\n        \n        if not guid then\n            return nil\n        end\n        \n        local id = select(6, strsplit(\"-\", guid))\n        \n        return id and tonumber(id) or nil\n    end\n    \n    modTable.spitefulTargetsPlayer = function(unitId)\n        local targetName = UnitName(unitId .. \"target\")\n        \n        if not targetName then\n            return false\n        end\n        \n        return UnitIsUnit(targetName, \"player\")\n    end\n    \n    modTable.getScale = function(prio)\n        if not modTable.config.scale then\n            return nil\n        end\n        \n        return prioScaleMap[prio]\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local npcID = unitFrame.namePlateNpcId or modTable.parseGUID(unitId)\n    \n    if not npcID then\n        return\n    end\n    \n    local prio = modTable[\"npcIDs\"][npcID]\n    \n    if not prio then\n        return\n    end\n    \n    local targetScale = modTable.getScale(prio)\n    \n    if targetScale then\n        Plater.SetNameplateScale(unitFrame, targetScale)\n    end\nend",
},
["Time"] = 1701045304,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1041231,
["Enabled"] = true,
["Revision"] = 1526,
["semver"] = "",
["Author"] = "Causese-Valdrakken",
["Desc"] = "Allows you to scale a creatures nameplate based on it's importance in the dungeon.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 4,
["Key"] = "scale",
["Value"] = true,
["Name"] = "Enable Scaling",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Allows nameplates to scale based on priority.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for mid priority.",
["Min"] = 0,
["Key"] = "midScale",
["Value"] = 0.75,
["Name"] = "Mid prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for low priority.",
["Min"] = 0,
["Key"] = "lowScale",
["Value"] = 0.5,
["Name"] = "Low prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set scaling value for extra low scale",
["Min"] = 0,
["Key"] = "extraLowScale",
["Value"] = 0.7,
["Name"] = "Very Low Prio",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Set scaling value for higher priority",
["Min"] = 0,
["Key"] = "higherScale",
["Value"] = 1.1,
["Name"] = "Higher Priority",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Name"] = "Priority based scaling",
},
},
["last_news_time"] = 1696043087,
["auras_per_row_auto"] = false,
["cast_statusbar_fadeout_time"] = 0.49999997019768,
["aura_stack_size"] = 8,
["auras_per_row_amount2"] = 2,
["range_check_power_bar_alpha"] = 0.89999997615814,
["range_check_health_bar_alpha"] = 0.84999996423721,
["health_statusbar_bgcolor"] = {
0.21176472306252,
0.21176472306252,
0.21176472306252,
1,
},
["aura_show_crowdcontrol"] = true,
["blizzard_nameplate_large_font_size"] = 9,
["cast_colors"] = {
[358320] = {
false,
"white",
"",
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["aura_border_colors"] = {
["enrage"] = {
0.70196078431373,
0,
0.054901960784314,
},
["steal_or_purge"] = {
nil,
0.92549019607843,
1,
},
["crowdcontrol"] = {
1,
1,
1,
},
["is_show_all"] = {
0.70196080207825,
0.10196079313755,
0.10196079313755,
},
["offensive"] = {
nil,
0.65098039215686,
0.10196078431373,
0,
},
["is_buff"] = {
0.65098041296005,
0.011764707043767,
0.090196080505848,
0,
},
},
["castbar_target_anchor"] = {
["y"] = -1.5,
["x"] = -13,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["extra_icon_timer_size"] = 11,
["target_highlight_color"] = {
0.9921568627451,
1,
0.97254901960784,
},
["show_healthbars_on_softinteract"] = false,
["extra_icon_anchor"] = {
["x"] = -1,
},
["extra_icon_wide_icon"] = false,
["extra_icon_stack_outline"] = "OUTLINE",
["range_check_alpha"] = 0.89999997615814,
["click_space"] = {
141,
21,
},
["extra_icon_auras"] = {
328501,
328986,
204490,
"Rescind",
409463,
"Breath of Eons",
278431,
},
["castbar_target_font"] = "Expressway",
["semver"] = "4.6.0",
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["aura_frame2_anchor"] = {
["y"] = 1.5,
["x"] = -1.1999969482422,
["side"] = 1,
},
["use_name_translit"] = true,
["aura_alpha"] = 1,
["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark3",
["auto_toggle_friendly"] = {
["arena"] = true,
},
["indicator_faction"] = false,
["extra_icon_height"] = 20,
["aura_x_offset"] = 1.1999969482422,
["range_check_alpha_friendlies"] = 1,
["transparency_behavior"] = 2,
["spell_animations"] = false,
["debuff_show_cc_border"] = {
1,
1,
1,
},
["aura_stack_color"] = {
nil,
0,
0.062745098039216,
},
["aura_consolidate"] = true,
["health_statusbar_bgtexture"] = "Details Flat",
["indicator_raidmark_anchor"] = {
["y"] = 7.8199996948242,
["x"] = 0,
["side"] = 12,
},
["extra_icon_width"] = 21,
["aura_show_enrage"] = true,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Color Automation"] = 1,
["Blockade Encounter"] = 1,
["Cast Bar Icon Config"] = 2,
["Hide Neutral Units"] = 1,
["Aura Reorder"] = 3,
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Bwonsamdi Reaping"] = 1,
["Jaina Encounter"] = 6,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
["Targetting Alpha"] = 3,
["Target Color"] = 3,
["Extra Border"] = 2,
["Monk Statue"] = 2,
},
["extra_icon_border_color"] = {
1,
1,
1,
},
["update_throttle"] = 0.33000001311302,
["minor_width_scale"] = 0.99999994039536,
["castbar_target_text_size"] = 9,
["indicator_elite"] = false,
["aura_frame1_anchor"] = {
["y"] = 1.5,
["x"] = 1.1999969482422,
["side"] = 7,
},
["npc_colors"] = {
[134139] = {
false,
false,
"blue",
},
[198716] = {
true,
false,
"blue",
},
[196798] = {
true,
false,
"deepskyblue",
},
[186696] = {
true,
false,
"fuchsia",
},
[194241] = {
true,
false,
"blue",
},
[134012] = {
false,
false,
"blue",
},
[207796] = {
true,
false,
"mediumpurple",
},
[129601] = {
false,
false,
"blueviolet",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[165471] = {
true,
false,
"blue",
},
[95779] = {
true,
false,
"mediumpurple",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[161124] = {
false,
false,
"blue",
},
[200126] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
false,
false,
"mediumpurple",
},
[197697] = {
true,
false,
"fuchsia",
},
[132481] = {
false,
false,
"blue",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
false,
false,
"blue",
},
[197698] = {
true,
false,
"fuchsia",
},
[175576] = {
true,
false,
"fuchsia",
},
[208440] = {
true,
false,
"mediumpurple",
},
[126918] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"deepskyblue",
},
[135552] = {
false,
false,
"white",
},
[130435] = {
false,
false,
"white",
},
[186191] = {
true,
false,
"blue",
},
[135169] = {
true,
false,
"fuchsia",
},
[206140] = {
true,
false,
"fuchsia",
},
[83761] = {
true,
false,
"mediumpurple",
},
[208698] = {
true,
false,
"fuchsia",
},
[142587] = {
false,
false,
"white",
},
[40634] = {
true,
false,
"deepskyblue",
},
[130436] = {
false,
false,
"blue",
},
[199748] = {
true,
false,
"deepskyblue",
},
[165222] = {
true,
false,
"blue",
},
[198214] = {
true,
false,
"fuchsia",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[130437] = {
false,
false,
"fuchsia",
},
[192333] = {
true,
false,
"mediumpurple",
},
[178139] = {
true,
false,
"mediumpurple",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[189265] = {
true,
false,
"blue",
},
[75899] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[134024] = {
false,
false,
"white",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[160495] = {
true,
false,
"deepskyblue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[194894] = {
true,
false,
"blue",
},
[200137] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[194895] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[83893] = {
true,
false,
"blue",
},
[128969] = {
false,
false,
"blue",
},
[99366] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"blue",
},
[211904] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[98280] = {
true,
false,
"deepskyblue",
},
[150142] = {
true,
false,
"deepskyblue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[134158] = {
false,
false,
"blue",
},
[172265] = {
true,
false,
"deepskyblue",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[214209] = {
true,
false,
"deepskyblue",
},
[131858] = {
true,
false,
"mediumpurple",
},
[65317] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"blue",
},
[162038] = {
true,
false,
"mediumpurple",
},
[98538] = {
true,
false,
"fuchsia",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[138254] = {
false,
false,
"fuchsia",
},
[101991] = {
true,
false,
"blue",
},
[134418] = {
false,
false,
"springgreen",
},
[97068] = {
true,
false,
"mediumpurple",
},
[75713] = {
true,
false,
"deepskyblue",
},
[180070] = {
true,
false,
"fuchsia",
},
[138255] = {
false,
false,
"blueviolet",
},
[198868] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[208459] = {
true,
false,
"deepskyblue",
},
[150276] = {
false,
false,
"white",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[198869] = {
true,
false,
"deepskyblue",
},
[195928] = {
true,
false,
"mediumpurple",
},
[135699] = {
false,
false,
"darkgreen",
},
[97197] = {
true,
false,
"deepskyblue",
},
[203857] = {
true,
false,
"deepskyblue",
},
[190686] = {
true,
false,
"blue",
},
[195929] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"deepskyblue",
},
[118489] = {
true,
false,
"fuchsia",
},
[170483] = {
true,
false,
"fuchsia",
},
[98285] = {
false,
false,
"blue",
},
[168949] = {
false,
false,
"white",
},
[190688] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[133912] = {
true,
false,
"blue",
},
[136470] = {
false,
false,
"springgreen",
},
[208208] = {
true,
false,
"mediumpurple",
},
[75652] = {
true,
false,
"fuchsia",
},
[139284] = {
false,
false,
"springgreen",
},
[155908] = {
true,
false,
"fuchsia",
},
[129232] = {
false,
false,
"white",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[172021] = {
false,
false,
"white",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[105704] = {
true,
false,
"blue",
},
[166396] = {
true,
false,
"blue",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[129553] = {
true,
false,
"fuchsia",
},
[174197] = {
true,
false,
"deepskyblue",
},
[162049] = {
false,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[175861] = {
true,
false,
"fuchsia",
},
[134174] = {
false,
false,
"springgreen",
},
[202971] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[214608] = {
true,
false,
"deepskyblue",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"deepskyblue",
},
[122969] = {
true,
false,
"deepskyblue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[197985] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[83392] = {
false,
false,
"blue",
},
[178165] = {
true,
false,
"fuchsia",
},
[104300] = {
true,
false,
"deepskyblue",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"fuchsia",
},
[131492] = {
true,
false,
"blue",
},
[203230] = {
true,
false,
"blue",
},
[81283] = {
false,
false,
"deepskyblue",
},
[86526] = {
true,
false,
"blue",
},
[135329] = {
true,
false,
"fuchsia",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[196198] = {
true,
false,
"blue",
},
[174843] = {
true,
false,
"mediumpurple",
},
[198500] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[198501] = {
true,
false,
"deepskyblue",
},
[45917] = {
true,
false,
"mediumpurple",
},
[162057] = {
true,
false,
"mediumpurple",
},
[150165] = {
true,
false,
"deepskyblue",
},
[198502] = {
true,
false,
"deepskyblue",
},
[135204] = {
false,
false,
"springgreen",
},
[122972] = {
true,
false,
"deepskyblue",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
false,
false,
"white",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[139425] = {
false,
false,
"fuchsia",
},
[180473] = {
true,
false,
"blue",
},
[196202] = {
true,
false,
"blue",
},
[138019] = {
false,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"blue",
},
[180474] = {
true,
false,
"fuchsia",
},
[186740] = {
false,
false,
"blue",
},
[150168] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[180348] = {
true,
false,
"blue",
},
[100532] = {
true,
false,
"fuchsia",
},
[182778] = {
true,
false,
"fuchsia",
},
[165515] = {
false,
false,
"fuchsia",
},
[134058] = {
false,
false,
"yellow",
},
[163086] = {
true,
false,
"blue",
},
[91006] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"fuchsia",
},
[97720] = {
true,
false,
"fuchsia",
},
[173190] = {
true,
false,
"deepskyblue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[153882] = {
true,
false,
"deepskyblue",
},
[187897] = {
true,
false,
"fuchsia",
},
[179841] = {
true,
false,
"deepskyblue",
},
[151325] = {
true,
false,
"fuchsia",
},
[153755] = {
false,
false,
"white",
},
[189816] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[139946] = {
false,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"mediumpurple",
},
[200943] = {
true,
false,
"mediumpurple",
},
[132530] = {
false,
false,
"blue",
},
[191225] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[132532] = {
false,
false,
"fuchsia",
},
[139949] = {
false,
false,
"springgreen",
},
[130012] = {
false,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[190588] = {
true,
false,
"mediumpurple",
},
[135474] = {
true,
false,
"blue",
},
[179847] = {
true,
false,
"fuchsia",
},
[144298] = {
true,
false,
"blue",
},
[137521] = {
false,
false,
"fuchsia",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"fuchsia",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[196856] = {
true,
false,
"mediumpurple",
},
[211306] = {
false,
false,
"fuchsia",
},
[96574] = {
true,
false,
"mediumpurple",
},
[198263] = {
true,
false,
"mediumpurple",
},
[191230] = {
true,
false,
"fuchsia",
},
[165911] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"blue",
},
[104247] = {
true,
false,
"deepskyblue",
},
[130909] = {
true,
false,
"fuchsia",
},
[135989] = {
false,
false,
"blue",
},
[85194] = {
true,
false,
"fuchsia",
},
[154020] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[179852] = {
true,
false,
"blue",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[177807] = {
false,
false,
"deepskyblue",
},
[166299] = {
true,
false,
"blue",
},
[177808] = {
true,
false,
"mediumpurple",
},
[198999] = {
false,
false,
"white",
},
[190340] = {
true,
false,
"blue",
},
[80816] = {
true,
false,
"deepskyblue",
},
[204918] = {
true,
false,
"blue",
},
[141939] = {
false,
false,
"blueviolet",
},
[184301] = {
true,
false,
"deepskyblue",
},
[137591] = {
false,
false,
"yellow",
},
[164510] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[168153] = {
true,
false,
"fuchsia",
},
[184331] = {
true,
false,
"mediumpurple",
},
[151657] = {
false,
false,
"white",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[136735] = {
false,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[155432] = {
false,
false,
"blueviolet",
},
[199549] = {
true,
false,
"fuchsia",
},
[167964] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"fuchsia",
},
[41096] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"deepskyblue",
},
[84400] = {
true,
false,
"mediumpurple",
},
[150250] = {
true,
false,
"deepskyblue",
},
[155433] = {
false,
false,
"blueviolet",
},
[213806] = {
true,
false,
"deepskyblue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[201288] = {
true,
false,
"fuchsia",
},
[195842] = {
true,
false,
"deepskyblue",
},
[131850] = {
false,
false,
"springgreen",
},
[104251] = {
true,
false,
"fuchsia",
},
[183497] = {
true,
false,
"blue",
},
[155434] = {
false,
false,
"blueviolet",
},
[44404] = {
true,
false,
"deepskyblue",
},
[101438] = {
true,
false,
"blue",
},
[131586] = {
true,
false,
"mediumpurple",
},
[193760] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[131587] = {
true,
false,
"mediumpurple",
},
[189555] = {
true,
false,
"deepskyblue",
},
[186125] = {
true,
false,
"deepskyblue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[184335] = {
true,
false,
"deepskyblue",
},
[154744] = {
true,
false,
"fuchsia",
},
[206074] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"mediumpurple",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[212673] = {
true,
false,
"fuchsia",
},
[189707] = {
false,
false,
"white",
},
[205618] = {
true,
false,
"mediumpurple",
},
[179733] = {
true,
false,
"fuchsia",
},
[45915] = {
true,
false,
"mediumpurple",
},
[171805] = {
true,
false,
"blue",
},
[163458] = {
true,
false,
"deepskyblue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[165529] = {
true,
false,
"blue",
},
[170480] = {
true,
false,
"mediumpurple",
},
[208193] = {
true,
false,
"blue",
},
[196102] = {
false,
false,
"deepskyblue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[164737] = {
true,
false,
"fuchsia",
},
[99358] = {
true,
false,
"fuchsia",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"mediumpurple",
},
[168594] = {
true,
false,
"mediumpurple",
},
[180432] = {
true,
false,
"blue",
},
[135235] = {
false,
false,
"white",
},
[82579] = {
true,
false,
"deepskyblue",
},
[136186] = {
false,
false,
"fuchsia",
},
[196203] = {
true,
false,
"deepskyblue",
},
[165414] = {
true,
false,
"deepskyblue",
},
[155824] = {
true,
false,
"blue",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[114317] = {
true,
false,
"deepskyblue",
},
[200836] = {
true,
false,
"mediumpurple",
},
[168318] = {
true,
false,
"mediumpurple",
},
[175517] = {
true,
false,
"blue",
},
[100531] = {
true,
false,
"mediumpurple",
},
[168934] = {
true,
false,
"fuchsia",
},
[194315] = {
true,
false,
"mediumpurple",
},
[173016] = {
true,
false,
"deepskyblue",
},
[115020] = {
true,
false,
"mediumpurple",
},
[135365] = {
true,
false,
"fuchsia",
},
[199233] = {
true,
false,
"mediumpurple",
},
[208438] = {
true,
false,
"mediumpurple",
},
[198503] = {
true,
false,
"deepskyblue",
},
[189706] = {
true,
false,
"yellow",
},
[187155] = {
true,
false,
"blue",
},
[56792] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"mediumpurple",
},
[191847] = {
true,
false,
"deepskyblue",
},
[195851] = {
true,
false,
"blue",
},
[164567] = {
true,
false,
"deepskyblue",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[84499] = {
true,
false,
"fuchsia",
},
[135239] = {
false,
false,
"white",
},
[150712] = {
false,
false,
"white",
},
[102232] = {
true,
false,
"blue",
},
[81279] = {
false,
false,
"deepskyblue",
},
[201223] = {
true,
false,
"blue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[114544] = {
true,
false,
"fuchsia",
},
[200840] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[136391] = {
false,
false,
"blue",
},
[178008] = {
true,
false,
"yellow",
},
[212775] = {
true,
false,
"deepskyblue",
},
[156212] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[151353] = {
false,
false,
"white",
},
[198870] = {
true,
false,
"blue",
},
[135241] = {
false,
false,
"fuchsia",
},
[214140] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[134602] = {
false,
false,
"blue",
},
[156213] = {
false,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"blue",
},
[114804] = {
true,
false,
"blue",
},
[128967] = {
false,
false,
"fuchsia",
},
[135846] = {
false,
false,
"blueviolet",
},
[155830] = {
true,
false,
"deepskyblue",
},
[195930] = {
true,
false,
"mediumpurple",
},
[183707] = {
true,
false,
"deepskyblue",
},
[183671] = {
true,
false,
"fuchsia",
},
[129552] = {
true,
false,
"mediumpurple",
},
[182045] = {
true,
false,
"fuchsia",
},
[165805] = {
true,
false,
"mediumpurple",
},
[194316] = {
true,
false,
"mediumpurple",
},
[155831] = {
true,
false,
"fuchsia",
},
[163121] = {
true,
false,
"blue",
},
[206214] = {
true,
false,
"mediumpurple",
},
[131445] = {
false,
false,
"blue",
},
[187033] = {
true,
false,
"mediumpurple",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
false,
false,
"white",
},
[59546] = {
true,
false,
"blue",
},
[100486] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[101637] = {
true,
false,
"mediumpurple",
},
[194487] = {
true,
false,
"blue",
},
[102788] = {
true,
false,
"blue",
},
[127486] = {
false,
false,
"darkgreen",
},
[192789] = {
false,
false,
"blue",
},
[189464] = {
true,
false,
"blue",
},
[168109] = {
true,
false,
"deepskyblue",
},
[162099] = {
true,
false,
"fuchsia",
},
[168365] = {
false,
false,
"fuchsia",
},
[193534] = {
false,
false,
"white",
},
[45704] = {
true,
false,
"dimgray",
},
[134990] = {
false,
false,
"springgreen",
},
[138187] = {
true,
false,
"fuchsia",
},
[135246] = {
false,
false,
"white",
},
[59555] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[202969] = {
true,
false,
"fuchsia",
},
[96587] = {
true,
false,
"deepskyblue",
},
[176521] = {
true,
false,
"blue",
},
[132126] = {
true,
false,
"blue",
},
[190690] = {
true,
false,
"mediumpurple",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"mediumpurple",
},
[180335] = {
true,
false,
"deepskyblue",
},
[176551] = {
true,
false,
"deepskyblue",
},
[135759] = {
false,
false,
"fuchsia",
},
[144071] = {
false,
false,
"springgreen",
},
[130027] = {
false,
false,
"fuchsia",
},
[190362] = {
true,
false,
"blue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[83765] = {
false,
false,
"deepskyblue",
},
[76446] = {
true,
false,
"blue",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[139799] = {
false,
false,
"blue",
},
[98370] = {
true,
false,
"deepskyblue",
},
[130025] = {
false,
false,
"blue",
},
[100485] = {
true,
false,
"mediumpurple",
},
[81819] = {
true,
false,
"blue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"blue",
},
[134994] = {
false,
false,
"fuchsia",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[165763] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[98081] = {
true,
false,
"fuchsia",
},
[100527] = {
true,
false,
"deepskyblue",
},
[131670] = {
false,
false,
"blue",
},
[188703] = {
true,
false,
"yellow",
},
[152898] = {
true,
false,
"fuchsia",
},
[169905] = {
true,
false,
"blue",
},
[189470] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[190174] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[81820] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"yellow",
},
[94224] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"mediumpurple",
},
[192796] = {
true,
false,
"fuchsia",
},
[186658] = {
true,
false,
"deepskyblue",
},
[206351] = {
true,
false,
"deepskyblue",
},
[135764] = {
false,
false,
"blueviolet",
},
[129367] = {
false,
false,
"springgreen",
},
[127484] = {
false,
false,
"blueviolet",
},
[130661] = {
false,
false,
"springgreen",
},
[199124] = {
true,
false,
"deepskyblue",
},
[195696] = {
true,
false,
"fuchsia",
},
[115388] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"deepskyblue",
},
[197145] = {
true,
false,
"mediumpurple",
},
[164921] = {
true,
false,
"deepskyblue",
},
[198424] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"deepskyblue",
},
[199703] = {
true,
false,
"fuchsia",
},
[167963] = {
true,
false,
"blue",
},
[197146] = {
true,
false,
"mediumpurple",
},
[188067] = {
true,
false,
"deepskyblue",
},
[156226] = {
true,
false,
"deepskyblue",
},
[167607] = {
true,
false,
"mediumpurple",
},
[177817] = {
true,
false,
"blue",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
false,
false,
"blue",
},
[45930] = {
true,
false,
"fuchsia",
},
[205623] = {
true,
false,
"mediumpurple",
},
[133593] = {
false,
false,
"springgreen",
},
[171376] = {
true,
false,
"blue",
},
[40943] = {
true,
false,
"deepskyblue",
},
[114542] = {
true,
false,
"blue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[153285] = {
false,
false,
"gold",
},
[192800] = {
true,
false,
"blue",
},
[196115] = {
true,
false,
"blue",
},
[130400] = {
true,
false,
"mediumpurple",
},
[129529] = {
true,
false,
"fuchsia",
},
[168882] = {
true,
false,
"fuchsia",
},
[184107] = {
true,
false,
"mediumpurple",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[167612] = {
true,
false,
"blue",
},
[152009] = {
false,
false,
"white",
},
[131677] = {
true,
false,
"fuchsia",
},
[180015] = {
true,
false,
"blue",
},
[113537] = {
true,
false,
"mediumpurple",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[199595] = {
true,
false,
"mediumpurple",
},
[152905] = {
true,
false,
"fuchsia",
},
[136665] = {
false,
false,
"fuchsia",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
false,
false,
"blue",
},
[197406] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[134364] = {
false,
false,
"springgreen",
},
[166589] = {
true,
false,
"fuchsia",
},
[206230] = {
true,
false,
"fuchsia",
},
[80936] = {
true,
false,
"blue",
},
[163520] = {
true,
false,
"mediumpurple",
},
[114624] = {
true,
false,
"mediumpurple",
},
[197535] = {
true,
false,
"fuchsia",
},
[169861] = {
true,
false,
"blue",
},
[131821] = {
true,
false,
"blue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[198047] = {
true,
false,
"blue",
},
[139800] = {
false,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[127482] = {
false,
false,
"blue",
},
[141283] = {
false,
false,
"blue",
},
[169927] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[137830] = {
true,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
false,
"blue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[155221] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[41139] = {
true,
false,
"blue",
},
[131436] = {
true,
false,
"mediumpurple",
},
[135007] = {
false,
false,
"blue",
},
[185262] = {
false,
false,
"blue",
},
[135263] = {
false,
false,
"blueviolet",
},
[169159] = {
true,
false,
"gold",
},
[186226] = {
true,
false,
"fuchsia",
},
[84767] = {
true,
false,
"mediumpurple",
},
[190377] = {
true,
false,
"blue",
},
[163524] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"mediumpurple",
},
[180091] = {
true,
false,
"mediumpurple",
},
[191206] = {
true,
false,
"deepskyblue",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"blue",
},
[82597] = {
true,
false,
"fuchsia",
},
[203812] = {
true,
false,
"fuchsia",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"blue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[131666] = {
true,
false,
"blue",
},
[84957] = {
true,
false,
"fuchsia",
},
[95842] = {
true,
false,
"deepskyblue",
},
[190342] = {
true,
false,
"fuchsia",
},
[127799] = {
false,
false,
"blue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[167876] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[197799] = {
true,
false,
"deepskyblue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[175550] = {
true,
false,
"fuchsia",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[134629] = {
false,
false,
"blue",
},
[205727] = {
true,
false,
"blue",
},
[197671] = {
true,
false,
"blue",
},
[138465] = {
false,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"blue",
},
[167493] = {
false,
false,
"blue",
},
[170690] = {
true,
false,
"blue",
},
[130485] = {
false,
false,
"white",
},
[127480] = {
false,
false,
"fuchsia",
},
[129370] = {
false,
false,
"springgreen",
},
[186220] = {
true,
false,
"deepskyblue",
},
[196671] = {
true,
false,
"mediumpurple",
},
[155090] = {
true,
false,
"deepskyblue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
false,
false,
"blue",
},
[129547] = {
false,
false,
"mediumpurple",
},
[151127] = {
true,
false,
"fuchsia",
},
[131818] = {
false,
false,
"yellow",
},
[189234] = {
true,
false,
"fuchsia",
},
[129527] = {
true,
false,
"blue",
},
[168007] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[168384] = {
true,
false,
"blue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[166301] = {
true,
false,
"fuchsia",
},
[167113] = {
true,
false,
"blue",
},
[133482] = {
false,
false,
"blueviolet",
},
[87329] = {
false,
false,
"blue",
},
[156244] = {
true,
false,
"mediumpurple",
},
[96664] = {
true,
false,
"blue",
},
[194990] = {
true,
false,
"deepskyblue",
},
[95769] = {
true,
false,
"deepskyblue",
},
[167998] = {
true,
false,
"mediumpurple",
},
[185528] = {
true,
false,
"deepskyblue",
},
[185656] = {
true,
false,
"deepskyblue",
},
[155094] = {
false,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[164557] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[141284] = {
false,
false,
"springgreen",
},
[174773] = {
false,
false,
"blue",
},
[185529] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[128434] = {
true,
false,
"blue",
},
[197149] = {
true,
false,
"deepskyblue",
},
[102404] = {
true,
false,
"mediumpurple",
},
[130488] = {
false,
false,
"fuchsia",
},
[141285] = {
false,
false,
"fuchsia",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"deepskyblue",
},
[92538] = {
true,
false,
"fuchsia",
},
[189878] = {
true,
false,
"yellow",
},
[75979] = {
true,
false,
"fuchsia",
},
[136643] = {
false,
false,
"blue",
},
[114632] = {
true,
false,
"deepskyblue",
},
[205735] = {
true,
false,
"blue",
},
[198702] = {
true,
false,
"mediumpurple",
},
[205622] = {
true,
false,
"mediumpurple",
},
[208165] = {
true,
false,
"deepskyblue",
},
[168396] = {
true,
false,
"mediumpurple",
},
[115640] = {
true,
false,
"fuchsia",
},
[133870] = {
true,
false,
"deepskyblue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"blue",
},
[162040] = {
true,
false,
"fuchsia",
},
[151773] = {
true,
false,
"blue",
},
[188673] = {
true,
false,
"mediumpurple",
},
[163618] = {
true,
false,
"blue",
},
[206066] = {
true,
false,
"deepskyblue",
},
[114266] = {
true,
false,
"deepskyblue",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[114334] = {
true,
false,
"mediumpurple",
},
[157017] = {
true,
false,
"blue",
},
[150160] = {
true,
false,
"mediumpurple",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[92610] = {
true,
false,
"fuchsia",
},
[198577] = {
true,
false,
"blue",
},
[196576] = {
true,
false,
"blue",
},
[191739] = {
true,
false,
"mediumpurple",
},
[162133] = {
true,
false,
"fuchsia",
},
[126919] = {
true,
false,
"deepskyblue",
},
[129548] = {
false,
false,
"blueviolet",
},
[164563] = {
true,
false,
"blue",
},
[114634] = {
false,
false,
"white",
},
[197595] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[81984] = {
true,
false,
"mediumpurple",
},
[171341] = {
true,
false,
"deepskyblue",
},
[178630] = {
true,
false,
"deepskyblue",
},
[197905] = {
true,
false,
"blue",
},
[130026] = {
false,
false,
"springgreen",
},
[32666] = {
false,
false,
"blue",
},
[84520] = {
true,
false,
"mediumpurple",
},
[151649] = {
false,
false,
"white",
},
[165076] = {
true,
false,
"blue",
},
[115402] = {
false,
false,
"deepskyblue",
},
[129788] = {
true,
false,
"deepskyblue",
},
[83892] = {
true,
false,
"deepskyblue",
},
[81432] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[184023] = {
true,
false,
"blue",
},
[199547] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[161241] = {
false,
false,
"springgreen",
},
[115019] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"blue",
},
[184131] = {
true,
false,
"fuchsia",
},
[187154] = {
true,
false,
"fuchsia",
},
[198709] = {
true,
false,
"mediumpurple",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[127111] = {
true,
false,
"blue",
},
[104278] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[184132] = {
true,
false,
"blue",
},
[178392] = {
true,
false,
"fuchsia",
},
[45912] = {
true,
false,
"deepskyblue",
},
[167965] = {
true,
false,
"blue",
},
[168942] = {
true,
false,
"blue",
},
[161243] = {
false,
false,
"blueviolet",
},
[187969] = {
true,
false,
"blue",
},
[134150] = {
false,
false,
"yellow",
},
[98810] = {
true,
false,
"mediumpurple",
},
[127488] = {
false,
false,
"springgreen",
},
[131585] = {
false,
false,
"darkgreen",
},
[134390] = {
false,
false,
"blueviolet",
},
[156157] = {
true,
false,
"blue",
},
[161244] = {
false,
false,
"fuchsia",
},
[167967] = {
true,
false,
"blue",
},
[190207] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[175992] = {
true,
false,
"fuchsia",
},
[183495] = {
true,
false,
"mediumpurple",
},
[188026] = {
true,
false,
"fuchsia",
},
[214441] = {
true,
false,
"fuchsia",
},
[98368] = {
true,
false,
"mediumpurple",
},
[162039] = {
true,
false,
"deepskyblue",
},
[176974] = {
true,
false,
"fuchsia",
},
[127497] = {
false,
false,
"blue",
},
[105715] = {
true,
false,
"blue",
},
[180429] = {
true,
false,
"mediumpurple",
},
[131849] = {
false,
false,
"fuchsia",
},
[162691] = {
false,
false,
"blue",
},
[205363] = {
true,
false,
"deepskyblue",
},
[205384] = {
true,
false,
"deepskyblue",
},
[205619] = {
true,
false,
"mediumpurple",
},
[134137] = {
false,
false,
"springgreen",
},
[193373] = {
true,
false,
"fuchsia",
},
[127106] = {
true,
false,
"fuchsia",
},
[174210] = {
true,
false,
"deepskyblue",
},
[127879] = {
false,
false,
"blue",
},
[141938] = {
false,
false,
"fuchsia",
},
[185032] = {
true,
false,
"mediumpurple",
},
[205620] = {
true,
false,
"mediumpurple",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"deepskyblue",
},
[114319] = {
true,
false,
"blue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[178171] = {
true,
false,
"fuchsia",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[132491] = {
false,
false,
"fuchsia",
},
},
["tocversion"] = 100200,
["aura_width"] = 19,
["indicator_extra_raidmark"] = false,
["auras_per_row_amount"] = 4,
["range_check_enabled"] = false,
["indicator_pet"] = false,
["aura_show_debuffs_personal"] = false,
["aura_timer_text_font"] = "Expressway",
["resources"] = {
["scale"] = 0.75,
["y_offset"] = 51.589996337891,
["y_offset_target"] = 0,
},
["extra_icon_timer_font"] = "Expressway",
["script_auto_imported"] = {
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Fixate On You"] = 11,
["Cast - Very Important"] = 15,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura - Buff Alert"] = 15,
["Unit - Important"] = 11,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Fixate"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - On Going Cast [P]"] = 2,
["Spiteful Affix"] = 3,
["Cast - Stop Casting"] = 4,
["Auto Set Skull"] = 11,
["Color Change"] = 1,
["Cast - Tank Interrupt"] = 12,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Aura Border Color"] = 1,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Add - Explode on Die [P]"] = 1,
["Unit - Health Markers"] = 12,
["Explosion Affix M+"] = 14,
["Blink by Time Left"] = 1,
["Unit - Show Energy"] = 11,
},
["not_affecting_combat_alpha"] = 1,
["health_cutoff"] = false,
["cast_statusbar_color_finished"] = {
0.27843137254902,
0.75294117647059,
0.23529411764706,
},
["extra_icon_stack_font"] = "Expressway",
["aura_width2"] = 19,
["target_shady_combat_only"] = false,
["non_targeted_alpha_enabled"] = true,
["pet_height_scale"] = 0.99999994039536,
["cast_statusbar_bgtexture"] = "Details Flat",
["aura2_x_offset"] = -1.1999969482422,
["target_indicator"] = "Double Arrows",
["color_override_colors"] = {
[3] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
[4] = {
1,
0.79607843137255,
0.2078431372549,
},
},
["health_cutoff_upper"] = false,
["aura2_grow_direction"] = 3,
["target_highlight_alpha"] = 0.34999999403954,
["range_check_cast_bar_alpha"] = 0.89999997615814,
["aura_breakline_space"] = 1,
["aura_tracker"] = {
["debuff_banned"] = {
["294934"] = true,
["353354"] = true,
["324260"] = true,
["391568"] = true,
["352534"] = true,
["6343"] = true,
["403391"] = true,
["392388"] = true,
["389788"] = false,
["295367"] = true,
["331653"] = true,
["356372"] = false,
["331016"] = false,
["345466"] = true,
["394021"] = true,
["394453"] = false,
["5760"] = true,
["204242"] = true,
["256148"] = true,
["360277"] = true,
["273836"] = true,
["358379"] = true,
["279416"] = true,
["314113"] = true,
["169623"] = true,
["294909"] = true,
["281242"] = true,
["406770"] = true,
["394328"] = true,
["354052"] = true,
["373281"] = false,
["206760"] = true,
["286581"] = true,
["356329"] = true,
["420144"] = true,
["255909"] = true,
["321330"] = true,
},
["buff_banned"] = {
["343553"] = true,
["318486"] = true,
["323961"] = true,
["333553"] = true,
["216777"] = true,
["327416"] = false,
["317602"] = true,
["396106"] = true,
["302564"] = true,
["417039"] = false,
["292664"] = true,
["61574"] = true,
["303380"] = true,
["333575"] = true,
["396109"] = true,
["343613"] = false,
["286145"] = true,
["5760"] = true,
["284471"] = true,
["311571"] = true,
["333579"] = true,
["236502"] = true,
["61573"] = true,
["206150"] = true,
["209746"] = true,
["268710"] = true,
["284882"] = true,
["422067"] = false,
["396113"] = true,
["266499"] = true,
["396098"] = true,
},
["buff"] = {
273607,
283928,
311975,
343208,
197862,
66235,
344548,
189949,
343196,
317929,
259895,
290494,
327993,
322540,
332672,
321708,
305395,
41450,
200327,
290583,
320407,
236801,
194223,
333920,
74001,
212753,
175395,
197874,
200816,
196718,
173898,
315948,
122783,
322108,
343150,
296497,
344363,
205202,
255016,
289626,
337851,
228048,
341857,
23333,
198144,
292152,
321702,
29166,
197061,
215776,
209194,
272682,
212640,
216451,
79542,
187827,
124974,
207812,
212295,
34976,
196555,
129035,
316849,
265314,
69369,
321745,
316828,
278454,
285272,
279043,
203048,
198817,
316834,
344878,
320379,
335255,
231627,
328767,
198111,
125174,
317138,
322110,
284508,
236439,
328682,
325208,
185422,
317138,
213602,
323048,
},
["debuff_tracked"] = {
["409990"] = true,
["335372"] = false,
["323059"] = false,
},
["debuff"] = {
315341,
207756,
280322,
340075,
316220,
280321,
319504,
256495,
190533,
345569,
347037,
},
["buff_tracked"] = {
["227931"] = true,
["365338"] = true,
["389808"] = true,
["343502"] = false,
["297133"] = true,
["385528"] = true,
["209859"] = true,
["343503"] = true,
["163689"] = true,
["233210"] = true,
["338510"] = false,
},
},
["target_shady_alpha"] = 0,
["extra_icon_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["tap_denied_color"] = {
0.46666666666667,
0.46666666666667,
0.46666666666667,
},
["cast_statusbar_color"] = {
nil,
1,
nil,
1,
},
["target_shady_enabled"] = false,
["news_frame"] = {
["PlaterNewsFrame"] = {
["scale"] = 1,
},
},
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.5",
["nameplateLargeTopInset"] = "0.03999999910593",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateOverlapH"] = "0.75",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateLargerScale"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "0.99779832363129",
["nameplateTargetBehindMaxDistance"] = "15",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "0",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.048449993133545",
["nameplateGlobalScale"] = "1",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "0.99656772613525",
["SoftTargetIconGameObject"] = "1",
["nameplateSelfTopInset"] = "0.57",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateShowFriends"] = "1",
["nameplateMotion"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateMinScale"] = "1",
["nameplateOccludedAlphaMult"] = "0.5",
["nameplateOtherTopInset"] = "0.03999999910593",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.37",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "0.89999997615814",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowOnlyNames"] = "1",
["nameplateShowAll"] = "1",
["nameplatePersonalShowInCombat"] = "0",
},
["extra_icon_show_offensive_border"] = {
nil,
0.65098039215686,
0.10196078431373,
},
["extra_icon_caster_name"] = false,
["login_counter"] = 49377,
["version"] = 96,
["click_space_friendly"] = {
80,
1,
},
["range_check_buffs_alpha"] = 0.89999997615814,
["target_highlight_height"] = 15,
["hover_highlight_alpha"] = 0.5,
["patch_version"] = 35,
["bossmod_aura_height"] = 32.105155944824,
["extra_icon_auras_mine"] = {
["Plague Bomb"] = false,
["209859"] = false,
["Serrated Bone Spike"] = true,
["Violent Detonation"] = false,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1700351221,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = -13828,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Revision"] = 378,
["semver"] = "",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
261265,
261266,
271590,
350857,
352016,
235308,
235089,
367573,
362020,
232156,
374779,
113309,
117665,
379256,
396734,
406730,
403049,
410631,
410654,
403284,
421013,
425794,
260923,
264027,
75683,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
["fontColor"] = {
1,
1,
1,
1,
},
["fontSize"] = 12,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["Time"] = 1696897853,
["NpcNames"] = {
"171557",
"162060",
"168318",
"184140",
"182169",
"196482",
"186120",
"186116",
"189729",
"189901",
"197025",
"190496",
"189813",
"190245",
"184972",
"184986",
"164558",
"186737",
"186616",
"186615",
"131383",
"133007",
"202375",
"201320",
"201579",
"189340",
"131817",
"209333",
"122967",
"206172",
"200927",
"208367",
"208363",
},
["url"] = "",
["Icon"] = 136048,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 549,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"orange\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", -8, 20);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n\n--DRAGONFLIGHT\n\n--Amirdrassil\n--Gnarlroot - 209333\n--Nymue - 206172\n--Smolderon - 200927\n--Pip - 208367\n--Urctos - 208363\n\n--Aberrus, the Shadowed Crucible\n--Zskarn - 202375\n--Rashok - 201320\n--Magmorax - 201579\n\n--VAULT OF THE INCARNATES\n\n--Eranog - 184972\n--Terros - 190496\n--Dethea, Ascended - 189813 \n--Broodkeeper Diurna - 190245\n--Kurog Grimtotem - 184986\n\n--DUNGEONS\n--Overgrown Ancient - 196482\n--Telash Greywing - 186737\n--Granyth - 186616\n--The Raging Tempest - 186615\n--Zancha - 131383\n--Unbound Abomination - 133007\n--Warlord Sargha - 189901\n--Primal Tsunami - 189729\n--Chargath, Bane of Scales - 189340\n--Emberon - 184422\n--Cragmaw - 131817\n--Unbound Abomination - 133007\n\n--SHADOWLANDS\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n164558 = Hakkar the Soulflayer\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n\n--BFA\n\n--DUNGEONS\n--Priestess Alun'za - 122967\n\n-- Sepulcher of the First Ones\n\n--Xymox adds - 184140\n--Lihuvim - 182169\n--Tala - 104217 for testing\n\n--]=]",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
["outline"] = true,
["nameplateColor"] = {
0.86666666666667,
0.43529411764706,
0,
1,
},
["changeNameplateColor"] = true,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700351235,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -100, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n--56792 - Figment of Doubt\n--165913 - Ghastly Parishoner\n--167898 - Manifestation of Envy\n--174773 - Spiteful Shade\n--164702 - Carrion Worm\n--194745 - Rotfang Hyena\n\n--Halls of Infusion\n--190366, 195399 -- Curious Swoglet\n\n--Freehold\n--129529 - Blacktooth Scrapper\n\n--Underrot\n--133835 - Feral Bloodswarmer\n\n--Nelth's Lair\n--101476 - Molten Charskin - Dargrul Encounter\n\n--Throne of the tides\n--212681 - Vicious Snap Dragon\n\n--Blackrook hold\n--102781 - Fel Bat Pup\n\n--87329 - test dummy \n\n\n",
["Icon"] = -14046,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
["Revision"] = 917,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Outline Test",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Changes nameplate color to Orange and adds glow to npcs that are fixated on you",
["NpcNames"] = {
"174773",
"164702",
"166251",
"165913",
"167898",
"56792",
"194745",
"129529",
"133835",
"101476",
"190366",
"195399",
"212681",
"102781",
},
["Temp_UpdateCode"] = "function (_, unitId, unitFrame, envTable, scriptTable)\n    --check if can change the nameplate color\n    local targetName = UnitName(unitId .. \"target\")\n    \n    if not targetName then\n        return\n    end\n    \n    local role = UnitGroupRolesAssigned(unitId .. \"target\")\n    \n    -- ignore temporary fixates if the unit is targeting the tank (again)\n    if role == \"TANK\" then\n        Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n        envTable.FixateTarget:Hide()\n        \n        return\n    end\n    \n    if UnitIsUnit(targetName, \"player\") then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation =\n            Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4)\n            \n            envTable.colorchanged = true\n        end\n    end\n    \n    targetName = Plater.SetTextColorByClass(unitId .. \"target\", targetName)\n    envTable.FixateTarget.text = targetName\n    envTable.FixateTarget:Show()\nend\n\n\n\n\n\n\n\n\n",
["Name"] = "Spiteful/Fixate Name&Glow",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1700785512,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 413591,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n    self.glowStarted = false\n    \n    envTable.pandemicTime[self.spellId..unitId] = nil\n    \nend\n\n\n",
["Revision"] = 324,
["semver"] = "",
["Desc"] = "Adds a configurable pixel border glow to the buff/debuff if the remaining duration is less than 30% of its total duration.",
["version"] = -1,
["Author"] = "Viash-Thrall",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    --insert code here\n    envTable.pandemicTime = envTable.pandemicTime or {}\n    envTable.pandemicTime[self.spellId..unitId] = envTable._RemainingTime * 0.3\nend\n\n\n",
["Name"] = "Pandemic Glow (Pixel)",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --if (timeLeft < (envTable.pandemicTime[self.spellId..unitId] or (envTable._Duration*0.3))) then\n    if (timeLeft < (envTable._Duration*0.3)) then\n        if not self.glowStarted then\n            self.glowStarted = true\n            Plater.StartPixelGlow(self.Cooldown, nil, envTable.options, envTable.options.key)\n        end\n    else\n        if self.glowStarted then\n            self.glowStarted = false\n            Plater.StopPixelGlow(self.Cooldown, envTable.options.key)\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
292711,
278946,
212463,
284402,
284401,
2818,
703,
1943,
295425,
283668,
316220,
258179,
207690,
315341,
1822,
1079,
106830,
202347,
204213,
391191,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.options = {\n        color = \"yellow\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1.\n        N = 6, -- number of lines. Defaul value is 8;\n        frequency = 0.5, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = 4, -- length of lines. Default value depends on region size and number of lines;\n        th = 2, -- thickness of lines. Default value is 2;\n        xOffset = 0.5,\n        yOffset = 0.5, -- offset of glow relative to region border;\n        border = false, -- set to true to create border under lines;\n        key = \"pandemicGlow\",\n    }\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1700791397,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Revision"] = 1019,
["semver"] = "",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["version"] = -1,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Name"] = "Cast - Very Important [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
268030,
257784,
337943,
320822,
333292,
341840,
324987,
333478,
178072,
330438,
329423,
350287,
334928,
348428,
330532,
358980,
351073,
358026,
351603,
356023,
330513,
334076,
237946,
237952,
312262,
242733,
362628,
316443,
356031,
356011,
356001,
355642,
355644,
355782,
355057,
356133,
357260,
357284,
347015,
355139,
336451,
364240,
364241,
361923,
368063,
356407,
363024,
355584,
334664,
340300,
366288,
232120,
228554,
228009,
228025,
228019,
227977,
228278,
228280,
228567,
29339,
169341,
162415,
340037,
373513,
373618,
167232,
227646,
375606,
386549,
385568,
385393,
388211,
211464,
215433,
371983,
373405,
391599,
387627,
375653,
388392,
387862,
392457,
396812,
383823,
371624,
393309,
393296,
391268,
393429,
374623,
390548,
391019,
387615,
152818,
225100,
210261,
212784,
392486,
397889,
395859,
385331,
388804,
156718,
398206,
106856,
106864,
397394,
367500,
377488,
377612,
385574,
215204,
212773,
397382,
257426,
265540,
265542,
278961,
403978,
403671,
257397,
278755,
413044,
265511,
183528,
193803,
193585,
410870,
87779,
374045,
374699,
377950,
385029,
373897,
378282,
384161,
369675,
369465,
369365,
411302,
274400,
400296,
405433,
408805,
418200,
411300,
412378,
412233,
407124,
415304,
412012,
421029,
421031,
420525,
425816,
265368,
264390,
264407,
253583,
252781,
255041,
256849,
200630,
204243,
168082,
427459,
164965,
164887,
169839,
200345,
76813,
429176,
76820,
200248,
225562,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["Time"] = 1696897854,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 135801,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame) \nend\n\n\n",
["Revision"] = 190,
["semver"] = "",
["Desc"] = "",
["version"] = -1,
["Author"] = "Nephuhlim-Illidan",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Name"] = "Change Color on Debuff",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend",
["SpellIds"] = {
228287,
295311,
391191,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, \"#00fc76\")\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Time"] = 1701062549,
["NpcNames"] = {
"167966",
"199220",
"199916",
},
["url"] = "https://wago.io/XPNrgiHqw/2",
["Icon"] = 644389,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend\n\n\n",
["Revision"] = 125,
["semver"] = "1.1.0",
["Desc"] = "Hide nameplates based on the unit's NPC ID.",
["version"] = 2,
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Name"] = "Hide Nameplate",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\nend\n\n-- 167966: Experimental Sludge (De Other Side)\n-- 199220 - Stagbeetle (Valdrakken)\n-- 199916 - Bridge Slimes (Brackenhide Hollow)",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {40}, -- Larodar\n        [204931] = {70, 25}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1700793647,
["NpcNames"] = {
"81236",
"77803",
"150276",
"152009",
"175806",
"114790",
"81297",
"79545",
"177269",
"133345",
"164926",
"114265",
"114261",
"114783",
"180013",
"179931",
"193532",
"116410",
"190485",
"193435",
"188252",
"186738",
"186125",
"186122",
"186124",
"184422",
"96574",
"114312",
"164804",
"164267",
"164967",
"169861",
"162061",
"144298",
"181548",
"181551",
"181546",
"181549",
"183501",
"180906",
"185421",
"163121",
"175730",
"176523",
"175725",
"176929",
"166969",
"166970",
"166971",
"167406",
"173162",
"175732",
"183671",
"114260",
"184581",
"184582",
"184580",
"185534",
"190407",
"194816",
"186151",
"59544",
"186121",
"197697",
"194990",
"76057",
"56732",
"95676",
"94960",
"104215",
"95674",
"189492",
"190484",
"97087",
"184020",
"201261",
"91005",
"113537",
"126983",
"185508",
"186206",
"185528",
"189719",
"129732",
"199659",
"201773",
"201774",
"164218",
"164501",
"162099",
"164451",
"164463",
"164461",
"165946",
"201754",
"203230",
"199000",
"201792",
"198997",
"207639",
"20763",
"129699",
"198933",
"98542",
"98965",
"99192",
"40586",
"40825",
"208445",
"207638",
"131527",
"201668",
"200912",
"200913",
"126832",
"204931",
},
["url"] = "https://wago.io/miabQpRfX/10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 574,
["semver"] = "1.0.9",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["version"] = 10,
["Author"] = "Duracell",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [D]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId = (percent divisions), --NPC Name\n        --[0000] = {80, 30},   --debug\n        \n        --                                                                             ***DG's***\n        -- **DF Dungeons\n        ---Algeth'ar Academy\n        \n        --Brackenhide Hollow\n        [186125] = {15}, --Tricktotem \n        [186122] = {15}, --Rira Hackclaw\n        [186124] = {15},  --Gashtooth\n        [186121] = {4}, -- Decatriarch Wratheye\n        [185534] = {15},  --Bonebolt Hunter\n        [185508] = {15}, --Claw Fighter\n        [186206] = {15}, --Cruel Bonecrusher\n        [185528] = {15}, --Trickclaw Mystic\n        \n        --Halls of Infusion\n        [190407] = {20}, --Aqua Rager\n        [189719] = {15}, --Watcher Irideus\n        \n        --Neltharus\n        [194816] = {10}, -- Forgewrought Monstrosity\n        \n        --Ruby Life pools\n        [190485] = {50}, --Stormvein \n        [190484] = {50},  --Kyrakka\n        [193435] = {50},  --Kyrakka\n        [188252] = {66, 33}, --Melidrussa Chillworn\n        [197697] = {50}, -- Flamegullet\n        \n        --The Azure Vault\n        [186738] = {75, 50, 25}, --Umbrelskul \n        \n        -- The Nokhud Offensive\n        [186151] = {60},  --Balakar Khan\n        \n        -- Uldaman: Legacy of Tyr\n        [184020] = {40}, -- Hulking Berserker\n        [184580] = {10}, -- Olaf\n        [184581] = {10}, -- Baelog\n        [184582] = {10},  -- Eric \"The Swift\"\n        [184422] = {70, 30},   --Emberon\n        \n        -- Dawn of the Infinite\n        [207638] = {80}, -- Blight of Galakrond\n        [207639] = {80}, -- Blight of Galakrond\n        [198997] = {80}, -- Blight of Galakrond\n        [201792] = {50}, -- Ahnzon\n        [199000] = {20}, -- Deios\n        [198933] = {90, 85}, -- Iridikron\n        \n        \n        \n        -- **SL Dungeons\n        -- De Other Side\n        [164558] = {80, 60, 40, 20}, --Hakkar the Soulflayer\n        \n        --Halls of Atonement\n        [164218] = {70, 40}, --Lord Chamberlain\n        \n        --Mists of Tirna Scithe\n        [164501] = {70, 40, 10}, --Mistcaller\n        [164926] = {50}, --Drust Boughbreaker\n        [164804] = {22}, -- Droman Oulfarran\n        \n        --Plaguefall\n        [164267] = {66, 33}, --Magrave Stradama \n        [164967] = {66, 33}, --Doctor ickus\n        [169861] = {66, 33}, -- Ickor Bileflesh\n        \n        --Sanguine Depths\n        [162099] = {50}, --General Kaal Boss fight\n        \n        --Spires of Ascension\n        [162061] = {70, 30}, --Devos \n        \n        --Tazavesh\n        [177269] = {40}, --So'leah (Gambit)\n        [175806] = {66, 33}, --So'azmi (Streets)\n        \n        --The Necrotic Wake\n        [163121] = {70}, -- Stitched vanguard \n        \n        --Theater of Pain\n        [164451] = {40}, --Dessia the Decapirator\n        [164463] = {40}, --Paceran the Virulent\n        [164461] = {40}, --Sathel the Accursed\n        [165946] = {50}, --Mordretha\n        \n        \n        \n        -- **BFA Dungeons\n        --Freehold\n        [126983] = {60}, -- Harlan Sweete\n        [129732] = {75}, --Skycap'n Kragg\n        [126832] = {75}, --Skycap'n Kragg\n        [129699] = {90, 70, 50, 30}, -- Ludwig von Tortollan\n        \n        -- Operation: Mechagon\n        [150276] = {50}, --Heavy Scrapbots (Junk)\n        [152009] = {30}, --Malfunctioning Scrapbots (Junk)\n        [144298] = {30}, --Defense Bot Mk III (Workshop)\n        \n        --The MOTHERLODE!!\n        [133345] = {20}, --Feckless Assistant\n        \n        --The Underrot\n        [133007] = {85, 68, 51, 34, 17}, --Unbound Abomination\n        \n        --Waycrest Manor\n        [131527] = {30}, --Lord Waycrest\n        \n        \n        -- **Draenor Dungeons\n        --Grimrail Depot\n        [81236] = {50}, -- Grimrail Technician\n        [79545] = {60}, -- Nitrogg Thundertower\n        [77803] = {20}, -- Railmaster Rocketspark\n        \n        --Iron Docks\n        [81297] = {50}, -- Dreadfang -> Fleshrender Nok'gar\n        \n        --Shadowmoon Burial Grounds\n        [76057] = {20}, -- Carrion Worm\n        \n        \n        \n        --**Legion Dungeons\n        --Court of Stars\n        [104215] = {25}, -- Patrol Captain Gerdo\n        \n        -- Return to Karazhan (Lower)\n        [114261] = {50}, --Toe Knee\n        [114260] = {50}, -- Mrrgria\n        [114265] = {50}, --Gang Ruffian\n        [114783] = {50}, --Reformed Maiden\n        [114312] = {60}, -- Moroes\n        \n        -- Return to Karazhan (Upper)\n        [114790] = {66, 33}, -- Viz'aduum\n        \n        --Halls of Valor\n        [96574] = {30}, --Stormforged Sentinel \n        [97087] = {30}, --Valarjar Champion\n        [95674] = {60}, -- Fenryr P1\n        [94960] = {10}, -- Hymdall\n        [95676] = {80}, --Odyn\n        \n        --Neltharion's Lair\n        [91005] = {20}, -- Naraxas \n        [113537] = {15}, -- Emberhusk Dominator\n        \n        --Blackrook Hold\n        [98542] = {50}, -- Amalgam of Souls\n        [98965] = {20}, -- Kur'talos Ravencrest\n        \n        --Darkheart Thicket\n        [99192] = {50}, -- Shade of Xavius\n        \n        \n        -- **Pandaria Dungeons\n        -- Temple of The Jade Serpent\n        [59544] = {50}, --The Nodding Tiger\n        [56732] = {70, 30}, -- Liu Flameheart\n        \n        --CATA Dungeons\n        -- Throne of the Tides\n        [40586] = {60, 30}, -- Lady Naz'jar\n        [40825] = {25}, -- Erunak Stonespeaker\n        \n        \n        \n        --                                                                             ***RAID***\n        -- DF Raid\n        \n        --Amirdrassil\n        [208445] = {40}, -- Larodar\n        [204931] = {70}, -- Fyrakk\n        \n        --Vault of the Incarnates \n        [194990] = {50}, -- Stormseeker Acolyte: Raszageth\n        [189492] = {65}, -- Raszageth\n        \n        --Aberrus, the Shadowed Crucible\n        [201261] = {80, 60, 40}, -- Kazzara\n        [201773] = {50}, -- Eternal Blaze\n        [201774] = {50}, -- Essence of Shadow\n        [199659] = {25}, -- Warlord Kagni\n        [201668] = {60, 35}, -- Neltharion\n        [200913] = {50}, --Thadrion\n        [200912] = {50}, --Neldris\n        [203230] = {50}, --Dragonfire Golem\n        \n        --SL Raid\n        [181548] = {40}, --Absolution: Prototype Pantheon, Sepulcher of the First Ones\n        [181551] = {40}, --Duty: Prototype Pantheon, Sepulcher of the First Ones\n        [181546] = {40}, --Renewal: Prototype Pantheon, Sepulcher of the First Ones\n        [181549] = {40}, --War: Prototype Pantheon, Sepulcher of the First Ones\n        [183501] = {75, 50}, --Xymox, Sepulcher of the First Ones\n        [180906] = {78, 45}, --Halondrus, Sepulcher of the First Ones\n        [183671] = {40}, --Monstrous Soul - Anduin, Sepulcher of the First Ones\n        [185421] = {15}, --The Jailer, Sepulcher of the First Ones\n        [175730] = {70, 40}, --Fatescribe Roh-Kalo, Sanctum of domination\n        [176523] = {70, 40}, --Painsmith, Sanctum of domination\n        [175725] = {66, 33}, --Eye of the Jailer, Sanctum of domination\n        [176929] = {60, 20}, --Remnant of Kel'Thuzad, Sanctum of domination\n        [175732] = {83, 50}, -- Sylvanas Windrunner, Sanctum of Domination\n        [166969] = {50}, --Council of Blood - Frieda, Castle Nathria\n        [166970] = {50}, --Council of Blood - Stavros, Castle Nathria\n        [166971] = {50}, --Council of Blood - Niklaus, Castle Nathria\n        [167406] = {70.5, 37.5}, --Sire Denathrius, Castle Nathria\n        [173162] = {66,33}, --Lord Evershade, Castle Nathria\n        \n        \n        \n        --                                                                             ***OPEN WORD***\n        -- Kortia (SL)\n        [180013] = {20}, --Escaped Wilderling, Shadowlands - Korthia\n        [179931] = {80, 60}, --Relic Breaker krelva, Shadowlands - Korthia\n        \n        --Dragon Isles (DF)\n        [193532] = {40}, --Bazual, The Dreaded Flame - WordBoss\n        \n        --Mage Tower\n        [116410] = {33}, -- Karam Magespear \n        \n        \n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function()\nend",
["OnHideCode"] = "function()\nend",
["OptionsValues"] = {
["hide"] = true,
["casting"] = 1.1999999284744,
},
["Temp_OnShowCode"] = "function()\nend\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["Time"] = 1700351230,
["NpcNames"] = {
"204560",
},
["url"] = "https://wago.io/8_ULM1VxI/7",
["Icon"] = 298642,
["Options"] = {
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while debuffed",
["Min"] = 0,
["Key"] = "debuffed",
["Value"] = 0.8,
["Name"] = "Debuffed Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "nameplate scale while casting",
["Min"] = 0,
["Key"] = "casting",
["Value"] = 1.4,
["Name"] = "Casting Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "hide",
["Value"] = false,
["Name"] = "Hide Nameplate when ccd",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function()\nend",
["Revision"] = 179,
["semver"] = "1.0.6",
["Desc"] = "conditionally scales the nameplate of Incorporeal Beings when not ccd",
["version"] = 7,
["Author"] = "Ququlcoatl-Blackmoore",
["Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["OnShowCode"] = "function()\nend\n\n\n\n",
["Name"] = "Incorporeal",
["Temp_UpdateCode"] = "function (_, _, unitFrame, _, scriptTable)\n    local isDebuffed = scriptTable.isDebuffed(unitFrame)\n    \n    if isDebuffed then\n        if scriptTable.config.hide then\n            scriptTable.hide(unitFrame)\n            return\n        end\n        \n        Plater.SetNameplateScale(unitFrame, scriptTable.config.debuffed)\n        -- instantly ccd enemies (e.g. freeze trap) never had the animation start\n        if unitFrame.healthBar.HealthFlashFrame then\n            unitFrame.healthBar.HealthFlashFrame:StopAnimating()\n        end\n        \n        return\n    end\n    scriptTable.show(unitFrame)\n    \n    Plater.SetNameplateScale(unitFrame, scriptTable.config.casting)\n    Plater.FlashNameplateBorder(unitFrame)\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    -- taken from https://github.com/Tercioo/Plater-Nameplates/blob/master/libs/DF/spells.lua#L916\n    -- but trimmed to only include ccs that would deal with it for good\n    local spells = {\n        [118699] = \"WARLOCK\", -- Fear (debuff spellid)\n        [710] = \"WARLOCK\", -- Banish\n        [118] = \"MAGE\", -- Polymorph\n        [61305] = \"MAGE\", -- Polymorph (black cat)\n        [28271] = \"MAGE\", -- Polymorph Turtle\n        [161354] = \"MAGE\", -- Polymorph Monkey\n        [161353] = \"MAGE\", -- Polymorph Polar Bear Cub\n        [126819] = \"MAGE\", -- Polymorph Porcupine\n        [277787] = \"MAGE\", -- Polymorph Direhorn\n        [61721] = \"MAGE\", -- Polymorph Rabbit\n        [28272] = \"MAGE\", -- Polymorph Pig\n        [277792] = \"MAGE\", -- Polymorph Bumblebee\n        [391622] = \"MAGE\", -- Polymorph Duck\n        [9484] = \"PRIEST\", -- Shackle Undead\n        [2094] = \"ROGUE\", -- Blind\n        [427773] = \"ROGUE\", -- Blind\n        [20066] = \"PALADIN\", -- Repentance (talent)\n        [10326] = \"PALADIN\", -- Turn Evil\n        [2637] = \"DRUID\", -- Hibernate\n        [115078] = \"MONK\", -- Paralysis\n        [51514] = \"SHAMAN\", -- Hex\n        [210873] = \"SHAMAN\", -- Hex (Compy)\n        [211004] = \"SHAMAN\", -- Hex (Spider)\n        [211010] = \"SHAMAN\", -- Hex (Snake)\n        [211015] = \"SHAMAN\", -- Hex (Cockroach)\n        [269352] = \"SHAMAN\", -- Hex (Skeletal Hatchling)\n        [277778] = \"SHAMAN\", -- Hex (Zandalari Tendonripper)\n        [277784] = \"SHAMAN\", -- Hex (Wicker Mongrel)\n        [309328] = \"SHAMAN\", -- Hex (Living Honey)\n        [217832] = \"DEMONHUNTER\", -- Imprison\n        [360806] = \"EVOKER\", -- Sleep Walk\n        [3355] = \"HUNTER\", -- Freezing Trap\n        [1513] = \"HUNTER\" -- Scare Beast\n    }\n    \n    --- @return boolean\n    scriptTable.isDebuffed = function(unitFrame)\n        for spellId in pairs(spells) do\n            if Plater.UnitHasAura(unitFrame, spellId) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    scriptTable.hide = function(unitFrame)\n        -- no check whether its already hidden as it may reappear for whichever\n        -- reason when you turn camera away and back to it again\n        Plater.HideHealthBar(unitFrame)\n        Plater.DisableHighlight(unitFrame)\n        unitFrame._isHidden = true\n    end\n    \n    scriptTable.show = function(unitFrame)\n        if not unitFrame._isHidden then\n            return\n        end\n        \n        Plater.ShowHealthBar(unitFrame)\n        Plater.EnableHighlight(unitFrame)\n        unitFrame._isHidden = false\n    end\nend",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function()\nend",
},
},
["aura_stack_font"] = "Expressway",
["cast_statusbar_color_interrupted"] = {
0.8,
0.30196078431373,
0.30196078431373,
},
["blizzard_nameplate_font"] = "Expressway",
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["show_health_prediction"] = false,
["first_run2"] = true,
["number_region_first_run"] = true,
["aura_grow_direction"] = 1,
["ghost_auras"] = {
["enabled"] = true,
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["pet_width_scale"] = 0.99999994039536,
["target_highlight"] = false,
["cast_statusbar_color_channeling"] = {
1,
nil,
0.035294119268656,
0.96000000089407,
},
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.100000023841858,
},
},
["indicator_rare"] = false,
["show_healthbars_on_not_attackable"] = true,
["first_run3"] = true,
["dps"] = {
["colors"] = {
["aggro"] = {
0.86666666666667,
0.43529411764706,
},
["noaggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["notontank"] = {
0.50196078431373,
0.50196078431373,
},
},
},
["cast_statusbar_bgcolor"] = {
0.21176470588235,
0.21176470588235,
0.21176470588235,
0.90000000596046,
},
["script_banned_user"] = {
["Player-3674-08A5D7A3"] = true,
},
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.54117647058824,
0.43137254901961,
},
["anothertank"] = {
0.50196078431373,
0.50196078431373,
},
["aggro"] = {
0.74509805440903,
0.18823531270027,
0.11372549831867,
},
["noaggro"] = {
0.8666667342186,
0.43529415130615,
},
["nocombat"] = {
0.74509803921569,
0.18823529411765,
0.11372549019608,
},
["pulling"] = {
nil,
0.91372549019608,
0.22745098039216,
},
},
},
["cast_statusbar_use_fade_effects"] = false,
["extra_icon_show_purge_border"] = {
nil,
0.92549019607843,
},
["extra_icon_caster_font"] = "Expressway",
["auto_toggle_stacking"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
["auto_toggle_friendly_enabled"] = true,
["cast_statusbar_spark_width"] = 10,
["auto_toggle_enemy"] = {
["party"] = false,
["raid"] = false,
["arena"] = false,
["world"] = false,
},
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-09-05 18:54:46 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Riparium",
"2024-09-05 17:43:41 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Esker",
"2024-09-05 17:27:12 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Sverdrup",
"2024-09-05 17:26:09 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Alluvium",
"2024-09-05 16:50:30 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Gelae",
"2024-09-05 16:05:14 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Gelae",
"2024-09-05 15:09:55 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Estuary",
"2024-09-05 14:10:40 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Alluvium",
"2024-09-05 13:42:50 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Sverdrup",
"2024-09-05 01:36:10 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Sverdrup",
"2024-09-05 01:32:35 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Gelae",
"2024-09-04 23:26:23 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Gelae",
"2024-09-04 20:07:08 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Esker",
"2024-09-04 19:35:39 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Esker",
"2024-09-04 19:34:55 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Esker",
"2024-09-04 19:16:20 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Esker",
"2024-09-04 18:45:16 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Esker",
"2024-09-04 18:33:08 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Esker",
"2024-09-04 17:32:10 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Gelae",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
